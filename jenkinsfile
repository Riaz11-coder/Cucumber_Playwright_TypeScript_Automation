pipeline {
    agent any

    tools {
        nodejs 'NodeJS_20'
    }

    environment {
        NODE_ENV = 'test'
        SEP_CREDS = credentials('sep-username')       // Username/password pair
        SEP_URL = credentials('sep-url')              // Secret text
    }

    triggers {
        pollSCM('H 5 * * *')
    }

    options {
        timestamps()
    }

    stages {
        stage('Checkout') {
            steps {
                cleanWs()
                git branch: 'Develop',
                    url: 'https://github.com/Riaz11-coder/Cucumber_Playwright_TypeScript_Automation.git',
                    credentialsId: 'riazahmed-github-creds'
            }
        }

        stage('Install Dependencies') {
            steps {
                sh 'npm ci'
            }
        }

        stage('Run Tests') {
            steps {
                configFileProvider([configFile(fileId: 'stripe-vars.json', variable: 'STRIPE_JSON_PATH')]) {
                    sh '''
                        export SEP_USERNAME=${SEP_CREDS_USR}
                        export SEP_PASSWORD=${SEP_CREDS_PSW}
                        export SEP_URL=${SEP_URL}
                        export STRIPE_CREDENTIALS=$STRIPE_JSON_PATH
                        npm test
                    '''
                }
            }
        }

        stage('Generate HTML Report') {
            steps {
                sh 'npm run generate-report'
            }
        }

        stage('Deploy to Staging') {
            when {
                expression { currentBuild.currentResult == 'SUCCESS' }
            }
            steps {
                sshagent(credentials: ['riazahmed-github-ssh']) {
                    sh '''
                        git config --global user.email "riaz11@hotmail.com"
                        git config --global user.name "Jenkins CI"

                        git checkout -B staging
                        git push origin staging --force

                        VERSION_TAG=v1.0.${BUILD_NUMBER}
                        git tag $VERSION_TAG
                        git push origin $VERSION_TAG
                    '''
                }
            }
        }
    }

    post {
        always {
            publishHTML([
                allowMissing: false,
                alwaysLinkToLastBuild: true,
                keepAll: true,
                reportDir: 'reports',
                reportFiles: 'index.html',
                reportName: 'Cucumber HTML Report'
            ])
        }

        failure {
            mail to: 'riaz11@hotmail.com',
                 subject: "‚ùå Jenkins Build Failed: ${env.JOB_NAME} #${env.BUILD_NUMBER}",
                 body: "Build failed at ${env.BUILD_URL}"
        }
    }
}
