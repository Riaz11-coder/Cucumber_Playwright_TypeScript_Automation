
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model companies
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 */
export type companies = $Result.DefaultSelection<Prisma.$companiesPayload>
/**
 * Model cost_categories
 * 
 */
export type cost_categories = $Result.DefaultSelection<Prisma.$cost_categoriesPayload>
/**
 * Model departments
 * 
 */
export type departments = $Result.DefaultSelection<Prisma.$departmentsPayload>
/**
 * Model driver_certifications
 * 
 */
export type driver_certifications = $Result.DefaultSelection<Prisma.$driver_certificationsPayload>
/**
 * Model drivers
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 */
export type drivers = $Result.DefaultSelection<Prisma.$driversPayload>
/**
 * Model expenses
 * 
 */
export type expenses = $Result.DefaultSelection<Prisma.$expensesPayload>
/**
 * Model fuel_stations
 * 
 */
export type fuel_stations = $Result.DefaultSelection<Prisma.$fuel_stationsPayload>
/**
 * Model fuel_transactions
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 */
export type fuel_transactions = $Result.DefaultSelection<Prisma.$fuel_transactionsPayload>
/**
 * Model gps_tracking
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 */
export type gps_tracking = $Result.DefaultSelection<Prisma.$gps_trackingPayload>
/**
 * Model incidents
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 */
export type incidents = $Result.DefaultSelection<Prisma.$incidentsPayload>
/**
 * Model maintenance_records
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 */
export type maintenance_records = $Result.DefaultSelection<Prisma.$maintenance_recordsPayload>
/**
 * Model maintenance_types
 * 
 */
export type maintenance_types = $Result.DefaultSelection<Prisma.$maintenance_typesPayload>
/**
 * Model reports
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 */
export type reports = $Result.DefaultSelection<Prisma.$reportsPayload>
/**
 * Model safety_inspections
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 */
export type safety_inspections = $Result.DefaultSelection<Prisma.$safety_inspectionsPayload>
/**
 * Model service_providers
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 */
export type service_providers = $Result.DefaultSelection<Prisma.$service_providersPayload>
/**
 * Model trips
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 */
export type trips = $Result.DefaultSelection<Prisma.$tripsPayload>
/**
 * Model users
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 */
export type users = $Result.DefaultSelection<Prisma.$usersPayload>
/**
 * Model vehicle_assignments
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 */
export type vehicle_assignments = $Result.DefaultSelection<Prisma.$vehicle_assignmentsPayload>
/**
 * Model vehicle_types
 * 
 */
export type vehicle_types = $Result.DefaultSelection<Prisma.$vehicle_typesPayload>
/**
 * Model vehicles
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 */
export type vehicles = $Result.DefaultSelection<Prisma.$vehiclesPayload>

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Companies
 * const companies = await prisma.companies.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Companies
   * const companies = await prisma.companies.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.companies`: Exposes CRUD operations for the **companies** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Companies
    * const companies = await prisma.companies.findMany()
    * ```
    */
  get companies(): Prisma.companiesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.cost_categories`: Exposes CRUD operations for the **cost_categories** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Cost_categories
    * const cost_categories = await prisma.cost_categories.findMany()
    * ```
    */
  get cost_categories(): Prisma.cost_categoriesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.departments`: Exposes CRUD operations for the **departments** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Departments
    * const departments = await prisma.departments.findMany()
    * ```
    */
  get departments(): Prisma.departmentsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.driver_certifications`: Exposes CRUD operations for the **driver_certifications** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Driver_certifications
    * const driver_certifications = await prisma.driver_certifications.findMany()
    * ```
    */
  get driver_certifications(): Prisma.driver_certificationsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.drivers`: Exposes CRUD operations for the **drivers** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Drivers
    * const drivers = await prisma.drivers.findMany()
    * ```
    */
  get drivers(): Prisma.driversDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.expenses`: Exposes CRUD operations for the **expenses** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Expenses
    * const expenses = await prisma.expenses.findMany()
    * ```
    */
  get expenses(): Prisma.expensesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.fuel_stations`: Exposes CRUD operations for the **fuel_stations** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Fuel_stations
    * const fuel_stations = await prisma.fuel_stations.findMany()
    * ```
    */
  get fuel_stations(): Prisma.fuel_stationsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.fuel_transactions`: Exposes CRUD operations for the **fuel_transactions** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Fuel_transactions
    * const fuel_transactions = await prisma.fuel_transactions.findMany()
    * ```
    */
  get fuel_transactions(): Prisma.fuel_transactionsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.gps_tracking`: Exposes CRUD operations for the **gps_tracking** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Gps_trackings
    * const gps_trackings = await prisma.gps_tracking.findMany()
    * ```
    */
  get gps_tracking(): Prisma.gps_trackingDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.incidents`: Exposes CRUD operations for the **incidents** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Incidents
    * const incidents = await prisma.incidents.findMany()
    * ```
    */
  get incidents(): Prisma.incidentsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.maintenance_records`: Exposes CRUD operations for the **maintenance_records** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Maintenance_records
    * const maintenance_records = await prisma.maintenance_records.findMany()
    * ```
    */
  get maintenance_records(): Prisma.maintenance_recordsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.maintenance_types`: Exposes CRUD operations for the **maintenance_types** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Maintenance_types
    * const maintenance_types = await prisma.maintenance_types.findMany()
    * ```
    */
  get maintenance_types(): Prisma.maintenance_typesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.reports`: Exposes CRUD operations for the **reports** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Reports
    * const reports = await prisma.reports.findMany()
    * ```
    */
  get reports(): Prisma.reportsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.safety_inspections`: Exposes CRUD operations for the **safety_inspections** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Safety_inspections
    * const safety_inspections = await prisma.safety_inspections.findMany()
    * ```
    */
  get safety_inspections(): Prisma.safety_inspectionsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.service_providers`: Exposes CRUD operations for the **service_providers** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Service_providers
    * const service_providers = await prisma.service_providers.findMany()
    * ```
    */
  get service_providers(): Prisma.service_providersDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.trips`: Exposes CRUD operations for the **trips** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Trips
    * const trips = await prisma.trips.findMany()
    * ```
    */
  get trips(): Prisma.tripsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.users`: Exposes CRUD operations for the **users** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.users.findMany()
    * ```
    */
  get users(): Prisma.usersDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.vehicle_assignments`: Exposes CRUD operations for the **vehicle_assignments** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Vehicle_assignments
    * const vehicle_assignments = await prisma.vehicle_assignments.findMany()
    * ```
    */
  get vehicle_assignments(): Prisma.vehicle_assignmentsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.vehicle_types`: Exposes CRUD operations for the **vehicle_types** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Vehicle_types
    * const vehicle_types = await prisma.vehicle_types.findMany()
    * ```
    */
  get vehicle_types(): Prisma.vehicle_typesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.vehicles`: Exposes CRUD operations for the **vehicles** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Vehicles
    * const vehicles = await prisma.vehicles.findMany()
    * ```
    */
  get vehicles(): Prisma.vehiclesDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.8.2
   * Query Engine version: 2060c79ba17c6bb9f5823312b6f6b7f4a845738e
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    companies: 'companies',
    cost_categories: 'cost_categories',
    departments: 'departments',
    driver_certifications: 'driver_certifications',
    drivers: 'drivers',
    expenses: 'expenses',
    fuel_stations: 'fuel_stations',
    fuel_transactions: 'fuel_transactions',
    gps_tracking: 'gps_tracking',
    incidents: 'incidents',
    maintenance_records: 'maintenance_records',
    maintenance_types: 'maintenance_types',
    reports: 'reports',
    safety_inspections: 'safety_inspections',
    service_providers: 'service_providers',
    trips: 'trips',
    users: 'users',
    vehicle_assignments: 'vehicle_assignments',
    vehicle_types: 'vehicle_types',
    vehicles: 'vehicles'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "companies" | "cost_categories" | "departments" | "driver_certifications" | "drivers" | "expenses" | "fuel_stations" | "fuel_transactions" | "gps_tracking" | "incidents" | "maintenance_records" | "maintenance_types" | "reports" | "safety_inspections" | "service_providers" | "trips" | "users" | "vehicle_assignments" | "vehicle_types" | "vehicles"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      companies: {
        payload: Prisma.$companiesPayload<ExtArgs>
        fields: Prisma.companiesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.companiesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$companiesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.companiesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$companiesPayload>
          }
          findFirst: {
            args: Prisma.companiesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$companiesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.companiesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$companiesPayload>
          }
          findMany: {
            args: Prisma.companiesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$companiesPayload>[]
          }
          create: {
            args: Prisma.companiesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$companiesPayload>
          }
          createMany: {
            args: Prisma.companiesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.companiesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$companiesPayload>[]
          }
          delete: {
            args: Prisma.companiesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$companiesPayload>
          }
          update: {
            args: Prisma.companiesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$companiesPayload>
          }
          deleteMany: {
            args: Prisma.companiesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.companiesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.companiesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$companiesPayload>[]
          }
          upsert: {
            args: Prisma.companiesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$companiesPayload>
          }
          aggregate: {
            args: Prisma.CompaniesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCompanies>
          }
          groupBy: {
            args: Prisma.companiesGroupByArgs<ExtArgs>
            result: $Utils.Optional<CompaniesGroupByOutputType>[]
          }
          count: {
            args: Prisma.companiesCountArgs<ExtArgs>
            result: $Utils.Optional<CompaniesCountAggregateOutputType> | number
          }
        }
      }
      cost_categories: {
        payload: Prisma.$cost_categoriesPayload<ExtArgs>
        fields: Prisma.cost_categoriesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.cost_categoriesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cost_categoriesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.cost_categoriesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cost_categoriesPayload>
          }
          findFirst: {
            args: Prisma.cost_categoriesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cost_categoriesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.cost_categoriesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cost_categoriesPayload>
          }
          findMany: {
            args: Prisma.cost_categoriesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cost_categoriesPayload>[]
          }
          create: {
            args: Prisma.cost_categoriesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cost_categoriesPayload>
          }
          createMany: {
            args: Prisma.cost_categoriesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.cost_categoriesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cost_categoriesPayload>[]
          }
          delete: {
            args: Prisma.cost_categoriesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cost_categoriesPayload>
          }
          update: {
            args: Prisma.cost_categoriesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cost_categoriesPayload>
          }
          deleteMany: {
            args: Prisma.cost_categoriesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.cost_categoriesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.cost_categoriesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cost_categoriesPayload>[]
          }
          upsert: {
            args: Prisma.cost_categoriesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cost_categoriesPayload>
          }
          aggregate: {
            args: Prisma.Cost_categoriesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCost_categories>
          }
          groupBy: {
            args: Prisma.cost_categoriesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Cost_categoriesGroupByOutputType>[]
          }
          count: {
            args: Prisma.cost_categoriesCountArgs<ExtArgs>
            result: $Utils.Optional<Cost_categoriesCountAggregateOutputType> | number
          }
        }
      }
      departments: {
        payload: Prisma.$departmentsPayload<ExtArgs>
        fields: Prisma.departmentsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.departmentsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$departmentsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.departmentsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$departmentsPayload>
          }
          findFirst: {
            args: Prisma.departmentsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$departmentsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.departmentsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$departmentsPayload>
          }
          findMany: {
            args: Prisma.departmentsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$departmentsPayload>[]
          }
          create: {
            args: Prisma.departmentsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$departmentsPayload>
          }
          createMany: {
            args: Prisma.departmentsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.departmentsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$departmentsPayload>[]
          }
          delete: {
            args: Prisma.departmentsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$departmentsPayload>
          }
          update: {
            args: Prisma.departmentsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$departmentsPayload>
          }
          deleteMany: {
            args: Prisma.departmentsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.departmentsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.departmentsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$departmentsPayload>[]
          }
          upsert: {
            args: Prisma.departmentsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$departmentsPayload>
          }
          aggregate: {
            args: Prisma.DepartmentsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDepartments>
          }
          groupBy: {
            args: Prisma.departmentsGroupByArgs<ExtArgs>
            result: $Utils.Optional<DepartmentsGroupByOutputType>[]
          }
          count: {
            args: Prisma.departmentsCountArgs<ExtArgs>
            result: $Utils.Optional<DepartmentsCountAggregateOutputType> | number
          }
        }
      }
      driver_certifications: {
        payload: Prisma.$driver_certificationsPayload<ExtArgs>
        fields: Prisma.driver_certificationsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.driver_certificationsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$driver_certificationsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.driver_certificationsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$driver_certificationsPayload>
          }
          findFirst: {
            args: Prisma.driver_certificationsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$driver_certificationsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.driver_certificationsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$driver_certificationsPayload>
          }
          findMany: {
            args: Prisma.driver_certificationsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$driver_certificationsPayload>[]
          }
          create: {
            args: Prisma.driver_certificationsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$driver_certificationsPayload>
          }
          createMany: {
            args: Prisma.driver_certificationsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.driver_certificationsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$driver_certificationsPayload>[]
          }
          delete: {
            args: Prisma.driver_certificationsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$driver_certificationsPayload>
          }
          update: {
            args: Prisma.driver_certificationsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$driver_certificationsPayload>
          }
          deleteMany: {
            args: Prisma.driver_certificationsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.driver_certificationsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.driver_certificationsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$driver_certificationsPayload>[]
          }
          upsert: {
            args: Prisma.driver_certificationsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$driver_certificationsPayload>
          }
          aggregate: {
            args: Prisma.Driver_certificationsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDriver_certifications>
          }
          groupBy: {
            args: Prisma.driver_certificationsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Driver_certificationsGroupByOutputType>[]
          }
          count: {
            args: Prisma.driver_certificationsCountArgs<ExtArgs>
            result: $Utils.Optional<Driver_certificationsCountAggregateOutputType> | number
          }
        }
      }
      drivers: {
        payload: Prisma.$driversPayload<ExtArgs>
        fields: Prisma.driversFieldRefs
        operations: {
          findUnique: {
            args: Prisma.driversFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$driversPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.driversFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$driversPayload>
          }
          findFirst: {
            args: Prisma.driversFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$driversPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.driversFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$driversPayload>
          }
          findMany: {
            args: Prisma.driversFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$driversPayload>[]
          }
          create: {
            args: Prisma.driversCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$driversPayload>
          }
          createMany: {
            args: Prisma.driversCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.driversCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$driversPayload>[]
          }
          delete: {
            args: Prisma.driversDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$driversPayload>
          }
          update: {
            args: Prisma.driversUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$driversPayload>
          }
          deleteMany: {
            args: Prisma.driversDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.driversUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.driversUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$driversPayload>[]
          }
          upsert: {
            args: Prisma.driversUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$driversPayload>
          }
          aggregate: {
            args: Prisma.DriversAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDrivers>
          }
          groupBy: {
            args: Prisma.driversGroupByArgs<ExtArgs>
            result: $Utils.Optional<DriversGroupByOutputType>[]
          }
          count: {
            args: Prisma.driversCountArgs<ExtArgs>
            result: $Utils.Optional<DriversCountAggregateOutputType> | number
          }
        }
      }
      expenses: {
        payload: Prisma.$expensesPayload<ExtArgs>
        fields: Prisma.expensesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.expensesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$expensesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.expensesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$expensesPayload>
          }
          findFirst: {
            args: Prisma.expensesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$expensesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.expensesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$expensesPayload>
          }
          findMany: {
            args: Prisma.expensesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$expensesPayload>[]
          }
          create: {
            args: Prisma.expensesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$expensesPayload>
          }
          createMany: {
            args: Prisma.expensesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.expensesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$expensesPayload>[]
          }
          delete: {
            args: Prisma.expensesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$expensesPayload>
          }
          update: {
            args: Prisma.expensesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$expensesPayload>
          }
          deleteMany: {
            args: Prisma.expensesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.expensesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.expensesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$expensesPayload>[]
          }
          upsert: {
            args: Prisma.expensesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$expensesPayload>
          }
          aggregate: {
            args: Prisma.ExpensesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateExpenses>
          }
          groupBy: {
            args: Prisma.expensesGroupByArgs<ExtArgs>
            result: $Utils.Optional<ExpensesGroupByOutputType>[]
          }
          count: {
            args: Prisma.expensesCountArgs<ExtArgs>
            result: $Utils.Optional<ExpensesCountAggregateOutputType> | number
          }
        }
      }
      fuel_stations: {
        payload: Prisma.$fuel_stationsPayload<ExtArgs>
        fields: Prisma.fuel_stationsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.fuel_stationsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$fuel_stationsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.fuel_stationsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$fuel_stationsPayload>
          }
          findFirst: {
            args: Prisma.fuel_stationsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$fuel_stationsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.fuel_stationsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$fuel_stationsPayload>
          }
          findMany: {
            args: Prisma.fuel_stationsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$fuel_stationsPayload>[]
          }
          create: {
            args: Prisma.fuel_stationsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$fuel_stationsPayload>
          }
          createMany: {
            args: Prisma.fuel_stationsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.fuel_stationsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$fuel_stationsPayload>[]
          }
          delete: {
            args: Prisma.fuel_stationsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$fuel_stationsPayload>
          }
          update: {
            args: Prisma.fuel_stationsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$fuel_stationsPayload>
          }
          deleteMany: {
            args: Prisma.fuel_stationsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.fuel_stationsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.fuel_stationsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$fuel_stationsPayload>[]
          }
          upsert: {
            args: Prisma.fuel_stationsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$fuel_stationsPayload>
          }
          aggregate: {
            args: Prisma.Fuel_stationsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFuel_stations>
          }
          groupBy: {
            args: Prisma.fuel_stationsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Fuel_stationsGroupByOutputType>[]
          }
          count: {
            args: Prisma.fuel_stationsCountArgs<ExtArgs>
            result: $Utils.Optional<Fuel_stationsCountAggregateOutputType> | number
          }
        }
      }
      fuel_transactions: {
        payload: Prisma.$fuel_transactionsPayload<ExtArgs>
        fields: Prisma.fuel_transactionsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.fuel_transactionsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$fuel_transactionsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.fuel_transactionsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$fuel_transactionsPayload>
          }
          findFirst: {
            args: Prisma.fuel_transactionsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$fuel_transactionsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.fuel_transactionsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$fuel_transactionsPayload>
          }
          findMany: {
            args: Prisma.fuel_transactionsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$fuel_transactionsPayload>[]
          }
          create: {
            args: Prisma.fuel_transactionsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$fuel_transactionsPayload>
          }
          createMany: {
            args: Prisma.fuel_transactionsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.fuel_transactionsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$fuel_transactionsPayload>[]
          }
          delete: {
            args: Prisma.fuel_transactionsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$fuel_transactionsPayload>
          }
          update: {
            args: Prisma.fuel_transactionsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$fuel_transactionsPayload>
          }
          deleteMany: {
            args: Prisma.fuel_transactionsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.fuel_transactionsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.fuel_transactionsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$fuel_transactionsPayload>[]
          }
          upsert: {
            args: Prisma.fuel_transactionsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$fuel_transactionsPayload>
          }
          aggregate: {
            args: Prisma.Fuel_transactionsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFuel_transactions>
          }
          groupBy: {
            args: Prisma.fuel_transactionsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Fuel_transactionsGroupByOutputType>[]
          }
          count: {
            args: Prisma.fuel_transactionsCountArgs<ExtArgs>
            result: $Utils.Optional<Fuel_transactionsCountAggregateOutputType> | number
          }
        }
      }
      gps_tracking: {
        payload: Prisma.$gps_trackingPayload<ExtArgs>
        fields: Prisma.gps_trackingFieldRefs
        operations: {
          findUnique: {
            args: Prisma.gps_trackingFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$gps_trackingPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.gps_trackingFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$gps_trackingPayload>
          }
          findFirst: {
            args: Prisma.gps_trackingFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$gps_trackingPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.gps_trackingFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$gps_trackingPayload>
          }
          findMany: {
            args: Prisma.gps_trackingFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$gps_trackingPayload>[]
          }
          create: {
            args: Prisma.gps_trackingCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$gps_trackingPayload>
          }
          createMany: {
            args: Prisma.gps_trackingCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.gps_trackingCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$gps_trackingPayload>[]
          }
          delete: {
            args: Prisma.gps_trackingDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$gps_trackingPayload>
          }
          update: {
            args: Prisma.gps_trackingUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$gps_trackingPayload>
          }
          deleteMany: {
            args: Prisma.gps_trackingDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.gps_trackingUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.gps_trackingUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$gps_trackingPayload>[]
          }
          upsert: {
            args: Prisma.gps_trackingUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$gps_trackingPayload>
          }
          aggregate: {
            args: Prisma.Gps_trackingAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateGps_tracking>
          }
          groupBy: {
            args: Prisma.gps_trackingGroupByArgs<ExtArgs>
            result: $Utils.Optional<Gps_trackingGroupByOutputType>[]
          }
          count: {
            args: Prisma.gps_trackingCountArgs<ExtArgs>
            result: $Utils.Optional<Gps_trackingCountAggregateOutputType> | number
          }
        }
      }
      incidents: {
        payload: Prisma.$incidentsPayload<ExtArgs>
        fields: Prisma.incidentsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.incidentsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$incidentsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.incidentsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$incidentsPayload>
          }
          findFirst: {
            args: Prisma.incidentsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$incidentsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.incidentsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$incidentsPayload>
          }
          findMany: {
            args: Prisma.incidentsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$incidentsPayload>[]
          }
          create: {
            args: Prisma.incidentsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$incidentsPayload>
          }
          createMany: {
            args: Prisma.incidentsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.incidentsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$incidentsPayload>[]
          }
          delete: {
            args: Prisma.incidentsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$incidentsPayload>
          }
          update: {
            args: Prisma.incidentsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$incidentsPayload>
          }
          deleteMany: {
            args: Prisma.incidentsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.incidentsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.incidentsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$incidentsPayload>[]
          }
          upsert: {
            args: Prisma.incidentsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$incidentsPayload>
          }
          aggregate: {
            args: Prisma.IncidentsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateIncidents>
          }
          groupBy: {
            args: Prisma.incidentsGroupByArgs<ExtArgs>
            result: $Utils.Optional<IncidentsGroupByOutputType>[]
          }
          count: {
            args: Prisma.incidentsCountArgs<ExtArgs>
            result: $Utils.Optional<IncidentsCountAggregateOutputType> | number
          }
        }
      }
      maintenance_records: {
        payload: Prisma.$maintenance_recordsPayload<ExtArgs>
        fields: Prisma.maintenance_recordsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.maintenance_recordsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$maintenance_recordsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.maintenance_recordsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$maintenance_recordsPayload>
          }
          findFirst: {
            args: Prisma.maintenance_recordsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$maintenance_recordsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.maintenance_recordsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$maintenance_recordsPayload>
          }
          findMany: {
            args: Prisma.maintenance_recordsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$maintenance_recordsPayload>[]
          }
          create: {
            args: Prisma.maintenance_recordsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$maintenance_recordsPayload>
          }
          createMany: {
            args: Prisma.maintenance_recordsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.maintenance_recordsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$maintenance_recordsPayload>[]
          }
          delete: {
            args: Prisma.maintenance_recordsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$maintenance_recordsPayload>
          }
          update: {
            args: Prisma.maintenance_recordsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$maintenance_recordsPayload>
          }
          deleteMany: {
            args: Prisma.maintenance_recordsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.maintenance_recordsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.maintenance_recordsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$maintenance_recordsPayload>[]
          }
          upsert: {
            args: Prisma.maintenance_recordsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$maintenance_recordsPayload>
          }
          aggregate: {
            args: Prisma.Maintenance_recordsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMaintenance_records>
          }
          groupBy: {
            args: Prisma.maintenance_recordsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Maintenance_recordsGroupByOutputType>[]
          }
          count: {
            args: Prisma.maintenance_recordsCountArgs<ExtArgs>
            result: $Utils.Optional<Maintenance_recordsCountAggregateOutputType> | number
          }
        }
      }
      maintenance_types: {
        payload: Prisma.$maintenance_typesPayload<ExtArgs>
        fields: Prisma.maintenance_typesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.maintenance_typesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$maintenance_typesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.maintenance_typesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$maintenance_typesPayload>
          }
          findFirst: {
            args: Prisma.maintenance_typesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$maintenance_typesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.maintenance_typesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$maintenance_typesPayload>
          }
          findMany: {
            args: Prisma.maintenance_typesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$maintenance_typesPayload>[]
          }
          create: {
            args: Prisma.maintenance_typesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$maintenance_typesPayload>
          }
          createMany: {
            args: Prisma.maintenance_typesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.maintenance_typesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$maintenance_typesPayload>[]
          }
          delete: {
            args: Prisma.maintenance_typesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$maintenance_typesPayload>
          }
          update: {
            args: Prisma.maintenance_typesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$maintenance_typesPayload>
          }
          deleteMany: {
            args: Prisma.maintenance_typesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.maintenance_typesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.maintenance_typesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$maintenance_typesPayload>[]
          }
          upsert: {
            args: Prisma.maintenance_typesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$maintenance_typesPayload>
          }
          aggregate: {
            args: Prisma.Maintenance_typesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMaintenance_types>
          }
          groupBy: {
            args: Prisma.maintenance_typesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Maintenance_typesGroupByOutputType>[]
          }
          count: {
            args: Prisma.maintenance_typesCountArgs<ExtArgs>
            result: $Utils.Optional<Maintenance_typesCountAggregateOutputType> | number
          }
        }
      }
      reports: {
        payload: Prisma.$reportsPayload<ExtArgs>
        fields: Prisma.reportsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.reportsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.reportsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportsPayload>
          }
          findFirst: {
            args: Prisma.reportsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.reportsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportsPayload>
          }
          findMany: {
            args: Prisma.reportsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportsPayload>[]
          }
          create: {
            args: Prisma.reportsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportsPayload>
          }
          createMany: {
            args: Prisma.reportsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.reportsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportsPayload>[]
          }
          delete: {
            args: Prisma.reportsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportsPayload>
          }
          update: {
            args: Prisma.reportsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportsPayload>
          }
          deleteMany: {
            args: Prisma.reportsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.reportsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.reportsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportsPayload>[]
          }
          upsert: {
            args: Prisma.reportsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportsPayload>
          }
          aggregate: {
            args: Prisma.ReportsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReports>
          }
          groupBy: {
            args: Prisma.reportsGroupByArgs<ExtArgs>
            result: $Utils.Optional<ReportsGroupByOutputType>[]
          }
          count: {
            args: Prisma.reportsCountArgs<ExtArgs>
            result: $Utils.Optional<ReportsCountAggregateOutputType> | number
          }
        }
      }
      safety_inspections: {
        payload: Prisma.$safety_inspectionsPayload<ExtArgs>
        fields: Prisma.safety_inspectionsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.safety_inspectionsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$safety_inspectionsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.safety_inspectionsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$safety_inspectionsPayload>
          }
          findFirst: {
            args: Prisma.safety_inspectionsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$safety_inspectionsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.safety_inspectionsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$safety_inspectionsPayload>
          }
          findMany: {
            args: Prisma.safety_inspectionsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$safety_inspectionsPayload>[]
          }
          create: {
            args: Prisma.safety_inspectionsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$safety_inspectionsPayload>
          }
          createMany: {
            args: Prisma.safety_inspectionsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.safety_inspectionsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$safety_inspectionsPayload>[]
          }
          delete: {
            args: Prisma.safety_inspectionsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$safety_inspectionsPayload>
          }
          update: {
            args: Prisma.safety_inspectionsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$safety_inspectionsPayload>
          }
          deleteMany: {
            args: Prisma.safety_inspectionsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.safety_inspectionsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.safety_inspectionsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$safety_inspectionsPayload>[]
          }
          upsert: {
            args: Prisma.safety_inspectionsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$safety_inspectionsPayload>
          }
          aggregate: {
            args: Prisma.Safety_inspectionsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSafety_inspections>
          }
          groupBy: {
            args: Prisma.safety_inspectionsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Safety_inspectionsGroupByOutputType>[]
          }
          count: {
            args: Prisma.safety_inspectionsCountArgs<ExtArgs>
            result: $Utils.Optional<Safety_inspectionsCountAggregateOutputType> | number
          }
        }
      }
      service_providers: {
        payload: Prisma.$service_providersPayload<ExtArgs>
        fields: Prisma.service_providersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.service_providersFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$service_providersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.service_providersFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$service_providersPayload>
          }
          findFirst: {
            args: Prisma.service_providersFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$service_providersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.service_providersFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$service_providersPayload>
          }
          findMany: {
            args: Prisma.service_providersFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$service_providersPayload>[]
          }
          create: {
            args: Prisma.service_providersCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$service_providersPayload>
          }
          createMany: {
            args: Prisma.service_providersCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.service_providersCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$service_providersPayload>[]
          }
          delete: {
            args: Prisma.service_providersDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$service_providersPayload>
          }
          update: {
            args: Prisma.service_providersUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$service_providersPayload>
          }
          deleteMany: {
            args: Prisma.service_providersDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.service_providersUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.service_providersUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$service_providersPayload>[]
          }
          upsert: {
            args: Prisma.service_providersUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$service_providersPayload>
          }
          aggregate: {
            args: Prisma.Service_providersAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateService_providers>
          }
          groupBy: {
            args: Prisma.service_providersGroupByArgs<ExtArgs>
            result: $Utils.Optional<Service_providersGroupByOutputType>[]
          }
          count: {
            args: Prisma.service_providersCountArgs<ExtArgs>
            result: $Utils.Optional<Service_providersCountAggregateOutputType> | number
          }
        }
      }
      trips: {
        payload: Prisma.$tripsPayload<ExtArgs>
        fields: Prisma.tripsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tripsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tripsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tripsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tripsPayload>
          }
          findFirst: {
            args: Prisma.tripsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tripsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tripsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tripsPayload>
          }
          findMany: {
            args: Prisma.tripsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tripsPayload>[]
          }
          create: {
            args: Prisma.tripsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tripsPayload>
          }
          createMany: {
            args: Prisma.tripsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.tripsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tripsPayload>[]
          }
          delete: {
            args: Prisma.tripsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tripsPayload>
          }
          update: {
            args: Prisma.tripsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tripsPayload>
          }
          deleteMany: {
            args: Prisma.tripsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tripsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.tripsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tripsPayload>[]
          }
          upsert: {
            args: Prisma.tripsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tripsPayload>
          }
          aggregate: {
            args: Prisma.TripsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTrips>
          }
          groupBy: {
            args: Prisma.tripsGroupByArgs<ExtArgs>
            result: $Utils.Optional<TripsGroupByOutputType>[]
          }
          count: {
            args: Prisma.tripsCountArgs<ExtArgs>
            result: $Utils.Optional<TripsCountAggregateOutputType> | number
          }
        }
      }
      users: {
        payload: Prisma.$usersPayload<ExtArgs>
        fields: Prisma.usersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.usersFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.usersFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          findFirst: {
            args: Prisma.usersFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.usersFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          findMany: {
            args: Prisma.usersFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>[]
          }
          create: {
            args: Prisma.usersCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          createMany: {
            args: Prisma.usersCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.usersCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>[]
          }
          delete: {
            args: Prisma.usersDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          update: {
            args: Prisma.usersUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          deleteMany: {
            args: Prisma.usersDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.usersUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.usersUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>[]
          }
          upsert: {
            args: Prisma.usersUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          aggregate: {
            args: Prisma.UsersAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsers>
          }
          groupBy: {
            args: Prisma.usersGroupByArgs<ExtArgs>
            result: $Utils.Optional<UsersGroupByOutputType>[]
          }
          count: {
            args: Prisma.usersCountArgs<ExtArgs>
            result: $Utils.Optional<UsersCountAggregateOutputType> | number
          }
        }
      }
      vehicle_assignments: {
        payload: Prisma.$vehicle_assignmentsPayload<ExtArgs>
        fields: Prisma.vehicle_assignmentsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.vehicle_assignmentsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$vehicle_assignmentsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.vehicle_assignmentsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$vehicle_assignmentsPayload>
          }
          findFirst: {
            args: Prisma.vehicle_assignmentsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$vehicle_assignmentsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.vehicle_assignmentsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$vehicle_assignmentsPayload>
          }
          findMany: {
            args: Prisma.vehicle_assignmentsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$vehicle_assignmentsPayload>[]
          }
          create: {
            args: Prisma.vehicle_assignmentsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$vehicle_assignmentsPayload>
          }
          createMany: {
            args: Prisma.vehicle_assignmentsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.vehicle_assignmentsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$vehicle_assignmentsPayload>[]
          }
          delete: {
            args: Prisma.vehicle_assignmentsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$vehicle_assignmentsPayload>
          }
          update: {
            args: Prisma.vehicle_assignmentsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$vehicle_assignmentsPayload>
          }
          deleteMany: {
            args: Prisma.vehicle_assignmentsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.vehicle_assignmentsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.vehicle_assignmentsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$vehicle_assignmentsPayload>[]
          }
          upsert: {
            args: Prisma.vehicle_assignmentsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$vehicle_assignmentsPayload>
          }
          aggregate: {
            args: Prisma.Vehicle_assignmentsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateVehicle_assignments>
          }
          groupBy: {
            args: Prisma.vehicle_assignmentsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Vehicle_assignmentsGroupByOutputType>[]
          }
          count: {
            args: Prisma.vehicle_assignmentsCountArgs<ExtArgs>
            result: $Utils.Optional<Vehicle_assignmentsCountAggregateOutputType> | number
          }
        }
      }
      vehicle_types: {
        payload: Prisma.$vehicle_typesPayload<ExtArgs>
        fields: Prisma.vehicle_typesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.vehicle_typesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$vehicle_typesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.vehicle_typesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$vehicle_typesPayload>
          }
          findFirst: {
            args: Prisma.vehicle_typesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$vehicle_typesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.vehicle_typesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$vehicle_typesPayload>
          }
          findMany: {
            args: Prisma.vehicle_typesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$vehicle_typesPayload>[]
          }
          create: {
            args: Prisma.vehicle_typesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$vehicle_typesPayload>
          }
          createMany: {
            args: Prisma.vehicle_typesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.vehicle_typesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$vehicle_typesPayload>[]
          }
          delete: {
            args: Prisma.vehicle_typesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$vehicle_typesPayload>
          }
          update: {
            args: Prisma.vehicle_typesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$vehicle_typesPayload>
          }
          deleteMany: {
            args: Prisma.vehicle_typesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.vehicle_typesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.vehicle_typesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$vehicle_typesPayload>[]
          }
          upsert: {
            args: Prisma.vehicle_typesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$vehicle_typesPayload>
          }
          aggregate: {
            args: Prisma.Vehicle_typesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateVehicle_types>
          }
          groupBy: {
            args: Prisma.vehicle_typesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Vehicle_typesGroupByOutputType>[]
          }
          count: {
            args: Prisma.vehicle_typesCountArgs<ExtArgs>
            result: $Utils.Optional<Vehicle_typesCountAggregateOutputType> | number
          }
        }
      }
      vehicles: {
        payload: Prisma.$vehiclesPayload<ExtArgs>
        fields: Prisma.vehiclesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.vehiclesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$vehiclesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.vehiclesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$vehiclesPayload>
          }
          findFirst: {
            args: Prisma.vehiclesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$vehiclesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.vehiclesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$vehiclesPayload>
          }
          findMany: {
            args: Prisma.vehiclesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$vehiclesPayload>[]
          }
          create: {
            args: Prisma.vehiclesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$vehiclesPayload>
          }
          createMany: {
            args: Prisma.vehiclesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.vehiclesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$vehiclesPayload>[]
          }
          delete: {
            args: Prisma.vehiclesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$vehiclesPayload>
          }
          update: {
            args: Prisma.vehiclesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$vehiclesPayload>
          }
          deleteMany: {
            args: Prisma.vehiclesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.vehiclesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.vehiclesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$vehiclesPayload>[]
          }
          upsert: {
            args: Prisma.vehiclesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$vehiclesPayload>
          }
          aggregate: {
            args: Prisma.VehiclesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateVehicles>
          }
          groupBy: {
            args: Prisma.vehiclesGroupByArgs<ExtArgs>
            result: $Utils.Optional<VehiclesGroupByOutputType>[]
          }
          count: {
            args: Prisma.vehiclesCountArgs<ExtArgs>
            result: $Utils.Optional<VehiclesCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    companies?: companiesOmit
    cost_categories?: cost_categoriesOmit
    departments?: departmentsOmit
    driver_certifications?: driver_certificationsOmit
    drivers?: driversOmit
    expenses?: expensesOmit
    fuel_stations?: fuel_stationsOmit
    fuel_transactions?: fuel_transactionsOmit
    gps_tracking?: gps_trackingOmit
    incidents?: incidentsOmit
    maintenance_records?: maintenance_recordsOmit
    maintenance_types?: maintenance_typesOmit
    reports?: reportsOmit
    safety_inspections?: safety_inspectionsOmit
    service_providers?: service_providersOmit
    trips?: tripsOmit
    users?: usersOmit
    vehicle_assignments?: vehicle_assignmentsOmit
    vehicle_types?: vehicle_typesOmit
    vehicles?: vehiclesOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type CompaniesCountOutputType
   */

  export type CompaniesCountOutputType = {
    departments: number
    drivers: number
    reports: number
    service_providers: number
    users: number
    vehicles: number
  }

  export type CompaniesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    departments?: boolean | CompaniesCountOutputTypeCountDepartmentsArgs
    drivers?: boolean | CompaniesCountOutputTypeCountDriversArgs
    reports?: boolean | CompaniesCountOutputTypeCountReportsArgs
    service_providers?: boolean | CompaniesCountOutputTypeCountService_providersArgs
    users?: boolean | CompaniesCountOutputTypeCountUsersArgs
    vehicles?: boolean | CompaniesCountOutputTypeCountVehiclesArgs
  }

  // Custom InputTypes
  /**
   * CompaniesCountOutputType without action
   */
  export type CompaniesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompaniesCountOutputType
     */
    select?: CompaniesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CompaniesCountOutputType without action
   */
  export type CompaniesCountOutputTypeCountDepartmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: departmentsWhereInput
  }

  /**
   * CompaniesCountOutputType without action
   */
  export type CompaniesCountOutputTypeCountDriversArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: driversWhereInput
  }

  /**
   * CompaniesCountOutputType without action
   */
  export type CompaniesCountOutputTypeCountReportsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: reportsWhereInput
  }

  /**
   * CompaniesCountOutputType without action
   */
  export type CompaniesCountOutputTypeCountService_providersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: service_providersWhereInput
  }

  /**
   * CompaniesCountOutputType without action
   */
  export type CompaniesCountOutputTypeCountUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: usersWhereInput
  }

  /**
   * CompaniesCountOutputType without action
   */
  export type CompaniesCountOutputTypeCountVehiclesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: vehiclesWhereInput
  }


  /**
   * Count Type Cost_categoriesCountOutputType
   */

  export type Cost_categoriesCountOutputType = {
    expenses: number
  }

  export type Cost_categoriesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    expenses?: boolean | Cost_categoriesCountOutputTypeCountExpensesArgs
  }

  // Custom InputTypes
  /**
   * Cost_categoriesCountOutputType without action
   */
  export type Cost_categoriesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cost_categoriesCountOutputType
     */
    select?: Cost_categoriesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Cost_categoriesCountOutputType without action
   */
  export type Cost_categoriesCountOutputTypeCountExpensesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: expensesWhereInput
  }


  /**
   * Count Type DepartmentsCountOutputType
   */

  export type DepartmentsCountOutputType = {
    vehicles: number
  }

  export type DepartmentsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    vehicles?: boolean | DepartmentsCountOutputTypeCountVehiclesArgs
  }

  // Custom InputTypes
  /**
   * DepartmentsCountOutputType without action
   */
  export type DepartmentsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DepartmentsCountOutputType
     */
    select?: DepartmentsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * DepartmentsCountOutputType without action
   */
  export type DepartmentsCountOutputTypeCountVehiclesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: vehiclesWhereInput
  }


  /**
   * Count Type DriversCountOutputType
   */

  export type DriversCountOutputType = {
    driver_certifications: number
    expenses: number
    fuel_transactions: number
    incidents: number
    trips: number
    vehicle_assignments: number
    vehicles: number
  }

  export type DriversCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    driver_certifications?: boolean | DriversCountOutputTypeCountDriver_certificationsArgs
    expenses?: boolean | DriversCountOutputTypeCountExpensesArgs
    fuel_transactions?: boolean | DriversCountOutputTypeCountFuel_transactionsArgs
    incidents?: boolean | DriversCountOutputTypeCountIncidentsArgs
    trips?: boolean | DriversCountOutputTypeCountTripsArgs
    vehicle_assignments?: boolean | DriversCountOutputTypeCountVehicle_assignmentsArgs
    vehicles?: boolean | DriversCountOutputTypeCountVehiclesArgs
  }

  // Custom InputTypes
  /**
   * DriversCountOutputType without action
   */
  export type DriversCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DriversCountOutputType
     */
    select?: DriversCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * DriversCountOutputType without action
   */
  export type DriversCountOutputTypeCountDriver_certificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: driver_certificationsWhereInput
  }

  /**
   * DriversCountOutputType without action
   */
  export type DriversCountOutputTypeCountExpensesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: expensesWhereInput
  }

  /**
   * DriversCountOutputType without action
   */
  export type DriversCountOutputTypeCountFuel_transactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: fuel_transactionsWhereInput
  }

  /**
   * DriversCountOutputType without action
   */
  export type DriversCountOutputTypeCountIncidentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: incidentsWhereInput
  }

  /**
   * DriversCountOutputType without action
   */
  export type DriversCountOutputTypeCountTripsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tripsWhereInput
  }

  /**
   * DriversCountOutputType without action
   */
  export type DriversCountOutputTypeCountVehicle_assignmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: vehicle_assignmentsWhereInput
  }

  /**
   * DriversCountOutputType without action
   */
  export type DriversCountOutputTypeCountVehiclesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: vehiclesWhereInput
  }


  /**
   * Count Type Fuel_stationsCountOutputType
   */

  export type Fuel_stationsCountOutputType = {
    fuel_transactions: number
  }

  export type Fuel_stationsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    fuel_transactions?: boolean | Fuel_stationsCountOutputTypeCountFuel_transactionsArgs
  }

  // Custom InputTypes
  /**
   * Fuel_stationsCountOutputType without action
   */
  export type Fuel_stationsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Fuel_stationsCountOutputType
     */
    select?: Fuel_stationsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Fuel_stationsCountOutputType without action
   */
  export type Fuel_stationsCountOutputTypeCountFuel_transactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: fuel_transactionsWhereInput
  }


  /**
   * Count Type Maintenance_typesCountOutputType
   */

  export type Maintenance_typesCountOutputType = {
    maintenance_records: number
  }

  export type Maintenance_typesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    maintenance_records?: boolean | Maintenance_typesCountOutputTypeCountMaintenance_recordsArgs
  }

  // Custom InputTypes
  /**
   * Maintenance_typesCountOutputType without action
   */
  export type Maintenance_typesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Maintenance_typesCountOutputType
     */
    select?: Maintenance_typesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Maintenance_typesCountOutputType without action
   */
  export type Maintenance_typesCountOutputTypeCountMaintenance_recordsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: maintenance_recordsWhereInput
  }


  /**
   * Count Type Service_providersCountOutputType
   */

  export type Service_providersCountOutputType = {
    maintenance_records: number
  }

  export type Service_providersCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    maintenance_records?: boolean | Service_providersCountOutputTypeCountMaintenance_recordsArgs
  }

  // Custom InputTypes
  /**
   * Service_providersCountOutputType without action
   */
  export type Service_providersCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Service_providersCountOutputType
     */
    select?: Service_providersCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Service_providersCountOutputType without action
   */
  export type Service_providersCountOutputTypeCountMaintenance_recordsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: maintenance_recordsWhereInput
  }


  /**
   * Count Type UsersCountOutputType
   */

  export type UsersCountOutputType = {
    reports: number
  }

  export type UsersCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reports?: boolean | UsersCountOutputTypeCountReportsArgs
  }

  // Custom InputTypes
  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsersCountOutputType
     */
    select?: UsersCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountReportsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: reportsWhereInput
  }


  /**
   * Count Type Vehicle_typesCountOutputType
   */

  export type Vehicle_typesCountOutputType = {
    vehicles: number
  }

  export type Vehicle_typesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    vehicles?: boolean | Vehicle_typesCountOutputTypeCountVehiclesArgs
  }

  // Custom InputTypes
  /**
   * Vehicle_typesCountOutputType without action
   */
  export type Vehicle_typesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vehicle_typesCountOutputType
     */
    select?: Vehicle_typesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Vehicle_typesCountOutputType without action
   */
  export type Vehicle_typesCountOutputTypeCountVehiclesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: vehiclesWhereInput
  }


  /**
   * Count Type VehiclesCountOutputType
   */

  export type VehiclesCountOutputType = {
    expenses: number
    fuel_transactions: number
    gps_tracking: number
    incidents: number
    maintenance_records: number
    safety_inspections: number
    trips: number
    vehicle_assignments: number
  }

  export type VehiclesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    expenses?: boolean | VehiclesCountOutputTypeCountExpensesArgs
    fuel_transactions?: boolean | VehiclesCountOutputTypeCountFuel_transactionsArgs
    gps_tracking?: boolean | VehiclesCountOutputTypeCountGps_trackingArgs
    incidents?: boolean | VehiclesCountOutputTypeCountIncidentsArgs
    maintenance_records?: boolean | VehiclesCountOutputTypeCountMaintenance_recordsArgs
    safety_inspections?: boolean | VehiclesCountOutputTypeCountSafety_inspectionsArgs
    trips?: boolean | VehiclesCountOutputTypeCountTripsArgs
    vehicle_assignments?: boolean | VehiclesCountOutputTypeCountVehicle_assignmentsArgs
  }

  // Custom InputTypes
  /**
   * VehiclesCountOutputType without action
   */
  export type VehiclesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VehiclesCountOutputType
     */
    select?: VehiclesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * VehiclesCountOutputType without action
   */
  export type VehiclesCountOutputTypeCountExpensesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: expensesWhereInput
  }

  /**
   * VehiclesCountOutputType without action
   */
  export type VehiclesCountOutputTypeCountFuel_transactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: fuel_transactionsWhereInput
  }

  /**
   * VehiclesCountOutputType without action
   */
  export type VehiclesCountOutputTypeCountGps_trackingArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: gps_trackingWhereInput
  }

  /**
   * VehiclesCountOutputType without action
   */
  export type VehiclesCountOutputTypeCountIncidentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: incidentsWhereInput
  }

  /**
   * VehiclesCountOutputType without action
   */
  export type VehiclesCountOutputTypeCountMaintenance_recordsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: maintenance_recordsWhereInput
  }

  /**
   * VehiclesCountOutputType without action
   */
  export type VehiclesCountOutputTypeCountSafety_inspectionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: safety_inspectionsWhereInput
  }

  /**
   * VehiclesCountOutputType without action
   */
  export type VehiclesCountOutputTypeCountTripsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tripsWhereInput
  }

  /**
   * VehiclesCountOutputType without action
   */
  export type VehiclesCountOutputTypeCountVehicle_assignmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: vehicle_assignmentsWhereInput
  }


  /**
   * Models
   */

  /**
   * Model companies
   */

  export type AggregateCompanies = {
    _count: CompaniesCountAggregateOutputType | null
    _avg: CompaniesAvgAggregateOutputType | null
    _sum: CompaniesSumAggregateOutputType | null
    _min: CompaniesMinAggregateOutputType | null
    _max: CompaniesMaxAggregateOutputType | null
  }

  export type CompaniesAvgAggregateOutputType = {
    company_id: number | null
  }

  export type CompaniesSumAggregateOutputType = {
    company_id: number | null
  }

  export type CompaniesMinAggregateOutputType = {
    company_id: number | null
    company_name: string | null
    address: string | null
    phone: string | null
    email: string | null
    contact_person: string | null
    subscription_plan: string | null
    created_at: Date | null
    is_active: boolean | null
  }

  export type CompaniesMaxAggregateOutputType = {
    company_id: number | null
    company_name: string | null
    address: string | null
    phone: string | null
    email: string | null
    contact_person: string | null
    subscription_plan: string | null
    created_at: Date | null
    is_active: boolean | null
  }

  export type CompaniesCountAggregateOutputType = {
    company_id: number
    company_name: number
    address: number
    phone: number
    email: number
    contact_person: number
    subscription_plan: number
    created_at: number
    is_active: number
    _all: number
  }


  export type CompaniesAvgAggregateInputType = {
    company_id?: true
  }

  export type CompaniesSumAggregateInputType = {
    company_id?: true
  }

  export type CompaniesMinAggregateInputType = {
    company_id?: true
    company_name?: true
    address?: true
    phone?: true
    email?: true
    contact_person?: true
    subscription_plan?: true
    created_at?: true
    is_active?: true
  }

  export type CompaniesMaxAggregateInputType = {
    company_id?: true
    company_name?: true
    address?: true
    phone?: true
    email?: true
    contact_person?: true
    subscription_plan?: true
    created_at?: true
    is_active?: true
  }

  export type CompaniesCountAggregateInputType = {
    company_id?: true
    company_name?: true
    address?: true
    phone?: true
    email?: true
    contact_person?: true
    subscription_plan?: true
    created_at?: true
    is_active?: true
    _all?: true
  }

  export type CompaniesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which companies to aggregate.
     */
    where?: companiesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of companies to fetch.
     */
    orderBy?: companiesOrderByWithRelationInput | companiesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: companiesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` companies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` companies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned companies
    **/
    _count?: true | CompaniesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CompaniesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CompaniesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CompaniesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CompaniesMaxAggregateInputType
  }

  export type GetCompaniesAggregateType<T extends CompaniesAggregateArgs> = {
        [P in keyof T & keyof AggregateCompanies]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCompanies[P]>
      : GetScalarType<T[P], AggregateCompanies[P]>
  }




  export type companiesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: companiesWhereInput
    orderBy?: companiesOrderByWithAggregationInput | companiesOrderByWithAggregationInput[]
    by: CompaniesScalarFieldEnum[] | CompaniesScalarFieldEnum
    having?: companiesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CompaniesCountAggregateInputType | true
    _avg?: CompaniesAvgAggregateInputType
    _sum?: CompaniesSumAggregateInputType
    _min?: CompaniesMinAggregateInputType
    _max?: CompaniesMaxAggregateInputType
  }

  export type CompaniesGroupByOutputType = {
    company_id: number
    company_name: string
    address: string | null
    phone: string | null
    email: string | null
    contact_person: string | null
    subscription_plan: string | null
    created_at: Date | null
    is_active: boolean | null
    _count: CompaniesCountAggregateOutputType | null
    _avg: CompaniesAvgAggregateOutputType | null
    _sum: CompaniesSumAggregateOutputType | null
    _min: CompaniesMinAggregateOutputType | null
    _max: CompaniesMaxAggregateOutputType | null
  }

  type GetCompaniesGroupByPayload<T extends companiesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CompaniesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CompaniesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CompaniesGroupByOutputType[P]>
            : GetScalarType<T[P], CompaniesGroupByOutputType[P]>
        }
      >
    >


  export type companiesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    company_id?: boolean
    company_name?: boolean
    address?: boolean
    phone?: boolean
    email?: boolean
    contact_person?: boolean
    subscription_plan?: boolean
    created_at?: boolean
    is_active?: boolean
    departments?: boolean | companies$departmentsArgs<ExtArgs>
    drivers?: boolean | companies$driversArgs<ExtArgs>
    reports?: boolean | companies$reportsArgs<ExtArgs>
    service_providers?: boolean | companies$service_providersArgs<ExtArgs>
    users?: boolean | companies$usersArgs<ExtArgs>
    vehicles?: boolean | companies$vehiclesArgs<ExtArgs>
    _count?: boolean | CompaniesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["companies"]>

  export type companiesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    company_id?: boolean
    company_name?: boolean
    address?: boolean
    phone?: boolean
    email?: boolean
    contact_person?: boolean
    subscription_plan?: boolean
    created_at?: boolean
    is_active?: boolean
  }, ExtArgs["result"]["companies"]>

  export type companiesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    company_id?: boolean
    company_name?: boolean
    address?: boolean
    phone?: boolean
    email?: boolean
    contact_person?: boolean
    subscription_plan?: boolean
    created_at?: boolean
    is_active?: boolean
  }, ExtArgs["result"]["companies"]>

  export type companiesSelectScalar = {
    company_id?: boolean
    company_name?: boolean
    address?: boolean
    phone?: boolean
    email?: boolean
    contact_person?: boolean
    subscription_plan?: boolean
    created_at?: boolean
    is_active?: boolean
  }

  export type companiesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"company_id" | "company_name" | "address" | "phone" | "email" | "contact_person" | "subscription_plan" | "created_at" | "is_active", ExtArgs["result"]["companies"]>
  export type companiesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    departments?: boolean | companies$departmentsArgs<ExtArgs>
    drivers?: boolean | companies$driversArgs<ExtArgs>
    reports?: boolean | companies$reportsArgs<ExtArgs>
    service_providers?: boolean | companies$service_providersArgs<ExtArgs>
    users?: boolean | companies$usersArgs<ExtArgs>
    vehicles?: boolean | companies$vehiclesArgs<ExtArgs>
    _count?: boolean | CompaniesCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type companiesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type companiesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $companiesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "companies"
    objects: {
      departments: Prisma.$departmentsPayload<ExtArgs>[]
      drivers: Prisma.$driversPayload<ExtArgs>[]
      reports: Prisma.$reportsPayload<ExtArgs>[]
      service_providers: Prisma.$service_providersPayload<ExtArgs>[]
      users: Prisma.$usersPayload<ExtArgs>[]
      vehicles: Prisma.$vehiclesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      company_id: number
      company_name: string
      address: string | null
      phone: string | null
      email: string | null
      contact_person: string | null
      subscription_plan: string | null
      created_at: Date | null
      is_active: boolean | null
    }, ExtArgs["result"]["companies"]>
    composites: {}
  }

  type companiesGetPayload<S extends boolean | null | undefined | companiesDefaultArgs> = $Result.GetResult<Prisma.$companiesPayload, S>

  type companiesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<companiesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CompaniesCountAggregateInputType | true
    }

  export interface companiesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['companies'], meta: { name: 'companies' } }
    /**
     * Find zero or one Companies that matches the filter.
     * @param {companiesFindUniqueArgs} args - Arguments to find a Companies
     * @example
     * // Get one Companies
     * const companies = await prisma.companies.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends companiesFindUniqueArgs>(args: SelectSubset<T, companiesFindUniqueArgs<ExtArgs>>): Prisma__companiesClient<$Result.GetResult<Prisma.$companiesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Companies that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {companiesFindUniqueOrThrowArgs} args - Arguments to find a Companies
     * @example
     * // Get one Companies
     * const companies = await prisma.companies.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends companiesFindUniqueOrThrowArgs>(args: SelectSubset<T, companiesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__companiesClient<$Result.GetResult<Prisma.$companiesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Companies that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {companiesFindFirstArgs} args - Arguments to find a Companies
     * @example
     * // Get one Companies
     * const companies = await prisma.companies.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends companiesFindFirstArgs>(args?: SelectSubset<T, companiesFindFirstArgs<ExtArgs>>): Prisma__companiesClient<$Result.GetResult<Prisma.$companiesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Companies that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {companiesFindFirstOrThrowArgs} args - Arguments to find a Companies
     * @example
     * // Get one Companies
     * const companies = await prisma.companies.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends companiesFindFirstOrThrowArgs>(args?: SelectSubset<T, companiesFindFirstOrThrowArgs<ExtArgs>>): Prisma__companiesClient<$Result.GetResult<Prisma.$companiesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Companies that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {companiesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Companies
     * const companies = await prisma.companies.findMany()
     * 
     * // Get first 10 Companies
     * const companies = await prisma.companies.findMany({ take: 10 })
     * 
     * // Only select the `company_id`
     * const companiesWithCompany_idOnly = await prisma.companies.findMany({ select: { company_id: true } })
     * 
     */
    findMany<T extends companiesFindManyArgs>(args?: SelectSubset<T, companiesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$companiesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Companies.
     * @param {companiesCreateArgs} args - Arguments to create a Companies.
     * @example
     * // Create one Companies
     * const Companies = await prisma.companies.create({
     *   data: {
     *     // ... data to create a Companies
     *   }
     * })
     * 
     */
    create<T extends companiesCreateArgs>(args: SelectSubset<T, companiesCreateArgs<ExtArgs>>): Prisma__companiesClient<$Result.GetResult<Prisma.$companiesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Companies.
     * @param {companiesCreateManyArgs} args - Arguments to create many Companies.
     * @example
     * // Create many Companies
     * const companies = await prisma.companies.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends companiesCreateManyArgs>(args?: SelectSubset<T, companiesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Companies and returns the data saved in the database.
     * @param {companiesCreateManyAndReturnArgs} args - Arguments to create many Companies.
     * @example
     * // Create many Companies
     * const companies = await prisma.companies.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Companies and only return the `company_id`
     * const companiesWithCompany_idOnly = await prisma.companies.createManyAndReturn({
     *   select: { company_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends companiesCreateManyAndReturnArgs>(args?: SelectSubset<T, companiesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$companiesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Companies.
     * @param {companiesDeleteArgs} args - Arguments to delete one Companies.
     * @example
     * // Delete one Companies
     * const Companies = await prisma.companies.delete({
     *   where: {
     *     // ... filter to delete one Companies
     *   }
     * })
     * 
     */
    delete<T extends companiesDeleteArgs>(args: SelectSubset<T, companiesDeleteArgs<ExtArgs>>): Prisma__companiesClient<$Result.GetResult<Prisma.$companiesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Companies.
     * @param {companiesUpdateArgs} args - Arguments to update one Companies.
     * @example
     * // Update one Companies
     * const companies = await prisma.companies.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends companiesUpdateArgs>(args: SelectSubset<T, companiesUpdateArgs<ExtArgs>>): Prisma__companiesClient<$Result.GetResult<Prisma.$companiesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Companies.
     * @param {companiesDeleteManyArgs} args - Arguments to filter Companies to delete.
     * @example
     * // Delete a few Companies
     * const { count } = await prisma.companies.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends companiesDeleteManyArgs>(args?: SelectSubset<T, companiesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Companies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {companiesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Companies
     * const companies = await prisma.companies.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends companiesUpdateManyArgs>(args: SelectSubset<T, companiesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Companies and returns the data updated in the database.
     * @param {companiesUpdateManyAndReturnArgs} args - Arguments to update many Companies.
     * @example
     * // Update many Companies
     * const companies = await prisma.companies.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Companies and only return the `company_id`
     * const companiesWithCompany_idOnly = await prisma.companies.updateManyAndReturn({
     *   select: { company_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends companiesUpdateManyAndReturnArgs>(args: SelectSubset<T, companiesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$companiesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Companies.
     * @param {companiesUpsertArgs} args - Arguments to update or create a Companies.
     * @example
     * // Update or create a Companies
     * const companies = await prisma.companies.upsert({
     *   create: {
     *     // ... data to create a Companies
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Companies we want to update
     *   }
     * })
     */
    upsert<T extends companiesUpsertArgs>(args: SelectSubset<T, companiesUpsertArgs<ExtArgs>>): Prisma__companiesClient<$Result.GetResult<Prisma.$companiesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Companies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {companiesCountArgs} args - Arguments to filter Companies to count.
     * @example
     * // Count the number of Companies
     * const count = await prisma.companies.count({
     *   where: {
     *     // ... the filter for the Companies we want to count
     *   }
     * })
    **/
    count<T extends companiesCountArgs>(
      args?: Subset<T, companiesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CompaniesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Companies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompaniesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CompaniesAggregateArgs>(args: Subset<T, CompaniesAggregateArgs>): Prisma.PrismaPromise<GetCompaniesAggregateType<T>>

    /**
     * Group by Companies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {companiesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends companiesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: companiesGroupByArgs['orderBy'] }
        : { orderBy?: companiesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, companiesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCompaniesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the companies model
   */
  readonly fields: companiesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for companies.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__companiesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    departments<T extends companies$departmentsArgs<ExtArgs> = {}>(args?: Subset<T, companies$departmentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$departmentsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    drivers<T extends companies$driversArgs<ExtArgs> = {}>(args?: Subset<T, companies$driversArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$driversPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    reports<T extends companies$reportsArgs<ExtArgs> = {}>(args?: Subset<T, companies$reportsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$reportsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    service_providers<T extends companies$service_providersArgs<ExtArgs> = {}>(args?: Subset<T, companies$service_providersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$service_providersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    users<T extends companies$usersArgs<ExtArgs> = {}>(args?: Subset<T, companies$usersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    vehicles<T extends companies$vehiclesArgs<ExtArgs> = {}>(args?: Subset<T, companies$vehiclesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$vehiclesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the companies model
   */
  interface companiesFieldRefs {
    readonly company_id: FieldRef<"companies", 'Int'>
    readonly company_name: FieldRef<"companies", 'String'>
    readonly address: FieldRef<"companies", 'String'>
    readonly phone: FieldRef<"companies", 'String'>
    readonly email: FieldRef<"companies", 'String'>
    readonly contact_person: FieldRef<"companies", 'String'>
    readonly subscription_plan: FieldRef<"companies", 'String'>
    readonly created_at: FieldRef<"companies", 'DateTime'>
    readonly is_active: FieldRef<"companies", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * companies findUnique
   */
  export type companiesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the companies
     */
    select?: companiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the companies
     */
    omit?: companiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: companiesInclude<ExtArgs> | null
    /**
     * Filter, which companies to fetch.
     */
    where: companiesWhereUniqueInput
  }

  /**
   * companies findUniqueOrThrow
   */
  export type companiesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the companies
     */
    select?: companiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the companies
     */
    omit?: companiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: companiesInclude<ExtArgs> | null
    /**
     * Filter, which companies to fetch.
     */
    where: companiesWhereUniqueInput
  }

  /**
   * companies findFirst
   */
  export type companiesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the companies
     */
    select?: companiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the companies
     */
    omit?: companiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: companiesInclude<ExtArgs> | null
    /**
     * Filter, which companies to fetch.
     */
    where?: companiesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of companies to fetch.
     */
    orderBy?: companiesOrderByWithRelationInput | companiesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for companies.
     */
    cursor?: companiesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` companies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` companies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of companies.
     */
    distinct?: CompaniesScalarFieldEnum | CompaniesScalarFieldEnum[]
  }

  /**
   * companies findFirstOrThrow
   */
  export type companiesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the companies
     */
    select?: companiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the companies
     */
    omit?: companiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: companiesInclude<ExtArgs> | null
    /**
     * Filter, which companies to fetch.
     */
    where?: companiesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of companies to fetch.
     */
    orderBy?: companiesOrderByWithRelationInput | companiesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for companies.
     */
    cursor?: companiesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` companies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` companies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of companies.
     */
    distinct?: CompaniesScalarFieldEnum | CompaniesScalarFieldEnum[]
  }

  /**
   * companies findMany
   */
  export type companiesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the companies
     */
    select?: companiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the companies
     */
    omit?: companiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: companiesInclude<ExtArgs> | null
    /**
     * Filter, which companies to fetch.
     */
    where?: companiesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of companies to fetch.
     */
    orderBy?: companiesOrderByWithRelationInput | companiesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing companies.
     */
    cursor?: companiesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` companies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` companies.
     */
    skip?: number
    distinct?: CompaniesScalarFieldEnum | CompaniesScalarFieldEnum[]
  }

  /**
   * companies create
   */
  export type companiesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the companies
     */
    select?: companiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the companies
     */
    omit?: companiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: companiesInclude<ExtArgs> | null
    /**
     * The data needed to create a companies.
     */
    data: XOR<companiesCreateInput, companiesUncheckedCreateInput>
  }

  /**
   * companies createMany
   */
  export type companiesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many companies.
     */
    data: companiesCreateManyInput | companiesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * companies createManyAndReturn
   */
  export type companiesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the companies
     */
    select?: companiesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the companies
     */
    omit?: companiesOmit<ExtArgs> | null
    /**
     * The data used to create many companies.
     */
    data: companiesCreateManyInput | companiesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * companies update
   */
  export type companiesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the companies
     */
    select?: companiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the companies
     */
    omit?: companiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: companiesInclude<ExtArgs> | null
    /**
     * The data needed to update a companies.
     */
    data: XOR<companiesUpdateInput, companiesUncheckedUpdateInput>
    /**
     * Choose, which companies to update.
     */
    where: companiesWhereUniqueInput
  }

  /**
   * companies updateMany
   */
  export type companiesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update companies.
     */
    data: XOR<companiesUpdateManyMutationInput, companiesUncheckedUpdateManyInput>
    /**
     * Filter which companies to update
     */
    where?: companiesWhereInput
    /**
     * Limit how many companies to update.
     */
    limit?: number
  }

  /**
   * companies updateManyAndReturn
   */
  export type companiesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the companies
     */
    select?: companiesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the companies
     */
    omit?: companiesOmit<ExtArgs> | null
    /**
     * The data used to update companies.
     */
    data: XOR<companiesUpdateManyMutationInput, companiesUncheckedUpdateManyInput>
    /**
     * Filter which companies to update
     */
    where?: companiesWhereInput
    /**
     * Limit how many companies to update.
     */
    limit?: number
  }

  /**
   * companies upsert
   */
  export type companiesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the companies
     */
    select?: companiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the companies
     */
    omit?: companiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: companiesInclude<ExtArgs> | null
    /**
     * The filter to search for the companies to update in case it exists.
     */
    where: companiesWhereUniqueInput
    /**
     * In case the companies found by the `where` argument doesn't exist, create a new companies with this data.
     */
    create: XOR<companiesCreateInput, companiesUncheckedCreateInput>
    /**
     * In case the companies was found with the provided `where` argument, update it with this data.
     */
    update: XOR<companiesUpdateInput, companiesUncheckedUpdateInput>
  }

  /**
   * companies delete
   */
  export type companiesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the companies
     */
    select?: companiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the companies
     */
    omit?: companiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: companiesInclude<ExtArgs> | null
    /**
     * Filter which companies to delete.
     */
    where: companiesWhereUniqueInput
  }

  /**
   * companies deleteMany
   */
  export type companiesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which companies to delete
     */
    where?: companiesWhereInput
    /**
     * Limit how many companies to delete.
     */
    limit?: number
  }

  /**
   * companies.departments
   */
  export type companies$departmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the departments
     */
    select?: departmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the departments
     */
    omit?: departmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: departmentsInclude<ExtArgs> | null
    where?: departmentsWhereInput
    orderBy?: departmentsOrderByWithRelationInput | departmentsOrderByWithRelationInput[]
    cursor?: departmentsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DepartmentsScalarFieldEnum | DepartmentsScalarFieldEnum[]
  }

  /**
   * companies.drivers
   */
  export type companies$driversArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the drivers
     */
    select?: driversSelect<ExtArgs> | null
    /**
     * Omit specific fields from the drivers
     */
    omit?: driversOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: driversInclude<ExtArgs> | null
    where?: driversWhereInput
    orderBy?: driversOrderByWithRelationInput | driversOrderByWithRelationInput[]
    cursor?: driversWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DriversScalarFieldEnum | DriversScalarFieldEnum[]
  }

  /**
   * companies.reports
   */
  export type companies$reportsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reports
     */
    select?: reportsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reports
     */
    omit?: reportsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportsInclude<ExtArgs> | null
    where?: reportsWhereInput
    orderBy?: reportsOrderByWithRelationInput | reportsOrderByWithRelationInput[]
    cursor?: reportsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReportsScalarFieldEnum | ReportsScalarFieldEnum[]
  }

  /**
   * companies.service_providers
   */
  export type companies$service_providersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the service_providers
     */
    select?: service_providersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the service_providers
     */
    omit?: service_providersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: service_providersInclude<ExtArgs> | null
    where?: service_providersWhereInput
    orderBy?: service_providersOrderByWithRelationInput | service_providersOrderByWithRelationInput[]
    cursor?: service_providersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Service_providersScalarFieldEnum | Service_providersScalarFieldEnum[]
  }

  /**
   * companies.users
   */
  export type companies$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    where?: usersWhereInput
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    cursor?: usersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * companies.vehicles
   */
  export type companies$vehiclesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vehicles
     */
    select?: vehiclesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the vehicles
     */
    omit?: vehiclesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: vehiclesInclude<ExtArgs> | null
    where?: vehiclesWhereInput
    orderBy?: vehiclesOrderByWithRelationInput | vehiclesOrderByWithRelationInput[]
    cursor?: vehiclesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: VehiclesScalarFieldEnum | VehiclesScalarFieldEnum[]
  }

  /**
   * companies without action
   */
  export type companiesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the companies
     */
    select?: companiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the companies
     */
    omit?: companiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: companiesInclude<ExtArgs> | null
  }


  /**
   * Model cost_categories
   */

  export type AggregateCost_categories = {
    _count: Cost_categoriesCountAggregateOutputType | null
    _avg: Cost_categoriesAvgAggregateOutputType | null
    _sum: Cost_categoriesSumAggregateOutputType | null
    _min: Cost_categoriesMinAggregateOutputType | null
    _max: Cost_categoriesMaxAggregateOutputType | null
  }

  export type Cost_categoriesAvgAggregateOutputType = {
    category_id: number | null
  }

  export type Cost_categoriesSumAggregateOutputType = {
    category_id: number | null
  }

  export type Cost_categoriesMinAggregateOutputType = {
    category_id: number | null
    category_name: string | null
    description: string | null
    is_active: boolean | null
  }

  export type Cost_categoriesMaxAggregateOutputType = {
    category_id: number | null
    category_name: string | null
    description: string | null
    is_active: boolean | null
  }

  export type Cost_categoriesCountAggregateOutputType = {
    category_id: number
    category_name: number
    description: number
    is_active: number
    _all: number
  }


  export type Cost_categoriesAvgAggregateInputType = {
    category_id?: true
  }

  export type Cost_categoriesSumAggregateInputType = {
    category_id?: true
  }

  export type Cost_categoriesMinAggregateInputType = {
    category_id?: true
    category_name?: true
    description?: true
    is_active?: true
  }

  export type Cost_categoriesMaxAggregateInputType = {
    category_id?: true
    category_name?: true
    description?: true
    is_active?: true
  }

  export type Cost_categoriesCountAggregateInputType = {
    category_id?: true
    category_name?: true
    description?: true
    is_active?: true
    _all?: true
  }

  export type Cost_categoriesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which cost_categories to aggregate.
     */
    where?: cost_categoriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cost_categories to fetch.
     */
    orderBy?: cost_categoriesOrderByWithRelationInput | cost_categoriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: cost_categoriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cost_categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cost_categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned cost_categories
    **/
    _count?: true | Cost_categoriesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Cost_categoriesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Cost_categoriesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Cost_categoriesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Cost_categoriesMaxAggregateInputType
  }

  export type GetCost_categoriesAggregateType<T extends Cost_categoriesAggregateArgs> = {
        [P in keyof T & keyof AggregateCost_categories]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCost_categories[P]>
      : GetScalarType<T[P], AggregateCost_categories[P]>
  }




  export type cost_categoriesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: cost_categoriesWhereInput
    orderBy?: cost_categoriesOrderByWithAggregationInput | cost_categoriesOrderByWithAggregationInput[]
    by: Cost_categoriesScalarFieldEnum[] | Cost_categoriesScalarFieldEnum
    having?: cost_categoriesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Cost_categoriesCountAggregateInputType | true
    _avg?: Cost_categoriesAvgAggregateInputType
    _sum?: Cost_categoriesSumAggregateInputType
    _min?: Cost_categoriesMinAggregateInputType
    _max?: Cost_categoriesMaxAggregateInputType
  }

  export type Cost_categoriesGroupByOutputType = {
    category_id: number
    category_name: string
    description: string | null
    is_active: boolean | null
    _count: Cost_categoriesCountAggregateOutputType | null
    _avg: Cost_categoriesAvgAggregateOutputType | null
    _sum: Cost_categoriesSumAggregateOutputType | null
    _min: Cost_categoriesMinAggregateOutputType | null
    _max: Cost_categoriesMaxAggregateOutputType | null
  }

  type GetCost_categoriesGroupByPayload<T extends cost_categoriesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Cost_categoriesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Cost_categoriesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Cost_categoriesGroupByOutputType[P]>
            : GetScalarType<T[P], Cost_categoriesGroupByOutputType[P]>
        }
      >
    >


  export type cost_categoriesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    category_id?: boolean
    category_name?: boolean
    description?: boolean
    is_active?: boolean
    expenses?: boolean | cost_categories$expensesArgs<ExtArgs>
    _count?: boolean | Cost_categoriesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cost_categories"]>

  export type cost_categoriesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    category_id?: boolean
    category_name?: boolean
    description?: boolean
    is_active?: boolean
  }, ExtArgs["result"]["cost_categories"]>

  export type cost_categoriesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    category_id?: boolean
    category_name?: boolean
    description?: boolean
    is_active?: boolean
  }, ExtArgs["result"]["cost_categories"]>

  export type cost_categoriesSelectScalar = {
    category_id?: boolean
    category_name?: boolean
    description?: boolean
    is_active?: boolean
  }

  export type cost_categoriesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"category_id" | "category_name" | "description" | "is_active", ExtArgs["result"]["cost_categories"]>
  export type cost_categoriesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    expenses?: boolean | cost_categories$expensesArgs<ExtArgs>
    _count?: boolean | Cost_categoriesCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type cost_categoriesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type cost_categoriesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $cost_categoriesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "cost_categories"
    objects: {
      expenses: Prisma.$expensesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      category_id: number
      category_name: string
      description: string | null
      is_active: boolean | null
    }, ExtArgs["result"]["cost_categories"]>
    composites: {}
  }

  type cost_categoriesGetPayload<S extends boolean | null | undefined | cost_categoriesDefaultArgs> = $Result.GetResult<Prisma.$cost_categoriesPayload, S>

  type cost_categoriesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<cost_categoriesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Cost_categoriesCountAggregateInputType | true
    }

  export interface cost_categoriesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['cost_categories'], meta: { name: 'cost_categories' } }
    /**
     * Find zero or one Cost_categories that matches the filter.
     * @param {cost_categoriesFindUniqueArgs} args - Arguments to find a Cost_categories
     * @example
     * // Get one Cost_categories
     * const cost_categories = await prisma.cost_categories.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends cost_categoriesFindUniqueArgs>(args: SelectSubset<T, cost_categoriesFindUniqueArgs<ExtArgs>>): Prisma__cost_categoriesClient<$Result.GetResult<Prisma.$cost_categoriesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Cost_categories that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {cost_categoriesFindUniqueOrThrowArgs} args - Arguments to find a Cost_categories
     * @example
     * // Get one Cost_categories
     * const cost_categories = await prisma.cost_categories.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends cost_categoriesFindUniqueOrThrowArgs>(args: SelectSubset<T, cost_categoriesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__cost_categoriesClient<$Result.GetResult<Prisma.$cost_categoriesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Cost_categories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cost_categoriesFindFirstArgs} args - Arguments to find a Cost_categories
     * @example
     * // Get one Cost_categories
     * const cost_categories = await prisma.cost_categories.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends cost_categoriesFindFirstArgs>(args?: SelectSubset<T, cost_categoriesFindFirstArgs<ExtArgs>>): Prisma__cost_categoriesClient<$Result.GetResult<Prisma.$cost_categoriesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Cost_categories that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cost_categoriesFindFirstOrThrowArgs} args - Arguments to find a Cost_categories
     * @example
     * // Get one Cost_categories
     * const cost_categories = await prisma.cost_categories.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends cost_categoriesFindFirstOrThrowArgs>(args?: SelectSubset<T, cost_categoriesFindFirstOrThrowArgs<ExtArgs>>): Prisma__cost_categoriesClient<$Result.GetResult<Prisma.$cost_categoriesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Cost_categories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cost_categoriesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Cost_categories
     * const cost_categories = await prisma.cost_categories.findMany()
     * 
     * // Get first 10 Cost_categories
     * const cost_categories = await prisma.cost_categories.findMany({ take: 10 })
     * 
     * // Only select the `category_id`
     * const cost_categoriesWithCategory_idOnly = await prisma.cost_categories.findMany({ select: { category_id: true } })
     * 
     */
    findMany<T extends cost_categoriesFindManyArgs>(args?: SelectSubset<T, cost_categoriesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cost_categoriesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Cost_categories.
     * @param {cost_categoriesCreateArgs} args - Arguments to create a Cost_categories.
     * @example
     * // Create one Cost_categories
     * const Cost_categories = await prisma.cost_categories.create({
     *   data: {
     *     // ... data to create a Cost_categories
     *   }
     * })
     * 
     */
    create<T extends cost_categoriesCreateArgs>(args: SelectSubset<T, cost_categoriesCreateArgs<ExtArgs>>): Prisma__cost_categoriesClient<$Result.GetResult<Prisma.$cost_categoriesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Cost_categories.
     * @param {cost_categoriesCreateManyArgs} args - Arguments to create many Cost_categories.
     * @example
     * // Create many Cost_categories
     * const cost_categories = await prisma.cost_categories.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends cost_categoriesCreateManyArgs>(args?: SelectSubset<T, cost_categoriesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Cost_categories and returns the data saved in the database.
     * @param {cost_categoriesCreateManyAndReturnArgs} args - Arguments to create many Cost_categories.
     * @example
     * // Create many Cost_categories
     * const cost_categories = await prisma.cost_categories.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Cost_categories and only return the `category_id`
     * const cost_categoriesWithCategory_idOnly = await prisma.cost_categories.createManyAndReturn({
     *   select: { category_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends cost_categoriesCreateManyAndReturnArgs>(args?: SelectSubset<T, cost_categoriesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cost_categoriesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Cost_categories.
     * @param {cost_categoriesDeleteArgs} args - Arguments to delete one Cost_categories.
     * @example
     * // Delete one Cost_categories
     * const Cost_categories = await prisma.cost_categories.delete({
     *   where: {
     *     // ... filter to delete one Cost_categories
     *   }
     * })
     * 
     */
    delete<T extends cost_categoriesDeleteArgs>(args: SelectSubset<T, cost_categoriesDeleteArgs<ExtArgs>>): Prisma__cost_categoriesClient<$Result.GetResult<Prisma.$cost_categoriesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Cost_categories.
     * @param {cost_categoriesUpdateArgs} args - Arguments to update one Cost_categories.
     * @example
     * // Update one Cost_categories
     * const cost_categories = await prisma.cost_categories.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends cost_categoriesUpdateArgs>(args: SelectSubset<T, cost_categoriesUpdateArgs<ExtArgs>>): Prisma__cost_categoriesClient<$Result.GetResult<Prisma.$cost_categoriesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Cost_categories.
     * @param {cost_categoriesDeleteManyArgs} args - Arguments to filter Cost_categories to delete.
     * @example
     * // Delete a few Cost_categories
     * const { count } = await prisma.cost_categories.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends cost_categoriesDeleteManyArgs>(args?: SelectSubset<T, cost_categoriesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Cost_categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cost_categoriesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Cost_categories
     * const cost_categories = await prisma.cost_categories.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends cost_categoriesUpdateManyArgs>(args: SelectSubset<T, cost_categoriesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Cost_categories and returns the data updated in the database.
     * @param {cost_categoriesUpdateManyAndReturnArgs} args - Arguments to update many Cost_categories.
     * @example
     * // Update many Cost_categories
     * const cost_categories = await prisma.cost_categories.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Cost_categories and only return the `category_id`
     * const cost_categoriesWithCategory_idOnly = await prisma.cost_categories.updateManyAndReturn({
     *   select: { category_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends cost_categoriesUpdateManyAndReturnArgs>(args: SelectSubset<T, cost_categoriesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cost_categoriesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Cost_categories.
     * @param {cost_categoriesUpsertArgs} args - Arguments to update or create a Cost_categories.
     * @example
     * // Update or create a Cost_categories
     * const cost_categories = await prisma.cost_categories.upsert({
     *   create: {
     *     // ... data to create a Cost_categories
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Cost_categories we want to update
     *   }
     * })
     */
    upsert<T extends cost_categoriesUpsertArgs>(args: SelectSubset<T, cost_categoriesUpsertArgs<ExtArgs>>): Prisma__cost_categoriesClient<$Result.GetResult<Prisma.$cost_categoriesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Cost_categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cost_categoriesCountArgs} args - Arguments to filter Cost_categories to count.
     * @example
     * // Count the number of Cost_categories
     * const count = await prisma.cost_categories.count({
     *   where: {
     *     // ... the filter for the Cost_categories we want to count
     *   }
     * })
    **/
    count<T extends cost_categoriesCountArgs>(
      args?: Subset<T, cost_categoriesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Cost_categoriesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Cost_categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Cost_categoriesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Cost_categoriesAggregateArgs>(args: Subset<T, Cost_categoriesAggregateArgs>): Prisma.PrismaPromise<GetCost_categoriesAggregateType<T>>

    /**
     * Group by Cost_categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cost_categoriesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends cost_categoriesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: cost_categoriesGroupByArgs['orderBy'] }
        : { orderBy?: cost_categoriesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, cost_categoriesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCost_categoriesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the cost_categories model
   */
  readonly fields: cost_categoriesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for cost_categories.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__cost_categoriesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    expenses<T extends cost_categories$expensesArgs<ExtArgs> = {}>(args?: Subset<T, cost_categories$expensesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$expensesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the cost_categories model
   */
  interface cost_categoriesFieldRefs {
    readonly category_id: FieldRef<"cost_categories", 'Int'>
    readonly category_name: FieldRef<"cost_categories", 'String'>
    readonly description: FieldRef<"cost_categories", 'String'>
    readonly is_active: FieldRef<"cost_categories", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * cost_categories findUnique
   */
  export type cost_categoriesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cost_categories
     */
    select?: cost_categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cost_categories
     */
    omit?: cost_categoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cost_categoriesInclude<ExtArgs> | null
    /**
     * Filter, which cost_categories to fetch.
     */
    where: cost_categoriesWhereUniqueInput
  }

  /**
   * cost_categories findUniqueOrThrow
   */
  export type cost_categoriesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cost_categories
     */
    select?: cost_categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cost_categories
     */
    omit?: cost_categoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cost_categoriesInclude<ExtArgs> | null
    /**
     * Filter, which cost_categories to fetch.
     */
    where: cost_categoriesWhereUniqueInput
  }

  /**
   * cost_categories findFirst
   */
  export type cost_categoriesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cost_categories
     */
    select?: cost_categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cost_categories
     */
    omit?: cost_categoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cost_categoriesInclude<ExtArgs> | null
    /**
     * Filter, which cost_categories to fetch.
     */
    where?: cost_categoriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cost_categories to fetch.
     */
    orderBy?: cost_categoriesOrderByWithRelationInput | cost_categoriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for cost_categories.
     */
    cursor?: cost_categoriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cost_categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cost_categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of cost_categories.
     */
    distinct?: Cost_categoriesScalarFieldEnum | Cost_categoriesScalarFieldEnum[]
  }

  /**
   * cost_categories findFirstOrThrow
   */
  export type cost_categoriesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cost_categories
     */
    select?: cost_categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cost_categories
     */
    omit?: cost_categoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cost_categoriesInclude<ExtArgs> | null
    /**
     * Filter, which cost_categories to fetch.
     */
    where?: cost_categoriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cost_categories to fetch.
     */
    orderBy?: cost_categoriesOrderByWithRelationInput | cost_categoriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for cost_categories.
     */
    cursor?: cost_categoriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cost_categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cost_categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of cost_categories.
     */
    distinct?: Cost_categoriesScalarFieldEnum | Cost_categoriesScalarFieldEnum[]
  }

  /**
   * cost_categories findMany
   */
  export type cost_categoriesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cost_categories
     */
    select?: cost_categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cost_categories
     */
    omit?: cost_categoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cost_categoriesInclude<ExtArgs> | null
    /**
     * Filter, which cost_categories to fetch.
     */
    where?: cost_categoriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cost_categories to fetch.
     */
    orderBy?: cost_categoriesOrderByWithRelationInput | cost_categoriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing cost_categories.
     */
    cursor?: cost_categoriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cost_categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cost_categories.
     */
    skip?: number
    distinct?: Cost_categoriesScalarFieldEnum | Cost_categoriesScalarFieldEnum[]
  }

  /**
   * cost_categories create
   */
  export type cost_categoriesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cost_categories
     */
    select?: cost_categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cost_categories
     */
    omit?: cost_categoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cost_categoriesInclude<ExtArgs> | null
    /**
     * The data needed to create a cost_categories.
     */
    data: XOR<cost_categoriesCreateInput, cost_categoriesUncheckedCreateInput>
  }

  /**
   * cost_categories createMany
   */
  export type cost_categoriesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many cost_categories.
     */
    data: cost_categoriesCreateManyInput | cost_categoriesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * cost_categories createManyAndReturn
   */
  export type cost_categoriesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cost_categories
     */
    select?: cost_categoriesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the cost_categories
     */
    omit?: cost_categoriesOmit<ExtArgs> | null
    /**
     * The data used to create many cost_categories.
     */
    data: cost_categoriesCreateManyInput | cost_categoriesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * cost_categories update
   */
  export type cost_categoriesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cost_categories
     */
    select?: cost_categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cost_categories
     */
    omit?: cost_categoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cost_categoriesInclude<ExtArgs> | null
    /**
     * The data needed to update a cost_categories.
     */
    data: XOR<cost_categoriesUpdateInput, cost_categoriesUncheckedUpdateInput>
    /**
     * Choose, which cost_categories to update.
     */
    where: cost_categoriesWhereUniqueInput
  }

  /**
   * cost_categories updateMany
   */
  export type cost_categoriesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update cost_categories.
     */
    data: XOR<cost_categoriesUpdateManyMutationInput, cost_categoriesUncheckedUpdateManyInput>
    /**
     * Filter which cost_categories to update
     */
    where?: cost_categoriesWhereInput
    /**
     * Limit how many cost_categories to update.
     */
    limit?: number
  }

  /**
   * cost_categories updateManyAndReturn
   */
  export type cost_categoriesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cost_categories
     */
    select?: cost_categoriesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the cost_categories
     */
    omit?: cost_categoriesOmit<ExtArgs> | null
    /**
     * The data used to update cost_categories.
     */
    data: XOR<cost_categoriesUpdateManyMutationInput, cost_categoriesUncheckedUpdateManyInput>
    /**
     * Filter which cost_categories to update
     */
    where?: cost_categoriesWhereInput
    /**
     * Limit how many cost_categories to update.
     */
    limit?: number
  }

  /**
   * cost_categories upsert
   */
  export type cost_categoriesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cost_categories
     */
    select?: cost_categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cost_categories
     */
    omit?: cost_categoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cost_categoriesInclude<ExtArgs> | null
    /**
     * The filter to search for the cost_categories to update in case it exists.
     */
    where: cost_categoriesWhereUniqueInput
    /**
     * In case the cost_categories found by the `where` argument doesn't exist, create a new cost_categories with this data.
     */
    create: XOR<cost_categoriesCreateInput, cost_categoriesUncheckedCreateInput>
    /**
     * In case the cost_categories was found with the provided `where` argument, update it with this data.
     */
    update: XOR<cost_categoriesUpdateInput, cost_categoriesUncheckedUpdateInput>
  }

  /**
   * cost_categories delete
   */
  export type cost_categoriesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cost_categories
     */
    select?: cost_categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cost_categories
     */
    omit?: cost_categoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cost_categoriesInclude<ExtArgs> | null
    /**
     * Filter which cost_categories to delete.
     */
    where: cost_categoriesWhereUniqueInput
  }

  /**
   * cost_categories deleteMany
   */
  export type cost_categoriesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which cost_categories to delete
     */
    where?: cost_categoriesWhereInput
    /**
     * Limit how many cost_categories to delete.
     */
    limit?: number
  }

  /**
   * cost_categories.expenses
   */
  export type cost_categories$expensesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the expenses
     */
    select?: expensesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the expenses
     */
    omit?: expensesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: expensesInclude<ExtArgs> | null
    where?: expensesWhereInput
    orderBy?: expensesOrderByWithRelationInput | expensesOrderByWithRelationInput[]
    cursor?: expensesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ExpensesScalarFieldEnum | ExpensesScalarFieldEnum[]
  }

  /**
   * cost_categories without action
   */
  export type cost_categoriesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cost_categories
     */
    select?: cost_categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cost_categories
     */
    omit?: cost_categoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cost_categoriesInclude<ExtArgs> | null
  }


  /**
   * Model departments
   */

  export type AggregateDepartments = {
    _count: DepartmentsCountAggregateOutputType | null
    _avg: DepartmentsAvgAggregateOutputType | null
    _sum: DepartmentsSumAggregateOutputType | null
    _min: DepartmentsMinAggregateOutputType | null
    _max: DepartmentsMaxAggregateOutputType | null
  }

  export type DepartmentsAvgAggregateOutputType = {
    department_id: number | null
    company_id: number | null
    budget: Decimal | null
  }

  export type DepartmentsSumAggregateOutputType = {
    department_id: number | null
    company_id: number | null
    budget: Decimal | null
  }

  export type DepartmentsMinAggregateOutputType = {
    department_id: number | null
    company_id: number | null
    department_name: string | null
    manager_name: string | null
    budget: Decimal | null
  }

  export type DepartmentsMaxAggregateOutputType = {
    department_id: number | null
    company_id: number | null
    department_name: string | null
    manager_name: string | null
    budget: Decimal | null
  }

  export type DepartmentsCountAggregateOutputType = {
    department_id: number
    company_id: number
    department_name: number
    manager_name: number
    budget: number
    _all: number
  }


  export type DepartmentsAvgAggregateInputType = {
    department_id?: true
    company_id?: true
    budget?: true
  }

  export type DepartmentsSumAggregateInputType = {
    department_id?: true
    company_id?: true
    budget?: true
  }

  export type DepartmentsMinAggregateInputType = {
    department_id?: true
    company_id?: true
    department_name?: true
    manager_name?: true
    budget?: true
  }

  export type DepartmentsMaxAggregateInputType = {
    department_id?: true
    company_id?: true
    department_name?: true
    manager_name?: true
    budget?: true
  }

  export type DepartmentsCountAggregateInputType = {
    department_id?: true
    company_id?: true
    department_name?: true
    manager_name?: true
    budget?: true
    _all?: true
  }

  export type DepartmentsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which departments to aggregate.
     */
    where?: departmentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of departments to fetch.
     */
    orderBy?: departmentsOrderByWithRelationInput | departmentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: departmentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` departments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` departments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned departments
    **/
    _count?: true | DepartmentsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DepartmentsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DepartmentsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DepartmentsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DepartmentsMaxAggregateInputType
  }

  export type GetDepartmentsAggregateType<T extends DepartmentsAggregateArgs> = {
        [P in keyof T & keyof AggregateDepartments]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDepartments[P]>
      : GetScalarType<T[P], AggregateDepartments[P]>
  }




  export type departmentsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: departmentsWhereInput
    orderBy?: departmentsOrderByWithAggregationInput | departmentsOrderByWithAggregationInput[]
    by: DepartmentsScalarFieldEnum[] | DepartmentsScalarFieldEnum
    having?: departmentsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DepartmentsCountAggregateInputType | true
    _avg?: DepartmentsAvgAggregateInputType
    _sum?: DepartmentsSumAggregateInputType
    _min?: DepartmentsMinAggregateInputType
    _max?: DepartmentsMaxAggregateInputType
  }

  export type DepartmentsGroupByOutputType = {
    department_id: number
    company_id: number | null
    department_name: string
    manager_name: string | null
    budget: Decimal | null
    _count: DepartmentsCountAggregateOutputType | null
    _avg: DepartmentsAvgAggregateOutputType | null
    _sum: DepartmentsSumAggregateOutputType | null
    _min: DepartmentsMinAggregateOutputType | null
    _max: DepartmentsMaxAggregateOutputType | null
  }

  type GetDepartmentsGroupByPayload<T extends departmentsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DepartmentsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DepartmentsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DepartmentsGroupByOutputType[P]>
            : GetScalarType<T[P], DepartmentsGroupByOutputType[P]>
        }
      >
    >


  export type departmentsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    department_id?: boolean
    company_id?: boolean
    department_name?: boolean
    manager_name?: boolean
    budget?: boolean
    companies?: boolean | departments$companiesArgs<ExtArgs>
    vehicles?: boolean | departments$vehiclesArgs<ExtArgs>
    _count?: boolean | DepartmentsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["departments"]>

  export type departmentsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    department_id?: boolean
    company_id?: boolean
    department_name?: boolean
    manager_name?: boolean
    budget?: boolean
    companies?: boolean | departments$companiesArgs<ExtArgs>
  }, ExtArgs["result"]["departments"]>

  export type departmentsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    department_id?: boolean
    company_id?: boolean
    department_name?: boolean
    manager_name?: boolean
    budget?: boolean
    companies?: boolean | departments$companiesArgs<ExtArgs>
  }, ExtArgs["result"]["departments"]>

  export type departmentsSelectScalar = {
    department_id?: boolean
    company_id?: boolean
    department_name?: boolean
    manager_name?: boolean
    budget?: boolean
  }

  export type departmentsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"department_id" | "company_id" | "department_name" | "manager_name" | "budget", ExtArgs["result"]["departments"]>
  export type departmentsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    companies?: boolean | departments$companiesArgs<ExtArgs>
    vehicles?: boolean | departments$vehiclesArgs<ExtArgs>
    _count?: boolean | DepartmentsCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type departmentsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    companies?: boolean | departments$companiesArgs<ExtArgs>
  }
  export type departmentsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    companies?: boolean | departments$companiesArgs<ExtArgs>
  }

  export type $departmentsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "departments"
    objects: {
      companies: Prisma.$companiesPayload<ExtArgs> | null
      vehicles: Prisma.$vehiclesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      department_id: number
      company_id: number | null
      department_name: string
      manager_name: string | null
      budget: Prisma.Decimal | null
    }, ExtArgs["result"]["departments"]>
    composites: {}
  }

  type departmentsGetPayload<S extends boolean | null | undefined | departmentsDefaultArgs> = $Result.GetResult<Prisma.$departmentsPayload, S>

  type departmentsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<departmentsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DepartmentsCountAggregateInputType | true
    }

  export interface departmentsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['departments'], meta: { name: 'departments' } }
    /**
     * Find zero or one Departments that matches the filter.
     * @param {departmentsFindUniqueArgs} args - Arguments to find a Departments
     * @example
     * // Get one Departments
     * const departments = await prisma.departments.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends departmentsFindUniqueArgs>(args: SelectSubset<T, departmentsFindUniqueArgs<ExtArgs>>): Prisma__departmentsClient<$Result.GetResult<Prisma.$departmentsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Departments that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {departmentsFindUniqueOrThrowArgs} args - Arguments to find a Departments
     * @example
     * // Get one Departments
     * const departments = await prisma.departments.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends departmentsFindUniqueOrThrowArgs>(args: SelectSubset<T, departmentsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__departmentsClient<$Result.GetResult<Prisma.$departmentsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Departments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {departmentsFindFirstArgs} args - Arguments to find a Departments
     * @example
     * // Get one Departments
     * const departments = await prisma.departments.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends departmentsFindFirstArgs>(args?: SelectSubset<T, departmentsFindFirstArgs<ExtArgs>>): Prisma__departmentsClient<$Result.GetResult<Prisma.$departmentsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Departments that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {departmentsFindFirstOrThrowArgs} args - Arguments to find a Departments
     * @example
     * // Get one Departments
     * const departments = await prisma.departments.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends departmentsFindFirstOrThrowArgs>(args?: SelectSubset<T, departmentsFindFirstOrThrowArgs<ExtArgs>>): Prisma__departmentsClient<$Result.GetResult<Prisma.$departmentsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Departments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {departmentsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Departments
     * const departments = await prisma.departments.findMany()
     * 
     * // Get first 10 Departments
     * const departments = await prisma.departments.findMany({ take: 10 })
     * 
     * // Only select the `department_id`
     * const departmentsWithDepartment_idOnly = await prisma.departments.findMany({ select: { department_id: true } })
     * 
     */
    findMany<T extends departmentsFindManyArgs>(args?: SelectSubset<T, departmentsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$departmentsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Departments.
     * @param {departmentsCreateArgs} args - Arguments to create a Departments.
     * @example
     * // Create one Departments
     * const Departments = await prisma.departments.create({
     *   data: {
     *     // ... data to create a Departments
     *   }
     * })
     * 
     */
    create<T extends departmentsCreateArgs>(args: SelectSubset<T, departmentsCreateArgs<ExtArgs>>): Prisma__departmentsClient<$Result.GetResult<Prisma.$departmentsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Departments.
     * @param {departmentsCreateManyArgs} args - Arguments to create many Departments.
     * @example
     * // Create many Departments
     * const departments = await prisma.departments.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends departmentsCreateManyArgs>(args?: SelectSubset<T, departmentsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Departments and returns the data saved in the database.
     * @param {departmentsCreateManyAndReturnArgs} args - Arguments to create many Departments.
     * @example
     * // Create many Departments
     * const departments = await prisma.departments.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Departments and only return the `department_id`
     * const departmentsWithDepartment_idOnly = await prisma.departments.createManyAndReturn({
     *   select: { department_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends departmentsCreateManyAndReturnArgs>(args?: SelectSubset<T, departmentsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$departmentsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Departments.
     * @param {departmentsDeleteArgs} args - Arguments to delete one Departments.
     * @example
     * // Delete one Departments
     * const Departments = await prisma.departments.delete({
     *   where: {
     *     // ... filter to delete one Departments
     *   }
     * })
     * 
     */
    delete<T extends departmentsDeleteArgs>(args: SelectSubset<T, departmentsDeleteArgs<ExtArgs>>): Prisma__departmentsClient<$Result.GetResult<Prisma.$departmentsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Departments.
     * @param {departmentsUpdateArgs} args - Arguments to update one Departments.
     * @example
     * // Update one Departments
     * const departments = await prisma.departments.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends departmentsUpdateArgs>(args: SelectSubset<T, departmentsUpdateArgs<ExtArgs>>): Prisma__departmentsClient<$Result.GetResult<Prisma.$departmentsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Departments.
     * @param {departmentsDeleteManyArgs} args - Arguments to filter Departments to delete.
     * @example
     * // Delete a few Departments
     * const { count } = await prisma.departments.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends departmentsDeleteManyArgs>(args?: SelectSubset<T, departmentsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Departments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {departmentsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Departments
     * const departments = await prisma.departments.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends departmentsUpdateManyArgs>(args: SelectSubset<T, departmentsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Departments and returns the data updated in the database.
     * @param {departmentsUpdateManyAndReturnArgs} args - Arguments to update many Departments.
     * @example
     * // Update many Departments
     * const departments = await prisma.departments.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Departments and only return the `department_id`
     * const departmentsWithDepartment_idOnly = await prisma.departments.updateManyAndReturn({
     *   select: { department_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends departmentsUpdateManyAndReturnArgs>(args: SelectSubset<T, departmentsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$departmentsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Departments.
     * @param {departmentsUpsertArgs} args - Arguments to update or create a Departments.
     * @example
     * // Update or create a Departments
     * const departments = await prisma.departments.upsert({
     *   create: {
     *     // ... data to create a Departments
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Departments we want to update
     *   }
     * })
     */
    upsert<T extends departmentsUpsertArgs>(args: SelectSubset<T, departmentsUpsertArgs<ExtArgs>>): Prisma__departmentsClient<$Result.GetResult<Prisma.$departmentsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Departments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {departmentsCountArgs} args - Arguments to filter Departments to count.
     * @example
     * // Count the number of Departments
     * const count = await prisma.departments.count({
     *   where: {
     *     // ... the filter for the Departments we want to count
     *   }
     * })
    **/
    count<T extends departmentsCountArgs>(
      args?: Subset<T, departmentsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DepartmentsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Departments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DepartmentsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DepartmentsAggregateArgs>(args: Subset<T, DepartmentsAggregateArgs>): Prisma.PrismaPromise<GetDepartmentsAggregateType<T>>

    /**
     * Group by Departments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {departmentsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends departmentsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: departmentsGroupByArgs['orderBy'] }
        : { orderBy?: departmentsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, departmentsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDepartmentsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the departments model
   */
  readonly fields: departmentsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for departments.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__departmentsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    companies<T extends departments$companiesArgs<ExtArgs> = {}>(args?: Subset<T, departments$companiesArgs<ExtArgs>>): Prisma__companiesClient<$Result.GetResult<Prisma.$companiesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    vehicles<T extends departments$vehiclesArgs<ExtArgs> = {}>(args?: Subset<T, departments$vehiclesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$vehiclesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the departments model
   */
  interface departmentsFieldRefs {
    readonly department_id: FieldRef<"departments", 'Int'>
    readonly company_id: FieldRef<"departments", 'Int'>
    readonly department_name: FieldRef<"departments", 'String'>
    readonly manager_name: FieldRef<"departments", 'String'>
    readonly budget: FieldRef<"departments", 'Decimal'>
  }
    

  // Custom InputTypes
  /**
   * departments findUnique
   */
  export type departmentsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the departments
     */
    select?: departmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the departments
     */
    omit?: departmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: departmentsInclude<ExtArgs> | null
    /**
     * Filter, which departments to fetch.
     */
    where: departmentsWhereUniqueInput
  }

  /**
   * departments findUniqueOrThrow
   */
  export type departmentsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the departments
     */
    select?: departmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the departments
     */
    omit?: departmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: departmentsInclude<ExtArgs> | null
    /**
     * Filter, which departments to fetch.
     */
    where: departmentsWhereUniqueInput
  }

  /**
   * departments findFirst
   */
  export type departmentsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the departments
     */
    select?: departmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the departments
     */
    omit?: departmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: departmentsInclude<ExtArgs> | null
    /**
     * Filter, which departments to fetch.
     */
    where?: departmentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of departments to fetch.
     */
    orderBy?: departmentsOrderByWithRelationInput | departmentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for departments.
     */
    cursor?: departmentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` departments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` departments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of departments.
     */
    distinct?: DepartmentsScalarFieldEnum | DepartmentsScalarFieldEnum[]
  }

  /**
   * departments findFirstOrThrow
   */
  export type departmentsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the departments
     */
    select?: departmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the departments
     */
    omit?: departmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: departmentsInclude<ExtArgs> | null
    /**
     * Filter, which departments to fetch.
     */
    where?: departmentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of departments to fetch.
     */
    orderBy?: departmentsOrderByWithRelationInput | departmentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for departments.
     */
    cursor?: departmentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` departments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` departments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of departments.
     */
    distinct?: DepartmentsScalarFieldEnum | DepartmentsScalarFieldEnum[]
  }

  /**
   * departments findMany
   */
  export type departmentsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the departments
     */
    select?: departmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the departments
     */
    omit?: departmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: departmentsInclude<ExtArgs> | null
    /**
     * Filter, which departments to fetch.
     */
    where?: departmentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of departments to fetch.
     */
    orderBy?: departmentsOrderByWithRelationInput | departmentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing departments.
     */
    cursor?: departmentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` departments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` departments.
     */
    skip?: number
    distinct?: DepartmentsScalarFieldEnum | DepartmentsScalarFieldEnum[]
  }

  /**
   * departments create
   */
  export type departmentsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the departments
     */
    select?: departmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the departments
     */
    omit?: departmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: departmentsInclude<ExtArgs> | null
    /**
     * The data needed to create a departments.
     */
    data: XOR<departmentsCreateInput, departmentsUncheckedCreateInput>
  }

  /**
   * departments createMany
   */
  export type departmentsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many departments.
     */
    data: departmentsCreateManyInput | departmentsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * departments createManyAndReturn
   */
  export type departmentsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the departments
     */
    select?: departmentsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the departments
     */
    omit?: departmentsOmit<ExtArgs> | null
    /**
     * The data used to create many departments.
     */
    data: departmentsCreateManyInput | departmentsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: departmentsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * departments update
   */
  export type departmentsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the departments
     */
    select?: departmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the departments
     */
    omit?: departmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: departmentsInclude<ExtArgs> | null
    /**
     * The data needed to update a departments.
     */
    data: XOR<departmentsUpdateInput, departmentsUncheckedUpdateInput>
    /**
     * Choose, which departments to update.
     */
    where: departmentsWhereUniqueInput
  }

  /**
   * departments updateMany
   */
  export type departmentsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update departments.
     */
    data: XOR<departmentsUpdateManyMutationInput, departmentsUncheckedUpdateManyInput>
    /**
     * Filter which departments to update
     */
    where?: departmentsWhereInput
    /**
     * Limit how many departments to update.
     */
    limit?: number
  }

  /**
   * departments updateManyAndReturn
   */
  export type departmentsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the departments
     */
    select?: departmentsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the departments
     */
    omit?: departmentsOmit<ExtArgs> | null
    /**
     * The data used to update departments.
     */
    data: XOR<departmentsUpdateManyMutationInput, departmentsUncheckedUpdateManyInput>
    /**
     * Filter which departments to update
     */
    where?: departmentsWhereInput
    /**
     * Limit how many departments to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: departmentsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * departments upsert
   */
  export type departmentsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the departments
     */
    select?: departmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the departments
     */
    omit?: departmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: departmentsInclude<ExtArgs> | null
    /**
     * The filter to search for the departments to update in case it exists.
     */
    where: departmentsWhereUniqueInput
    /**
     * In case the departments found by the `where` argument doesn't exist, create a new departments with this data.
     */
    create: XOR<departmentsCreateInput, departmentsUncheckedCreateInput>
    /**
     * In case the departments was found with the provided `where` argument, update it with this data.
     */
    update: XOR<departmentsUpdateInput, departmentsUncheckedUpdateInput>
  }

  /**
   * departments delete
   */
  export type departmentsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the departments
     */
    select?: departmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the departments
     */
    omit?: departmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: departmentsInclude<ExtArgs> | null
    /**
     * Filter which departments to delete.
     */
    where: departmentsWhereUniqueInput
  }

  /**
   * departments deleteMany
   */
  export type departmentsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which departments to delete
     */
    where?: departmentsWhereInput
    /**
     * Limit how many departments to delete.
     */
    limit?: number
  }

  /**
   * departments.companies
   */
  export type departments$companiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the companies
     */
    select?: companiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the companies
     */
    omit?: companiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: companiesInclude<ExtArgs> | null
    where?: companiesWhereInput
  }

  /**
   * departments.vehicles
   */
  export type departments$vehiclesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vehicles
     */
    select?: vehiclesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the vehicles
     */
    omit?: vehiclesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: vehiclesInclude<ExtArgs> | null
    where?: vehiclesWhereInput
    orderBy?: vehiclesOrderByWithRelationInput | vehiclesOrderByWithRelationInput[]
    cursor?: vehiclesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: VehiclesScalarFieldEnum | VehiclesScalarFieldEnum[]
  }

  /**
   * departments without action
   */
  export type departmentsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the departments
     */
    select?: departmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the departments
     */
    omit?: departmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: departmentsInclude<ExtArgs> | null
  }


  /**
   * Model driver_certifications
   */

  export type AggregateDriver_certifications = {
    _count: Driver_certificationsCountAggregateOutputType | null
    _avg: Driver_certificationsAvgAggregateOutputType | null
    _sum: Driver_certificationsSumAggregateOutputType | null
    _min: Driver_certificationsMinAggregateOutputType | null
    _max: Driver_certificationsMaxAggregateOutputType | null
  }

  export type Driver_certificationsAvgAggregateOutputType = {
    certification_id: number | null
    driver_id: number | null
  }

  export type Driver_certificationsSumAggregateOutputType = {
    certification_id: number | null
    driver_id: number | null
  }

  export type Driver_certificationsMinAggregateOutputType = {
    certification_id: number | null
    driver_id: number | null
    certification_name: string | null
    issuing_authority: string | null
    issue_date: Date | null
    expiry_date: Date | null
    certification_number: string | null
    is_active: boolean | null
  }

  export type Driver_certificationsMaxAggregateOutputType = {
    certification_id: number | null
    driver_id: number | null
    certification_name: string | null
    issuing_authority: string | null
    issue_date: Date | null
    expiry_date: Date | null
    certification_number: string | null
    is_active: boolean | null
  }

  export type Driver_certificationsCountAggregateOutputType = {
    certification_id: number
    driver_id: number
    certification_name: number
    issuing_authority: number
    issue_date: number
    expiry_date: number
    certification_number: number
    is_active: number
    _all: number
  }


  export type Driver_certificationsAvgAggregateInputType = {
    certification_id?: true
    driver_id?: true
  }

  export type Driver_certificationsSumAggregateInputType = {
    certification_id?: true
    driver_id?: true
  }

  export type Driver_certificationsMinAggregateInputType = {
    certification_id?: true
    driver_id?: true
    certification_name?: true
    issuing_authority?: true
    issue_date?: true
    expiry_date?: true
    certification_number?: true
    is_active?: true
  }

  export type Driver_certificationsMaxAggregateInputType = {
    certification_id?: true
    driver_id?: true
    certification_name?: true
    issuing_authority?: true
    issue_date?: true
    expiry_date?: true
    certification_number?: true
    is_active?: true
  }

  export type Driver_certificationsCountAggregateInputType = {
    certification_id?: true
    driver_id?: true
    certification_name?: true
    issuing_authority?: true
    issue_date?: true
    expiry_date?: true
    certification_number?: true
    is_active?: true
    _all?: true
  }

  export type Driver_certificationsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which driver_certifications to aggregate.
     */
    where?: driver_certificationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of driver_certifications to fetch.
     */
    orderBy?: driver_certificationsOrderByWithRelationInput | driver_certificationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: driver_certificationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` driver_certifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` driver_certifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned driver_certifications
    **/
    _count?: true | Driver_certificationsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Driver_certificationsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Driver_certificationsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Driver_certificationsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Driver_certificationsMaxAggregateInputType
  }

  export type GetDriver_certificationsAggregateType<T extends Driver_certificationsAggregateArgs> = {
        [P in keyof T & keyof AggregateDriver_certifications]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDriver_certifications[P]>
      : GetScalarType<T[P], AggregateDriver_certifications[P]>
  }




  export type driver_certificationsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: driver_certificationsWhereInput
    orderBy?: driver_certificationsOrderByWithAggregationInput | driver_certificationsOrderByWithAggregationInput[]
    by: Driver_certificationsScalarFieldEnum[] | Driver_certificationsScalarFieldEnum
    having?: driver_certificationsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Driver_certificationsCountAggregateInputType | true
    _avg?: Driver_certificationsAvgAggregateInputType
    _sum?: Driver_certificationsSumAggregateInputType
    _min?: Driver_certificationsMinAggregateInputType
    _max?: Driver_certificationsMaxAggregateInputType
  }

  export type Driver_certificationsGroupByOutputType = {
    certification_id: number
    driver_id: number | null
    certification_name: string | null
    issuing_authority: string | null
    issue_date: Date | null
    expiry_date: Date | null
    certification_number: string | null
    is_active: boolean | null
    _count: Driver_certificationsCountAggregateOutputType | null
    _avg: Driver_certificationsAvgAggregateOutputType | null
    _sum: Driver_certificationsSumAggregateOutputType | null
    _min: Driver_certificationsMinAggregateOutputType | null
    _max: Driver_certificationsMaxAggregateOutputType | null
  }

  type GetDriver_certificationsGroupByPayload<T extends driver_certificationsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Driver_certificationsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Driver_certificationsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Driver_certificationsGroupByOutputType[P]>
            : GetScalarType<T[P], Driver_certificationsGroupByOutputType[P]>
        }
      >
    >


  export type driver_certificationsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    certification_id?: boolean
    driver_id?: boolean
    certification_name?: boolean
    issuing_authority?: boolean
    issue_date?: boolean
    expiry_date?: boolean
    certification_number?: boolean
    is_active?: boolean
    drivers?: boolean | driver_certifications$driversArgs<ExtArgs>
  }, ExtArgs["result"]["driver_certifications"]>

  export type driver_certificationsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    certification_id?: boolean
    driver_id?: boolean
    certification_name?: boolean
    issuing_authority?: boolean
    issue_date?: boolean
    expiry_date?: boolean
    certification_number?: boolean
    is_active?: boolean
    drivers?: boolean | driver_certifications$driversArgs<ExtArgs>
  }, ExtArgs["result"]["driver_certifications"]>

  export type driver_certificationsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    certification_id?: boolean
    driver_id?: boolean
    certification_name?: boolean
    issuing_authority?: boolean
    issue_date?: boolean
    expiry_date?: boolean
    certification_number?: boolean
    is_active?: boolean
    drivers?: boolean | driver_certifications$driversArgs<ExtArgs>
  }, ExtArgs["result"]["driver_certifications"]>

  export type driver_certificationsSelectScalar = {
    certification_id?: boolean
    driver_id?: boolean
    certification_name?: boolean
    issuing_authority?: boolean
    issue_date?: boolean
    expiry_date?: boolean
    certification_number?: boolean
    is_active?: boolean
  }

  export type driver_certificationsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"certification_id" | "driver_id" | "certification_name" | "issuing_authority" | "issue_date" | "expiry_date" | "certification_number" | "is_active", ExtArgs["result"]["driver_certifications"]>
  export type driver_certificationsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    drivers?: boolean | driver_certifications$driversArgs<ExtArgs>
  }
  export type driver_certificationsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    drivers?: boolean | driver_certifications$driversArgs<ExtArgs>
  }
  export type driver_certificationsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    drivers?: boolean | driver_certifications$driversArgs<ExtArgs>
  }

  export type $driver_certificationsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "driver_certifications"
    objects: {
      drivers: Prisma.$driversPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      certification_id: number
      driver_id: number | null
      certification_name: string | null
      issuing_authority: string | null
      issue_date: Date | null
      expiry_date: Date | null
      certification_number: string | null
      is_active: boolean | null
    }, ExtArgs["result"]["driver_certifications"]>
    composites: {}
  }

  type driver_certificationsGetPayload<S extends boolean | null | undefined | driver_certificationsDefaultArgs> = $Result.GetResult<Prisma.$driver_certificationsPayload, S>

  type driver_certificationsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<driver_certificationsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Driver_certificationsCountAggregateInputType | true
    }

  export interface driver_certificationsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['driver_certifications'], meta: { name: 'driver_certifications' } }
    /**
     * Find zero or one Driver_certifications that matches the filter.
     * @param {driver_certificationsFindUniqueArgs} args - Arguments to find a Driver_certifications
     * @example
     * // Get one Driver_certifications
     * const driver_certifications = await prisma.driver_certifications.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends driver_certificationsFindUniqueArgs>(args: SelectSubset<T, driver_certificationsFindUniqueArgs<ExtArgs>>): Prisma__driver_certificationsClient<$Result.GetResult<Prisma.$driver_certificationsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Driver_certifications that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {driver_certificationsFindUniqueOrThrowArgs} args - Arguments to find a Driver_certifications
     * @example
     * // Get one Driver_certifications
     * const driver_certifications = await prisma.driver_certifications.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends driver_certificationsFindUniqueOrThrowArgs>(args: SelectSubset<T, driver_certificationsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__driver_certificationsClient<$Result.GetResult<Prisma.$driver_certificationsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Driver_certifications that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {driver_certificationsFindFirstArgs} args - Arguments to find a Driver_certifications
     * @example
     * // Get one Driver_certifications
     * const driver_certifications = await prisma.driver_certifications.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends driver_certificationsFindFirstArgs>(args?: SelectSubset<T, driver_certificationsFindFirstArgs<ExtArgs>>): Prisma__driver_certificationsClient<$Result.GetResult<Prisma.$driver_certificationsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Driver_certifications that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {driver_certificationsFindFirstOrThrowArgs} args - Arguments to find a Driver_certifications
     * @example
     * // Get one Driver_certifications
     * const driver_certifications = await prisma.driver_certifications.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends driver_certificationsFindFirstOrThrowArgs>(args?: SelectSubset<T, driver_certificationsFindFirstOrThrowArgs<ExtArgs>>): Prisma__driver_certificationsClient<$Result.GetResult<Prisma.$driver_certificationsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Driver_certifications that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {driver_certificationsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Driver_certifications
     * const driver_certifications = await prisma.driver_certifications.findMany()
     * 
     * // Get first 10 Driver_certifications
     * const driver_certifications = await prisma.driver_certifications.findMany({ take: 10 })
     * 
     * // Only select the `certification_id`
     * const driver_certificationsWithCertification_idOnly = await prisma.driver_certifications.findMany({ select: { certification_id: true } })
     * 
     */
    findMany<T extends driver_certificationsFindManyArgs>(args?: SelectSubset<T, driver_certificationsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$driver_certificationsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Driver_certifications.
     * @param {driver_certificationsCreateArgs} args - Arguments to create a Driver_certifications.
     * @example
     * // Create one Driver_certifications
     * const Driver_certifications = await prisma.driver_certifications.create({
     *   data: {
     *     // ... data to create a Driver_certifications
     *   }
     * })
     * 
     */
    create<T extends driver_certificationsCreateArgs>(args: SelectSubset<T, driver_certificationsCreateArgs<ExtArgs>>): Prisma__driver_certificationsClient<$Result.GetResult<Prisma.$driver_certificationsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Driver_certifications.
     * @param {driver_certificationsCreateManyArgs} args - Arguments to create many Driver_certifications.
     * @example
     * // Create many Driver_certifications
     * const driver_certifications = await prisma.driver_certifications.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends driver_certificationsCreateManyArgs>(args?: SelectSubset<T, driver_certificationsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Driver_certifications and returns the data saved in the database.
     * @param {driver_certificationsCreateManyAndReturnArgs} args - Arguments to create many Driver_certifications.
     * @example
     * // Create many Driver_certifications
     * const driver_certifications = await prisma.driver_certifications.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Driver_certifications and only return the `certification_id`
     * const driver_certificationsWithCertification_idOnly = await prisma.driver_certifications.createManyAndReturn({
     *   select: { certification_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends driver_certificationsCreateManyAndReturnArgs>(args?: SelectSubset<T, driver_certificationsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$driver_certificationsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Driver_certifications.
     * @param {driver_certificationsDeleteArgs} args - Arguments to delete one Driver_certifications.
     * @example
     * // Delete one Driver_certifications
     * const Driver_certifications = await prisma.driver_certifications.delete({
     *   where: {
     *     // ... filter to delete one Driver_certifications
     *   }
     * })
     * 
     */
    delete<T extends driver_certificationsDeleteArgs>(args: SelectSubset<T, driver_certificationsDeleteArgs<ExtArgs>>): Prisma__driver_certificationsClient<$Result.GetResult<Prisma.$driver_certificationsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Driver_certifications.
     * @param {driver_certificationsUpdateArgs} args - Arguments to update one Driver_certifications.
     * @example
     * // Update one Driver_certifications
     * const driver_certifications = await prisma.driver_certifications.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends driver_certificationsUpdateArgs>(args: SelectSubset<T, driver_certificationsUpdateArgs<ExtArgs>>): Prisma__driver_certificationsClient<$Result.GetResult<Prisma.$driver_certificationsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Driver_certifications.
     * @param {driver_certificationsDeleteManyArgs} args - Arguments to filter Driver_certifications to delete.
     * @example
     * // Delete a few Driver_certifications
     * const { count } = await prisma.driver_certifications.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends driver_certificationsDeleteManyArgs>(args?: SelectSubset<T, driver_certificationsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Driver_certifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {driver_certificationsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Driver_certifications
     * const driver_certifications = await prisma.driver_certifications.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends driver_certificationsUpdateManyArgs>(args: SelectSubset<T, driver_certificationsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Driver_certifications and returns the data updated in the database.
     * @param {driver_certificationsUpdateManyAndReturnArgs} args - Arguments to update many Driver_certifications.
     * @example
     * // Update many Driver_certifications
     * const driver_certifications = await prisma.driver_certifications.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Driver_certifications and only return the `certification_id`
     * const driver_certificationsWithCertification_idOnly = await prisma.driver_certifications.updateManyAndReturn({
     *   select: { certification_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends driver_certificationsUpdateManyAndReturnArgs>(args: SelectSubset<T, driver_certificationsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$driver_certificationsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Driver_certifications.
     * @param {driver_certificationsUpsertArgs} args - Arguments to update or create a Driver_certifications.
     * @example
     * // Update or create a Driver_certifications
     * const driver_certifications = await prisma.driver_certifications.upsert({
     *   create: {
     *     // ... data to create a Driver_certifications
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Driver_certifications we want to update
     *   }
     * })
     */
    upsert<T extends driver_certificationsUpsertArgs>(args: SelectSubset<T, driver_certificationsUpsertArgs<ExtArgs>>): Prisma__driver_certificationsClient<$Result.GetResult<Prisma.$driver_certificationsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Driver_certifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {driver_certificationsCountArgs} args - Arguments to filter Driver_certifications to count.
     * @example
     * // Count the number of Driver_certifications
     * const count = await prisma.driver_certifications.count({
     *   where: {
     *     // ... the filter for the Driver_certifications we want to count
     *   }
     * })
    **/
    count<T extends driver_certificationsCountArgs>(
      args?: Subset<T, driver_certificationsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Driver_certificationsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Driver_certifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Driver_certificationsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Driver_certificationsAggregateArgs>(args: Subset<T, Driver_certificationsAggregateArgs>): Prisma.PrismaPromise<GetDriver_certificationsAggregateType<T>>

    /**
     * Group by Driver_certifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {driver_certificationsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends driver_certificationsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: driver_certificationsGroupByArgs['orderBy'] }
        : { orderBy?: driver_certificationsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, driver_certificationsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDriver_certificationsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the driver_certifications model
   */
  readonly fields: driver_certificationsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for driver_certifications.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__driver_certificationsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    drivers<T extends driver_certifications$driversArgs<ExtArgs> = {}>(args?: Subset<T, driver_certifications$driversArgs<ExtArgs>>): Prisma__driversClient<$Result.GetResult<Prisma.$driversPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the driver_certifications model
   */
  interface driver_certificationsFieldRefs {
    readonly certification_id: FieldRef<"driver_certifications", 'Int'>
    readonly driver_id: FieldRef<"driver_certifications", 'Int'>
    readonly certification_name: FieldRef<"driver_certifications", 'String'>
    readonly issuing_authority: FieldRef<"driver_certifications", 'String'>
    readonly issue_date: FieldRef<"driver_certifications", 'DateTime'>
    readonly expiry_date: FieldRef<"driver_certifications", 'DateTime'>
    readonly certification_number: FieldRef<"driver_certifications", 'String'>
    readonly is_active: FieldRef<"driver_certifications", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * driver_certifications findUnique
   */
  export type driver_certificationsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the driver_certifications
     */
    select?: driver_certificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the driver_certifications
     */
    omit?: driver_certificationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: driver_certificationsInclude<ExtArgs> | null
    /**
     * Filter, which driver_certifications to fetch.
     */
    where: driver_certificationsWhereUniqueInput
  }

  /**
   * driver_certifications findUniqueOrThrow
   */
  export type driver_certificationsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the driver_certifications
     */
    select?: driver_certificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the driver_certifications
     */
    omit?: driver_certificationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: driver_certificationsInclude<ExtArgs> | null
    /**
     * Filter, which driver_certifications to fetch.
     */
    where: driver_certificationsWhereUniqueInput
  }

  /**
   * driver_certifications findFirst
   */
  export type driver_certificationsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the driver_certifications
     */
    select?: driver_certificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the driver_certifications
     */
    omit?: driver_certificationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: driver_certificationsInclude<ExtArgs> | null
    /**
     * Filter, which driver_certifications to fetch.
     */
    where?: driver_certificationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of driver_certifications to fetch.
     */
    orderBy?: driver_certificationsOrderByWithRelationInput | driver_certificationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for driver_certifications.
     */
    cursor?: driver_certificationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` driver_certifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` driver_certifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of driver_certifications.
     */
    distinct?: Driver_certificationsScalarFieldEnum | Driver_certificationsScalarFieldEnum[]
  }

  /**
   * driver_certifications findFirstOrThrow
   */
  export type driver_certificationsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the driver_certifications
     */
    select?: driver_certificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the driver_certifications
     */
    omit?: driver_certificationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: driver_certificationsInclude<ExtArgs> | null
    /**
     * Filter, which driver_certifications to fetch.
     */
    where?: driver_certificationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of driver_certifications to fetch.
     */
    orderBy?: driver_certificationsOrderByWithRelationInput | driver_certificationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for driver_certifications.
     */
    cursor?: driver_certificationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` driver_certifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` driver_certifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of driver_certifications.
     */
    distinct?: Driver_certificationsScalarFieldEnum | Driver_certificationsScalarFieldEnum[]
  }

  /**
   * driver_certifications findMany
   */
  export type driver_certificationsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the driver_certifications
     */
    select?: driver_certificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the driver_certifications
     */
    omit?: driver_certificationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: driver_certificationsInclude<ExtArgs> | null
    /**
     * Filter, which driver_certifications to fetch.
     */
    where?: driver_certificationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of driver_certifications to fetch.
     */
    orderBy?: driver_certificationsOrderByWithRelationInput | driver_certificationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing driver_certifications.
     */
    cursor?: driver_certificationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` driver_certifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` driver_certifications.
     */
    skip?: number
    distinct?: Driver_certificationsScalarFieldEnum | Driver_certificationsScalarFieldEnum[]
  }

  /**
   * driver_certifications create
   */
  export type driver_certificationsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the driver_certifications
     */
    select?: driver_certificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the driver_certifications
     */
    omit?: driver_certificationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: driver_certificationsInclude<ExtArgs> | null
    /**
     * The data needed to create a driver_certifications.
     */
    data?: XOR<driver_certificationsCreateInput, driver_certificationsUncheckedCreateInput>
  }

  /**
   * driver_certifications createMany
   */
  export type driver_certificationsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many driver_certifications.
     */
    data: driver_certificationsCreateManyInput | driver_certificationsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * driver_certifications createManyAndReturn
   */
  export type driver_certificationsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the driver_certifications
     */
    select?: driver_certificationsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the driver_certifications
     */
    omit?: driver_certificationsOmit<ExtArgs> | null
    /**
     * The data used to create many driver_certifications.
     */
    data: driver_certificationsCreateManyInput | driver_certificationsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: driver_certificationsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * driver_certifications update
   */
  export type driver_certificationsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the driver_certifications
     */
    select?: driver_certificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the driver_certifications
     */
    omit?: driver_certificationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: driver_certificationsInclude<ExtArgs> | null
    /**
     * The data needed to update a driver_certifications.
     */
    data: XOR<driver_certificationsUpdateInput, driver_certificationsUncheckedUpdateInput>
    /**
     * Choose, which driver_certifications to update.
     */
    where: driver_certificationsWhereUniqueInput
  }

  /**
   * driver_certifications updateMany
   */
  export type driver_certificationsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update driver_certifications.
     */
    data: XOR<driver_certificationsUpdateManyMutationInput, driver_certificationsUncheckedUpdateManyInput>
    /**
     * Filter which driver_certifications to update
     */
    where?: driver_certificationsWhereInput
    /**
     * Limit how many driver_certifications to update.
     */
    limit?: number
  }

  /**
   * driver_certifications updateManyAndReturn
   */
  export type driver_certificationsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the driver_certifications
     */
    select?: driver_certificationsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the driver_certifications
     */
    omit?: driver_certificationsOmit<ExtArgs> | null
    /**
     * The data used to update driver_certifications.
     */
    data: XOR<driver_certificationsUpdateManyMutationInput, driver_certificationsUncheckedUpdateManyInput>
    /**
     * Filter which driver_certifications to update
     */
    where?: driver_certificationsWhereInput
    /**
     * Limit how many driver_certifications to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: driver_certificationsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * driver_certifications upsert
   */
  export type driver_certificationsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the driver_certifications
     */
    select?: driver_certificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the driver_certifications
     */
    omit?: driver_certificationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: driver_certificationsInclude<ExtArgs> | null
    /**
     * The filter to search for the driver_certifications to update in case it exists.
     */
    where: driver_certificationsWhereUniqueInput
    /**
     * In case the driver_certifications found by the `where` argument doesn't exist, create a new driver_certifications with this data.
     */
    create: XOR<driver_certificationsCreateInput, driver_certificationsUncheckedCreateInput>
    /**
     * In case the driver_certifications was found with the provided `where` argument, update it with this data.
     */
    update: XOR<driver_certificationsUpdateInput, driver_certificationsUncheckedUpdateInput>
  }

  /**
   * driver_certifications delete
   */
  export type driver_certificationsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the driver_certifications
     */
    select?: driver_certificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the driver_certifications
     */
    omit?: driver_certificationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: driver_certificationsInclude<ExtArgs> | null
    /**
     * Filter which driver_certifications to delete.
     */
    where: driver_certificationsWhereUniqueInput
  }

  /**
   * driver_certifications deleteMany
   */
  export type driver_certificationsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which driver_certifications to delete
     */
    where?: driver_certificationsWhereInput
    /**
     * Limit how many driver_certifications to delete.
     */
    limit?: number
  }

  /**
   * driver_certifications.drivers
   */
  export type driver_certifications$driversArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the drivers
     */
    select?: driversSelect<ExtArgs> | null
    /**
     * Omit specific fields from the drivers
     */
    omit?: driversOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: driversInclude<ExtArgs> | null
    where?: driversWhereInput
  }

  /**
   * driver_certifications without action
   */
  export type driver_certificationsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the driver_certifications
     */
    select?: driver_certificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the driver_certifications
     */
    omit?: driver_certificationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: driver_certificationsInclude<ExtArgs> | null
  }


  /**
   * Model drivers
   */

  export type AggregateDrivers = {
    _count: DriversCountAggregateOutputType | null
    _avg: DriversAvgAggregateOutputType | null
    _sum: DriversSumAggregateOutputType | null
    _min: DriversMinAggregateOutputType | null
    _max: DriversMaxAggregateOutputType | null
  }

  export type DriversAvgAggregateOutputType = {
    driver_id: number | null
    company_id: number | null
    salary: Decimal | null
    safety_score: Decimal | null
    total_miles_driven: Decimal | null
    years_experience: number | null
  }

  export type DriversSumAggregateOutputType = {
    driver_id: number | null
    company_id: number | null
    salary: Decimal | null
    safety_score: Decimal | null
    total_miles_driven: Decimal | null
    years_experience: number | null
  }

  export type DriversMinAggregateOutputType = {
    driver_id: number | null
    company_id: number | null
    employee_id: string | null
    first_name: string | null
    last_name: string | null
    license_number: string | null
    license_class: string | null
    license_expiry_date: Date | null
    date_of_birth: Date | null
    hire_date: Date | null
    phone: string | null
    email: string | null
    address: string | null
    emergency_contact_name: string | null
    emergency_contact_phone: string | null
    salary: Decimal | null
    status: string | null
    safety_score: Decimal | null
    total_miles_driven: Decimal | null
    years_experience: number | null
    created_at: Date | null
  }

  export type DriversMaxAggregateOutputType = {
    driver_id: number | null
    company_id: number | null
    employee_id: string | null
    first_name: string | null
    last_name: string | null
    license_number: string | null
    license_class: string | null
    license_expiry_date: Date | null
    date_of_birth: Date | null
    hire_date: Date | null
    phone: string | null
    email: string | null
    address: string | null
    emergency_contact_name: string | null
    emergency_contact_phone: string | null
    salary: Decimal | null
    status: string | null
    safety_score: Decimal | null
    total_miles_driven: Decimal | null
    years_experience: number | null
    created_at: Date | null
  }

  export type DriversCountAggregateOutputType = {
    driver_id: number
    company_id: number
    employee_id: number
    first_name: number
    last_name: number
    license_number: number
    license_class: number
    license_expiry_date: number
    date_of_birth: number
    hire_date: number
    phone: number
    email: number
    address: number
    emergency_contact_name: number
    emergency_contact_phone: number
    salary: number
    status: number
    safety_score: number
    total_miles_driven: number
    years_experience: number
    created_at: number
    _all: number
  }


  export type DriversAvgAggregateInputType = {
    driver_id?: true
    company_id?: true
    salary?: true
    safety_score?: true
    total_miles_driven?: true
    years_experience?: true
  }

  export type DriversSumAggregateInputType = {
    driver_id?: true
    company_id?: true
    salary?: true
    safety_score?: true
    total_miles_driven?: true
    years_experience?: true
  }

  export type DriversMinAggregateInputType = {
    driver_id?: true
    company_id?: true
    employee_id?: true
    first_name?: true
    last_name?: true
    license_number?: true
    license_class?: true
    license_expiry_date?: true
    date_of_birth?: true
    hire_date?: true
    phone?: true
    email?: true
    address?: true
    emergency_contact_name?: true
    emergency_contact_phone?: true
    salary?: true
    status?: true
    safety_score?: true
    total_miles_driven?: true
    years_experience?: true
    created_at?: true
  }

  export type DriversMaxAggregateInputType = {
    driver_id?: true
    company_id?: true
    employee_id?: true
    first_name?: true
    last_name?: true
    license_number?: true
    license_class?: true
    license_expiry_date?: true
    date_of_birth?: true
    hire_date?: true
    phone?: true
    email?: true
    address?: true
    emergency_contact_name?: true
    emergency_contact_phone?: true
    salary?: true
    status?: true
    safety_score?: true
    total_miles_driven?: true
    years_experience?: true
    created_at?: true
  }

  export type DriversCountAggregateInputType = {
    driver_id?: true
    company_id?: true
    employee_id?: true
    first_name?: true
    last_name?: true
    license_number?: true
    license_class?: true
    license_expiry_date?: true
    date_of_birth?: true
    hire_date?: true
    phone?: true
    email?: true
    address?: true
    emergency_contact_name?: true
    emergency_contact_phone?: true
    salary?: true
    status?: true
    safety_score?: true
    total_miles_driven?: true
    years_experience?: true
    created_at?: true
    _all?: true
  }

  export type DriversAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which drivers to aggregate.
     */
    where?: driversWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of drivers to fetch.
     */
    orderBy?: driversOrderByWithRelationInput | driversOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: driversWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` drivers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` drivers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned drivers
    **/
    _count?: true | DriversCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DriversAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DriversSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DriversMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DriversMaxAggregateInputType
  }

  export type GetDriversAggregateType<T extends DriversAggregateArgs> = {
        [P in keyof T & keyof AggregateDrivers]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDrivers[P]>
      : GetScalarType<T[P], AggregateDrivers[P]>
  }




  export type driversGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: driversWhereInput
    orderBy?: driversOrderByWithAggregationInput | driversOrderByWithAggregationInput[]
    by: DriversScalarFieldEnum[] | DriversScalarFieldEnum
    having?: driversScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DriversCountAggregateInputType | true
    _avg?: DriversAvgAggregateInputType
    _sum?: DriversSumAggregateInputType
    _min?: DriversMinAggregateInputType
    _max?: DriversMaxAggregateInputType
  }

  export type DriversGroupByOutputType = {
    driver_id: number
    company_id: number | null
    employee_id: string | null
    first_name: string
    last_name: string
    license_number: string
    license_class: string | null
    license_expiry_date: Date | null
    date_of_birth: Date | null
    hire_date: Date | null
    phone: string | null
    email: string | null
    address: string | null
    emergency_contact_name: string | null
    emergency_contact_phone: string | null
    salary: Decimal | null
    status: string | null
    safety_score: Decimal | null
    total_miles_driven: Decimal | null
    years_experience: number | null
    created_at: Date | null
    _count: DriversCountAggregateOutputType | null
    _avg: DriversAvgAggregateOutputType | null
    _sum: DriversSumAggregateOutputType | null
    _min: DriversMinAggregateOutputType | null
    _max: DriversMaxAggregateOutputType | null
  }

  type GetDriversGroupByPayload<T extends driversGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DriversGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DriversGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DriversGroupByOutputType[P]>
            : GetScalarType<T[P], DriversGroupByOutputType[P]>
        }
      >
    >


  export type driversSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    driver_id?: boolean
    company_id?: boolean
    employee_id?: boolean
    first_name?: boolean
    last_name?: boolean
    license_number?: boolean
    license_class?: boolean
    license_expiry_date?: boolean
    date_of_birth?: boolean
    hire_date?: boolean
    phone?: boolean
    email?: boolean
    address?: boolean
    emergency_contact_name?: boolean
    emergency_contact_phone?: boolean
    salary?: boolean
    status?: boolean
    safety_score?: boolean
    total_miles_driven?: boolean
    years_experience?: boolean
    created_at?: boolean
    driver_certifications?: boolean | drivers$driver_certificationsArgs<ExtArgs>
    companies?: boolean | drivers$companiesArgs<ExtArgs>
    expenses?: boolean | drivers$expensesArgs<ExtArgs>
    fuel_transactions?: boolean | drivers$fuel_transactionsArgs<ExtArgs>
    incidents?: boolean | drivers$incidentsArgs<ExtArgs>
    trips?: boolean | drivers$tripsArgs<ExtArgs>
    vehicle_assignments?: boolean | drivers$vehicle_assignmentsArgs<ExtArgs>
    vehicles?: boolean | drivers$vehiclesArgs<ExtArgs>
    _count?: boolean | DriversCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["drivers"]>

  export type driversSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    driver_id?: boolean
    company_id?: boolean
    employee_id?: boolean
    first_name?: boolean
    last_name?: boolean
    license_number?: boolean
    license_class?: boolean
    license_expiry_date?: boolean
    date_of_birth?: boolean
    hire_date?: boolean
    phone?: boolean
    email?: boolean
    address?: boolean
    emergency_contact_name?: boolean
    emergency_contact_phone?: boolean
    salary?: boolean
    status?: boolean
    safety_score?: boolean
    total_miles_driven?: boolean
    years_experience?: boolean
    created_at?: boolean
    companies?: boolean | drivers$companiesArgs<ExtArgs>
  }, ExtArgs["result"]["drivers"]>

  export type driversSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    driver_id?: boolean
    company_id?: boolean
    employee_id?: boolean
    first_name?: boolean
    last_name?: boolean
    license_number?: boolean
    license_class?: boolean
    license_expiry_date?: boolean
    date_of_birth?: boolean
    hire_date?: boolean
    phone?: boolean
    email?: boolean
    address?: boolean
    emergency_contact_name?: boolean
    emergency_contact_phone?: boolean
    salary?: boolean
    status?: boolean
    safety_score?: boolean
    total_miles_driven?: boolean
    years_experience?: boolean
    created_at?: boolean
    companies?: boolean | drivers$companiesArgs<ExtArgs>
  }, ExtArgs["result"]["drivers"]>

  export type driversSelectScalar = {
    driver_id?: boolean
    company_id?: boolean
    employee_id?: boolean
    first_name?: boolean
    last_name?: boolean
    license_number?: boolean
    license_class?: boolean
    license_expiry_date?: boolean
    date_of_birth?: boolean
    hire_date?: boolean
    phone?: boolean
    email?: boolean
    address?: boolean
    emergency_contact_name?: boolean
    emergency_contact_phone?: boolean
    salary?: boolean
    status?: boolean
    safety_score?: boolean
    total_miles_driven?: boolean
    years_experience?: boolean
    created_at?: boolean
  }

  export type driversOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"driver_id" | "company_id" | "employee_id" | "first_name" | "last_name" | "license_number" | "license_class" | "license_expiry_date" | "date_of_birth" | "hire_date" | "phone" | "email" | "address" | "emergency_contact_name" | "emergency_contact_phone" | "salary" | "status" | "safety_score" | "total_miles_driven" | "years_experience" | "created_at", ExtArgs["result"]["drivers"]>
  export type driversInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    driver_certifications?: boolean | drivers$driver_certificationsArgs<ExtArgs>
    companies?: boolean | drivers$companiesArgs<ExtArgs>
    expenses?: boolean | drivers$expensesArgs<ExtArgs>
    fuel_transactions?: boolean | drivers$fuel_transactionsArgs<ExtArgs>
    incidents?: boolean | drivers$incidentsArgs<ExtArgs>
    trips?: boolean | drivers$tripsArgs<ExtArgs>
    vehicle_assignments?: boolean | drivers$vehicle_assignmentsArgs<ExtArgs>
    vehicles?: boolean | drivers$vehiclesArgs<ExtArgs>
    _count?: boolean | DriversCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type driversIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    companies?: boolean | drivers$companiesArgs<ExtArgs>
  }
  export type driversIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    companies?: boolean | drivers$companiesArgs<ExtArgs>
  }

  export type $driversPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "drivers"
    objects: {
      driver_certifications: Prisma.$driver_certificationsPayload<ExtArgs>[]
      companies: Prisma.$companiesPayload<ExtArgs> | null
      expenses: Prisma.$expensesPayload<ExtArgs>[]
      fuel_transactions: Prisma.$fuel_transactionsPayload<ExtArgs>[]
      incidents: Prisma.$incidentsPayload<ExtArgs>[]
      trips: Prisma.$tripsPayload<ExtArgs>[]
      vehicle_assignments: Prisma.$vehicle_assignmentsPayload<ExtArgs>[]
      vehicles: Prisma.$vehiclesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      driver_id: number
      company_id: number | null
      employee_id: string | null
      first_name: string
      last_name: string
      license_number: string
      license_class: string | null
      license_expiry_date: Date | null
      date_of_birth: Date | null
      hire_date: Date | null
      phone: string | null
      email: string | null
      address: string | null
      emergency_contact_name: string | null
      emergency_contact_phone: string | null
      salary: Prisma.Decimal | null
      status: string | null
      safety_score: Prisma.Decimal | null
      total_miles_driven: Prisma.Decimal | null
      years_experience: number | null
      created_at: Date | null
    }, ExtArgs["result"]["drivers"]>
    composites: {}
  }

  type driversGetPayload<S extends boolean | null | undefined | driversDefaultArgs> = $Result.GetResult<Prisma.$driversPayload, S>

  type driversCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<driversFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DriversCountAggregateInputType | true
    }

  export interface driversDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['drivers'], meta: { name: 'drivers' } }
    /**
     * Find zero or one Drivers that matches the filter.
     * @param {driversFindUniqueArgs} args - Arguments to find a Drivers
     * @example
     * // Get one Drivers
     * const drivers = await prisma.drivers.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends driversFindUniqueArgs>(args: SelectSubset<T, driversFindUniqueArgs<ExtArgs>>): Prisma__driversClient<$Result.GetResult<Prisma.$driversPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Drivers that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {driversFindUniqueOrThrowArgs} args - Arguments to find a Drivers
     * @example
     * // Get one Drivers
     * const drivers = await prisma.drivers.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends driversFindUniqueOrThrowArgs>(args: SelectSubset<T, driversFindUniqueOrThrowArgs<ExtArgs>>): Prisma__driversClient<$Result.GetResult<Prisma.$driversPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Drivers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {driversFindFirstArgs} args - Arguments to find a Drivers
     * @example
     * // Get one Drivers
     * const drivers = await prisma.drivers.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends driversFindFirstArgs>(args?: SelectSubset<T, driversFindFirstArgs<ExtArgs>>): Prisma__driversClient<$Result.GetResult<Prisma.$driversPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Drivers that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {driversFindFirstOrThrowArgs} args - Arguments to find a Drivers
     * @example
     * // Get one Drivers
     * const drivers = await prisma.drivers.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends driversFindFirstOrThrowArgs>(args?: SelectSubset<T, driversFindFirstOrThrowArgs<ExtArgs>>): Prisma__driversClient<$Result.GetResult<Prisma.$driversPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Drivers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {driversFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Drivers
     * const drivers = await prisma.drivers.findMany()
     * 
     * // Get first 10 Drivers
     * const drivers = await prisma.drivers.findMany({ take: 10 })
     * 
     * // Only select the `driver_id`
     * const driversWithDriver_idOnly = await prisma.drivers.findMany({ select: { driver_id: true } })
     * 
     */
    findMany<T extends driversFindManyArgs>(args?: SelectSubset<T, driversFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$driversPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Drivers.
     * @param {driversCreateArgs} args - Arguments to create a Drivers.
     * @example
     * // Create one Drivers
     * const Drivers = await prisma.drivers.create({
     *   data: {
     *     // ... data to create a Drivers
     *   }
     * })
     * 
     */
    create<T extends driversCreateArgs>(args: SelectSubset<T, driversCreateArgs<ExtArgs>>): Prisma__driversClient<$Result.GetResult<Prisma.$driversPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Drivers.
     * @param {driversCreateManyArgs} args - Arguments to create many Drivers.
     * @example
     * // Create many Drivers
     * const drivers = await prisma.drivers.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends driversCreateManyArgs>(args?: SelectSubset<T, driversCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Drivers and returns the data saved in the database.
     * @param {driversCreateManyAndReturnArgs} args - Arguments to create many Drivers.
     * @example
     * // Create many Drivers
     * const drivers = await prisma.drivers.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Drivers and only return the `driver_id`
     * const driversWithDriver_idOnly = await prisma.drivers.createManyAndReturn({
     *   select: { driver_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends driversCreateManyAndReturnArgs>(args?: SelectSubset<T, driversCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$driversPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Drivers.
     * @param {driversDeleteArgs} args - Arguments to delete one Drivers.
     * @example
     * // Delete one Drivers
     * const Drivers = await prisma.drivers.delete({
     *   where: {
     *     // ... filter to delete one Drivers
     *   }
     * })
     * 
     */
    delete<T extends driversDeleteArgs>(args: SelectSubset<T, driversDeleteArgs<ExtArgs>>): Prisma__driversClient<$Result.GetResult<Prisma.$driversPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Drivers.
     * @param {driversUpdateArgs} args - Arguments to update one Drivers.
     * @example
     * // Update one Drivers
     * const drivers = await prisma.drivers.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends driversUpdateArgs>(args: SelectSubset<T, driversUpdateArgs<ExtArgs>>): Prisma__driversClient<$Result.GetResult<Prisma.$driversPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Drivers.
     * @param {driversDeleteManyArgs} args - Arguments to filter Drivers to delete.
     * @example
     * // Delete a few Drivers
     * const { count } = await prisma.drivers.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends driversDeleteManyArgs>(args?: SelectSubset<T, driversDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Drivers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {driversUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Drivers
     * const drivers = await prisma.drivers.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends driversUpdateManyArgs>(args: SelectSubset<T, driversUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Drivers and returns the data updated in the database.
     * @param {driversUpdateManyAndReturnArgs} args - Arguments to update many Drivers.
     * @example
     * // Update many Drivers
     * const drivers = await prisma.drivers.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Drivers and only return the `driver_id`
     * const driversWithDriver_idOnly = await prisma.drivers.updateManyAndReturn({
     *   select: { driver_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends driversUpdateManyAndReturnArgs>(args: SelectSubset<T, driversUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$driversPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Drivers.
     * @param {driversUpsertArgs} args - Arguments to update or create a Drivers.
     * @example
     * // Update or create a Drivers
     * const drivers = await prisma.drivers.upsert({
     *   create: {
     *     // ... data to create a Drivers
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Drivers we want to update
     *   }
     * })
     */
    upsert<T extends driversUpsertArgs>(args: SelectSubset<T, driversUpsertArgs<ExtArgs>>): Prisma__driversClient<$Result.GetResult<Prisma.$driversPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Drivers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {driversCountArgs} args - Arguments to filter Drivers to count.
     * @example
     * // Count the number of Drivers
     * const count = await prisma.drivers.count({
     *   where: {
     *     // ... the filter for the Drivers we want to count
     *   }
     * })
    **/
    count<T extends driversCountArgs>(
      args?: Subset<T, driversCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DriversCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Drivers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DriversAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DriversAggregateArgs>(args: Subset<T, DriversAggregateArgs>): Prisma.PrismaPromise<GetDriversAggregateType<T>>

    /**
     * Group by Drivers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {driversGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends driversGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: driversGroupByArgs['orderBy'] }
        : { orderBy?: driversGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, driversGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDriversGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the drivers model
   */
  readonly fields: driversFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for drivers.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__driversClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    driver_certifications<T extends drivers$driver_certificationsArgs<ExtArgs> = {}>(args?: Subset<T, drivers$driver_certificationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$driver_certificationsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    companies<T extends drivers$companiesArgs<ExtArgs> = {}>(args?: Subset<T, drivers$companiesArgs<ExtArgs>>): Prisma__companiesClient<$Result.GetResult<Prisma.$companiesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    expenses<T extends drivers$expensesArgs<ExtArgs> = {}>(args?: Subset<T, drivers$expensesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$expensesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    fuel_transactions<T extends drivers$fuel_transactionsArgs<ExtArgs> = {}>(args?: Subset<T, drivers$fuel_transactionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$fuel_transactionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    incidents<T extends drivers$incidentsArgs<ExtArgs> = {}>(args?: Subset<T, drivers$incidentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$incidentsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    trips<T extends drivers$tripsArgs<ExtArgs> = {}>(args?: Subset<T, drivers$tripsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tripsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    vehicle_assignments<T extends drivers$vehicle_assignmentsArgs<ExtArgs> = {}>(args?: Subset<T, drivers$vehicle_assignmentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$vehicle_assignmentsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    vehicles<T extends drivers$vehiclesArgs<ExtArgs> = {}>(args?: Subset<T, drivers$vehiclesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$vehiclesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the drivers model
   */
  interface driversFieldRefs {
    readonly driver_id: FieldRef<"drivers", 'Int'>
    readonly company_id: FieldRef<"drivers", 'Int'>
    readonly employee_id: FieldRef<"drivers", 'String'>
    readonly first_name: FieldRef<"drivers", 'String'>
    readonly last_name: FieldRef<"drivers", 'String'>
    readonly license_number: FieldRef<"drivers", 'String'>
    readonly license_class: FieldRef<"drivers", 'String'>
    readonly license_expiry_date: FieldRef<"drivers", 'DateTime'>
    readonly date_of_birth: FieldRef<"drivers", 'DateTime'>
    readonly hire_date: FieldRef<"drivers", 'DateTime'>
    readonly phone: FieldRef<"drivers", 'String'>
    readonly email: FieldRef<"drivers", 'String'>
    readonly address: FieldRef<"drivers", 'String'>
    readonly emergency_contact_name: FieldRef<"drivers", 'String'>
    readonly emergency_contact_phone: FieldRef<"drivers", 'String'>
    readonly salary: FieldRef<"drivers", 'Decimal'>
    readonly status: FieldRef<"drivers", 'String'>
    readonly safety_score: FieldRef<"drivers", 'Decimal'>
    readonly total_miles_driven: FieldRef<"drivers", 'Decimal'>
    readonly years_experience: FieldRef<"drivers", 'Int'>
    readonly created_at: FieldRef<"drivers", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * drivers findUnique
   */
  export type driversFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the drivers
     */
    select?: driversSelect<ExtArgs> | null
    /**
     * Omit specific fields from the drivers
     */
    omit?: driversOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: driversInclude<ExtArgs> | null
    /**
     * Filter, which drivers to fetch.
     */
    where: driversWhereUniqueInput
  }

  /**
   * drivers findUniqueOrThrow
   */
  export type driversFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the drivers
     */
    select?: driversSelect<ExtArgs> | null
    /**
     * Omit specific fields from the drivers
     */
    omit?: driversOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: driversInclude<ExtArgs> | null
    /**
     * Filter, which drivers to fetch.
     */
    where: driversWhereUniqueInput
  }

  /**
   * drivers findFirst
   */
  export type driversFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the drivers
     */
    select?: driversSelect<ExtArgs> | null
    /**
     * Omit specific fields from the drivers
     */
    omit?: driversOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: driversInclude<ExtArgs> | null
    /**
     * Filter, which drivers to fetch.
     */
    where?: driversWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of drivers to fetch.
     */
    orderBy?: driversOrderByWithRelationInput | driversOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for drivers.
     */
    cursor?: driversWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` drivers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` drivers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of drivers.
     */
    distinct?: DriversScalarFieldEnum | DriversScalarFieldEnum[]
  }

  /**
   * drivers findFirstOrThrow
   */
  export type driversFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the drivers
     */
    select?: driversSelect<ExtArgs> | null
    /**
     * Omit specific fields from the drivers
     */
    omit?: driversOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: driversInclude<ExtArgs> | null
    /**
     * Filter, which drivers to fetch.
     */
    where?: driversWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of drivers to fetch.
     */
    orderBy?: driversOrderByWithRelationInput | driversOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for drivers.
     */
    cursor?: driversWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` drivers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` drivers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of drivers.
     */
    distinct?: DriversScalarFieldEnum | DriversScalarFieldEnum[]
  }

  /**
   * drivers findMany
   */
  export type driversFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the drivers
     */
    select?: driversSelect<ExtArgs> | null
    /**
     * Omit specific fields from the drivers
     */
    omit?: driversOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: driversInclude<ExtArgs> | null
    /**
     * Filter, which drivers to fetch.
     */
    where?: driversWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of drivers to fetch.
     */
    orderBy?: driversOrderByWithRelationInput | driversOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing drivers.
     */
    cursor?: driversWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` drivers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` drivers.
     */
    skip?: number
    distinct?: DriversScalarFieldEnum | DriversScalarFieldEnum[]
  }

  /**
   * drivers create
   */
  export type driversCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the drivers
     */
    select?: driversSelect<ExtArgs> | null
    /**
     * Omit specific fields from the drivers
     */
    omit?: driversOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: driversInclude<ExtArgs> | null
    /**
     * The data needed to create a drivers.
     */
    data: XOR<driversCreateInput, driversUncheckedCreateInput>
  }

  /**
   * drivers createMany
   */
  export type driversCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many drivers.
     */
    data: driversCreateManyInput | driversCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * drivers createManyAndReturn
   */
  export type driversCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the drivers
     */
    select?: driversSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the drivers
     */
    omit?: driversOmit<ExtArgs> | null
    /**
     * The data used to create many drivers.
     */
    data: driversCreateManyInput | driversCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: driversIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * drivers update
   */
  export type driversUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the drivers
     */
    select?: driversSelect<ExtArgs> | null
    /**
     * Omit specific fields from the drivers
     */
    omit?: driversOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: driversInclude<ExtArgs> | null
    /**
     * The data needed to update a drivers.
     */
    data: XOR<driversUpdateInput, driversUncheckedUpdateInput>
    /**
     * Choose, which drivers to update.
     */
    where: driversWhereUniqueInput
  }

  /**
   * drivers updateMany
   */
  export type driversUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update drivers.
     */
    data: XOR<driversUpdateManyMutationInput, driversUncheckedUpdateManyInput>
    /**
     * Filter which drivers to update
     */
    where?: driversWhereInput
    /**
     * Limit how many drivers to update.
     */
    limit?: number
  }

  /**
   * drivers updateManyAndReturn
   */
  export type driversUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the drivers
     */
    select?: driversSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the drivers
     */
    omit?: driversOmit<ExtArgs> | null
    /**
     * The data used to update drivers.
     */
    data: XOR<driversUpdateManyMutationInput, driversUncheckedUpdateManyInput>
    /**
     * Filter which drivers to update
     */
    where?: driversWhereInput
    /**
     * Limit how many drivers to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: driversIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * drivers upsert
   */
  export type driversUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the drivers
     */
    select?: driversSelect<ExtArgs> | null
    /**
     * Omit specific fields from the drivers
     */
    omit?: driversOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: driversInclude<ExtArgs> | null
    /**
     * The filter to search for the drivers to update in case it exists.
     */
    where: driversWhereUniqueInput
    /**
     * In case the drivers found by the `where` argument doesn't exist, create a new drivers with this data.
     */
    create: XOR<driversCreateInput, driversUncheckedCreateInput>
    /**
     * In case the drivers was found with the provided `where` argument, update it with this data.
     */
    update: XOR<driversUpdateInput, driversUncheckedUpdateInput>
  }

  /**
   * drivers delete
   */
  export type driversDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the drivers
     */
    select?: driversSelect<ExtArgs> | null
    /**
     * Omit specific fields from the drivers
     */
    omit?: driversOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: driversInclude<ExtArgs> | null
    /**
     * Filter which drivers to delete.
     */
    where: driversWhereUniqueInput
  }

  /**
   * drivers deleteMany
   */
  export type driversDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which drivers to delete
     */
    where?: driversWhereInput
    /**
     * Limit how many drivers to delete.
     */
    limit?: number
  }

  /**
   * drivers.driver_certifications
   */
  export type drivers$driver_certificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the driver_certifications
     */
    select?: driver_certificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the driver_certifications
     */
    omit?: driver_certificationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: driver_certificationsInclude<ExtArgs> | null
    where?: driver_certificationsWhereInput
    orderBy?: driver_certificationsOrderByWithRelationInput | driver_certificationsOrderByWithRelationInput[]
    cursor?: driver_certificationsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Driver_certificationsScalarFieldEnum | Driver_certificationsScalarFieldEnum[]
  }

  /**
   * drivers.companies
   */
  export type drivers$companiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the companies
     */
    select?: companiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the companies
     */
    omit?: companiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: companiesInclude<ExtArgs> | null
    where?: companiesWhereInput
  }

  /**
   * drivers.expenses
   */
  export type drivers$expensesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the expenses
     */
    select?: expensesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the expenses
     */
    omit?: expensesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: expensesInclude<ExtArgs> | null
    where?: expensesWhereInput
    orderBy?: expensesOrderByWithRelationInput | expensesOrderByWithRelationInput[]
    cursor?: expensesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ExpensesScalarFieldEnum | ExpensesScalarFieldEnum[]
  }

  /**
   * drivers.fuel_transactions
   */
  export type drivers$fuel_transactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fuel_transactions
     */
    select?: fuel_transactionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the fuel_transactions
     */
    omit?: fuel_transactionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fuel_transactionsInclude<ExtArgs> | null
    where?: fuel_transactionsWhereInput
    orderBy?: fuel_transactionsOrderByWithRelationInput | fuel_transactionsOrderByWithRelationInput[]
    cursor?: fuel_transactionsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Fuel_transactionsScalarFieldEnum | Fuel_transactionsScalarFieldEnum[]
  }

  /**
   * drivers.incidents
   */
  export type drivers$incidentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the incidents
     */
    select?: incidentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the incidents
     */
    omit?: incidentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: incidentsInclude<ExtArgs> | null
    where?: incidentsWhereInput
    orderBy?: incidentsOrderByWithRelationInput | incidentsOrderByWithRelationInput[]
    cursor?: incidentsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: IncidentsScalarFieldEnum | IncidentsScalarFieldEnum[]
  }

  /**
   * drivers.trips
   */
  export type drivers$tripsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the trips
     */
    select?: tripsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the trips
     */
    omit?: tripsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tripsInclude<ExtArgs> | null
    where?: tripsWhereInput
    orderBy?: tripsOrderByWithRelationInput | tripsOrderByWithRelationInput[]
    cursor?: tripsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TripsScalarFieldEnum | TripsScalarFieldEnum[]
  }

  /**
   * drivers.vehicle_assignments
   */
  export type drivers$vehicle_assignmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vehicle_assignments
     */
    select?: vehicle_assignmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the vehicle_assignments
     */
    omit?: vehicle_assignmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: vehicle_assignmentsInclude<ExtArgs> | null
    where?: vehicle_assignmentsWhereInput
    orderBy?: vehicle_assignmentsOrderByWithRelationInput | vehicle_assignmentsOrderByWithRelationInput[]
    cursor?: vehicle_assignmentsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Vehicle_assignmentsScalarFieldEnum | Vehicle_assignmentsScalarFieldEnum[]
  }

  /**
   * drivers.vehicles
   */
  export type drivers$vehiclesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vehicles
     */
    select?: vehiclesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the vehicles
     */
    omit?: vehiclesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: vehiclesInclude<ExtArgs> | null
    where?: vehiclesWhereInput
    orderBy?: vehiclesOrderByWithRelationInput | vehiclesOrderByWithRelationInput[]
    cursor?: vehiclesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: VehiclesScalarFieldEnum | VehiclesScalarFieldEnum[]
  }

  /**
   * drivers without action
   */
  export type driversDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the drivers
     */
    select?: driversSelect<ExtArgs> | null
    /**
     * Omit specific fields from the drivers
     */
    omit?: driversOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: driversInclude<ExtArgs> | null
  }


  /**
   * Model expenses
   */

  export type AggregateExpenses = {
    _count: ExpensesCountAggregateOutputType | null
    _avg: ExpensesAvgAggregateOutputType | null
    _sum: ExpensesSumAggregateOutputType | null
    _min: ExpensesMinAggregateOutputType | null
    _max: ExpensesMaxAggregateOutputType | null
  }

  export type ExpensesAvgAggregateOutputType = {
    expense_id: number | null
    vehicle_id: number | null
    driver_id: number | null
    category_id: number | null
    amount: Decimal | null
  }

  export type ExpensesSumAggregateOutputType = {
    expense_id: number | null
    vehicle_id: number | null
    driver_id: number | null
    category_id: number | null
    amount: Decimal | null
  }

  export type ExpensesMinAggregateOutputType = {
    expense_id: number | null
    vehicle_id: number | null
    driver_id: number | null
    category_id: number | null
    expense_date: Date | null
    amount: Decimal | null
    description: string | null
    vendor: string | null
    invoice_number: string | null
    receipt_available: boolean | null
    approved_by: string | null
    approval_date: Date | null
    reimbursable: boolean | null
    notes: string | null
    created_at: Date | null
  }

  export type ExpensesMaxAggregateOutputType = {
    expense_id: number | null
    vehicle_id: number | null
    driver_id: number | null
    category_id: number | null
    expense_date: Date | null
    amount: Decimal | null
    description: string | null
    vendor: string | null
    invoice_number: string | null
    receipt_available: boolean | null
    approved_by: string | null
    approval_date: Date | null
    reimbursable: boolean | null
    notes: string | null
    created_at: Date | null
  }

  export type ExpensesCountAggregateOutputType = {
    expense_id: number
    vehicle_id: number
    driver_id: number
    category_id: number
    expense_date: number
    amount: number
    description: number
    vendor: number
    invoice_number: number
    receipt_available: number
    approved_by: number
    approval_date: number
    reimbursable: number
    notes: number
    created_at: number
    _all: number
  }


  export type ExpensesAvgAggregateInputType = {
    expense_id?: true
    vehicle_id?: true
    driver_id?: true
    category_id?: true
    amount?: true
  }

  export type ExpensesSumAggregateInputType = {
    expense_id?: true
    vehicle_id?: true
    driver_id?: true
    category_id?: true
    amount?: true
  }

  export type ExpensesMinAggregateInputType = {
    expense_id?: true
    vehicle_id?: true
    driver_id?: true
    category_id?: true
    expense_date?: true
    amount?: true
    description?: true
    vendor?: true
    invoice_number?: true
    receipt_available?: true
    approved_by?: true
    approval_date?: true
    reimbursable?: true
    notes?: true
    created_at?: true
  }

  export type ExpensesMaxAggregateInputType = {
    expense_id?: true
    vehicle_id?: true
    driver_id?: true
    category_id?: true
    expense_date?: true
    amount?: true
    description?: true
    vendor?: true
    invoice_number?: true
    receipt_available?: true
    approved_by?: true
    approval_date?: true
    reimbursable?: true
    notes?: true
    created_at?: true
  }

  export type ExpensesCountAggregateInputType = {
    expense_id?: true
    vehicle_id?: true
    driver_id?: true
    category_id?: true
    expense_date?: true
    amount?: true
    description?: true
    vendor?: true
    invoice_number?: true
    receipt_available?: true
    approved_by?: true
    approval_date?: true
    reimbursable?: true
    notes?: true
    created_at?: true
    _all?: true
  }

  export type ExpensesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which expenses to aggregate.
     */
    where?: expensesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of expenses to fetch.
     */
    orderBy?: expensesOrderByWithRelationInput | expensesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: expensesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` expenses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` expenses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned expenses
    **/
    _count?: true | ExpensesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ExpensesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ExpensesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ExpensesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ExpensesMaxAggregateInputType
  }

  export type GetExpensesAggregateType<T extends ExpensesAggregateArgs> = {
        [P in keyof T & keyof AggregateExpenses]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateExpenses[P]>
      : GetScalarType<T[P], AggregateExpenses[P]>
  }




  export type expensesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: expensesWhereInput
    orderBy?: expensesOrderByWithAggregationInput | expensesOrderByWithAggregationInput[]
    by: ExpensesScalarFieldEnum[] | ExpensesScalarFieldEnum
    having?: expensesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ExpensesCountAggregateInputType | true
    _avg?: ExpensesAvgAggregateInputType
    _sum?: ExpensesSumAggregateInputType
    _min?: ExpensesMinAggregateInputType
    _max?: ExpensesMaxAggregateInputType
  }

  export type ExpensesGroupByOutputType = {
    expense_id: number
    vehicle_id: number | null
    driver_id: number | null
    category_id: number | null
    expense_date: Date
    amount: Decimal
    description: string | null
    vendor: string | null
    invoice_number: string | null
    receipt_available: boolean | null
    approved_by: string | null
    approval_date: Date | null
    reimbursable: boolean | null
    notes: string | null
    created_at: Date | null
    _count: ExpensesCountAggregateOutputType | null
    _avg: ExpensesAvgAggregateOutputType | null
    _sum: ExpensesSumAggregateOutputType | null
    _min: ExpensesMinAggregateOutputType | null
    _max: ExpensesMaxAggregateOutputType | null
  }

  type GetExpensesGroupByPayload<T extends expensesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ExpensesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ExpensesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ExpensesGroupByOutputType[P]>
            : GetScalarType<T[P], ExpensesGroupByOutputType[P]>
        }
      >
    >


  export type expensesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    expense_id?: boolean
    vehicle_id?: boolean
    driver_id?: boolean
    category_id?: boolean
    expense_date?: boolean
    amount?: boolean
    description?: boolean
    vendor?: boolean
    invoice_number?: boolean
    receipt_available?: boolean
    approved_by?: boolean
    approval_date?: boolean
    reimbursable?: boolean
    notes?: boolean
    created_at?: boolean
    cost_categories?: boolean | expenses$cost_categoriesArgs<ExtArgs>
    drivers?: boolean | expenses$driversArgs<ExtArgs>
    vehicles?: boolean | expenses$vehiclesArgs<ExtArgs>
  }, ExtArgs["result"]["expenses"]>

  export type expensesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    expense_id?: boolean
    vehicle_id?: boolean
    driver_id?: boolean
    category_id?: boolean
    expense_date?: boolean
    amount?: boolean
    description?: boolean
    vendor?: boolean
    invoice_number?: boolean
    receipt_available?: boolean
    approved_by?: boolean
    approval_date?: boolean
    reimbursable?: boolean
    notes?: boolean
    created_at?: boolean
    cost_categories?: boolean | expenses$cost_categoriesArgs<ExtArgs>
    drivers?: boolean | expenses$driversArgs<ExtArgs>
    vehicles?: boolean | expenses$vehiclesArgs<ExtArgs>
  }, ExtArgs["result"]["expenses"]>

  export type expensesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    expense_id?: boolean
    vehicle_id?: boolean
    driver_id?: boolean
    category_id?: boolean
    expense_date?: boolean
    amount?: boolean
    description?: boolean
    vendor?: boolean
    invoice_number?: boolean
    receipt_available?: boolean
    approved_by?: boolean
    approval_date?: boolean
    reimbursable?: boolean
    notes?: boolean
    created_at?: boolean
    cost_categories?: boolean | expenses$cost_categoriesArgs<ExtArgs>
    drivers?: boolean | expenses$driversArgs<ExtArgs>
    vehicles?: boolean | expenses$vehiclesArgs<ExtArgs>
  }, ExtArgs["result"]["expenses"]>

  export type expensesSelectScalar = {
    expense_id?: boolean
    vehicle_id?: boolean
    driver_id?: boolean
    category_id?: boolean
    expense_date?: boolean
    amount?: boolean
    description?: boolean
    vendor?: boolean
    invoice_number?: boolean
    receipt_available?: boolean
    approved_by?: boolean
    approval_date?: boolean
    reimbursable?: boolean
    notes?: boolean
    created_at?: boolean
  }

  export type expensesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"expense_id" | "vehicle_id" | "driver_id" | "category_id" | "expense_date" | "amount" | "description" | "vendor" | "invoice_number" | "receipt_available" | "approved_by" | "approval_date" | "reimbursable" | "notes" | "created_at", ExtArgs["result"]["expenses"]>
  export type expensesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cost_categories?: boolean | expenses$cost_categoriesArgs<ExtArgs>
    drivers?: boolean | expenses$driversArgs<ExtArgs>
    vehicles?: boolean | expenses$vehiclesArgs<ExtArgs>
  }
  export type expensesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cost_categories?: boolean | expenses$cost_categoriesArgs<ExtArgs>
    drivers?: boolean | expenses$driversArgs<ExtArgs>
    vehicles?: boolean | expenses$vehiclesArgs<ExtArgs>
  }
  export type expensesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cost_categories?: boolean | expenses$cost_categoriesArgs<ExtArgs>
    drivers?: boolean | expenses$driversArgs<ExtArgs>
    vehicles?: boolean | expenses$vehiclesArgs<ExtArgs>
  }

  export type $expensesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "expenses"
    objects: {
      cost_categories: Prisma.$cost_categoriesPayload<ExtArgs> | null
      drivers: Prisma.$driversPayload<ExtArgs> | null
      vehicles: Prisma.$vehiclesPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      expense_id: number
      vehicle_id: number | null
      driver_id: number | null
      category_id: number | null
      expense_date: Date
      amount: Prisma.Decimal
      description: string | null
      vendor: string | null
      invoice_number: string | null
      receipt_available: boolean | null
      approved_by: string | null
      approval_date: Date | null
      reimbursable: boolean | null
      notes: string | null
      created_at: Date | null
    }, ExtArgs["result"]["expenses"]>
    composites: {}
  }

  type expensesGetPayload<S extends boolean | null | undefined | expensesDefaultArgs> = $Result.GetResult<Prisma.$expensesPayload, S>

  type expensesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<expensesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ExpensesCountAggregateInputType | true
    }

  export interface expensesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['expenses'], meta: { name: 'expenses' } }
    /**
     * Find zero or one Expenses that matches the filter.
     * @param {expensesFindUniqueArgs} args - Arguments to find a Expenses
     * @example
     * // Get one Expenses
     * const expenses = await prisma.expenses.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends expensesFindUniqueArgs>(args: SelectSubset<T, expensesFindUniqueArgs<ExtArgs>>): Prisma__expensesClient<$Result.GetResult<Prisma.$expensesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Expenses that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {expensesFindUniqueOrThrowArgs} args - Arguments to find a Expenses
     * @example
     * // Get one Expenses
     * const expenses = await prisma.expenses.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends expensesFindUniqueOrThrowArgs>(args: SelectSubset<T, expensesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__expensesClient<$Result.GetResult<Prisma.$expensesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Expenses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {expensesFindFirstArgs} args - Arguments to find a Expenses
     * @example
     * // Get one Expenses
     * const expenses = await prisma.expenses.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends expensesFindFirstArgs>(args?: SelectSubset<T, expensesFindFirstArgs<ExtArgs>>): Prisma__expensesClient<$Result.GetResult<Prisma.$expensesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Expenses that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {expensesFindFirstOrThrowArgs} args - Arguments to find a Expenses
     * @example
     * // Get one Expenses
     * const expenses = await prisma.expenses.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends expensesFindFirstOrThrowArgs>(args?: SelectSubset<T, expensesFindFirstOrThrowArgs<ExtArgs>>): Prisma__expensesClient<$Result.GetResult<Prisma.$expensesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Expenses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {expensesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Expenses
     * const expenses = await prisma.expenses.findMany()
     * 
     * // Get first 10 Expenses
     * const expenses = await prisma.expenses.findMany({ take: 10 })
     * 
     * // Only select the `expense_id`
     * const expensesWithExpense_idOnly = await prisma.expenses.findMany({ select: { expense_id: true } })
     * 
     */
    findMany<T extends expensesFindManyArgs>(args?: SelectSubset<T, expensesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$expensesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Expenses.
     * @param {expensesCreateArgs} args - Arguments to create a Expenses.
     * @example
     * // Create one Expenses
     * const Expenses = await prisma.expenses.create({
     *   data: {
     *     // ... data to create a Expenses
     *   }
     * })
     * 
     */
    create<T extends expensesCreateArgs>(args: SelectSubset<T, expensesCreateArgs<ExtArgs>>): Prisma__expensesClient<$Result.GetResult<Prisma.$expensesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Expenses.
     * @param {expensesCreateManyArgs} args - Arguments to create many Expenses.
     * @example
     * // Create many Expenses
     * const expenses = await prisma.expenses.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends expensesCreateManyArgs>(args?: SelectSubset<T, expensesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Expenses and returns the data saved in the database.
     * @param {expensesCreateManyAndReturnArgs} args - Arguments to create many Expenses.
     * @example
     * // Create many Expenses
     * const expenses = await prisma.expenses.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Expenses and only return the `expense_id`
     * const expensesWithExpense_idOnly = await prisma.expenses.createManyAndReturn({
     *   select: { expense_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends expensesCreateManyAndReturnArgs>(args?: SelectSubset<T, expensesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$expensesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Expenses.
     * @param {expensesDeleteArgs} args - Arguments to delete one Expenses.
     * @example
     * // Delete one Expenses
     * const Expenses = await prisma.expenses.delete({
     *   where: {
     *     // ... filter to delete one Expenses
     *   }
     * })
     * 
     */
    delete<T extends expensesDeleteArgs>(args: SelectSubset<T, expensesDeleteArgs<ExtArgs>>): Prisma__expensesClient<$Result.GetResult<Prisma.$expensesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Expenses.
     * @param {expensesUpdateArgs} args - Arguments to update one Expenses.
     * @example
     * // Update one Expenses
     * const expenses = await prisma.expenses.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends expensesUpdateArgs>(args: SelectSubset<T, expensesUpdateArgs<ExtArgs>>): Prisma__expensesClient<$Result.GetResult<Prisma.$expensesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Expenses.
     * @param {expensesDeleteManyArgs} args - Arguments to filter Expenses to delete.
     * @example
     * // Delete a few Expenses
     * const { count } = await prisma.expenses.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends expensesDeleteManyArgs>(args?: SelectSubset<T, expensesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Expenses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {expensesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Expenses
     * const expenses = await prisma.expenses.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends expensesUpdateManyArgs>(args: SelectSubset<T, expensesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Expenses and returns the data updated in the database.
     * @param {expensesUpdateManyAndReturnArgs} args - Arguments to update many Expenses.
     * @example
     * // Update many Expenses
     * const expenses = await prisma.expenses.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Expenses and only return the `expense_id`
     * const expensesWithExpense_idOnly = await prisma.expenses.updateManyAndReturn({
     *   select: { expense_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends expensesUpdateManyAndReturnArgs>(args: SelectSubset<T, expensesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$expensesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Expenses.
     * @param {expensesUpsertArgs} args - Arguments to update or create a Expenses.
     * @example
     * // Update or create a Expenses
     * const expenses = await prisma.expenses.upsert({
     *   create: {
     *     // ... data to create a Expenses
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Expenses we want to update
     *   }
     * })
     */
    upsert<T extends expensesUpsertArgs>(args: SelectSubset<T, expensesUpsertArgs<ExtArgs>>): Prisma__expensesClient<$Result.GetResult<Prisma.$expensesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Expenses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {expensesCountArgs} args - Arguments to filter Expenses to count.
     * @example
     * // Count the number of Expenses
     * const count = await prisma.expenses.count({
     *   where: {
     *     // ... the filter for the Expenses we want to count
     *   }
     * })
    **/
    count<T extends expensesCountArgs>(
      args?: Subset<T, expensesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ExpensesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Expenses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ExpensesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ExpensesAggregateArgs>(args: Subset<T, ExpensesAggregateArgs>): Prisma.PrismaPromise<GetExpensesAggregateType<T>>

    /**
     * Group by Expenses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {expensesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends expensesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: expensesGroupByArgs['orderBy'] }
        : { orderBy?: expensesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, expensesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetExpensesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the expenses model
   */
  readonly fields: expensesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for expenses.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__expensesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cost_categories<T extends expenses$cost_categoriesArgs<ExtArgs> = {}>(args?: Subset<T, expenses$cost_categoriesArgs<ExtArgs>>): Prisma__cost_categoriesClient<$Result.GetResult<Prisma.$cost_categoriesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    drivers<T extends expenses$driversArgs<ExtArgs> = {}>(args?: Subset<T, expenses$driversArgs<ExtArgs>>): Prisma__driversClient<$Result.GetResult<Prisma.$driversPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    vehicles<T extends expenses$vehiclesArgs<ExtArgs> = {}>(args?: Subset<T, expenses$vehiclesArgs<ExtArgs>>): Prisma__vehiclesClient<$Result.GetResult<Prisma.$vehiclesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the expenses model
   */
  interface expensesFieldRefs {
    readonly expense_id: FieldRef<"expenses", 'Int'>
    readonly vehicle_id: FieldRef<"expenses", 'Int'>
    readonly driver_id: FieldRef<"expenses", 'Int'>
    readonly category_id: FieldRef<"expenses", 'Int'>
    readonly expense_date: FieldRef<"expenses", 'DateTime'>
    readonly amount: FieldRef<"expenses", 'Decimal'>
    readonly description: FieldRef<"expenses", 'String'>
    readonly vendor: FieldRef<"expenses", 'String'>
    readonly invoice_number: FieldRef<"expenses", 'String'>
    readonly receipt_available: FieldRef<"expenses", 'Boolean'>
    readonly approved_by: FieldRef<"expenses", 'String'>
    readonly approval_date: FieldRef<"expenses", 'DateTime'>
    readonly reimbursable: FieldRef<"expenses", 'Boolean'>
    readonly notes: FieldRef<"expenses", 'String'>
    readonly created_at: FieldRef<"expenses", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * expenses findUnique
   */
  export type expensesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the expenses
     */
    select?: expensesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the expenses
     */
    omit?: expensesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: expensesInclude<ExtArgs> | null
    /**
     * Filter, which expenses to fetch.
     */
    where: expensesWhereUniqueInput
  }

  /**
   * expenses findUniqueOrThrow
   */
  export type expensesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the expenses
     */
    select?: expensesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the expenses
     */
    omit?: expensesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: expensesInclude<ExtArgs> | null
    /**
     * Filter, which expenses to fetch.
     */
    where: expensesWhereUniqueInput
  }

  /**
   * expenses findFirst
   */
  export type expensesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the expenses
     */
    select?: expensesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the expenses
     */
    omit?: expensesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: expensesInclude<ExtArgs> | null
    /**
     * Filter, which expenses to fetch.
     */
    where?: expensesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of expenses to fetch.
     */
    orderBy?: expensesOrderByWithRelationInput | expensesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for expenses.
     */
    cursor?: expensesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` expenses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` expenses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of expenses.
     */
    distinct?: ExpensesScalarFieldEnum | ExpensesScalarFieldEnum[]
  }

  /**
   * expenses findFirstOrThrow
   */
  export type expensesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the expenses
     */
    select?: expensesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the expenses
     */
    omit?: expensesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: expensesInclude<ExtArgs> | null
    /**
     * Filter, which expenses to fetch.
     */
    where?: expensesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of expenses to fetch.
     */
    orderBy?: expensesOrderByWithRelationInput | expensesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for expenses.
     */
    cursor?: expensesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` expenses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` expenses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of expenses.
     */
    distinct?: ExpensesScalarFieldEnum | ExpensesScalarFieldEnum[]
  }

  /**
   * expenses findMany
   */
  export type expensesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the expenses
     */
    select?: expensesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the expenses
     */
    omit?: expensesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: expensesInclude<ExtArgs> | null
    /**
     * Filter, which expenses to fetch.
     */
    where?: expensesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of expenses to fetch.
     */
    orderBy?: expensesOrderByWithRelationInput | expensesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing expenses.
     */
    cursor?: expensesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` expenses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` expenses.
     */
    skip?: number
    distinct?: ExpensesScalarFieldEnum | ExpensesScalarFieldEnum[]
  }

  /**
   * expenses create
   */
  export type expensesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the expenses
     */
    select?: expensesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the expenses
     */
    omit?: expensesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: expensesInclude<ExtArgs> | null
    /**
     * The data needed to create a expenses.
     */
    data: XOR<expensesCreateInput, expensesUncheckedCreateInput>
  }

  /**
   * expenses createMany
   */
  export type expensesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many expenses.
     */
    data: expensesCreateManyInput | expensesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * expenses createManyAndReturn
   */
  export type expensesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the expenses
     */
    select?: expensesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the expenses
     */
    omit?: expensesOmit<ExtArgs> | null
    /**
     * The data used to create many expenses.
     */
    data: expensesCreateManyInput | expensesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: expensesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * expenses update
   */
  export type expensesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the expenses
     */
    select?: expensesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the expenses
     */
    omit?: expensesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: expensesInclude<ExtArgs> | null
    /**
     * The data needed to update a expenses.
     */
    data: XOR<expensesUpdateInput, expensesUncheckedUpdateInput>
    /**
     * Choose, which expenses to update.
     */
    where: expensesWhereUniqueInput
  }

  /**
   * expenses updateMany
   */
  export type expensesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update expenses.
     */
    data: XOR<expensesUpdateManyMutationInput, expensesUncheckedUpdateManyInput>
    /**
     * Filter which expenses to update
     */
    where?: expensesWhereInput
    /**
     * Limit how many expenses to update.
     */
    limit?: number
  }

  /**
   * expenses updateManyAndReturn
   */
  export type expensesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the expenses
     */
    select?: expensesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the expenses
     */
    omit?: expensesOmit<ExtArgs> | null
    /**
     * The data used to update expenses.
     */
    data: XOR<expensesUpdateManyMutationInput, expensesUncheckedUpdateManyInput>
    /**
     * Filter which expenses to update
     */
    where?: expensesWhereInput
    /**
     * Limit how many expenses to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: expensesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * expenses upsert
   */
  export type expensesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the expenses
     */
    select?: expensesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the expenses
     */
    omit?: expensesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: expensesInclude<ExtArgs> | null
    /**
     * The filter to search for the expenses to update in case it exists.
     */
    where: expensesWhereUniqueInput
    /**
     * In case the expenses found by the `where` argument doesn't exist, create a new expenses with this data.
     */
    create: XOR<expensesCreateInput, expensesUncheckedCreateInput>
    /**
     * In case the expenses was found with the provided `where` argument, update it with this data.
     */
    update: XOR<expensesUpdateInput, expensesUncheckedUpdateInput>
  }

  /**
   * expenses delete
   */
  export type expensesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the expenses
     */
    select?: expensesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the expenses
     */
    omit?: expensesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: expensesInclude<ExtArgs> | null
    /**
     * Filter which expenses to delete.
     */
    where: expensesWhereUniqueInput
  }

  /**
   * expenses deleteMany
   */
  export type expensesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which expenses to delete
     */
    where?: expensesWhereInput
    /**
     * Limit how many expenses to delete.
     */
    limit?: number
  }

  /**
   * expenses.cost_categories
   */
  export type expenses$cost_categoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cost_categories
     */
    select?: cost_categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cost_categories
     */
    omit?: cost_categoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cost_categoriesInclude<ExtArgs> | null
    where?: cost_categoriesWhereInput
  }

  /**
   * expenses.drivers
   */
  export type expenses$driversArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the drivers
     */
    select?: driversSelect<ExtArgs> | null
    /**
     * Omit specific fields from the drivers
     */
    omit?: driversOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: driversInclude<ExtArgs> | null
    where?: driversWhereInput
  }

  /**
   * expenses.vehicles
   */
  export type expenses$vehiclesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vehicles
     */
    select?: vehiclesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the vehicles
     */
    omit?: vehiclesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: vehiclesInclude<ExtArgs> | null
    where?: vehiclesWhereInput
  }

  /**
   * expenses without action
   */
  export type expensesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the expenses
     */
    select?: expensesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the expenses
     */
    omit?: expensesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: expensesInclude<ExtArgs> | null
  }


  /**
   * Model fuel_stations
   */

  export type AggregateFuel_stations = {
    _count: Fuel_stationsCountAggregateOutputType | null
    _avg: Fuel_stationsAvgAggregateOutputType | null
    _sum: Fuel_stationsSumAggregateOutputType | null
    _min: Fuel_stationsMinAggregateOutputType | null
    _max: Fuel_stationsMaxAggregateOutputType | null
  }

  export type Fuel_stationsAvgAggregateOutputType = {
    station_id: number | null
    latitude: Decimal | null
    longitude: Decimal | null
    avg_price_per_gallon: Decimal | null
  }

  export type Fuel_stationsSumAggregateOutputType = {
    station_id: number | null
    latitude: Decimal | null
    longitude: Decimal | null
    avg_price_per_gallon: Decimal | null
  }

  export type Fuel_stationsMinAggregateOutputType = {
    station_id: number | null
    station_name: string | null
    address: string | null
    latitude: Decimal | null
    longitude: Decimal | null
    brand: string | null
    has_fleet_card: boolean | null
    avg_price_per_gallon: Decimal | null
  }

  export type Fuel_stationsMaxAggregateOutputType = {
    station_id: number | null
    station_name: string | null
    address: string | null
    latitude: Decimal | null
    longitude: Decimal | null
    brand: string | null
    has_fleet_card: boolean | null
    avg_price_per_gallon: Decimal | null
  }

  export type Fuel_stationsCountAggregateOutputType = {
    station_id: number
    station_name: number
    address: number
    latitude: number
    longitude: number
    brand: number
    has_fleet_card: number
    avg_price_per_gallon: number
    _all: number
  }


  export type Fuel_stationsAvgAggregateInputType = {
    station_id?: true
    latitude?: true
    longitude?: true
    avg_price_per_gallon?: true
  }

  export type Fuel_stationsSumAggregateInputType = {
    station_id?: true
    latitude?: true
    longitude?: true
    avg_price_per_gallon?: true
  }

  export type Fuel_stationsMinAggregateInputType = {
    station_id?: true
    station_name?: true
    address?: true
    latitude?: true
    longitude?: true
    brand?: true
    has_fleet_card?: true
    avg_price_per_gallon?: true
  }

  export type Fuel_stationsMaxAggregateInputType = {
    station_id?: true
    station_name?: true
    address?: true
    latitude?: true
    longitude?: true
    brand?: true
    has_fleet_card?: true
    avg_price_per_gallon?: true
  }

  export type Fuel_stationsCountAggregateInputType = {
    station_id?: true
    station_name?: true
    address?: true
    latitude?: true
    longitude?: true
    brand?: true
    has_fleet_card?: true
    avg_price_per_gallon?: true
    _all?: true
  }

  export type Fuel_stationsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which fuel_stations to aggregate.
     */
    where?: fuel_stationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of fuel_stations to fetch.
     */
    orderBy?: fuel_stationsOrderByWithRelationInput | fuel_stationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: fuel_stationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` fuel_stations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` fuel_stations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned fuel_stations
    **/
    _count?: true | Fuel_stationsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Fuel_stationsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Fuel_stationsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Fuel_stationsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Fuel_stationsMaxAggregateInputType
  }

  export type GetFuel_stationsAggregateType<T extends Fuel_stationsAggregateArgs> = {
        [P in keyof T & keyof AggregateFuel_stations]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFuel_stations[P]>
      : GetScalarType<T[P], AggregateFuel_stations[P]>
  }




  export type fuel_stationsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: fuel_stationsWhereInput
    orderBy?: fuel_stationsOrderByWithAggregationInput | fuel_stationsOrderByWithAggregationInput[]
    by: Fuel_stationsScalarFieldEnum[] | Fuel_stationsScalarFieldEnum
    having?: fuel_stationsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Fuel_stationsCountAggregateInputType | true
    _avg?: Fuel_stationsAvgAggregateInputType
    _sum?: Fuel_stationsSumAggregateInputType
    _min?: Fuel_stationsMinAggregateInputType
    _max?: Fuel_stationsMaxAggregateInputType
  }

  export type Fuel_stationsGroupByOutputType = {
    station_id: number
    station_name: string | null
    address: string | null
    latitude: Decimal | null
    longitude: Decimal | null
    brand: string | null
    has_fleet_card: boolean | null
    avg_price_per_gallon: Decimal | null
    _count: Fuel_stationsCountAggregateOutputType | null
    _avg: Fuel_stationsAvgAggregateOutputType | null
    _sum: Fuel_stationsSumAggregateOutputType | null
    _min: Fuel_stationsMinAggregateOutputType | null
    _max: Fuel_stationsMaxAggregateOutputType | null
  }

  type GetFuel_stationsGroupByPayload<T extends fuel_stationsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Fuel_stationsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Fuel_stationsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Fuel_stationsGroupByOutputType[P]>
            : GetScalarType<T[P], Fuel_stationsGroupByOutputType[P]>
        }
      >
    >


  export type fuel_stationsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    station_id?: boolean
    station_name?: boolean
    address?: boolean
    latitude?: boolean
    longitude?: boolean
    brand?: boolean
    has_fleet_card?: boolean
    avg_price_per_gallon?: boolean
    fuel_transactions?: boolean | fuel_stations$fuel_transactionsArgs<ExtArgs>
    _count?: boolean | Fuel_stationsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["fuel_stations"]>

  export type fuel_stationsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    station_id?: boolean
    station_name?: boolean
    address?: boolean
    latitude?: boolean
    longitude?: boolean
    brand?: boolean
    has_fleet_card?: boolean
    avg_price_per_gallon?: boolean
  }, ExtArgs["result"]["fuel_stations"]>

  export type fuel_stationsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    station_id?: boolean
    station_name?: boolean
    address?: boolean
    latitude?: boolean
    longitude?: boolean
    brand?: boolean
    has_fleet_card?: boolean
    avg_price_per_gallon?: boolean
  }, ExtArgs["result"]["fuel_stations"]>

  export type fuel_stationsSelectScalar = {
    station_id?: boolean
    station_name?: boolean
    address?: boolean
    latitude?: boolean
    longitude?: boolean
    brand?: boolean
    has_fleet_card?: boolean
    avg_price_per_gallon?: boolean
  }

  export type fuel_stationsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"station_id" | "station_name" | "address" | "latitude" | "longitude" | "brand" | "has_fleet_card" | "avg_price_per_gallon", ExtArgs["result"]["fuel_stations"]>
  export type fuel_stationsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    fuel_transactions?: boolean | fuel_stations$fuel_transactionsArgs<ExtArgs>
    _count?: boolean | Fuel_stationsCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type fuel_stationsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type fuel_stationsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $fuel_stationsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "fuel_stations"
    objects: {
      fuel_transactions: Prisma.$fuel_transactionsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      station_id: number
      station_name: string | null
      address: string | null
      latitude: Prisma.Decimal | null
      longitude: Prisma.Decimal | null
      brand: string | null
      has_fleet_card: boolean | null
      avg_price_per_gallon: Prisma.Decimal | null
    }, ExtArgs["result"]["fuel_stations"]>
    composites: {}
  }

  type fuel_stationsGetPayload<S extends boolean | null | undefined | fuel_stationsDefaultArgs> = $Result.GetResult<Prisma.$fuel_stationsPayload, S>

  type fuel_stationsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<fuel_stationsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Fuel_stationsCountAggregateInputType | true
    }

  export interface fuel_stationsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['fuel_stations'], meta: { name: 'fuel_stations' } }
    /**
     * Find zero or one Fuel_stations that matches the filter.
     * @param {fuel_stationsFindUniqueArgs} args - Arguments to find a Fuel_stations
     * @example
     * // Get one Fuel_stations
     * const fuel_stations = await prisma.fuel_stations.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends fuel_stationsFindUniqueArgs>(args: SelectSubset<T, fuel_stationsFindUniqueArgs<ExtArgs>>): Prisma__fuel_stationsClient<$Result.GetResult<Prisma.$fuel_stationsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Fuel_stations that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {fuel_stationsFindUniqueOrThrowArgs} args - Arguments to find a Fuel_stations
     * @example
     * // Get one Fuel_stations
     * const fuel_stations = await prisma.fuel_stations.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends fuel_stationsFindUniqueOrThrowArgs>(args: SelectSubset<T, fuel_stationsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__fuel_stationsClient<$Result.GetResult<Prisma.$fuel_stationsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Fuel_stations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {fuel_stationsFindFirstArgs} args - Arguments to find a Fuel_stations
     * @example
     * // Get one Fuel_stations
     * const fuel_stations = await prisma.fuel_stations.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends fuel_stationsFindFirstArgs>(args?: SelectSubset<T, fuel_stationsFindFirstArgs<ExtArgs>>): Prisma__fuel_stationsClient<$Result.GetResult<Prisma.$fuel_stationsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Fuel_stations that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {fuel_stationsFindFirstOrThrowArgs} args - Arguments to find a Fuel_stations
     * @example
     * // Get one Fuel_stations
     * const fuel_stations = await prisma.fuel_stations.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends fuel_stationsFindFirstOrThrowArgs>(args?: SelectSubset<T, fuel_stationsFindFirstOrThrowArgs<ExtArgs>>): Prisma__fuel_stationsClient<$Result.GetResult<Prisma.$fuel_stationsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Fuel_stations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {fuel_stationsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Fuel_stations
     * const fuel_stations = await prisma.fuel_stations.findMany()
     * 
     * // Get first 10 Fuel_stations
     * const fuel_stations = await prisma.fuel_stations.findMany({ take: 10 })
     * 
     * // Only select the `station_id`
     * const fuel_stationsWithStation_idOnly = await prisma.fuel_stations.findMany({ select: { station_id: true } })
     * 
     */
    findMany<T extends fuel_stationsFindManyArgs>(args?: SelectSubset<T, fuel_stationsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$fuel_stationsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Fuel_stations.
     * @param {fuel_stationsCreateArgs} args - Arguments to create a Fuel_stations.
     * @example
     * // Create one Fuel_stations
     * const Fuel_stations = await prisma.fuel_stations.create({
     *   data: {
     *     // ... data to create a Fuel_stations
     *   }
     * })
     * 
     */
    create<T extends fuel_stationsCreateArgs>(args: SelectSubset<T, fuel_stationsCreateArgs<ExtArgs>>): Prisma__fuel_stationsClient<$Result.GetResult<Prisma.$fuel_stationsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Fuel_stations.
     * @param {fuel_stationsCreateManyArgs} args - Arguments to create many Fuel_stations.
     * @example
     * // Create many Fuel_stations
     * const fuel_stations = await prisma.fuel_stations.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends fuel_stationsCreateManyArgs>(args?: SelectSubset<T, fuel_stationsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Fuel_stations and returns the data saved in the database.
     * @param {fuel_stationsCreateManyAndReturnArgs} args - Arguments to create many Fuel_stations.
     * @example
     * // Create many Fuel_stations
     * const fuel_stations = await prisma.fuel_stations.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Fuel_stations and only return the `station_id`
     * const fuel_stationsWithStation_idOnly = await prisma.fuel_stations.createManyAndReturn({
     *   select: { station_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends fuel_stationsCreateManyAndReturnArgs>(args?: SelectSubset<T, fuel_stationsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$fuel_stationsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Fuel_stations.
     * @param {fuel_stationsDeleteArgs} args - Arguments to delete one Fuel_stations.
     * @example
     * // Delete one Fuel_stations
     * const Fuel_stations = await prisma.fuel_stations.delete({
     *   where: {
     *     // ... filter to delete one Fuel_stations
     *   }
     * })
     * 
     */
    delete<T extends fuel_stationsDeleteArgs>(args: SelectSubset<T, fuel_stationsDeleteArgs<ExtArgs>>): Prisma__fuel_stationsClient<$Result.GetResult<Prisma.$fuel_stationsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Fuel_stations.
     * @param {fuel_stationsUpdateArgs} args - Arguments to update one Fuel_stations.
     * @example
     * // Update one Fuel_stations
     * const fuel_stations = await prisma.fuel_stations.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends fuel_stationsUpdateArgs>(args: SelectSubset<T, fuel_stationsUpdateArgs<ExtArgs>>): Prisma__fuel_stationsClient<$Result.GetResult<Prisma.$fuel_stationsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Fuel_stations.
     * @param {fuel_stationsDeleteManyArgs} args - Arguments to filter Fuel_stations to delete.
     * @example
     * // Delete a few Fuel_stations
     * const { count } = await prisma.fuel_stations.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends fuel_stationsDeleteManyArgs>(args?: SelectSubset<T, fuel_stationsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Fuel_stations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {fuel_stationsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Fuel_stations
     * const fuel_stations = await prisma.fuel_stations.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends fuel_stationsUpdateManyArgs>(args: SelectSubset<T, fuel_stationsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Fuel_stations and returns the data updated in the database.
     * @param {fuel_stationsUpdateManyAndReturnArgs} args - Arguments to update many Fuel_stations.
     * @example
     * // Update many Fuel_stations
     * const fuel_stations = await prisma.fuel_stations.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Fuel_stations and only return the `station_id`
     * const fuel_stationsWithStation_idOnly = await prisma.fuel_stations.updateManyAndReturn({
     *   select: { station_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends fuel_stationsUpdateManyAndReturnArgs>(args: SelectSubset<T, fuel_stationsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$fuel_stationsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Fuel_stations.
     * @param {fuel_stationsUpsertArgs} args - Arguments to update or create a Fuel_stations.
     * @example
     * // Update or create a Fuel_stations
     * const fuel_stations = await prisma.fuel_stations.upsert({
     *   create: {
     *     // ... data to create a Fuel_stations
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Fuel_stations we want to update
     *   }
     * })
     */
    upsert<T extends fuel_stationsUpsertArgs>(args: SelectSubset<T, fuel_stationsUpsertArgs<ExtArgs>>): Prisma__fuel_stationsClient<$Result.GetResult<Prisma.$fuel_stationsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Fuel_stations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {fuel_stationsCountArgs} args - Arguments to filter Fuel_stations to count.
     * @example
     * // Count the number of Fuel_stations
     * const count = await prisma.fuel_stations.count({
     *   where: {
     *     // ... the filter for the Fuel_stations we want to count
     *   }
     * })
    **/
    count<T extends fuel_stationsCountArgs>(
      args?: Subset<T, fuel_stationsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Fuel_stationsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Fuel_stations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Fuel_stationsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Fuel_stationsAggregateArgs>(args: Subset<T, Fuel_stationsAggregateArgs>): Prisma.PrismaPromise<GetFuel_stationsAggregateType<T>>

    /**
     * Group by Fuel_stations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {fuel_stationsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends fuel_stationsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: fuel_stationsGroupByArgs['orderBy'] }
        : { orderBy?: fuel_stationsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, fuel_stationsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFuel_stationsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the fuel_stations model
   */
  readonly fields: fuel_stationsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for fuel_stations.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__fuel_stationsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    fuel_transactions<T extends fuel_stations$fuel_transactionsArgs<ExtArgs> = {}>(args?: Subset<T, fuel_stations$fuel_transactionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$fuel_transactionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the fuel_stations model
   */
  interface fuel_stationsFieldRefs {
    readonly station_id: FieldRef<"fuel_stations", 'Int'>
    readonly station_name: FieldRef<"fuel_stations", 'String'>
    readonly address: FieldRef<"fuel_stations", 'String'>
    readonly latitude: FieldRef<"fuel_stations", 'Decimal'>
    readonly longitude: FieldRef<"fuel_stations", 'Decimal'>
    readonly brand: FieldRef<"fuel_stations", 'String'>
    readonly has_fleet_card: FieldRef<"fuel_stations", 'Boolean'>
    readonly avg_price_per_gallon: FieldRef<"fuel_stations", 'Decimal'>
  }
    

  // Custom InputTypes
  /**
   * fuel_stations findUnique
   */
  export type fuel_stationsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fuel_stations
     */
    select?: fuel_stationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the fuel_stations
     */
    omit?: fuel_stationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fuel_stationsInclude<ExtArgs> | null
    /**
     * Filter, which fuel_stations to fetch.
     */
    where: fuel_stationsWhereUniqueInput
  }

  /**
   * fuel_stations findUniqueOrThrow
   */
  export type fuel_stationsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fuel_stations
     */
    select?: fuel_stationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the fuel_stations
     */
    omit?: fuel_stationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fuel_stationsInclude<ExtArgs> | null
    /**
     * Filter, which fuel_stations to fetch.
     */
    where: fuel_stationsWhereUniqueInput
  }

  /**
   * fuel_stations findFirst
   */
  export type fuel_stationsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fuel_stations
     */
    select?: fuel_stationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the fuel_stations
     */
    omit?: fuel_stationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fuel_stationsInclude<ExtArgs> | null
    /**
     * Filter, which fuel_stations to fetch.
     */
    where?: fuel_stationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of fuel_stations to fetch.
     */
    orderBy?: fuel_stationsOrderByWithRelationInput | fuel_stationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for fuel_stations.
     */
    cursor?: fuel_stationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` fuel_stations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` fuel_stations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of fuel_stations.
     */
    distinct?: Fuel_stationsScalarFieldEnum | Fuel_stationsScalarFieldEnum[]
  }

  /**
   * fuel_stations findFirstOrThrow
   */
  export type fuel_stationsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fuel_stations
     */
    select?: fuel_stationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the fuel_stations
     */
    omit?: fuel_stationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fuel_stationsInclude<ExtArgs> | null
    /**
     * Filter, which fuel_stations to fetch.
     */
    where?: fuel_stationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of fuel_stations to fetch.
     */
    orderBy?: fuel_stationsOrderByWithRelationInput | fuel_stationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for fuel_stations.
     */
    cursor?: fuel_stationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` fuel_stations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` fuel_stations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of fuel_stations.
     */
    distinct?: Fuel_stationsScalarFieldEnum | Fuel_stationsScalarFieldEnum[]
  }

  /**
   * fuel_stations findMany
   */
  export type fuel_stationsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fuel_stations
     */
    select?: fuel_stationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the fuel_stations
     */
    omit?: fuel_stationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fuel_stationsInclude<ExtArgs> | null
    /**
     * Filter, which fuel_stations to fetch.
     */
    where?: fuel_stationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of fuel_stations to fetch.
     */
    orderBy?: fuel_stationsOrderByWithRelationInput | fuel_stationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing fuel_stations.
     */
    cursor?: fuel_stationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` fuel_stations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` fuel_stations.
     */
    skip?: number
    distinct?: Fuel_stationsScalarFieldEnum | Fuel_stationsScalarFieldEnum[]
  }

  /**
   * fuel_stations create
   */
  export type fuel_stationsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fuel_stations
     */
    select?: fuel_stationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the fuel_stations
     */
    omit?: fuel_stationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fuel_stationsInclude<ExtArgs> | null
    /**
     * The data needed to create a fuel_stations.
     */
    data?: XOR<fuel_stationsCreateInput, fuel_stationsUncheckedCreateInput>
  }

  /**
   * fuel_stations createMany
   */
  export type fuel_stationsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many fuel_stations.
     */
    data: fuel_stationsCreateManyInput | fuel_stationsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * fuel_stations createManyAndReturn
   */
  export type fuel_stationsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fuel_stations
     */
    select?: fuel_stationsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the fuel_stations
     */
    omit?: fuel_stationsOmit<ExtArgs> | null
    /**
     * The data used to create many fuel_stations.
     */
    data: fuel_stationsCreateManyInput | fuel_stationsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * fuel_stations update
   */
  export type fuel_stationsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fuel_stations
     */
    select?: fuel_stationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the fuel_stations
     */
    omit?: fuel_stationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fuel_stationsInclude<ExtArgs> | null
    /**
     * The data needed to update a fuel_stations.
     */
    data: XOR<fuel_stationsUpdateInput, fuel_stationsUncheckedUpdateInput>
    /**
     * Choose, which fuel_stations to update.
     */
    where: fuel_stationsWhereUniqueInput
  }

  /**
   * fuel_stations updateMany
   */
  export type fuel_stationsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update fuel_stations.
     */
    data: XOR<fuel_stationsUpdateManyMutationInput, fuel_stationsUncheckedUpdateManyInput>
    /**
     * Filter which fuel_stations to update
     */
    where?: fuel_stationsWhereInput
    /**
     * Limit how many fuel_stations to update.
     */
    limit?: number
  }

  /**
   * fuel_stations updateManyAndReturn
   */
  export type fuel_stationsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fuel_stations
     */
    select?: fuel_stationsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the fuel_stations
     */
    omit?: fuel_stationsOmit<ExtArgs> | null
    /**
     * The data used to update fuel_stations.
     */
    data: XOR<fuel_stationsUpdateManyMutationInput, fuel_stationsUncheckedUpdateManyInput>
    /**
     * Filter which fuel_stations to update
     */
    where?: fuel_stationsWhereInput
    /**
     * Limit how many fuel_stations to update.
     */
    limit?: number
  }

  /**
   * fuel_stations upsert
   */
  export type fuel_stationsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fuel_stations
     */
    select?: fuel_stationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the fuel_stations
     */
    omit?: fuel_stationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fuel_stationsInclude<ExtArgs> | null
    /**
     * The filter to search for the fuel_stations to update in case it exists.
     */
    where: fuel_stationsWhereUniqueInput
    /**
     * In case the fuel_stations found by the `where` argument doesn't exist, create a new fuel_stations with this data.
     */
    create: XOR<fuel_stationsCreateInput, fuel_stationsUncheckedCreateInput>
    /**
     * In case the fuel_stations was found with the provided `where` argument, update it with this data.
     */
    update: XOR<fuel_stationsUpdateInput, fuel_stationsUncheckedUpdateInput>
  }

  /**
   * fuel_stations delete
   */
  export type fuel_stationsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fuel_stations
     */
    select?: fuel_stationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the fuel_stations
     */
    omit?: fuel_stationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fuel_stationsInclude<ExtArgs> | null
    /**
     * Filter which fuel_stations to delete.
     */
    where: fuel_stationsWhereUniqueInput
  }

  /**
   * fuel_stations deleteMany
   */
  export type fuel_stationsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which fuel_stations to delete
     */
    where?: fuel_stationsWhereInput
    /**
     * Limit how many fuel_stations to delete.
     */
    limit?: number
  }

  /**
   * fuel_stations.fuel_transactions
   */
  export type fuel_stations$fuel_transactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fuel_transactions
     */
    select?: fuel_transactionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the fuel_transactions
     */
    omit?: fuel_transactionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fuel_transactionsInclude<ExtArgs> | null
    where?: fuel_transactionsWhereInput
    orderBy?: fuel_transactionsOrderByWithRelationInput | fuel_transactionsOrderByWithRelationInput[]
    cursor?: fuel_transactionsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Fuel_transactionsScalarFieldEnum | Fuel_transactionsScalarFieldEnum[]
  }

  /**
   * fuel_stations without action
   */
  export type fuel_stationsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fuel_stations
     */
    select?: fuel_stationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the fuel_stations
     */
    omit?: fuel_stationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fuel_stationsInclude<ExtArgs> | null
  }


  /**
   * Model fuel_transactions
   */

  export type AggregateFuel_transactions = {
    _count: Fuel_transactionsCountAggregateOutputType | null
    _avg: Fuel_transactionsAvgAggregateOutputType | null
    _sum: Fuel_transactionsSumAggregateOutputType | null
    _min: Fuel_transactionsMinAggregateOutputType | null
    _max: Fuel_transactionsMaxAggregateOutputType | null
  }

  export type Fuel_transactionsAvgAggregateOutputType = {
    transaction_id: number | null
    vehicle_id: number | null
    driver_id: number | null
    fuel_station_id: number | null
    odometer_reading: Decimal | null
    gallons_purchased: Decimal | null
    price_per_gallon: Decimal | null
    total_amount: Decimal | null
    mpg_calculated: Decimal | null
  }

  export type Fuel_transactionsSumAggregateOutputType = {
    transaction_id: number | null
    vehicle_id: number | null
    driver_id: number | null
    fuel_station_id: number | null
    odometer_reading: Decimal | null
    gallons_purchased: Decimal | null
    price_per_gallon: Decimal | null
    total_amount: Decimal | null
    mpg_calculated: Decimal | null
  }

  export type Fuel_transactionsMinAggregateOutputType = {
    transaction_id: number | null
    vehicle_id: number | null
    driver_id: number | null
    fuel_station_id: number | null
    transaction_date: Date | null
    odometer_reading: Decimal | null
    gallons_purchased: Decimal | null
    price_per_gallon: Decimal | null
    total_amount: Decimal | null
    fuel_type: string | null
    payment_method: string | null
    card_number_last_four: string | null
    receipt_number: string | null
    mpg_calculated: Decimal | null
    notes: string | null
  }

  export type Fuel_transactionsMaxAggregateOutputType = {
    transaction_id: number | null
    vehicle_id: number | null
    driver_id: number | null
    fuel_station_id: number | null
    transaction_date: Date | null
    odometer_reading: Decimal | null
    gallons_purchased: Decimal | null
    price_per_gallon: Decimal | null
    total_amount: Decimal | null
    fuel_type: string | null
    payment_method: string | null
    card_number_last_four: string | null
    receipt_number: string | null
    mpg_calculated: Decimal | null
    notes: string | null
  }

  export type Fuel_transactionsCountAggregateOutputType = {
    transaction_id: number
    vehicle_id: number
    driver_id: number
    fuel_station_id: number
    transaction_date: number
    odometer_reading: number
    gallons_purchased: number
    price_per_gallon: number
    total_amount: number
    fuel_type: number
    payment_method: number
    card_number_last_four: number
    receipt_number: number
    mpg_calculated: number
    notes: number
    _all: number
  }


  export type Fuel_transactionsAvgAggregateInputType = {
    transaction_id?: true
    vehicle_id?: true
    driver_id?: true
    fuel_station_id?: true
    odometer_reading?: true
    gallons_purchased?: true
    price_per_gallon?: true
    total_amount?: true
    mpg_calculated?: true
  }

  export type Fuel_transactionsSumAggregateInputType = {
    transaction_id?: true
    vehicle_id?: true
    driver_id?: true
    fuel_station_id?: true
    odometer_reading?: true
    gallons_purchased?: true
    price_per_gallon?: true
    total_amount?: true
    mpg_calculated?: true
  }

  export type Fuel_transactionsMinAggregateInputType = {
    transaction_id?: true
    vehicle_id?: true
    driver_id?: true
    fuel_station_id?: true
    transaction_date?: true
    odometer_reading?: true
    gallons_purchased?: true
    price_per_gallon?: true
    total_amount?: true
    fuel_type?: true
    payment_method?: true
    card_number_last_four?: true
    receipt_number?: true
    mpg_calculated?: true
    notes?: true
  }

  export type Fuel_transactionsMaxAggregateInputType = {
    transaction_id?: true
    vehicle_id?: true
    driver_id?: true
    fuel_station_id?: true
    transaction_date?: true
    odometer_reading?: true
    gallons_purchased?: true
    price_per_gallon?: true
    total_amount?: true
    fuel_type?: true
    payment_method?: true
    card_number_last_four?: true
    receipt_number?: true
    mpg_calculated?: true
    notes?: true
  }

  export type Fuel_transactionsCountAggregateInputType = {
    transaction_id?: true
    vehicle_id?: true
    driver_id?: true
    fuel_station_id?: true
    transaction_date?: true
    odometer_reading?: true
    gallons_purchased?: true
    price_per_gallon?: true
    total_amount?: true
    fuel_type?: true
    payment_method?: true
    card_number_last_four?: true
    receipt_number?: true
    mpg_calculated?: true
    notes?: true
    _all?: true
  }

  export type Fuel_transactionsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which fuel_transactions to aggregate.
     */
    where?: fuel_transactionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of fuel_transactions to fetch.
     */
    orderBy?: fuel_transactionsOrderByWithRelationInput | fuel_transactionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: fuel_transactionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` fuel_transactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` fuel_transactions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned fuel_transactions
    **/
    _count?: true | Fuel_transactionsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Fuel_transactionsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Fuel_transactionsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Fuel_transactionsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Fuel_transactionsMaxAggregateInputType
  }

  export type GetFuel_transactionsAggregateType<T extends Fuel_transactionsAggregateArgs> = {
        [P in keyof T & keyof AggregateFuel_transactions]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFuel_transactions[P]>
      : GetScalarType<T[P], AggregateFuel_transactions[P]>
  }




  export type fuel_transactionsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: fuel_transactionsWhereInput
    orderBy?: fuel_transactionsOrderByWithAggregationInput | fuel_transactionsOrderByWithAggregationInput[]
    by: Fuel_transactionsScalarFieldEnum[] | Fuel_transactionsScalarFieldEnum
    having?: fuel_transactionsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Fuel_transactionsCountAggregateInputType | true
    _avg?: Fuel_transactionsAvgAggregateInputType
    _sum?: Fuel_transactionsSumAggregateInputType
    _min?: Fuel_transactionsMinAggregateInputType
    _max?: Fuel_transactionsMaxAggregateInputType
  }

  export type Fuel_transactionsGroupByOutputType = {
    transaction_id: number
    vehicle_id: number | null
    driver_id: number | null
    fuel_station_id: number | null
    transaction_date: Date
    odometer_reading: Decimal | null
    gallons_purchased: Decimal | null
    price_per_gallon: Decimal | null
    total_amount: Decimal | null
    fuel_type: string | null
    payment_method: string | null
    card_number_last_four: string | null
    receipt_number: string | null
    mpg_calculated: Decimal | null
    notes: string | null
    _count: Fuel_transactionsCountAggregateOutputType | null
    _avg: Fuel_transactionsAvgAggregateOutputType | null
    _sum: Fuel_transactionsSumAggregateOutputType | null
    _min: Fuel_transactionsMinAggregateOutputType | null
    _max: Fuel_transactionsMaxAggregateOutputType | null
  }

  type GetFuel_transactionsGroupByPayload<T extends fuel_transactionsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Fuel_transactionsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Fuel_transactionsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Fuel_transactionsGroupByOutputType[P]>
            : GetScalarType<T[P], Fuel_transactionsGroupByOutputType[P]>
        }
      >
    >


  export type fuel_transactionsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    transaction_id?: boolean
    vehicle_id?: boolean
    driver_id?: boolean
    fuel_station_id?: boolean
    transaction_date?: boolean
    odometer_reading?: boolean
    gallons_purchased?: boolean
    price_per_gallon?: boolean
    total_amount?: boolean
    fuel_type?: boolean
    payment_method?: boolean
    card_number_last_four?: boolean
    receipt_number?: boolean
    mpg_calculated?: boolean
    notes?: boolean
    drivers?: boolean | fuel_transactions$driversArgs<ExtArgs>
    fuel_stations?: boolean | fuel_transactions$fuel_stationsArgs<ExtArgs>
    vehicles?: boolean | fuel_transactions$vehiclesArgs<ExtArgs>
  }, ExtArgs["result"]["fuel_transactions"]>

  export type fuel_transactionsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    transaction_id?: boolean
    vehicle_id?: boolean
    driver_id?: boolean
    fuel_station_id?: boolean
    transaction_date?: boolean
    odometer_reading?: boolean
    gallons_purchased?: boolean
    price_per_gallon?: boolean
    total_amount?: boolean
    fuel_type?: boolean
    payment_method?: boolean
    card_number_last_four?: boolean
    receipt_number?: boolean
    mpg_calculated?: boolean
    notes?: boolean
    drivers?: boolean | fuel_transactions$driversArgs<ExtArgs>
    fuel_stations?: boolean | fuel_transactions$fuel_stationsArgs<ExtArgs>
    vehicles?: boolean | fuel_transactions$vehiclesArgs<ExtArgs>
  }, ExtArgs["result"]["fuel_transactions"]>

  export type fuel_transactionsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    transaction_id?: boolean
    vehicle_id?: boolean
    driver_id?: boolean
    fuel_station_id?: boolean
    transaction_date?: boolean
    odometer_reading?: boolean
    gallons_purchased?: boolean
    price_per_gallon?: boolean
    total_amount?: boolean
    fuel_type?: boolean
    payment_method?: boolean
    card_number_last_four?: boolean
    receipt_number?: boolean
    mpg_calculated?: boolean
    notes?: boolean
    drivers?: boolean | fuel_transactions$driversArgs<ExtArgs>
    fuel_stations?: boolean | fuel_transactions$fuel_stationsArgs<ExtArgs>
    vehicles?: boolean | fuel_transactions$vehiclesArgs<ExtArgs>
  }, ExtArgs["result"]["fuel_transactions"]>

  export type fuel_transactionsSelectScalar = {
    transaction_id?: boolean
    vehicle_id?: boolean
    driver_id?: boolean
    fuel_station_id?: boolean
    transaction_date?: boolean
    odometer_reading?: boolean
    gallons_purchased?: boolean
    price_per_gallon?: boolean
    total_amount?: boolean
    fuel_type?: boolean
    payment_method?: boolean
    card_number_last_four?: boolean
    receipt_number?: boolean
    mpg_calculated?: boolean
    notes?: boolean
  }

  export type fuel_transactionsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"transaction_id" | "vehicle_id" | "driver_id" | "fuel_station_id" | "transaction_date" | "odometer_reading" | "gallons_purchased" | "price_per_gallon" | "total_amount" | "fuel_type" | "payment_method" | "card_number_last_four" | "receipt_number" | "mpg_calculated" | "notes", ExtArgs["result"]["fuel_transactions"]>
  export type fuel_transactionsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    drivers?: boolean | fuel_transactions$driversArgs<ExtArgs>
    fuel_stations?: boolean | fuel_transactions$fuel_stationsArgs<ExtArgs>
    vehicles?: boolean | fuel_transactions$vehiclesArgs<ExtArgs>
  }
  export type fuel_transactionsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    drivers?: boolean | fuel_transactions$driversArgs<ExtArgs>
    fuel_stations?: boolean | fuel_transactions$fuel_stationsArgs<ExtArgs>
    vehicles?: boolean | fuel_transactions$vehiclesArgs<ExtArgs>
  }
  export type fuel_transactionsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    drivers?: boolean | fuel_transactions$driversArgs<ExtArgs>
    fuel_stations?: boolean | fuel_transactions$fuel_stationsArgs<ExtArgs>
    vehicles?: boolean | fuel_transactions$vehiclesArgs<ExtArgs>
  }

  export type $fuel_transactionsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "fuel_transactions"
    objects: {
      drivers: Prisma.$driversPayload<ExtArgs> | null
      fuel_stations: Prisma.$fuel_stationsPayload<ExtArgs> | null
      vehicles: Prisma.$vehiclesPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      transaction_id: number
      vehicle_id: number | null
      driver_id: number | null
      fuel_station_id: number | null
      transaction_date: Date
      odometer_reading: Prisma.Decimal | null
      gallons_purchased: Prisma.Decimal | null
      price_per_gallon: Prisma.Decimal | null
      total_amount: Prisma.Decimal | null
      fuel_type: string | null
      payment_method: string | null
      card_number_last_four: string | null
      receipt_number: string | null
      mpg_calculated: Prisma.Decimal | null
      notes: string | null
    }, ExtArgs["result"]["fuel_transactions"]>
    composites: {}
  }

  type fuel_transactionsGetPayload<S extends boolean | null | undefined | fuel_transactionsDefaultArgs> = $Result.GetResult<Prisma.$fuel_transactionsPayload, S>

  type fuel_transactionsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<fuel_transactionsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Fuel_transactionsCountAggregateInputType | true
    }

  export interface fuel_transactionsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['fuel_transactions'], meta: { name: 'fuel_transactions' } }
    /**
     * Find zero or one Fuel_transactions that matches the filter.
     * @param {fuel_transactionsFindUniqueArgs} args - Arguments to find a Fuel_transactions
     * @example
     * // Get one Fuel_transactions
     * const fuel_transactions = await prisma.fuel_transactions.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends fuel_transactionsFindUniqueArgs>(args: SelectSubset<T, fuel_transactionsFindUniqueArgs<ExtArgs>>): Prisma__fuel_transactionsClient<$Result.GetResult<Prisma.$fuel_transactionsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Fuel_transactions that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {fuel_transactionsFindUniqueOrThrowArgs} args - Arguments to find a Fuel_transactions
     * @example
     * // Get one Fuel_transactions
     * const fuel_transactions = await prisma.fuel_transactions.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends fuel_transactionsFindUniqueOrThrowArgs>(args: SelectSubset<T, fuel_transactionsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__fuel_transactionsClient<$Result.GetResult<Prisma.$fuel_transactionsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Fuel_transactions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {fuel_transactionsFindFirstArgs} args - Arguments to find a Fuel_transactions
     * @example
     * // Get one Fuel_transactions
     * const fuel_transactions = await prisma.fuel_transactions.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends fuel_transactionsFindFirstArgs>(args?: SelectSubset<T, fuel_transactionsFindFirstArgs<ExtArgs>>): Prisma__fuel_transactionsClient<$Result.GetResult<Prisma.$fuel_transactionsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Fuel_transactions that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {fuel_transactionsFindFirstOrThrowArgs} args - Arguments to find a Fuel_transactions
     * @example
     * // Get one Fuel_transactions
     * const fuel_transactions = await prisma.fuel_transactions.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends fuel_transactionsFindFirstOrThrowArgs>(args?: SelectSubset<T, fuel_transactionsFindFirstOrThrowArgs<ExtArgs>>): Prisma__fuel_transactionsClient<$Result.GetResult<Prisma.$fuel_transactionsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Fuel_transactions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {fuel_transactionsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Fuel_transactions
     * const fuel_transactions = await prisma.fuel_transactions.findMany()
     * 
     * // Get first 10 Fuel_transactions
     * const fuel_transactions = await prisma.fuel_transactions.findMany({ take: 10 })
     * 
     * // Only select the `transaction_id`
     * const fuel_transactionsWithTransaction_idOnly = await prisma.fuel_transactions.findMany({ select: { transaction_id: true } })
     * 
     */
    findMany<T extends fuel_transactionsFindManyArgs>(args?: SelectSubset<T, fuel_transactionsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$fuel_transactionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Fuel_transactions.
     * @param {fuel_transactionsCreateArgs} args - Arguments to create a Fuel_transactions.
     * @example
     * // Create one Fuel_transactions
     * const Fuel_transactions = await prisma.fuel_transactions.create({
     *   data: {
     *     // ... data to create a Fuel_transactions
     *   }
     * })
     * 
     */
    create<T extends fuel_transactionsCreateArgs>(args: SelectSubset<T, fuel_transactionsCreateArgs<ExtArgs>>): Prisma__fuel_transactionsClient<$Result.GetResult<Prisma.$fuel_transactionsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Fuel_transactions.
     * @param {fuel_transactionsCreateManyArgs} args - Arguments to create many Fuel_transactions.
     * @example
     * // Create many Fuel_transactions
     * const fuel_transactions = await prisma.fuel_transactions.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends fuel_transactionsCreateManyArgs>(args?: SelectSubset<T, fuel_transactionsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Fuel_transactions and returns the data saved in the database.
     * @param {fuel_transactionsCreateManyAndReturnArgs} args - Arguments to create many Fuel_transactions.
     * @example
     * // Create many Fuel_transactions
     * const fuel_transactions = await prisma.fuel_transactions.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Fuel_transactions and only return the `transaction_id`
     * const fuel_transactionsWithTransaction_idOnly = await prisma.fuel_transactions.createManyAndReturn({
     *   select: { transaction_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends fuel_transactionsCreateManyAndReturnArgs>(args?: SelectSubset<T, fuel_transactionsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$fuel_transactionsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Fuel_transactions.
     * @param {fuel_transactionsDeleteArgs} args - Arguments to delete one Fuel_transactions.
     * @example
     * // Delete one Fuel_transactions
     * const Fuel_transactions = await prisma.fuel_transactions.delete({
     *   where: {
     *     // ... filter to delete one Fuel_transactions
     *   }
     * })
     * 
     */
    delete<T extends fuel_transactionsDeleteArgs>(args: SelectSubset<T, fuel_transactionsDeleteArgs<ExtArgs>>): Prisma__fuel_transactionsClient<$Result.GetResult<Prisma.$fuel_transactionsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Fuel_transactions.
     * @param {fuel_transactionsUpdateArgs} args - Arguments to update one Fuel_transactions.
     * @example
     * // Update one Fuel_transactions
     * const fuel_transactions = await prisma.fuel_transactions.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends fuel_transactionsUpdateArgs>(args: SelectSubset<T, fuel_transactionsUpdateArgs<ExtArgs>>): Prisma__fuel_transactionsClient<$Result.GetResult<Prisma.$fuel_transactionsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Fuel_transactions.
     * @param {fuel_transactionsDeleteManyArgs} args - Arguments to filter Fuel_transactions to delete.
     * @example
     * // Delete a few Fuel_transactions
     * const { count } = await prisma.fuel_transactions.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends fuel_transactionsDeleteManyArgs>(args?: SelectSubset<T, fuel_transactionsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Fuel_transactions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {fuel_transactionsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Fuel_transactions
     * const fuel_transactions = await prisma.fuel_transactions.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends fuel_transactionsUpdateManyArgs>(args: SelectSubset<T, fuel_transactionsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Fuel_transactions and returns the data updated in the database.
     * @param {fuel_transactionsUpdateManyAndReturnArgs} args - Arguments to update many Fuel_transactions.
     * @example
     * // Update many Fuel_transactions
     * const fuel_transactions = await prisma.fuel_transactions.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Fuel_transactions and only return the `transaction_id`
     * const fuel_transactionsWithTransaction_idOnly = await prisma.fuel_transactions.updateManyAndReturn({
     *   select: { transaction_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends fuel_transactionsUpdateManyAndReturnArgs>(args: SelectSubset<T, fuel_transactionsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$fuel_transactionsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Fuel_transactions.
     * @param {fuel_transactionsUpsertArgs} args - Arguments to update or create a Fuel_transactions.
     * @example
     * // Update or create a Fuel_transactions
     * const fuel_transactions = await prisma.fuel_transactions.upsert({
     *   create: {
     *     // ... data to create a Fuel_transactions
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Fuel_transactions we want to update
     *   }
     * })
     */
    upsert<T extends fuel_transactionsUpsertArgs>(args: SelectSubset<T, fuel_transactionsUpsertArgs<ExtArgs>>): Prisma__fuel_transactionsClient<$Result.GetResult<Prisma.$fuel_transactionsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Fuel_transactions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {fuel_transactionsCountArgs} args - Arguments to filter Fuel_transactions to count.
     * @example
     * // Count the number of Fuel_transactions
     * const count = await prisma.fuel_transactions.count({
     *   where: {
     *     // ... the filter for the Fuel_transactions we want to count
     *   }
     * })
    **/
    count<T extends fuel_transactionsCountArgs>(
      args?: Subset<T, fuel_transactionsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Fuel_transactionsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Fuel_transactions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Fuel_transactionsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Fuel_transactionsAggregateArgs>(args: Subset<T, Fuel_transactionsAggregateArgs>): Prisma.PrismaPromise<GetFuel_transactionsAggregateType<T>>

    /**
     * Group by Fuel_transactions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {fuel_transactionsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends fuel_transactionsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: fuel_transactionsGroupByArgs['orderBy'] }
        : { orderBy?: fuel_transactionsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, fuel_transactionsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFuel_transactionsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the fuel_transactions model
   */
  readonly fields: fuel_transactionsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for fuel_transactions.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__fuel_transactionsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    drivers<T extends fuel_transactions$driversArgs<ExtArgs> = {}>(args?: Subset<T, fuel_transactions$driversArgs<ExtArgs>>): Prisma__driversClient<$Result.GetResult<Prisma.$driversPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    fuel_stations<T extends fuel_transactions$fuel_stationsArgs<ExtArgs> = {}>(args?: Subset<T, fuel_transactions$fuel_stationsArgs<ExtArgs>>): Prisma__fuel_stationsClient<$Result.GetResult<Prisma.$fuel_stationsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    vehicles<T extends fuel_transactions$vehiclesArgs<ExtArgs> = {}>(args?: Subset<T, fuel_transactions$vehiclesArgs<ExtArgs>>): Prisma__vehiclesClient<$Result.GetResult<Prisma.$vehiclesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the fuel_transactions model
   */
  interface fuel_transactionsFieldRefs {
    readonly transaction_id: FieldRef<"fuel_transactions", 'Int'>
    readonly vehicle_id: FieldRef<"fuel_transactions", 'Int'>
    readonly driver_id: FieldRef<"fuel_transactions", 'Int'>
    readonly fuel_station_id: FieldRef<"fuel_transactions", 'Int'>
    readonly transaction_date: FieldRef<"fuel_transactions", 'DateTime'>
    readonly odometer_reading: FieldRef<"fuel_transactions", 'Decimal'>
    readonly gallons_purchased: FieldRef<"fuel_transactions", 'Decimal'>
    readonly price_per_gallon: FieldRef<"fuel_transactions", 'Decimal'>
    readonly total_amount: FieldRef<"fuel_transactions", 'Decimal'>
    readonly fuel_type: FieldRef<"fuel_transactions", 'String'>
    readonly payment_method: FieldRef<"fuel_transactions", 'String'>
    readonly card_number_last_four: FieldRef<"fuel_transactions", 'String'>
    readonly receipt_number: FieldRef<"fuel_transactions", 'String'>
    readonly mpg_calculated: FieldRef<"fuel_transactions", 'Decimal'>
    readonly notes: FieldRef<"fuel_transactions", 'String'>
  }
    

  // Custom InputTypes
  /**
   * fuel_transactions findUnique
   */
  export type fuel_transactionsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fuel_transactions
     */
    select?: fuel_transactionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the fuel_transactions
     */
    omit?: fuel_transactionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fuel_transactionsInclude<ExtArgs> | null
    /**
     * Filter, which fuel_transactions to fetch.
     */
    where: fuel_transactionsWhereUniqueInput
  }

  /**
   * fuel_transactions findUniqueOrThrow
   */
  export type fuel_transactionsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fuel_transactions
     */
    select?: fuel_transactionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the fuel_transactions
     */
    omit?: fuel_transactionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fuel_transactionsInclude<ExtArgs> | null
    /**
     * Filter, which fuel_transactions to fetch.
     */
    where: fuel_transactionsWhereUniqueInput
  }

  /**
   * fuel_transactions findFirst
   */
  export type fuel_transactionsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fuel_transactions
     */
    select?: fuel_transactionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the fuel_transactions
     */
    omit?: fuel_transactionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fuel_transactionsInclude<ExtArgs> | null
    /**
     * Filter, which fuel_transactions to fetch.
     */
    where?: fuel_transactionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of fuel_transactions to fetch.
     */
    orderBy?: fuel_transactionsOrderByWithRelationInput | fuel_transactionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for fuel_transactions.
     */
    cursor?: fuel_transactionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` fuel_transactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` fuel_transactions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of fuel_transactions.
     */
    distinct?: Fuel_transactionsScalarFieldEnum | Fuel_transactionsScalarFieldEnum[]
  }

  /**
   * fuel_transactions findFirstOrThrow
   */
  export type fuel_transactionsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fuel_transactions
     */
    select?: fuel_transactionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the fuel_transactions
     */
    omit?: fuel_transactionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fuel_transactionsInclude<ExtArgs> | null
    /**
     * Filter, which fuel_transactions to fetch.
     */
    where?: fuel_transactionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of fuel_transactions to fetch.
     */
    orderBy?: fuel_transactionsOrderByWithRelationInput | fuel_transactionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for fuel_transactions.
     */
    cursor?: fuel_transactionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` fuel_transactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` fuel_transactions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of fuel_transactions.
     */
    distinct?: Fuel_transactionsScalarFieldEnum | Fuel_transactionsScalarFieldEnum[]
  }

  /**
   * fuel_transactions findMany
   */
  export type fuel_transactionsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fuel_transactions
     */
    select?: fuel_transactionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the fuel_transactions
     */
    omit?: fuel_transactionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fuel_transactionsInclude<ExtArgs> | null
    /**
     * Filter, which fuel_transactions to fetch.
     */
    where?: fuel_transactionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of fuel_transactions to fetch.
     */
    orderBy?: fuel_transactionsOrderByWithRelationInput | fuel_transactionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing fuel_transactions.
     */
    cursor?: fuel_transactionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` fuel_transactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` fuel_transactions.
     */
    skip?: number
    distinct?: Fuel_transactionsScalarFieldEnum | Fuel_transactionsScalarFieldEnum[]
  }

  /**
   * fuel_transactions create
   */
  export type fuel_transactionsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fuel_transactions
     */
    select?: fuel_transactionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the fuel_transactions
     */
    omit?: fuel_transactionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fuel_transactionsInclude<ExtArgs> | null
    /**
     * The data needed to create a fuel_transactions.
     */
    data: XOR<fuel_transactionsCreateInput, fuel_transactionsUncheckedCreateInput>
  }

  /**
   * fuel_transactions createMany
   */
  export type fuel_transactionsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many fuel_transactions.
     */
    data: fuel_transactionsCreateManyInput | fuel_transactionsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * fuel_transactions createManyAndReturn
   */
  export type fuel_transactionsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fuel_transactions
     */
    select?: fuel_transactionsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the fuel_transactions
     */
    omit?: fuel_transactionsOmit<ExtArgs> | null
    /**
     * The data used to create many fuel_transactions.
     */
    data: fuel_transactionsCreateManyInput | fuel_transactionsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fuel_transactionsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * fuel_transactions update
   */
  export type fuel_transactionsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fuel_transactions
     */
    select?: fuel_transactionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the fuel_transactions
     */
    omit?: fuel_transactionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fuel_transactionsInclude<ExtArgs> | null
    /**
     * The data needed to update a fuel_transactions.
     */
    data: XOR<fuel_transactionsUpdateInput, fuel_transactionsUncheckedUpdateInput>
    /**
     * Choose, which fuel_transactions to update.
     */
    where: fuel_transactionsWhereUniqueInput
  }

  /**
   * fuel_transactions updateMany
   */
  export type fuel_transactionsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update fuel_transactions.
     */
    data: XOR<fuel_transactionsUpdateManyMutationInput, fuel_transactionsUncheckedUpdateManyInput>
    /**
     * Filter which fuel_transactions to update
     */
    where?: fuel_transactionsWhereInput
    /**
     * Limit how many fuel_transactions to update.
     */
    limit?: number
  }

  /**
   * fuel_transactions updateManyAndReturn
   */
  export type fuel_transactionsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fuel_transactions
     */
    select?: fuel_transactionsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the fuel_transactions
     */
    omit?: fuel_transactionsOmit<ExtArgs> | null
    /**
     * The data used to update fuel_transactions.
     */
    data: XOR<fuel_transactionsUpdateManyMutationInput, fuel_transactionsUncheckedUpdateManyInput>
    /**
     * Filter which fuel_transactions to update
     */
    where?: fuel_transactionsWhereInput
    /**
     * Limit how many fuel_transactions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fuel_transactionsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * fuel_transactions upsert
   */
  export type fuel_transactionsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fuel_transactions
     */
    select?: fuel_transactionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the fuel_transactions
     */
    omit?: fuel_transactionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fuel_transactionsInclude<ExtArgs> | null
    /**
     * The filter to search for the fuel_transactions to update in case it exists.
     */
    where: fuel_transactionsWhereUniqueInput
    /**
     * In case the fuel_transactions found by the `where` argument doesn't exist, create a new fuel_transactions with this data.
     */
    create: XOR<fuel_transactionsCreateInput, fuel_transactionsUncheckedCreateInput>
    /**
     * In case the fuel_transactions was found with the provided `where` argument, update it with this data.
     */
    update: XOR<fuel_transactionsUpdateInput, fuel_transactionsUncheckedUpdateInput>
  }

  /**
   * fuel_transactions delete
   */
  export type fuel_transactionsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fuel_transactions
     */
    select?: fuel_transactionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the fuel_transactions
     */
    omit?: fuel_transactionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fuel_transactionsInclude<ExtArgs> | null
    /**
     * Filter which fuel_transactions to delete.
     */
    where: fuel_transactionsWhereUniqueInput
  }

  /**
   * fuel_transactions deleteMany
   */
  export type fuel_transactionsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which fuel_transactions to delete
     */
    where?: fuel_transactionsWhereInput
    /**
     * Limit how many fuel_transactions to delete.
     */
    limit?: number
  }

  /**
   * fuel_transactions.drivers
   */
  export type fuel_transactions$driversArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the drivers
     */
    select?: driversSelect<ExtArgs> | null
    /**
     * Omit specific fields from the drivers
     */
    omit?: driversOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: driversInclude<ExtArgs> | null
    where?: driversWhereInput
  }

  /**
   * fuel_transactions.fuel_stations
   */
  export type fuel_transactions$fuel_stationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fuel_stations
     */
    select?: fuel_stationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the fuel_stations
     */
    omit?: fuel_stationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fuel_stationsInclude<ExtArgs> | null
    where?: fuel_stationsWhereInput
  }

  /**
   * fuel_transactions.vehicles
   */
  export type fuel_transactions$vehiclesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vehicles
     */
    select?: vehiclesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the vehicles
     */
    omit?: vehiclesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: vehiclesInclude<ExtArgs> | null
    where?: vehiclesWhereInput
  }

  /**
   * fuel_transactions without action
   */
  export type fuel_transactionsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fuel_transactions
     */
    select?: fuel_transactionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the fuel_transactions
     */
    omit?: fuel_transactionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fuel_transactionsInclude<ExtArgs> | null
  }


  /**
   * Model gps_tracking
   */

  export type AggregateGps_tracking = {
    _count: Gps_trackingCountAggregateOutputType | null
    _avg: Gps_trackingAvgAggregateOutputType | null
    _sum: Gps_trackingSumAggregateOutputType | null
    _min: Gps_trackingMinAggregateOutputType | null
    _max: Gps_trackingMaxAggregateOutputType | null
  }

  export type Gps_trackingAvgAggregateOutputType = {
    tracking_id: number | null
    vehicle_id: number | null
    latitude: Decimal | null
    longitude: Decimal | null
    speed: Decimal | null
    heading: number | null
    altitude: Decimal | null
    fuel_level_percent: Decimal | null
    odometer: Decimal | null
  }

  export type Gps_trackingSumAggregateOutputType = {
    tracking_id: number | null
    vehicle_id: number | null
    latitude: Decimal | null
    longitude: Decimal | null
    speed: Decimal | null
    heading: number | null
    altitude: Decimal | null
    fuel_level_percent: Decimal | null
    odometer: Decimal | null
  }

  export type Gps_trackingMinAggregateOutputType = {
    tracking_id: number | null
    vehicle_id: number | null
    timestamp: Date | null
    latitude: Decimal | null
    longitude: Decimal | null
    speed: Decimal | null
    heading: number | null
    altitude: Decimal | null
    gps_quality: string | null
    engine_status: string | null
    fuel_level_percent: Decimal | null
    odometer: Decimal | null
  }

  export type Gps_trackingMaxAggregateOutputType = {
    tracking_id: number | null
    vehicle_id: number | null
    timestamp: Date | null
    latitude: Decimal | null
    longitude: Decimal | null
    speed: Decimal | null
    heading: number | null
    altitude: Decimal | null
    gps_quality: string | null
    engine_status: string | null
    fuel_level_percent: Decimal | null
    odometer: Decimal | null
  }

  export type Gps_trackingCountAggregateOutputType = {
    tracking_id: number
    vehicle_id: number
    timestamp: number
    latitude: number
    longitude: number
    speed: number
    heading: number
    altitude: number
    gps_quality: number
    engine_status: number
    fuel_level_percent: number
    odometer: number
    _all: number
  }


  export type Gps_trackingAvgAggregateInputType = {
    tracking_id?: true
    vehicle_id?: true
    latitude?: true
    longitude?: true
    speed?: true
    heading?: true
    altitude?: true
    fuel_level_percent?: true
    odometer?: true
  }

  export type Gps_trackingSumAggregateInputType = {
    tracking_id?: true
    vehicle_id?: true
    latitude?: true
    longitude?: true
    speed?: true
    heading?: true
    altitude?: true
    fuel_level_percent?: true
    odometer?: true
  }

  export type Gps_trackingMinAggregateInputType = {
    tracking_id?: true
    vehicle_id?: true
    timestamp?: true
    latitude?: true
    longitude?: true
    speed?: true
    heading?: true
    altitude?: true
    gps_quality?: true
    engine_status?: true
    fuel_level_percent?: true
    odometer?: true
  }

  export type Gps_trackingMaxAggregateInputType = {
    tracking_id?: true
    vehicle_id?: true
    timestamp?: true
    latitude?: true
    longitude?: true
    speed?: true
    heading?: true
    altitude?: true
    gps_quality?: true
    engine_status?: true
    fuel_level_percent?: true
    odometer?: true
  }

  export type Gps_trackingCountAggregateInputType = {
    tracking_id?: true
    vehicle_id?: true
    timestamp?: true
    latitude?: true
    longitude?: true
    speed?: true
    heading?: true
    altitude?: true
    gps_quality?: true
    engine_status?: true
    fuel_level_percent?: true
    odometer?: true
    _all?: true
  }

  export type Gps_trackingAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which gps_tracking to aggregate.
     */
    where?: gps_trackingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of gps_trackings to fetch.
     */
    orderBy?: gps_trackingOrderByWithRelationInput | gps_trackingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: gps_trackingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` gps_trackings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` gps_trackings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned gps_trackings
    **/
    _count?: true | Gps_trackingCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Gps_trackingAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Gps_trackingSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Gps_trackingMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Gps_trackingMaxAggregateInputType
  }

  export type GetGps_trackingAggregateType<T extends Gps_trackingAggregateArgs> = {
        [P in keyof T & keyof AggregateGps_tracking]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateGps_tracking[P]>
      : GetScalarType<T[P], AggregateGps_tracking[P]>
  }




  export type gps_trackingGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: gps_trackingWhereInput
    orderBy?: gps_trackingOrderByWithAggregationInput | gps_trackingOrderByWithAggregationInput[]
    by: Gps_trackingScalarFieldEnum[] | Gps_trackingScalarFieldEnum
    having?: gps_trackingScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Gps_trackingCountAggregateInputType | true
    _avg?: Gps_trackingAvgAggregateInputType
    _sum?: Gps_trackingSumAggregateInputType
    _min?: Gps_trackingMinAggregateInputType
    _max?: Gps_trackingMaxAggregateInputType
  }

  export type Gps_trackingGroupByOutputType = {
    tracking_id: number
    vehicle_id: number | null
    timestamp: Date
    latitude: Decimal | null
    longitude: Decimal | null
    speed: Decimal | null
    heading: number | null
    altitude: Decimal | null
    gps_quality: string | null
    engine_status: string | null
    fuel_level_percent: Decimal | null
    odometer: Decimal | null
    _count: Gps_trackingCountAggregateOutputType | null
    _avg: Gps_trackingAvgAggregateOutputType | null
    _sum: Gps_trackingSumAggregateOutputType | null
    _min: Gps_trackingMinAggregateOutputType | null
    _max: Gps_trackingMaxAggregateOutputType | null
  }

  type GetGps_trackingGroupByPayload<T extends gps_trackingGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Gps_trackingGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Gps_trackingGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Gps_trackingGroupByOutputType[P]>
            : GetScalarType<T[P], Gps_trackingGroupByOutputType[P]>
        }
      >
    >


  export type gps_trackingSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    tracking_id?: boolean
    vehicle_id?: boolean
    timestamp?: boolean
    latitude?: boolean
    longitude?: boolean
    speed?: boolean
    heading?: boolean
    altitude?: boolean
    gps_quality?: boolean
    engine_status?: boolean
    fuel_level_percent?: boolean
    odometer?: boolean
    vehicles?: boolean | gps_tracking$vehiclesArgs<ExtArgs>
  }, ExtArgs["result"]["gps_tracking"]>

  export type gps_trackingSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    tracking_id?: boolean
    vehicle_id?: boolean
    timestamp?: boolean
    latitude?: boolean
    longitude?: boolean
    speed?: boolean
    heading?: boolean
    altitude?: boolean
    gps_quality?: boolean
    engine_status?: boolean
    fuel_level_percent?: boolean
    odometer?: boolean
    vehicles?: boolean | gps_tracking$vehiclesArgs<ExtArgs>
  }, ExtArgs["result"]["gps_tracking"]>

  export type gps_trackingSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    tracking_id?: boolean
    vehicle_id?: boolean
    timestamp?: boolean
    latitude?: boolean
    longitude?: boolean
    speed?: boolean
    heading?: boolean
    altitude?: boolean
    gps_quality?: boolean
    engine_status?: boolean
    fuel_level_percent?: boolean
    odometer?: boolean
    vehicles?: boolean | gps_tracking$vehiclesArgs<ExtArgs>
  }, ExtArgs["result"]["gps_tracking"]>

  export type gps_trackingSelectScalar = {
    tracking_id?: boolean
    vehicle_id?: boolean
    timestamp?: boolean
    latitude?: boolean
    longitude?: boolean
    speed?: boolean
    heading?: boolean
    altitude?: boolean
    gps_quality?: boolean
    engine_status?: boolean
    fuel_level_percent?: boolean
    odometer?: boolean
  }

  export type gps_trackingOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"tracking_id" | "vehicle_id" | "timestamp" | "latitude" | "longitude" | "speed" | "heading" | "altitude" | "gps_quality" | "engine_status" | "fuel_level_percent" | "odometer", ExtArgs["result"]["gps_tracking"]>
  export type gps_trackingInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    vehicles?: boolean | gps_tracking$vehiclesArgs<ExtArgs>
  }
  export type gps_trackingIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    vehicles?: boolean | gps_tracking$vehiclesArgs<ExtArgs>
  }
  export type gps_trackingIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    vehicles?: boolean | gps_tracking$vehiclesArgs<ExtArgs>
  }

  export type $gps_trackingPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "gps_tracking"
    objects: {
      vehicles: Prisma.$vehiclesPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      tracking_id: number
      vehicle_id: number | null
      timestamp: Date
      latitude: Prisma.Decimal | null
      longitude: Prisma.Decimal | null
      speed: Prisma.Decimal | null
      heading: number | null
      altitude: Prisma.Decimal | null
      gps_quality: string | null
      engine_status: string | null
      fuel_level_percent: Prisma.Decimal | null
      odometer: Prisma.Decimal | null
    }, ExtArgs["result"]["gps_tracking"]>
    composites: {}
  }

  type gps_trackingGetPayload<S extends boolean | null | undefined | gps_trackingDefaultArgs> = $Result.GetResult<Prisma.$gps_trackingPayload, S>

  type gps_trackingCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<gps_trackingFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Gps_trackingCountAggregateInputType | true
    }

  export interface gps_trackingDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['gps_tracking'], meta: { name: 'gps_tracking' } }
    /**
     * Find zero or one Gps_tracking that matches the filter.
     * @param {gps_trackingFindUniqueArgs} args - Arguments to find a Gps_tracking
     * @example
     * // Get one Gps_tracking
     * const gps_tracking = await prisma.gps_tracking.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends gps_trackingFindUniqueArgs>(args: SelectSubset<T, gps_trackingFindUniqueArgs<ExtArgs>>): Prisma__gps_trackingClient<$Result.GetResult<Prisma.$gps_trackingPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Gps_tracking that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {gps_trackingFindUniqueOrThrowArgs} args - Arguments to find a Gps_tracking
     * @example
     * // Get one Gps_tracking
     * const gps_tracking = await prisma.gps_tracking.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends gps_trackingFindUniqueOrThrowArgs>(args: SelectSubset<T, gps_trackingFindUniqueOrThrowArgs<ExtArgs>>): Prisma__gps_trackingClient<$Result.GetResult<Prisma.$gps_trackingPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Gps_tracking that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gps_trackingFindFirstArgs} args - Arguments to find a Gps_tracking
     * @example
     * // Get one Gps_tracking
     * const gps_tracking = await prisma.gps_tracking.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends gps_trackingFindFirstArgs>(args?: SelectSubset<T, gps_trackingFindFirstArgs<ExtArgs>>): Prisma__gps_trackingClient<$Result.GetResult<Prisma.$gps_trackingPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Gps_tracking that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gps_trackingFindFirstOrThrowArgs} args - Arguments to find a Gps_tracking
     * @example
     * // Get one Gps_tracking
     * const gps_tracking = await prisma.gps_tracking.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends gps_trackingFindFirstOrThrowArgs>(args?: SelectSubset<T, gps_trackingFindFirstOrThrowArgs<ExtArgs>>): Prisma__gps_trackingClient<$Result.GetResult<Prisma.$gps_trackingPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Gps_trackings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gps_trackingFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Gps_trackings
     * const gps_trackings = await prisma.gps_tracking.findMany()
     * 
     * // Get first 10 Gps_trackings
     * const gps_trackings = await prisma.gps_tracking.findMany({ take: 10 })
     * 
     * // Only select the `tracking_id`
     * const gps_trackingWithTracking_idOnly = await prisma.gps_tracking.findMany({ select: { tracking_id: true } })
     * 
     */
    findMany<T extends gps_trackingFindManyArgs>(args?: SelectSubset<T, gps_trackingFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$gps_trackingPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Gps_tracking.
     * @param {gps_trackingCreateArgs} args - Arguments to create a Gps_tracking.
     * @example
     * // Create one Gps_tracking
     * const Gps_tracking = await prisma.gps_tracking.create({
     *   data: {
     *     // ... data to create a Gps_tracking
     *   }
     * })
     * 
     */
    create<T extends gps_trackingCreateArgs>(args: SelectSubset<T, gps_trackingCreateArgs<ExtArgs>>): Prisma__gps_trackingClient<$Result.GetResult<Prisma.$gps_trackingPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Gps_trackings.
     * @param {gps_trackingCreateManyArgs} args - Arguments to create many Gps_trackings.
     * @example
     * // Create many Gps_trackings
     * const gps_tracking = await prisma.gps_tracking.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends gps_trackingCreateManyArgs>(args?: SelectSubset<T, gps_trackingCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Gps_trackings and returns the data saved in the database.
     * @param {gps_trackingCreateManyAndReturnArgs} args - Arguments to create many Gps_trackings.
     * @example
     * // Create many Gps_trackings
     * const gps_tracking = await prisma.gps_tracking.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Gps_trackings and only return the `tracking_id`
     * const gps_trackingWithTracking_idOnly = await prisma.gps_tracking.createManyAndReturn({
     *   select: { tracking_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends gps_trackingCreateManyAndReturnArgs>(args?: SelectSubset<T, gps_trackingCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$gps_trackingPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Gps_tracking.
     * @param {gps_trackingDeleteArgs} args - Arguments to delete one Gps_tracking.
     * @example
     * // Delete one Gps_tracking
     * const Gps_tracking = await prisma.gps_tracking.delete({
     *   where: {
     *     // ... filter to delete one Gps_tracking
     *   }
     * })
     * 
     */
    delete<T extends gps_trackingDeleteArgs>(args: SelectSubset<T, gps_trackingDeleteArgs<ExtArgs>>): Prisma__gps_trackingClient<$Result.GetResult<Prisma.$gps_trackingPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Gps_tracking.
     * @param {gps_trackingUpdateArgs} args - Arguments to update one Gps_tracking.
     * @example
     * // Update one Gps_tracking
     * const gps_tracking = await prisma.gps_tracking.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends gps_trackingUpdateArgs>(args: SelectSubset<T, gps_trackingUpdateArgs<ExtArgs>>): Prisma__gps_trackingClient<$Result.GetResult<Prisma.$gps_trackingPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Gps_trackings.
     * @param {gps_trackingDeleteManyArgs} args - Arguments to filter Gps_trackings to delete.
     * @example
     * // Delete a few Gps_trackings
     * const { count } = await prisma.gps_tracking.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends gps_trackingDeleteManyArgs>(args?: SelectSubset<T, gps_trackingDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Gps_trackings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gps_trackingUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Gps_trackings
     * const gps_tracking = await prisma.gps_tracking.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends gps_trackingUpdateManyArgs>(args: SelectSubset<T, gps_trackingUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Gps_trackings and returns the data updated in the database.
     * @param {gps_trackingUpdateManyAndReturnArgs} args - Arguments to update many Gps_trackings.
     * @example
     * // Update many Gps_trackings
     * const gps_tracking = await prisma.gps_tracking.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Gps_trackings and only return the `tracking_id`
     * const gps_trackingWithTracking_idOnly = await prisma.gps_tracking.updateManyAndReturn({
     *   select: { tracking_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends gps_trackingUpdateManyAndReturnArgs>(args: SelectSubset<T, gps_trackingUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$gps_trackingPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Gps_tracking.
     * @param {gps_trackingUpsertArgs} args - Arguments to update or create a Gps_tracking.
     * @example
     * // Update or create a Gps_tracking
     * const gps_tracking = await prisma.gps_tracking.upsert({
     *   create: {
     *     // ... data to create a Gps_tracking
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Gps_tracking we want to update
     *   }
     * })
     */
    upsert<T extends gps_trackingUpsertArgs>(args: SelectSubset<T, gps_trackingUpsertArgs<ExtArgs>>): Prisma__gps_trackingClient<$Result.GetResult<Prisma.$gps_trackingPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Gps_trackings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gps_trackingCountArgs} args - Arguments to filter Gps_trackings to count.
     * @example
     * // Count the number of Gps_trackings
     * const count = await prisma.gps_tracking.count({
     *   where: {
     *     // ... the filter for the Gps_trackings we want to count
     *   }
     * })
    **/
    count<T extends gps_trackingCountArgs>(
      args?: Subset<T, gps_trackingCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Gps_trackingCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Gps_tracking.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Gps_trackingAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Gps_trackingAggregateArgs>(args: Subset<T, Gps_trackingAggregateArgs>): Prisma.PrismaPromise<GetGps_trackingAggregateType<T>>

    /**
     * Group by Gps_tracking.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gps_trackingGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends gps_trackingGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: gps_trackingGroupByArgs['orderBy'] }
        : { orderBy?: gps_trackingGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, gps_trackingGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetGps_trackingGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the gps_tracking model
   */
  readonly fields: gps_trackingFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for gps_tracking.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__gps_trackingClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    vehicles<T extends gps_tracking$vehiclesArgs<ExtArgs> = {}>(args?: Subset<T, gps_tracking$vehiclesArgs<ExtArgs>>): Prisma__vehiclesClient<$Result.GetResult<Prisma.$vehiclesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the gps_tracking model
   */
  interface gps_trackingFieldRefs {
    readonly tracking_id: FieldRef<"gps_tracking", 'Int'>
    readonly vehicle_id: FieldRef<"gps_tracking", 'Int'>
    readonly timestamp: FieldRef<"gps_tracking", 'DateTime'>
    readonly latitude: FieldRef<"gps_tracking", 'Decimal'>
    readonly longitude: FieldRef<"gps_tracking", 'Decimal'>
    readonly speed: FieldRef<"gps_tracking", 'Decimal'>
    readonly heading: FieldRef<"gps_tracking", 'Int'>
    readonly altitude: FieldRef<"gps_tracking", 'Decimal'>
    readonly gps_quality: FieldRef<"gps_tracking", 'String'>
    readonly engine_status: FieldRef<"gps_tracking", 'String'>
    readonly fuel_level_percent: FieldRef<"gps_tracking", 'Decimal'>
    readonly odometer: FieldRef<"gps_tracking", 'Decimal'>
  }
    

  // Custom InputTypes
  /**
   * gps_tracking findUnique
   */
  export type gps_trackingFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the gps_tracking
     */
    select?: gps_trackingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the gps_tracking
     */
    omit?: gps_trackingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: gps_trackingInclude<ExtArgs> | null
    /**
     * Filter, which gps_tracking to fetch.
     */
    where: gps_trackingWhereUniqueInput
  }

  /**
   * gps_tracking findUniqueOrThrow
   */
  export type gps_trackingFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the gps_tracking
     */
    select?: gps_trackingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the gps_tracking
     */
    omit?: gps_trackingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: gps_trackingInclude<ExtArgs> | null
    /**
     * Filter, which gps_tracking to fetch.
     */
    where: gps_trackingWhereUniqueInput
  }

  /**
   * gps_tracking findFirst
   */
  export type gps_trackingFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the gps_tracking
     */
    select?: gps_trackingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the gps_tracking
     */
    omit?: gps_trackingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: gps_trackingInclude<ExtArgs> | null
    /**
     * Filter, which gps_tracking to fetch.
     */
    where?: gps_trackingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of gps_trackings to fetch.
     */
    orderBy?: gps_trackingOrderByWithRelationInput | gps_trackingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for gps_trackings.
     */
    cursor?: gps_trackingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` gps_trackings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` gps_trackings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of gps_trackings.
     */
    distinct?: Gps_trackingScalarFieldEnum | Gps_trackingScalarFieldEnum[]
  }

  /**
   * gps_tracking findFirstOrThrow
   */
  export type gps_trackingFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the gps_tracking
     */
    select?: gps_trackingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the gps_tracking
     */
    omit?: gps_trackingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: gps_trackingInclude<ExtArgs> | null
    /**
     * Filter, which gps_tracking to fetch.
     */
    where?: gps_trackingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of gps_trackings to fetch.
     */
    orderBy?: gps_trackingOrderByWithRelationInput | gps_trackingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for gps_trackings.
     */
    cursor?: gps_trackingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` gps_trackings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` gps_trackings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of gps_trackings.
     */
    distinct?: Gps_trackingScalarFieldEnum | Gps_trackingScalarFieldEnum[]
  }

  /**
   * gps_tracking findMany
   */
  export type gps_trackingFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the gps_tracking
     */
    select?: gps_trackingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the gps_tracking
     */
    omit?: gps_trackingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: gps_trackingInclude<ExtArgs> | null
    /**
     * Filter, which gps_trackings to fetch.
     */
    where?: gps_trackingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of gps_trackings to fetch.
     */
    orderBy?: gps_trackingOrderByWithRelationInput | gps_trackingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing gps_trackings.
     */
    cursor?: gps_trackingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` gps_trackings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` gps_trackings.
     */
    skip?: number
    distinct?: Gps_trackingScalarFieldEnum | Gps_trackingScalarFieldEnum[]
  }

  /**
   * gps_tracking create
   */
  export type gps_trackingCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the gps_tracking
     */
    select?: gps_trackingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the gps_tracking
     */
    omit?: gps_trackingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: gps_trackingInclude<ExtArgs> | null
    /**
     * The data needed to create a gps_tracking.
     */
    data: XOR<gps_trackingCreateInput, gps_trackingUncheckedCreateInput>
  }

  /**
   * gps_tracking createMany
   */
  export type gps_trackingCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many gps_trackings.
     */
    data: gps_trackingCreateManyInput | gps_trackingCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * gps_tracking createManyAndReturn
   */
  export type gps_trackingCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the gps_tracking
     */
    select?: gps_trackingSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the gps_tracking
     */
    omit?: gps_trackingOmit<ExtArgs> | null
    /**
     * The data used to create many gps_trackings.
     */
    data: gps_trackingCreateManyInput | gps_trackingCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: gps_trackingIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * gps_tracking update
   */
  export type gps_trackingUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the gps_tracking
     */
    select?: gps_trackingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the gps_tracking
     */
    omit?: gps_trackingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: gps_trackingInclude<ExtArgs> | null
    /**
     * The data needed to update a gps_tracking.
     */
    data: XOR<gps_trackingUpdateInput, gps_trackingUncheckedUpdateInput>
    /**
     * Choose, which gps_tracking to update.
     */
    where: gps_trackingWhereUniqueInput
  }

  /**
   * gps_tracking updateMany
   */
  export type gps_trackingUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update gps_trackings.
     */
    data: XOR<gps_trackingUpdateManyMutationInput, gps_trackingUncheckedUpdateManyInput>
    /**
     * Filter which gps_trackings to update
     */
    where?: gps_trackingWhereInput
    /**
     * Limit how many gps_trackings to update.
     */
    limit?: number
  }

  /**
   * gps_tracking updateManyAndReturn
   */
  export type gps_trackingUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the gps_tracking
     */
    select?: gps_trackingSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the gps_tracking
     */
    omit?: gps_trackingOmit<ExtArgs> | null
    /**
     * The data used to update gps_trackings.
     */
    data: XOR<gps_trackingUpdateManyMutationInput, gps_trackingUncheckedUpdateManyInput>
    /**
     * Filter which gps_trackings to update
     */
    where?: gps_trackingWhereInput
    /**
     * Limit how many gps_trackings to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: gps_trackingIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * gps_tracking upsert
   */
  export type gps_trackingUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the gps_tracking
     */
    select?: gps_trackingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the gps_tracking
     */
    omit?: gps_trackingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: gps_trackingInclude<ExtArgs> | null
    /**
     * The filter to search for the gps_tracking to update in case it exists.
     */
    where: gps_trackingWhereUniqueInput
    /**
     * In case the gps_tracking found by the `where` argument doesn't exist, create a new gps_tracking with this data.
     */
    create: XOR<gps_trackingCreateInput, gps_trackingUncheckedCreateInput>
    /**
     * In case the gps_tracking was found with the provided `where` argument, update it with this data.
     */
    update: XOR<gps_trackingUpdateInput, gps_trackingUncheckedUpdateInput>
  }

  /**
   * gps_tracking delete
   */
  export type gps_trackingDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the gps_tracking
     */
    select?: gps_trackingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the gps_tracking
     */
    omit?: gps_trackingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: gps_trackingInclude<ExtArgs> | null
    /**
     * Filter which gps_tracking to delete.
     */
    where: gps_trackingWhereUniqueInput
  }

  /**
   * gps_tracking deleteMany
   */
  export type gps_trackingDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which gps_trackings to delete
     */
    where?: gps_trackingWhereInput
    /**
     * Limit how many gps_trackings to delete.
     */
    limit?: number
  }

  /**
   * gps_tracking.vehicles
   */
  export type gps_tracking$vehiclesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vehicles
     */
    select?: vehiclesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the vehicles
     */
    omit?: vehiclesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: vehiclesInclude<ExtArgs> | null
    where?: vehiclesWhereInput
  }

  /**
   * gps_tracking without action
   */
  export type gps_trackingDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the gps_tracking
     */
    select?: gps_trackingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the gps_tracking
     */
    omit?: gps_trackingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: gps_trackingInclude<ExtArgs> | null
  }


  /**
   * Model incidents
   */

  export type AggregateIncidents = {
    _count: IncidentsCountAggregateOutputType | null
    _avg: IncidentsAvgAggregateOutputType | null
    _sum: IncidentsSumAggregateOutputType | null
    _min: IncidentsMinAggregateOutputType | null
    _max: IncidentsMaxAggregateOutputType | null
  }

  export type IncidentsAvgAggregateOutputType = {
    incident_id: number | null
    vehicle_id: number | null
    driver_id: number | null
    estimated_damage_cost: Decimal | null
    actual_repair_cost: Decimal | null
  }

  export type IncidentsSumAggregateOutputType = {
    incident_id: number | null
    vehicle_id: number | null
    driver_id: number | null
    estimated_damage_cost: Decimal | null
    actual_repair_cost: Decimal | null
  }

  export type IncidentsMinAggregateOutputType = {
    incident_id: number | null
    vehicle_id: number | null
    driver_id: number | null
    incident_date: Date | null
    incident_type: string | null
    severity: string | null
    location: string | null
    description: string | null
    police_report_number: string | null
    insurance_claim_number: string | null
    estimated_damage_cost: Decimal | null
    actual_repair_cost: Decimal | null
    injuries_reported: boolean | null
    fatalities: boolean | null
    at_fault: boolean | null
    weather_conditions: string | null
    road_conditions: string | null
    photos_available: boolean | null
    status: string | null
    resolution_date: Date | null
    lessons_learned: string | null
    created_at: Date | null
  }

  export type IncidentsMaxAggregateOutputType = {
    incident_id: number | null
    vehicle_id: number | null
    driver_id: number | null
    incident_date: Date | null
    incident_type: string | null
    severity: string | null
    location: string | null
    description: string | null
    police_report_number: string | null
    insurance_claim_number: string | null
    estimated_damage_cost: Decimal | null
    actual_repair_cost: Decimal | null
    injuries_reported: boolean | null
    fatalities: boolean | null
    at_fault: boolean | null
    weather_conditions: string | null
    road_conditions: string | null
    photos_available: boolean | null
    status: string | null
    resolution_date: Date | null
    lessons_learned: string | null
    created_at: Date | null
  }

  export type IncidentsCountAggregateOutputType = {
    incident_id: number
    vehicle_id: number
    driver_id: number
    incident_date: number
    incident_type: number
    severity: number
    location: number
    description: number
    police_report_number: number
    insurance_claim_number: number
    estimated_damage_cost: number
    actual_repair_cost: number
    injuries_reported: number
    fatalities: number
    at_fault: number
    weather_conditions: number
    road_conditions: number
    photos_available: number
    status: number
    resolution_date: number
    lessons_learned: number
    created_at: number
    _all: number
  }


  export type IncidentsAvgAggregateInputType = {
    incident_id?: true
    vehicle_id?: true
    driver_id?: true
    estimated_damage_cost?: true
    actual_repair_cost?: true
  }

  export type IncidentsSumAggregateInputType = {
    incident_id?: true
    vehicle_id?: true
    driver_id?: true
    estimated_damage_cost?: true
    actual_repair_cost?: true
  }

  export type IncidentsMinAggregateInputType = {
    incident_id?: true
    vehicle_id?: true
    driver_id?: true
    incident_date?: true
    incident_type?: true
    severity?: true
    location?: true
    description?: true
    police_report_number?: true
    insurance_claim_number?: true
    estimated_damage_cost?: true
    actual_repair_cost?: true
    injuries_reported?: true
    fatalities?: true
    at_fault?: true
    weather_conditions?: true
    road_conditions?: true
    photos_available?: true
    status?: true
    resolution_date?: true
    lessons_learned?: true
    created_at?: true
  }

  export type IncidentsMaxAggregateInputType = {
    incident_id?: true
    vehicle_id?: true
    driver_id?: true
    incident_date?: true
    incident_type?: true
    severity?: true
    location?: true
    description?: true
    police_report_number?: true
    insurance_claim_number?: true
    estimated_damage_cost?: true
    actual_repair_cost?: true
    injuries_reported?: true
    fatalities?: true
    at_fault?: true
    weather_conditions?: true
    road_conditions?: true
    photos_available?: true
    status?: true
    resolution_date?: true
    lessons_learned?: true
    created_at?: true
  }

  export type IncidentsCountAggregateInputType = {
    incident_id?: true
    vehicle_id?: true
    driver_id?: true
    incident_date?: true
    incident_type?: true
    severity?: true
    location?: true
    description?: true
    police_report_number?: true
    insurance_claim_number?: true
    estimated_damage_cost?: true
    actual_repair_cost?: true
    injuries_reported?: true
    fatalities?: true
    at_fault?: true
    weather_conditions?: true
    road_conditions?: true
    photos_available?: true
    status?: true
    resolution_date?: true
    lessons_learned?: true
    created_at?: true
    _all?: true
  }

  export type IncidentsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which incidents to aggregate.
     */
    where?: incidentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of incidents to fetch.
     */
    orderBy?: incidentsOrderByWithRelationInput | incidentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: incidentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` incidents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` incidents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned incidents
    **/
    _count?: true | IncidentsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: IncidentsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: IncidentsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: IncidentsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: IncidentsMaxAggregateInputType
  }

  export type GetIncidentsAggregateType<T extends IncidentsAggregateArgs> = {
        [P in keyof T & keyof AggregateIncidents]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateIncidents[P]>
      : GetScalarType<T[P], AggregateIncidents[P]>
  }




  export type incidentsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: incidentsWhereInput
    orderBy?: incidentsOrderByWithAggregationInput | incidentsOrderByWithAggregationInput[]
    by: IncidentsScalarFieldEnum[] | IncidentsScalarFieldEnum
    having?: incidentsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: IncidentsCountAggregateInputType | true
    _avg?: IncidentsAvgAggregateInputType
    _sum?: IncidentsSumAggregateInputType
    _min?: IncidentsMinAggregateInputType
    _max?: IncidentsMaxAggregateInputType
  }

  export type IncidentsGroupByOutputType = {
    incident_id: number
    vehicle_id: number | null
    driver_id: number | null
    incident_date: Date
    incident_type: string
    severity: string
    location: string | null
    description: string
    police_report_number: string | null
    insurance_claim_number: string | null
    estimated_damage_cost: Decimal | null
    actual_repair_cost: Decimal | null
    injuries_reported: boolean | null
    fatalities: boolean | null
    at_fault: boolean | null
    weather_conditions: string | null
    road_conditions: string | null
    photos_available: boolean | null
    status: string | null
    resolution_date: Date | null
    lessons_learned: string | null
    created_at: Date | null
    _count: IncidentsCountAggregateOutputType | null
    _avg: IncidentsAvgAggregateOutputType | null
    _sum: IncidentsSumAggregateOutputType | null
    _min: IncidentsMinAggregateOutputType | null
    _max: IncidentsMaxAggregateOutputType | null
  }

  type GetIncidentsGroupByPayload<T extends incidentsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<IncidentsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof IncidentsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], IncidentsGroupByOutputType[P]>
            : GetScalarType<T[P], IncidentsGroupByOutputType[P]>
        }
      >
    >


  export type incidentsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    incident_id?: boolean
    vehicle_id?: boolean
    driver_id?: boolean
    incident_date?: boolean
    incident_type?: boolean
    severity?: boolean
    location?: boolean
    description?: boolean
    police_report_number?: boolean
    insurance_claim_number?: boolean
    estimated_damage_cost?: boolean
    actual_repair_cost?: boolean
    injuries_reported?: boolean
    fatalities?: boolean
    at_fault?: boolean
    weather_conditions?: boolean
    road_conditions?: boolean
    photos_available?: boolean
    status?: boolean
    resolution_date?: boolean
    lessons_learned?: boolean
    created_at?: boolean
    drivers?: boolean | incidents$driversArgs<ExtArgs>
    vehicles?: boolean | incidents$vehiclesArgs<ExtArgs>
  }, ExtArgs["result"]["incidents"]>

  export type incidentsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    incident_id?: boolean
    vehicle_id?: boolean
    driver_id?: boolean
    incident_date?: boolean
    incident_type?: boolean
    severity?: boolean
    location?: boolean
    description?: boolean
    police_report_number?: boolean
    insurance_claim_number?: boolean
    estimated_damage_cost?: boolean
    actual_repair_cost?: boolean
    injuries_reported?: boolean
    fatalities?: boolean
    at_fault?: boolean
    weather_conditions?: boolean
    road_conditions?: boolean
    photos_available?: boolean
    status?: boolean
    resolution_date?: boolean
    lessons_learned?: boolean
    created_at?: boolean
    drivers?: boolean | incidents$driversArgs<ExtArgs>
    vehicles?: boolean | incidents$vehiclesArgs<ExtArgs>
  }, ExtArgs["result"]["incidents"]>

  export type incidentsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    incident_id?: boolean
    vehicle_id?: boolean
    driver_id?: boolean
    incident_date?: boolean
    incident_type?: boolean
    severity?: boolean
    location?: boolean
    description?: boolean
    police_report_number?: boolean
    insurance_claim_number?: boolean
    estimated_damage_cost?: boolean
    actual_repair_cost?: boolean
    injuries_reported?: boolean
    fatalities?: boolean
    at_fault?: boolean
    weather_conditions?: boolean
    road_conditions?: boolean
    photos_available?: boolean
    status?: boolean
    resolution_date?: boolean
    lessons_learned?: boolean
    created_at?: boolean
    drivers?: boolean | incidents$driversArgs<ExtArgs>
    vehicles?: boolean | incidents$vehiclesArgs<ExtArgs>
  }, ExtArgs["result"]["incidents"]>

  export type incidentsSelectScalar = {
    incident_id?: boolean
    vehicle_id?: boolean
    driver_id?: boolean
    incident_date?: boolean
    incident_type?: boolean
    severity?: boolean
    location?: boolean
    description?: boolean
    police_report_number?: boolean
    insurance_claim_number?: boolean
    estimated_damage_cost?: boolean
    actual_repair_cost?: boolean
    injuries_reported?: boolean
    fatalities?: boolean
    at_fault?: boolean
    weather_conditions?: boolean
    road_conditions?: boolean
    photos_available?: boolean
    status?: boolean
    resolution_date?: boolean
    lessons_learned?: boolean
    created_at?: boolean
  }

  export type incidentsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"incident_id" | "vehicle_id" | "driver_id" | "incident_date" | "incident_type" | "severity" | "location" | "description" | "police_report_number" | "insurance_claim_number" | "estimated_damage_cost" | "actual_repair_cost" | "injuries_reported" | "fatalities" | "at_fault" | "weather_conditions" | "road_conditions" | "photos_available" | "status" | "resolution_date" | "lessons_learned" | "created_at", ExtArgs["result"]["incidents"]>
  export type incidentsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    drivers?: boolean | incidents$driversArgs<ExtArgs>
    vehicles?: boolean | incidents$vehiclesArgs<ExtArgs>
  }
  export type incidentsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    drivers?: boolean | incidents$driversArgs<ExtArgs>
    vehicles?: boolean | incidents$vehiclesArgs<ExtArgs>
  }
  export type incidentsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    drivers?: boolean | incidents$driversArgs<ExtArgs>
    vehicles?: boolean | incidents$vehiclesArgs<ExtArgs>
  }

  export type $incidentsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "incidents"
    objects: {
      drivers: Prisma.$driversPayload<ExtArgs> | null
      vehicles: Prisma.$vehiclesPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      incident_id: number
      vehicle_id: number | null
      driver_id: number | null
      incident_date: Date
      incident_type: string
      severity: string
      location: string | null
      description: string
      police_report_number: string | null
      insurance_claim_number: string | null
      estimated_damage_cost: Prisma.Decimal | null
      actual_repair_cost: Prisma.Decimal | null
      injuries_reported: boolean | null
      fatalities: boolean | null
      at_fault: boolean | null
      weather_conditions: string | null
      road_conditions: string | null
      photos_available: boolean | null
      status: string | null
      resolution_date: Date | null
      lessons_learned: string | null
      created_at: Date | null
    }, ExtArgs["result"]["incidents"]>
    composites: {}
  }

  type incidentsGetPayload<S extends boolean | null | undefined | incidentsDefaultArgs> = $Result.GetResult<Prisma.$incidentsPayload, S>

  type incidentsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<incidentsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: IncidentsCountAggregateInputType | true
    }

  export interface incidentsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['incidents'], meta: { name: 'incidents' } }
    /**
     * Find zero or one Incidents that matches the filter.
     * @param {incidentsFindUniqueArgs} args - Arguments to find a Incidents
     * @example
     * // Get one Incidents
     * const incidents = await prisma.incidents.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends incidentsFindUniqueArgs>(args: SelectSubset<T, incidentsFindUniqueArgs<ExtArgs>>): Prisma__incidentsClient<$Result.GetResult<Prisma.$incidentsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Incidents that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {incidentsFindUniqueOrThrowArgs} args - Arguments to find a Incidents
     * @example
     * // Get one Incidents
     * const incidents = await prisma.incidents.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends incidentsFindUniqueOrThrowArgs>(args: SelectSubset<T, incidentsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__incidentsClient<$Result.GetResult<Prisma.$incidentsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Incidents that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {incidentsFindFirstArgs} args - Arguments to find a Incidents
     * @example
     * // Get one Incidents
     * const incidents = await prisma.incidents.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends incidentsFindFirstArgs>(args?: SelectSubset<T, incidentsFindFirstArgs<ExtArgs>>): Prisma__incidentsClient<$Result.GetResult<Prisma.$incidentsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Incidents that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {incidentsFindFirstOrThrowArgs} args - Arguments to find a Incidents
     * @example
     * // Get one Incidents
     * const incidents = await prisma.incidents.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends incidentsFindFirstOrThrowArgs>(args?: SelectSubset<T, incidentsFindFirstOrThrowArgs<ExtArgs>>): Prisma__incidentsClient<$Result.GetResult<Prisma.$incidentsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Incidents that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {incidentsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Incidents
     * const incidents = await prisma.incidents.findMany()
     * 
     * // Get first 10 Incidents
     * const incidents = await prisma.incidents.findMany({ take: 10 })
     * 
     * // Only select the `incident_id`
     * const incidentsWithIncident_idOnly = await prisma.incidents.findMany({ select: { incident_id: true } })
     * 
     */
    findMany<T extends incidentsFindManyArgs>(args?: SelectSubset<T, incidentsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$incidentsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Incidents.
     * @param {incidentsCreateArgs} args - Arguments to create a Incidents.
     * @example
     * // Create one Incidents
     * const Incidents = await prisma.incidents.create({
     *   data: {
     *     // ... data to create a Incidents
     *   }
     * })
     * 
     */
    create<T extends incidentsCreateArgs>(args: SelectSubset<T, incidentsCreateArgs<ExtArgs>>): Prisma__incidentsClient<$Result.GetResult<Prisma.$incidentsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Incidents.
     * @param {incidentsCreateManyArgs} args - Arguments to create many Incidents.
     * @example
     * // Create many Incidents
     * const incidents = await prisma.incidents.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends incidentsCreateManyArgs>(args?: SelectSubset<T, incidentsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Incidents and returns the data saved in the database.
     * @param {incidentsCreateManyAndReturnArgs} args - Arguments to create many Incidents.
     * @example
     * // Create many Incidents
     * const incidents = await prisma.incidents.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Incidents and only return the `incident_id`
     * const incidentsWithIncident_idOnly = await prisma.incidents.createManyAndReturn({
     *   select: { incident_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends incidentsCreateManyAndReturnArgs>(args?: SelectSubset<T, incidentsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$incidentsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Incidents.
     * @param {incidentsDeleteArgs} args - Arguments to delete one Incidents.
     * @example
     * // Delete one Incidents
     * const Incidents = await prisma.incidents.delete({
     *   where: {
     *     // ... filter to delete one Incidents
     *   }
     * })
     * 
     */
    delete<T extends incidentsDeleteArgs>(args: SelectSubset<T, incidentsDeleteArgs<ExtArgs>>): Prisma__incidentsClient<$Result.GetResult<Prisma.$incidentsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Incidents.
     * @param {incidentsUpdateArgs} args - Arguments to update one Incidents.
     * @example
     * // Update one Incidents
     * const incidents = await prisma.incidents.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends incidentsUpdateArgs>(args: SelectSubset<T, incidentsUpdateArgs<ExtArgs>>): Prisma__incidentsClient<$Result.GetResult<Prisma.$incidentsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Incidents.
     * @param {incidentsDeleteManyArgs} args - Arguments to filter Incidents to delete.
     * @example
     * // Delete a few Incidents
     * const { count } = await prisma.incidents.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends incidentsDeleteManyArgs>(args?: SelectSubset<T, incidentsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Incidents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {incidentsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Incidents
     * const incidents = await prisma.incidents.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends incidentsUpdateManyArgs>(args: SelectSubset<T, incidentsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Incidents and returns the data updated in the database.
     * @param {incidentsUpdateManyAndReturnArgs} args - Arguments to update many Incidents.
     * @example
     * // Update many Incidents
     * const incidents = await prisma.incidents.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Incidents and only return the `incident_id`
     * const incidentsWithIncident_idOnly = await prisma.incidents.updateManyAndReturn({
     *   select: { incident_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends incidentsUpdateManyAndReturnArgs>(args: SelectSubset<T, incidentsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$incidentsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Incidents.
     * @param {incidentsUpsertArgs} args - Arguments to update or create a Incidents.
     * @example
     * // Update or create a Incidents
     * const incidents = await prisma.incidents.upsert({
     *   create: {
     *     // ... data to create a Incidents
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Incidents we want to update
     *   }
     * })
     */
    upsert<T extends incidentsUpsertArgs>(args: SelectSubset<T, incidentsUpsertArgs<ExtArgs>>): Prisma__incidentsClient<$Result.GetResult<Prisma.$incidentsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Incidents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {incidentsCountArgs} args - Arguments to filter Incidents to count.
     * @example
     * // Count the number of Incidents
     * const count = await prisma.incidents.count({
     *   where: {
     *     // ... the filter for the Incidents we want to count
     *   }
     * })
    **/
    count<T extends incidentsCountArgs>(
      args?: Subset<T, incidentsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], IncidentsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Incidents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IncidentsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends IncidentsAggregateArgs>(args: Subset<T, IncidentsAggregateArgs>): Prisma.PrismaPromise<GetIncidentsAggregateType<T>>

    /**
     * Group by Incidents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {incidentsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends incidentsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: incidentsGroupByArgs['orderBy'] }
        : { orderBy?: incidentsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, incidentsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetIncidentsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the incidents model
   */
  readonly fields: incidentsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for incidents.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__incidentsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    drivers<T extends incidents$driversArgs<ExtArgs> = {}>(args?: Subset<T, incidents$driversArgs<ExtArgs>>): Prisma__driversClient<$Result.GetResult<Prisma.$driversPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    vehicles<T extends incidents$vehiclesArgs<ExtArgs> = {}>(args?: Subset<T, incidents$vehiclesArgs<ExtArgs>>): Prisma__vehiclesClient<$Result.GetResult<Prisma.$vehiclesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the incidents model
   */
  interface incidentsFieldRefs {
    readonly incident_id: FieldRef<"incidents", 'Int'>
    readonly vehicle_id: FieldRef<"incidents", 'Int'>
    readonly driver_id: FieldRef<"incidents", 'Int'>
    readonly incident_date: FieldRef<"incidents", 'DateTime'>
    readonly incident_type: FieldRef<"incidents", 'String'>
    readonly severity: FieldRef<"incidents", 'String'>
    readonly location: FieldRef<"incidents", 'String'>
    readonly description: FieldRef<"incidents", 'String'>
    readonly police_report_number: FieldRef<"incidents", 'String'>
    readonly insurance_claim_number: FieldRef<"incidents", 'String'>
    readonly estimated_damage_cost: FieldRef<"incidents", 'Decimal'>
    readonly actual_repair_cost: FieldRef<"incidents", 'Decimal'>
    readonly injuries_reported: FieldRef<"incidents", 'Boolean'>
    readonly fatalities: FieldRef<"incidents", 'Boolean'>
    readonly at_fault: FieldRef<"incidents", 'Boolean'>
    readonly weather_conditions: FieldRef<"incidents", 'String'>
    readonly road_conditions: FieldRef<"incidents", 'String'>
    readonly photos_available: FieldRef<"incidents", 'Boolean'>
    readonly status: FieldRef<"incidents", 'String'>
    readonly resolution_date: FieldRef<"incidents", 'DateTime'>
    readonly lessons_learned: FieldRef<"incidents", 'String'>
    readonly created_at: FieldRef<"incidents", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * incidents findUnique
   */
  export type incidentsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the incidents
     */
    select?: incidentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the incidents
     */
    omit?: incidentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: incidentsInclude<ExtArgs> | null
    /**
     * Filter, which incidents to fetch.
     */
    where: incidentsWhereUniqueInput
  }

  /**
   * incidents findUniqueOrThrow
   */
  export type incidentsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the incidents
     */
    select?: incidentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the incidents
     */
    omit?: incidentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: incidentsInclude<ExtArgs> | null
    /**
     * Filter, which incidents to fetch.
     */
    where: incidentsWhereUniqueInput
  }

  /**
   * incidents findFirst
   */
  export type incidentsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the incidents
     */
    select?: incidentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the incidents
     */
    omit?: incidentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: incidentsInclude<ExtArgs> | null
    /**
     * Filter, which incidents to fetch.
     */
    where?: incidentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of incidents to fetch.
     */
    orderBy?: incidentsOrderByWithRelationInput | incidentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for incidents.
     */
    cursor?: incidentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` incidents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` incidents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of incidents.
     */
    distinct?: IncidentsScalarFieldEnum | IncidentsScalarFieldEnum[]
  }

  /**
   * incidents findFirstOrThrow
   */
  export type incidentsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the incidents
     */
    select?: incidentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the incidents
     */
    omit?: incidentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: incidentsInclude<ExtArgs> | null
    /**
     * Filter, which incidents to fetch.
     */
    where?: incidentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of incidents to fetch.
     */
    orderBy?: incidentsOrderByWithRelationInput | incidentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for incidents.
     */
    cursor?: incidentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` incidents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` incidents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of incidents.
     */
    distinct?: IncidentsScalarFieldEnum | IncidentsScalarFieldEnum[]
  }

  /**
   * incidents findMany
   */
  export type incidentsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the incidents
     */
    select?: incidentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the incidents
     */
    omit?: incidentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: incidentsInclude<ExtArgs> | null
    /**
     * Filter, which incidents to fetch.
     */
    where?: incidentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of incidents to fetch.
     */
    orderBy?: incidentsOrderByWithRelationInput | incidentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing incidents.
     */
    cursor?: incidentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` incidents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` incidents.
     */
    skip?: number
    distinct?: IncidentsScalarFieldEnum | IncidentsScalarFieldEnum[]
  }

  /**
   * incidents create
   */
  export type incidentsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the incidents
     */
    select?: incidentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the incidents
     */
    omit?: incidentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: incidentsInclude<ExtArgs> | null
    /**
     * The data needed to create a incidents.
     */
    data: XOR<incidentsCreateInput, incidentsUncheckedCreateInput>
  }

  /**
   * incidents createMany
   */
  export type incidentsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many incidents.
     */
    data: incidentsCreateManyInput | incidentsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * incidents createManyAndReturn
   */
  export type incidentsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the incidents
     */
    select?: incidentsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the incidents
     */
    omit?: incidentsOmit<ExtArgs> | null
    /**
     * The data used to create many incidents.
     */
    data: incidentsCreateManyInput | incidentsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: incidentsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * incidents update
   */
  export type incidentsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the incidents
     */
    select?: incidentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the incidents
     */
    omit?: incidentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: incidentsInclude<ExtArgs> | null
    /**
     * The data needed to update a incidents.
     */
    data: XOR<incidentsUpdateInput, incidentsUncheckedUpdateInput>
    /**
     * Choose, which incidents to update.
     */
    where: incidentsWhereUniqueInput
  }

  /**
   * incidents updateMany
   */
  export type incidentsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update incidents.
     */
    data: XOR<incidentsUpdateManyMutationInput, incidentsUncheckedUpdateManyInput>
    /**
     * Filter which incidents to update
     */
    where?: incidentsWhereInput
    /**
     * Limit how many incidents to update.
     */
    limit?: number
  }

  /**
   * incidents updateManyAndReturn
   */
  export type incidentsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the incidents
     */
    select?: incidentsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the incidents
     */
    omit?: incidentsOmit<ExtArgs> | null
    /**
     * The data used to update incidents.
     */
    data: XOR<incidentsUpdateManyMutationInput, incidentsUncheckedUpdateManyInput>
    /**
     * Filter which incidents to update
     */
    where?: incidentsWhereInput
    /**
     * Limit how many incidents to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: incidentsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * incidents upsert
   */
  export type incidentsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the incidents
     */
    select?: incidentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the incidents
     */
    omit?: incidentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: incidentsInclude<ExtArgs> | null
    /**
     * The filter to search for the incidents to update in case it exists.
     */
    where: incidentsWhereUniqueInput
    /**
     * In case the incidents found by the `where` argument doesn't exist, create a new incidents with this data.
     */
    create: XOR<incidentsCreateInput, incidentsUncheckedCreateInput>
    /**
     * In case the incidents was found with the provided `where` argument, update it with this data.
     */
    update: XOR<incidentsUpdateInput, incidentsUncheckedUpdateInput>
  }

  /**
   * incidents delete
   */
  export type incidentsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the incidents
     */
    select?: incidentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the incidents
     */
    omit?: incidentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: incidentsInclude<ExtArgs> | null
    /**
     * Filter which incidents to delete.
     */
    where: incidentsWhereUniqueInput
  }

  /**
   * incidents deleteMany
   */
  export type incidentsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which incidents to delete
     */
    where?: incidentsWhereInput
    /**
     * Limit how many incidents to delete.
     */
    limit?: number
  }

  /**
   * incidents.drivers
   */
  export type incidents$driversArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the drivers
     */
    select?: driversSelect<ExtArgs> | null
    /**
     * Omit specific fields from the drivers
     */
    omit?: driversOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: driversInclude<ExtArgs> | null
    where?: driversWhereInput
  }

  /**
   * incidents.vehicles
   */
  export type incidents$vehiclesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vehicles
     */
    select?: vehiclesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the vehicles
     */
    omit?: vehiclesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: vehiclesInclude<ExtArgs> | null
    where?: vehiclesWhereInput
  }

  /**
   * incidents without action
   */
  export type incidentsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the incidents
     */
    select?: incidentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the incidents
     */
    omit?: incidentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: incidentsInclude<ExtArgs> | null
  }


  /**
   * Model maintenance_records
   */

  export type AggregateMaintenance_records = {
    _count: Maintenance_recordsCountAggregateOutputType | null
    _avg: Maintenance_recordsAvgAggregateOutputType | null
    _sum: Maintenance_recordsSumAggregateOutputType | null
    _min: Maintenance_recordsMinAggregateOutputType | null
    _max: Maintenance_recordsMaxAggregateOutputType | null
  }

  export type Maintenance_recordsAvgAggregateOutputType = {
    maintenance_id: number | null
    vehicle_id: number | null
    maintenance_type_id: number | null
    service_provider_id: number | null
    odometer_at_service: Decimal | null
    cost: Decimal | null
    labor_hours: Decimal | null
    next_service_due_miles: Decimal | null
  }

  export type Maintenance_recordsSumAggregateOutputType = {
    maintenance_id: number | null
    vehicle_id: number | null
    maintenance_type_id: number | null
    service_provider_id: number | null
    odometer_at_service: Decimal | null
    cost: Decimal | null
    labor_hours: Decimal | null
    next_service_due_miles: Decimal | null
  }

  export type Maintenance_recordsMinAggregateOutputType = {
    maintenance_id: number | null
    vehicle_id: number | null
    maintenance_type_id: number | null
    service_provider_id: number | null
    scheduled_date: Date | null
    completed_date: Date | null
    odometer_at_service: Decimal | null
    cost: Decimal | null
    labor_hours: Decimal | null
    description: string | null
    parts_used: string | null
    technician_name: string | null
    status: string | null
    next_service_due_date: Date | null
    next_service_due_miles: Decimal | null
    warranty_expiry_date: Date | null
    invoice_number: string | null
    notes: string | null
    created_at: Date | null
  }

  export type Maintenance_recordsMaxAggregateOutputType = {
    maintenance_id: number | null
    vehicle_id: number | null
    maintenance_type_id: number | null
    service_provider_id: number | null
    scheduled_date: Date | null
    completed_date: Date | null
    odometer_at_service: Decimal | null
    cost: Decimal | null
    labor_hours: Decimal | null
    description: string | null
    parts_used: string | null
    technician_name: string | null
    status: string | null
    next_service_due_date: Date | null
    next_service_due_miles: Decimal | null
    warranty_expiry_date: Date | null
    invoice_number: string | null
    notes: string | null
    created_at: Date | null
  }

  export type Maintenance_recordsCountAggregateOutputType = {
    maintenance_id: number
    vehicle_id: number
    maintenance_type_id: number
    service_provider_id: number
    scheduled_date: number
    completed_date: number
    odometer_at_service: number
    cost: number
    labor_hours: number
    description: number
    parts_used: number
    technician_name: number
    status: number
    next_service_due_date: number
    next_service_due_miles: number
    warranty_expiry_date: number
    invoice_number: number
    notes: number
    created_at: number
    _all: number
  }


  export type Maintenance_recordsAvgAggregateInputType = {
    maintenance_id?: true
    vehicle_id?: true
    maintenance_type_id?: true
    service_provider_id?: true
    odometer_at_service?: true
    cost?: true
    labor_hours?: true
    next_service_due_miles?: true
  }

  export type Maintenance_recordsSumAggregateInputType = {
    maintenance_id?: true
    vehicle_id?: true
    maintenance_type_id?: true
    service_provider_id?: true
    odometer_at_service?: true
    cost?: true
    labor_hours?: true
    next_service_due_miles?: true
  }

  export type Maintenance_recordsMinAggregateInputType = {
    maintenance_id?: true
    vehicle_id?: true
    maintenance_type_id?: true
    service_provider_id?: true
    scheduled_date?: true
    completed_date?: true
    odometer_at_service?: true
    cost?: true
    labor_hours?: true
    description?: true
    parts_used?: true
    technician_name?: true
    status?: true
    next_service_due_date?: true
    next_service_due_miles?: true
    warranty_expiry_date?: true
    invoice_number?: true
    notes?: true
    created_at?: true
  }

  export type Maintenance_recordsMaxAggregateInputType = {
    maintenance_id?: true
    vehicle_id?: true
    maintenance_type_id?: true
    service_provider_id?: true
    scheduled_date?: true
    completed_date?: true
    odometer_at_service?: true
    cost?: true
    labor_hours?: true
    description?: true
    parts_used?: true
    technician_name?: true
    status?: true
    next_service_due_date?: true
    next_service_due_miles?: true
    warranty_expiry_date?: true
    invoice_number?: true
    notes?: true
    created_at?: true
  }

  export type Maintenance_recordsCountAggregateInputType = {
    maintenance_id?: true
    vehicle_id?: true
    maintenance_type_id?: true
    service_provider_id?: true
    scheduled_date?: true
    completed_date?: true
    odometer_at_service?: true
    cost?: true
    labor_hours?: true
    description?: true
    parts_used?: true
    technician_name?: true
    status?: true
    next_service_due_date?: true
    next_service_due_miles?: true
    warranty_expiry_date?: true
    invoice_number?: true
    notes?: true
    created_at?: true
    _all?: true
  }

  export type Maintenance_recordsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which maintenance_records to aggregate.
     */
    where?: maintenance_recordsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of maintenance_records to fetch.
     */
    orderBy?: maintenance_recordsOrderByWithRelationInput | maintenance_recordsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: maintenance_recordsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` maintenance_records from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` maintenance_records.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned maintenance_records
    **/
    _count?: true | Maintenance_recordsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Maintenance_recordsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Maintenance_recordsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Maintenance_recordsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Maintenance_recordsMaxAggregateInputType
  }

  export type GetMaintenance_recordsAggregateType<T extends Maintenance_recordsAggregateArgs> = {
        [P in keyof T & keyof AggregateMaintenance_records]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMaintenance_records[P]>
      : GetScalarType<T[P], AggregateMaintenance_records[P]>
  }




  export type maintenance_recordsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: maintenance_recordsWhereInput
    orderBy?: maintenance_recordsOrderByWithAggregationInput | maintenance_recordsOrderByWithAggregationInput[]
    by: Maintenance_recordsScalarFieldEnum[] | Maintenance_recordsScalarFieldEnum
    having?: maintenance_recordsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Maintenance_recordsCountAggregateInputType | true
    _avg?: Maintenance_recordsAvgAggregateInputType
    _sum?: Maintenance_recordsSumAggregateInputType
    _min?: Maintenance_recordsMinAggregateInputType
    _max?: Maintenance_recordsMaxAggregateInputType
  }

  export type Maintenance_recordsGroupByOutputType = {
    maintenance_id: number
    vehicle_id: number | null
    maintenance_type_id: number | null
    service_provider_id: number | null
    scheduled_date: Date | null
    completed_date: Date | null
    odometer_at_service: Decimal | null
    cost: Decimal | null
    labor_hours: Decimal | null
    description: string | null
    parts_used: string | null
    technician_name: string | null
    status: string | null
    next_service_due_date: Date | null
    next_service_due_miles: Decimal | null
    warranty_expiry_date: Date | null
    invoice_number: string | null
    notes: string | null
    created_at: Date | null
    _count: Maintenance_recordsCountAggregateOutputType | null
    _avg: Maintenance_recordsAvgAggregateOutputType | null
    _sum: Maintenance_recordsSumAggregateOutputType | null
    _min: Maintenance_recordsMinAggregateOutputType | null
    _max: Maintenance_recordsMaxAggregateOutputType | null
  }

  type GetMaintenance_recordsGroupByPayload<T extends maintenance_recordsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Maintenance_recordsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Maintenance_recordsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Maintenance_recordsGroupByOutputType[P]>
            : GetScalarType<T[P], Maintenance_recordsGroupByOutputType[P]>
        }
      >
    >


  export type maintenance_recordsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    maintenance_id?: boolean
    vehicle_id?: boolean
    maintenance_type_id?: boolean
    service_provider_id?: boolean
    scheduled_date?: boolean
    completed_date?: boolean
    odometer_at_service?: boolean
    cost?: boolean
    labor_hours?: boolean
    description?: boolean
    parts_used?: boolean
    technician_name?: boolean
    status?: boolean
    next_service_due_date?: boolean
    next_service_due_miles?: boolean
    warranty_expiry_date?: boolean
    invoice_number?: boolean
    notes?: boolean
    created_at?: boolean
    maintenance_types?: boolean | maintenance_records$maintenance_typesArgs<ExtArgs>
    service_providers?: boolean | maintenance_records$service_providersArgs<ExtArgs>
    vehicles?: boolean | maintenance_records$vehiclesArgs<ExtArgs>
  }, ExtArgs["result"]["maintenance_records"]>

  export type maintenance_recordsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    maintenance_id?: boolean
    vehicle_id?: boolean
    maintenance_type_id?: boolean
    service_provider_id?: boolean
    scheduled_date?: boolean
    completed_date?: boolean
    odometer_at_service?: boolean
    cost?: boolean
    labor_hours?: boolean
    description?: boolean
    parts_used?: boolean
    technician_name?: boolean
    status?: boolean
    next_service_due_date?: boolean
    next_service_due_miles?: boolean
    warranty_expiry_date?: boolean
    invoice_number?: boolean
    notes?: boolean
    created_at?: boolean
    maintenance_types?: boolean | maintenance_records$maintenance_typesArgs<ExtArgs>
    service_providers?: boolean | maintenance_records$service_providersArgs<ExtArgs>
    vehicles?: boolean | maintenance_records$vehiclesArgs<ExtArgs>
  }, ExtArgs["result"]["maintenance_records"]>

  export type maintenance_recordsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    maintenance_id?: boolean
    vehicle_id?: boolean
    maintenance_type_id?: boolean
    service_provider_id?: boolean
    scheduled_date?: boolean
    completed_date?: boolean
    odometer_at_service?: boolean
    cost?: boolean
    labor_hours?: boolean
    description?: boolean
    parts_used?: boolean
    technician_name?: boolean
    status?: boolean
    next_service_due_date?: boolean
    next_service_due_miles?: boolean
    warranty_expiry_date?: boolean
    invoice_number?: boolean
    notes?: boolean
    created_at?: boolean
    maintenance_types?: boolean | maintenance_records$maintenance_typesArgs<ExtArgs>
    service_providers?: boolean | maintenance_records$service_providersArgs<ExtArgs>
    vehicles?: boolean | maintenance_records$vehiclesArgs<ExtArgs>
  }, ExtArgs["result"]["maintenance_records"]>

  export type maintenance_recordsSelectScalar = {
    maintenance_id?: boolean
    vehicle_id?: boolean
    maintenance_type_id?: boolean
    service_provider_id?: boolean
    scheduled_date?: boolean
    completed_date?: boolean
    odometer_at_service?: boolean
    cost?: boolean
    labor_hours?: boolean
    description?: boolean
    parts_used?: boolean
    technician_name?: boolean
    status?: boolean
    next_service_due_date?: boolean
    next_service_due_miles?: boolean
    warranty_expiry_date?: boolean
    invoice_number?: boolean
    notes?: boolean
    created_at?: boolean
  }

  export type maintenance_recordsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"maintenance_id" | "vehicle_id" | "maintenance_type_id" | "service_provider_id" | "scheduled_date" | "completed_date" | "odometer_at_service" | "cost" | "labor_hours" | "description" | "parts_used" | "technician_name" | "status" | "next_service_due_date" | "next_service_due_miles" | "warranty_expiry_date" | "invoice_number" | "notes" | "created_at", ExtArgs["result"]["maintenance_records"]>
  export type maintenance_recordsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    maintenance_types?: boolean | maintenance_records$maintenance_typesArgs<ExtArgs>
    service_providers?: boolean | maintenance_records$service_providersArgs<ExtArgs>
    vehicles?: boolean | maintenance_records$vehiclesArgs<ExtArgs>
  }
  export type maintenance_recordsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    maintenance_types?: boolean | maintenance_records$maintenance_typesArgs<ExtArgs>
    service_providers?: boolean | maintenance_records$service_providersArgs<ExtArgs>
    vehicles?: boolean | maintenance_records$vehiclesArgs<ExtArgs>
  }
  export type maintenance_recordsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    maintenance_types?: boolean | maintenance_records$maintenance_typesArgs<ExtArgs>
    service_providers?: boolean | maintenance_records$service_providersArgs<ExtArgs>
    vehicles?: boolean | maintenance_records$vehiclesArgs<ExtArgs>
  }

  export type $maintenance_recordsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "maintenance_records"
    objects: {
      maintenance_types: Prisma.$maintenance_typesPayload<ExtArgs> | null
      service_providers: Prisma.$service_providersPayload<ExtArgs> | null
      vehicles: Prisma.$vehiclesPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      maintenance_id: number
      vehicle_id: number | null
      maintenance_type_id: number | null
      service_provider_id: number | null
      scheduled_date: Date | null
      completed_date: Date | null
      odometer_at_service: Prisma.Decimal | null
      cost: Prisma.Decimal | null
      labor_hours: Prisma.Decimal | null
      description: string | null
      parts_used: string | null
      technician_name: string | null
      status: string | null
      next_service_due_date: Date | null
      next_service_due_miles: Prisma.Decimal | null
      warranty_expiry_date: Date | null
      invoice_number: string | null
      notes: string | null
      created_at: Date | null
    }, ExtArgs["result"]["maintenance_records"]>
    composites: {}
  }

  type maintenance_recordsGetPayload<S extends boolean | null | undefined | maintenance_recordsDefaultArgs> = $Result.GetResult<Prisma.$maintenance_recordsPayload, S>

  type maintenance_recordsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<maintenance_recordsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Maintenance_recordsCountAggregateInputType | true
    }

  export interface maintenance_recordsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['maintenance_records'], meta: { name: 'maintenance_records' } }
    /**
     * Find zero or one Maintenance_records that matches the filter.
     * @param {maintenance_recordsFindUniqueArgs} args - Arguments to find a Maintenance_records
     * @example
     * // Get one Maintenance_records
     * const maintenance_records = await prisma.maintenance_records.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends maintenance_recordsFindUniqueArgs>(args: SelectSubset<T, maintenance_recordsFindUniqueArgs<ExtArgs>>): Prisma__maintenance_recordsClient<$Result.GetResult<Prisma.$maintenance_recordsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Maintenance_records that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {maintenance_recordsFindUniqueOrThrowArgs} args - Arguments to find a Maintenance_records
     * @example
     * // Get one Maintenance_records
     * const maintenance_records = await prisma.maintenance_records.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends maintenance_recordsFindUniqueOrThrowArgs>(args: SelectSubset<T, maintenance_recordsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__maintenance_recordsClient<$Result.GetResult<Prisma.$maintenance_recordsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Maintenance_records that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {maintenance_recordsFindFirstArgs} args - Arguments to find a Maintenance_records
     * @example
     * // Get one Maintenance_records
     * const maintenance_records = await prisma.maintenance_records.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends maintenance_recordsFindFirstArgs>(args?: SelectSubset<T, maintenance_recordsFindFirstArgs<ExtArgs>>): Prisma__maintenance_recordsClient<$Result.GetResult<Prisma.$maintenance_recordsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Maintenance_records that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {maintenance_recordsFindFirstOrThrowArgs} args - Arguments to find a Maintenance_records
     * @example
     * // Get one Maintenance_records
     * const maintenance_records = await prisma.maintenance_records.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends maintenance_recordsFindFirstOrThrowArgs>(args?: SelectSubset<T, maintenance_recordsFindFirstOrThrowArgs<ExtArgs>>): Prisma__maintenance_recordsClient<$Result.GetResult<Prisma.$maintenance_recordsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Maintenance_records that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {maintenance_recordsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Maintenance_records
     * const maintenance_records = await prisma.maintenance_records.findMany()
     * 
     * // Get first 10 Maintenance_records
     * const maintenance_records = await prisma.maintenance_records.findMany({ take: 10 })
     * 
     * // Only select the `maintenance_id`
     * const maintenance_recordsWithMaintenance_idOnly = await prisma.maintenance_records.findMany({ select: { maintenance_id: true } })
     * 
     */
    findMany<T extends maintenance_recordsFindManyArgs>(args?: SelectSubset<T, maintenance_recordsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$maintenance_recordsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Maintenance_records.
     * @param {maintenance_recordsCreateArgs} args - Arguments to create a Maintenance_records.
     * @example
     * // Create one Maintenance_records
     * const Maintenance_records = await prisma.maintenance_records.create({
     *   data: {
     *     // ... data to create a Maintenance_records
     *   }
     * })
     * 
     */
    create<T extends maintenance_recordsCreateArgs>(args: SelectSubset<T, maintenance_recordsCreateArgs<ExtArgs>>): Prisma__maintenance_recordsClient<$Result.GetResult<Prisma.$maintenance_recordsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Maintenance_records.
     * @param {maintenance_recordsCreateManyArgs} args - Arguments to create many Maintenance_records.
     * @example
     * // Create many Maintenance_records
     * const maintenance_records = await prisma.maintenance_records.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends maintenance_recordsCreateManyArgs>(args?: SelectSubset<T, maintenance_recordsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Maintenance_records and returns the data saved in the database.
     * @param {maintenance_recordsCreateManyAndReturnArgs} args - Arguments to create many Maintenance_records.
     * @example
     * // Create many Maintenance_records
     * const maintenance_records = await prisma.maintenance_records.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Maintenance_records and only return the `maintenance_id`
     * const maintenance_recordsWithMaintenance_idOnly = await prisma.maintenance_records.createManyAndReturn({
     *   select: { maintenance_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends maintenance_recordsCreateManyAndReturnArgs>(args?: SelectSubset<T, maintenance_recordsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$maintenance_recordsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Maintenance_records.
     * @param {maintenance_recordsDeleteArgs} args - Arguments to delete one Maintenance_records.
     * @example
     * // Delete one Maintenance_records
     * const Maintenance_records = await prisma.maintenance_records.delete({
     *   where: {
     *     // ... filter to delete one Maintenance_records
     *   }
     * })
     * 
     */
    delete<T extends maintenance_recordsDeleteArgs>(args: SelectSubset<T, maintenance_recordsDeleteArgs<ExtArgs>>): Prisma__maintenance_recordsClient<$Result.GetResult<Prisma.$maintenance_recordsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Maintenance_records.
     * @param {maintenance_recordsUpdateArgs} args - Arguments to update one Maintenance_records.
     * @example
     * // Update one Maintenance_records
     * const maintenance_records = await prisma.maintenance_records.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends maintenance_recordsUpdateArgs>(args: SelectSubset<T, maintenance_recordsUpdateArgs<ExtArgs>>): Prisma__maintenance_recordsClient<$Result.GetResult<Prisma.$maintenance_recordsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Maintenance_records.
     * @param {maintenance_recordsDeleteManyArgs} args - Arguments to filter Maintenance_records to delete.
     * @example
     * // Delete a few Maintenance_records
     * const { count } = await prisma.maintenance_records.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends maintenance_recordsDeleteManyArgs>(args?: SelectSubset<T, maintenance_recordsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Maintenance_records.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {maintenance_recordsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Maintenance_records
     * const maintenance_records = await prisma.maintenance_records.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends maintenance_recordsUpdateManyArgs>(args: SelectSubset<T, maintenance_recordsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Maintenance_records and returns the data updated in the database.
     * @param {maintenance_recordsUpdateManyAndReturnArgs} args - Arguments to update many Maintenance_records.
     * @example
     * // Update many Maintenance_records
     * const maintenance_records = await prisma.maintenance_records.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Maintenance_records and only return the `maintenance_id`
     * const maintenance_recordsWithMaintenance_idOnly = await prisma.maintenance_records.updateManyAndReturn({
     *   select: { maintenance_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends maintenance_recordsUpdateManyAndReturnArgs>(args: SelectSubset<T, maintenance_recordsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$maintenance_recordsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Maintenance_records.
     * @param {maintenance_recordsUpsertArgs} args - Arguments to update or create a Maintenance_records.
     * @example
     * // Update or create a Maintenance_records
     * const maintenance_records = await prisma.maintenance_records.upsert({
     *   create: {
     *     // ... data to create a Maintenance_records
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Maintenance_records we want to update
     *   }
     * })
     */
    upsert<T extends maintenance_recordsUpsertArgs>(args: SelectSubset<T, maintenance_recordsUpsertArgs<ExtArgs>>): Prisma__maintenance_recordsClient<$Result.GetResult<Prisma.$maintenance_recordsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Maintenance_records.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {maintenance_recordsCountArgs} args - Arguments to filter Maintenance_records to count.
     * @example
     * // Count the number of Maintenance_records
     * const count = await prisma.maintenance_records.count({
     *   where: {
     *     // ... the filter for the Maintenance_records we want to count
     *   }
     * })
    **/
    count<T extends maintenance_recordsCountArgs>(
      args?: Subset<T, maintenance_recordsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Maintenance_recordsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Maintenance_records.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Maintenance_recordsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Maintenance_recordsAggregateArgs>(args: Subset<T, Maintenance_recordsAggregateArgs>): Prisma.PrismaPromise<GetMaintenance_recordsAggregateType<T>>

    /**
     * Group by Maintenance_records.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {maintenance_recordsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends maintenance_recordsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: maintenance_recordsGroupByArgs['orderBy'] }
        : { orderBy?: maintenance_recordsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, maintenance_recordsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMaintenance_recordsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the maintenance_records model
   */
  readonly fields: maintenance_recordsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for maintenance_records.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__maintenance_recordsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    maintenance_types<T extends maintenance_records$maintenance_typesArgs<ExtArgs> = {}>(args?: Subset<T, maintenance_records$maintenance_typesArgs<ExtArgs>>): Prisma__maintenance_typesClient<$Result.GetResult<Prisma.$maintenance_typesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    service_providers<T extends maintenance_records$service_providersArgs<ExtArgs> = {}>(args?: Subset<T, maintenance_records$service_providersArgs<ExtArgs>>): Prisma__service_providersClient<$Result.GetResult<Prisma.$service_providersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    vehicles<T extends maintenance_records$vehiclesArgs<ExtArgs> = {}>(args?: Subset<T, maintenance_records$vehiclesArgs<ExtArgs>>): Prisma__vehiclesClient<$Result.GetResult<Prisma.$vehiclesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the maintenance_records model
   */
  interface maintenance_recordsFieldRefs {
    readonly maintenance_id: FieldRef<"maintenance_records", 'Int'>
    readonly vehicle_id: FieldRef<"maintenance_records", 'Int'>
    readonly maintenance_type_id: FieldRef<"maintenance_records", 'Int'>
    readonly service_provider_id: FieldRef<"maintenance_records", 'Int'>
    readonly scheduled_date: FieldRef<"maintenance_records", 'DateTime'>
    readonly completed_date: FieldRef<"maintenance_records", 'DateTime'>
    readonly odometer_at_service: FieldRef<"maintenance_records", 'Decimal'>
    readonly cost: FieldRef<"maintenance_records", 'Decimal'>
    readonly labor_hours: FieldRef<"maintenance_records", 'Decimal'>
    readonly description: FieldRef<"maintenance_records", 'String'>
    readonly parts_used: FieldRef<"maintenance_records", 'String'>
    readonly technician_name: FieldRef<"maintenance_records", 'String'>
    readonly status: FieldRef<"maintenance_records", 'String'>
    readonly next_service_due_date: FieldRef<"maintenance_records", 'DateTime'>
    readonly next_service_due_miles: FieldRef<"maintenance_records", 'Decimal'>
    readonly warranty_expiry_date: FieldRef<"maintenance_records", 'DateTime'>
    readonly invoice_number: FieldRef<"maintenance_records", 'String'>
    readonly notes: FieldRef<"maintenance_records", 'String'>
    readonly created_at: FieldRef<"maintenance_records", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * maintenance_records findUnique
   */
  export type maintenance_recordsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the maintenance_records
     */
    select?: maintenance_recordsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the maintenance_records
     */
    omit?: maintenance_recordsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: maintenance_recordsInclude<ExtArgs> | null
    /**
     * Filter, which maintenance_records to fetch.
     */
    where: maintenance_recordsWhereUniqueInput
  }

  /**
   * maintenance_records findUniqueOrThrow
   */
  export type maintenance_recordsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the maintenance_records
     */
    select?: maintenance_recordsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the maintenance_records
     */
    omit?: maintenance_recordsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: maintenance_recordsInclude<ExtArgs> | null
    /**
     * Filter, which maintenance_records to fetch.
     */
    where: maintenance_recordsWhereUniqueInput
  }

  /**
   * maintenance_records findFirst
   */
  export type maintenance_recordsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the maintenance_records
     */
    select?: maintenance_recordsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the maintenance_records
     */
    omit?: maintenance_recordsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: maintenance_recordsInclude<ExtArgs> | null
    /**
     * Filter, which maintenance_records to fetch.
     */
    where?: maintenance_recordsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of maintenance_records to fetch.
     */
    orderBy?: maintenance_recordsOrderByWithRelationInput | maintenance_recordsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for maintenance_records.
     */
    cursor?: maintenance_recordsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` maintenance_records from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` maintenance_records.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of maintenance_records.
     */
    distinct?: Maintenance_recordsScalarFieldEnum | Maintenance_recordsScalarFieldEnum[]
  }

  /**
   * maintenance_records findFirstOrThrow
   */
  export type maintenance_recordsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the maintenance_records
     */
    select?: maintenance_recordsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the maintenance_records
     */
    omit?: maintenance_recordsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: maintenance_recordsInclude<ExtArgs> | null
    /**
     * Filter, which maintenance_records to fetch.
     */
    where?: maintenance_recordsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of maintenance_records to fetch.
     */
    orderBy?: maintenance_recordsOrderByWithRelationInput | maintenance_recordsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for maintenance_records.
     */
    cursor?: maintenance_recordsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` maintenance_records from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` maintenance_records.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of maintenance_records.
     */
    distinct?: Maintenance_recordsScalarFieldEnum | Maintenance_recordsScalarFieldEnum[]
  }

  /**
   * maintenance_records findMany
   */
  export type maintenance_recordsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the maintenance_records
     */
    select?: maintenance_recordsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the maintenance_records
     */
    omit?: maintenance_recordsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: maintenance_recordsInclude<ExtArgs> | null
    /**
     * Filter, which maintenance_records to fetch.
     */
    where?: maintenance_recordsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of maintenance_records to fetch.
     */
    orderBy?: maintenance_recordsOrderByWithRelationInput | maintenance_recordsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing maintenance_records.
     */
    cursor?: maintenance_recordsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` maintenance_records from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` maintenance_records.
     */
    skip?: number
    distinct?: Maintenance_recordsScalarFieldEnum | Maintenance_recordsScalarFieldEnum[]
  }

  /**
   * maintenance_records create
   */
  export type maintenance_recordsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the maintenance_records
     */
    select?: maintenance_recordsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the maintenance_records
     */
    omit?: maintenance_recordsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: maintenance_recordsInclude<ExtArgs> | null
    /**
     * The data needed to create a maintenance_records.
     */
    data?: XOR<maintenance_recordsCreateInput, maintenance_recordsUncheckedCreateInput>
  }

  /**
   * maintenance_records createMany
   */
  export type maintenance_recordsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many maintenance_records.
     */
    data: maintenance_recordsCreateManyInput | maintenance_recordsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * maintenance_records createManyAndReturn
   */
  export type maintenance_recordsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the maintenance_records
     */
    select?: maintenance_recordsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the maintenance_records
     */
    omit?: maintenance_recordsOmit<ExtArgs> | null
    /**
     * The data used to create many maintenance_records.
     */
    data: maintenance_recordsCreateManyInput | maintenance_recordsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: maintenance_recordsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * maintenance_records update
   */
  export type maintenance_recordsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the maintenance_records
     */
    select?: maintenance_recordsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the maintenance_records
     */
    omit?: maintenance_recordsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: maintenance_recordsInclude<ExtArgs> | null
    /**
     * The data needed to update a maintenance_records.
     */
    data: XOR<maintenance_recordsUpdateInput, maintenance_recordsUncheckedUpdateInput>
    /**
     * Choose, which maintenance_records to update.
     */
    where: maintenance_recordsWhereUniqueInput
  }

  /**
   * maintenance_records updateMany
   */
  export type maintenance_recordsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update maintenance_records.
     */
    data: XOR<maintenance_recordsUpdateManyMutationInput, maintenance_recordsUncheckedUpdateManyInput>
    /**
     * Filter which maintenance_records to update
     */
    where?: maintenance_recordsWhereInput
    /**
     * Limit how many maintenance_records to update.
     */
    limit?: number
  }

  /**
   * maintenance_records updateManyAndReturn
   */
  export type maintenance_recordsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the maintenance_records
     */
    select?: maintenance_recordsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the maintenance_records
     */
    omit?: maintenance_recordsOmit<ExtArgs> | null
    /**
     * The data used to update maintenance_records.
     */
    data: XOR<maintenance_recordsUpdateManyMutationInput, maintenance_recordsUncheckedUpdateManyInput>
    /**
     * Filter which maintenance_records to update
     */
    where?: maintenance_recordsWhereInput
    /**
     * Limit how many maintenance_records to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: maintenance_recordsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * maintenance_records upsert
   */
  export type maintenance_recordsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the maintenance_records
     */
    select?: maintenance_recordsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the maintenance_records
     */
    omit?: maintenance_recordsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: maintenance_recordsInclude<ExtArgs> | null
    /**
     * The filter to search for the maintenance_records to update in case it exists.
     */
    where: maintenance_recordsWhereUniqueInput
    /**
     * In case the maintenance_records found by the `where` argument doesn't exist, create a new maintenance_records with this data.
     */
    create: XOR<maintenance_recordsCreateInput, maintenance_recordsUncheckedCreateInput>
    /**
     * In case the maintenance_records was found with the provided `where` argument, update it with this data.
     */
    update: XOR<maintenance_recordsUpdateInput, maintenance_recordsUncheckedUpdateInput>
  }

  /**
   * maintenance_records delete
   */
  export type maintenance_recordsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the maintenance_records
     */
    select?: maintenance_recordsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the maintenance_records
     */
    omit?: maintenance_recordsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: maintenance_recordsInclude<ExtArgs> | null
    /**
     * Filter which maintenance_records to delete.
     */
    where: maintenance_recordsWhereUniqueInput
  }

  /**
   * maintenance_records deleteMany
   */
  export type maintenance_recordsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which maintenance_records to delete
     */
    where?: maintenance_recordsWhereInput
    /**
     * Limit how many maintenance_records to delete.
     */
    limit?: number
  }

  /**
   * maintenance_records.maintenance_types
   */
  export type maintenance_records$maintenance_typesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the maintenance_types
     */
    select?: maintenance_typesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the maintenance_types
     */
    omit?: maintenance_typesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: maintenance_typesInclude<ExtArgs> | null
    where?: maintenance_typesWhereInput
  }

  /**
   * maintenance_records.service_providers
   */
  export type maintenance_records$service_providersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the service_providers
     */
    select?: service_providersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the service_providers
     */
    omit?: service_providersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: service_providersInclude<ExtArgs> | null
    where?: service_providersWhereInput
  }

  /**
   * maintenance_records.vehicles
   */
  export type maintenance_records$vehiclesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vehicles
     */
    select?: vehiclesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the vehicles
     */
    omit?: vehiclesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: vehiclesInclude<ExtArgs> | null
    where?: vehiclesWhereInput
  }

  /**
   * maintenance_records without action
   */
  export type maintenance_recordsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the maintenance_records
     */
    select?: maintenance_recordsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the maintenance_records
     */
    omit?: maintenance_recordsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: maintenance_recordsInclude<ExtArgs> | null
  }


  /**
   * Model maintenance_types
   */

  export type AggregateMaintenance_types = {
    _count: Maintenance_typesCountAggregateOutputType | null
    _avg: Maintenance_typesAvgAggregateOutputType | null
    _sum: Maintenance_typesSumAggregateOutputType | null
    _min: Maintenance_typesMinAggregateOutputType | null
    _max: Maintenance_typesMaxAggregateOutputType | null
  }

  export type Maintenance_typesAvgAggregateOutputType = {
    maintenance_type_id: number | null
    recommended_interval_miles: number | null
    recommended_interval_months: number | null
    estimated_cost: Decimal | null
  }

  export type Maintenance_typesSumAggregateOutputType = {
    maintenance_type_id: number | null
    recommended_interval_miles: number | null
    recommended_interval_months: number | null
    estimated_cost: Decimal | null
  }

  export type Maintenance_typesMinAggregateOutputType = {
    maintenance_type_id: number | null
    type_name: string | null
    description: string | null
    recommended_interval_miles: number | null
    recommended_interval_months: number | null
    estimated_cost: Decimal | null
  }

  export type Maintenance_typesMaxAggregateOutputType = {
    maintenance_type_id: number | null
    type_name: string | null
    description: string | null
    recommended_interval_miles: number | null
    recommended_interval_months: number | null
    estimated_cost: Decimal | null
  }

  export type Maintenance_typesCountAggregateOutputType = {
    maintenance_type_id: number
    type_name: number
    description: number
    recommended_interval_miles: number
    recommended_interval_months: number
    estimated_cost: number
    _all: number
  }


  export type Maintenance_typesAvgAggregateInputType = {
    maintenance_type_id?: true
    recommended_interval_miles?: true
    recommended_interval_months?: true
    estimated_cost?: true
  }

  export type Maintenance_typesSumAggregateInputType = {
    maintenance_type_id?: true
    recommended_interval_miles?: true
    recommended_interval_months?: true
    estimated_cost?: true
  }

  export type Maintenance_typesMinAggregateInputType = {
    maintenance_type_id?: true
    type_name?: true
    description?: true
    recommended_interval_miles?: true
    recommended_interval_months?: true
    estimated_cost?: true
  }

  export type Maintenance_typesMaxAggregateInputType = {
    maintenance_type_id?: true
    type_name?: true
    description?: true
    recommended_interval_miles?: true
    recommended_interval_months?: true
    estimated_cost?: true
  }

  export type Maintenance_typesCountAggregateInputType = {
    maintenance_type_id?: true
    type_name?: true
    description?: true
    recommended_interval_miles?: true
    recommended_interval_months?: true
    estimated_cost?: true
    _all?: true
  }

  export type Maintenance_typesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which maintenance_types to aggregate.
     */
    where?: maintenance_typesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of maintenance_types to fetch.
     */
    orderBy?: maintenance_typesOrderByWithRelationInput | maintenance_typesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: maintenance_typesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` maintenance_types from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` maintenance_types.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned maintenance_types
    **/
    _count?: true | Maintenance_typesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Maintenance_typesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Maintenance_typesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Maintenance_typesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Maintenance_typesMaxAggregateInputType
  }

  export type GetMaintenance_typesAggregateType<T extends Maintenance_typesAggregateArgs> = {
        [P in keyof T & keyof AggregateMaintenance_types]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMaintenance_types[P]>
      : GetScalarType<T[P], AggregateMaintenance_types[P]>
  }




  export type maintenance_typesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: maintenance_typesWhereInput
    orderBy?: maintenance_typesOrderByWithAggregationInput | maintenance_typesOrderByWithAggregationInput[]
    by: Maintenance_typesScalarFieldEnum[] | Maintenance_typesScalarFieldEnum
    having?: maintenance_typesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Maintenance_typesCountAggregateInputType | true
    _avg?: Maintenance_typesAvgAggregateInputType
    _sum?: Maintenance_typesSumAggregateInputType
    _min?: Maintenance_typesMinAggregateInputType
    _max?: Maintenance_typesMaxAggregateInputType
  }

  export type Maintenance_typesGroupByOutputType = {
    maintenance_type_id: number
    type_name: string
    description: string | null
    recommended_interval_miles: number | null
    recommended_interval_months: number | null
    estimated_cost: Decimal | null
    _count: Maintenance_typesCountAggregateOutputType | null
    _avg: Maintenance_typesAvgAggregateOutputType | null
    _sum: Maintenance_typesSumAggregateOutputType | null
    _min: Maintenance_typesMinAggregateOutputType | null
    _max: Maintenance_typesMaxAggregateOutputType | null
  }

  type GetMaintenance_typesGroupByPayload<T extends maintenance_typesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Maintenance_typesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Maintenance_typesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Maintenance_typesGroupByOutputType[P]>
            : GetScalarType<T[P], Maintenance_typesGroupByOutputType[P]>
        }
      >
    >


  export type maintenance_typesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    maintenance_type_id?: boolean
    type_name?: boolean
    description?: boolean
    recommended_interval_miles?: boolean
    recommended_interval_months?: boolean
    estimated_cost?: boolean
    maintenance_records?: boolean | maintenance_types$maintenance_recordsArgs<ExtArgs>
    _count?: boolean | Maintenance_typesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["maintenance_types"]>

  export type maintenance_typesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    maintenance_type_id?: boolean
    type_name?: boolean
    description?: boolean
    recommended_interval_miles?: boolean
    recommended_interval_months?: boolean
    estimated_cost?: boolean
  }, ExtArgs["result"]["maintenance_types"]>

  export type maintenance_typesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    maintenance_type_id?: boolean
    type_name?: boolean
    description?: boolean
    recommended_interval_miles?: boolean
    recommended_interval_months?: boolean
    estimated_cost?: boolean
  }, ExtArgs["result"]["maintenance_types"]>

  export type maintenance_typesSelectScalar = {
    maintenance_type_id?: boolean
    type_name?: boolean
    description?: boolean
    recommended_interval_miles?: boolean
    recommended_interval_months?: boolean
    estimated_cost?: boolean
  }

  export type maintenance_typesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"maintenance_type_id" | "type_name" | "description" | "recommended_interval_miles" | "recommended_interval_months" | "estimated_cost", ExtArgs["result"]["maintenance_types"]>
  export type maintenance_typesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    maintenance_records?: boolean | maintenance_types$maintenance_recordsArgs<ExtArgs>
    _count?: boolean | Maintenance_typesCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type maintenance_typesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type maintenance_typesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $maintenance_typesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "maintenance_types"
    objects: {
      maintenance_records: Prisma.$maintenance_recordsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      maintenance_type_id: number
      type_name: string
      description: string | null
      recommended_interval_miles: number | null
      recommended_interval_months: number | null
      estimated_cost: Prisma.Decimal | null
    }, ExtArgs["result"]["maintenance_types"]>
    composites: {}
  }

  type maintenance_typesGetPayload<S extends boolean | null | undefined | maintenance_typesDefaultArgs> = $Result.GetResult<Prisma.$maintenance_typesPayload, S>

  type maintenance_typesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<maintenance_typesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Maintenance_typesCountAggregateInputType | true
    }

  export interface maintenance_typesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['maintenance_types'], meta: { name: 'maintenance_types' } }
    /**
     * Find zero or one Maintenance_types that matches the filter.
     * @param {maintenance_typesFindUniqueArgs} args - Arguments to find a Maintenance_types
     * @example
     * // Get one Maintenance_types
     * const maintenance_types = await prisma.maintenance_types.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends maintenance_typesFindUniqueArgs>(args: SelectSubset<T, maintenance_typesFindUniqueArgs<ExtArgs>>): Prisma__maintenance_typesClient<$Result.GetResult<Prisma.$maintenance_typesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Maintenance_types that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {maintenance_typesFindUniqueOrThrowArgs} args - Arguments to find a Maintenance_types
     * @example
     * // Get one Maintenance_types
     * const maintenance_types = await prisma.maintenance_types.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends maintenance_typesFindUniqueOrThrowArgs>(args: SelectSubset<T, maintenance_typesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__maintenance_typesClient<$Result.GetResult<Prisma.$maintenance_typesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Maintenance_types that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {maintenance_typesFindFirstArgs} args - Arguments to find a Maintenance_types
     * @example
     * // Get one Maintenance_types
     * const maintenance_types = await prisma.maintenance_types.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends maintenance_typesFindFirstArgs>(args?: SelectSubset<T, maintenance_typesFindFirstArgs<ExtArgs>>): Prisma__maintenance_typesClient<$Result.GetResult<Prisma.$maintenance_typesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Maintenance_types that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {maintenance_typesFindFirstOrThrowArgs} args - Arguments to find a Maintenance_types
     * @example
     * // Get one Maintenance_types
     * const maintenance_types = await prisma.maintenance_types.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends maintenance_typesFindFirstOrThrowArgs>(args?: SelectSubset<T, maintenance_typesFindFirstOrThrowArgs<ExtArgs>>): Prisma__maintenance_typesClient<$Result.GetResult<Prisma.$maintenance_typesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Maintenance_types that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {maintenance_typesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Maintenance_types
     * const maintenance_types = await prisma.maintenance_types.findMany()
     * 
     * // Get first 10 Maintenance_types
     * const maintenance_types = await prisma.maintenance_types.findMany({ take: 10 })
     * 
     * // Only select the `maintenance_type_id`
     * const maintenance_typesWithMaintenance_type_idOnly = await prisma.maintenance_types.findMany({ select: { maintenance_type_id: true } })
     * 
     */
    findMany<T extends maintenance_typesFindManyArgs>(args?: SelectSubset<T, maintenance_typesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$maintenance_typesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Maintenance_types.
     * @param {maintenance_typesCreateArgs} args - Arguments to create a Maintenance_types.
     * @example
     * // Create one Maintenance_types
     * const Maintenance_types = await prisma.maintenance_types.create({
     *   data: {
     *     // ... data to create a Maintenance_types
     *   }
     * })
     * 
     */
    create<T extends maintenance_typesCreateArgs>(args: SelectSubset<T, maintenance_typesCreateArgs<ExtArgs>>): Prisma__maintenance_typesClient<$Result.GetResult<Prisma.$maintenance_typesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Maintenance_types.
     * @param {maintenance_typesCreateManyArgs} args - Arguments to create many Maintenance_types.
     * @example
     * // Create many Maintenance_types
     * const maintenance_types = await prisma.maintenance_types.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends maintenance_typesCreateManyArgs>(args?: SelectSubset<T, maintenance_typesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Maintenance_types and returns the data saved in the database.
     * @param {maintenance_typesCreateManyAndReturnArgs} args - Arguments to create many Maintenance_types.
     * @example
     * // Create many Maintenance_types
     * const maintenance_types = await prisma.maintenance_types.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Maintenance_types and only return the `maintenance_type_id`
     * const maintenance_typesWithMaintenance_type_idOnly = await prisma.maintenance_types.createManyAndReturn({
     *   select: { maintenance_type_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends maintenance_typesCreateManyAndReturnArgs>(args?: SelectSubset<T, maintenance_typesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$maintenance_typesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Maintenance_types.
     * @param {maintenance_typesDeleteArgs} args - Arguments to delete one Maintenance_types.
     * @example
     * // Delete one Maintenance_types
     * const Maintenance_types = await prisma.maintenance_types.delete({
     *   where: {
     *     // ... filter to delete one Maintenance_types
     *   }
     * })
     * 
     */
    delete<T extends maintenance_typesDeleteArgs>(args: SelectSubset<T, maintenance_typesDeleteArgs<ExtArgs>>): Prisma__maintenance_typesClient<$Result.GetResult<Prisma.$maintenance_typesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Maintenance_types.
     * @param {maintenance_typesUpdateArgs} args - Arguments to update one Maintenance_types.
     * @example
     * // Update one Maintenance_types
     * const maintenance_types = await prisma.maintenance_types.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends maintenance_typesUpdateArgs>(args: SelectSubset<T, maintenance_typesUpdateArgs<ExtArgs>>): Prisma__maintenance_typesClient<$Result.GetResult<Prisma.$maintenance_typesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Maintenance_types.
     * @param {maintenance_typesDeleteManyArgs} args - Arguments to filter Maintenance_types to delete.
     * @example
     * // Delete a few Maintenance_types
     * const { count } = await prisma.maintenance_types.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends maintenance_typesDeleteManyArgs>(args?: SelectSubset<T, maintenance_typesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Maintenance_types.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {maintenance_typesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Maintenance_types
     * const maintenance_types = await prisma.maintenance_types.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends maintenance_typesUpdateManyArgs>(args: SelectSubset<T, maintenance_typesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Maintenance_types and returns the data updated in the database.
     * @param {maintenance_typesUpdateManyAndReturnArgs} args - Arguments to update many Maintenance_types.
     * @example
     * // Update many Maintenance_types
     * const maintenance_types = await prisma.maintenance_types.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Maintenance_types and only return the `maintenance_type_id`
     * const maintenance_typesWithMaintenance_type_idOnly = await prisma.maintenance_types.updateManyAndReturn({
     *   select: { maintenance_type_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends maintenance_typesUpdateManyAndReturnArgs>(args: SelectSubset<T, maintenance_typesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$maintenance_typesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Maintenance_types.
     * @param {maintenance_typesUpsertArgs} args - Arguments to update or create a Maintenance_types.
     * @example
     * // Update or create a Maintenance_types
     * const maintenance_types = await prisma.maintenance_types.upsert({
     *   create: {
     *     // ... data to create a Maintenance_types
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Maintenance_types we want to update
     *   }
     * })
     */
    upsert<T extends maintenance_typesUpsertArgs>(args: SelectSubset<T, maintenance_typesUpsertArgs<ExtArgs>>): Prisma__maintenance_typesClient<$Result.GetResult<Prisma.$maintenance_typesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Maintenance_types.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {maintenance_typesCountArgs} args - Arguments to filter Maintenance_types to count.
     * @example
     * // Count the number of Maintenance_types
     * const count = await prisma.maintenance_types.count({
     *   where: {
     *     // ... the filter for the Maintenance_types we want to count
     *   }
     * })
    **/
    count<T extends maintenance_typesCountArgs>(
      args?: Subset<T, maintenance_typesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Maintenance_typesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Maintenance_types.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Maintenance_typesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Maintenance_typesAggregateArgs>(args: Subset<T, Maintenance_typesAggregateArgs>): Prisma.PrismaPromise<GetMaintenance_typesAggregateType<T>>

    /**
     * Group by Maintenance_types.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {maintenance_typesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends maintenance_typesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: maintenance_typesGroupByArgs['orderBy'] }
        : { orderBy?: maintenance_typesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, maintenance_typesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMaintenance_typesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the maintenance_types model
   */
  readonly fields: maintenance_typesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for maintenance_types.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__maintenance_typesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    maintenance_records<T extends maintenance_types$maintenance_recordsArgs<ExtArgs> = {}>(args?: Subset<T, maintenance_types$maintenance_recordsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$maintenance_recordsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the maintenance_types model
   */
  interface maintenance_typesFieldRefs {
    readonly maintenance_type_id: FieldRef<"maintenance_types", 'Int'>
    readonly type_name: FieldRef<"maintenance_types", 'String'>
    readonly description: FieldRef<"maintenance_types", 'String'>
    readonly recommended_interval_miles: FieldRef<"maintenance_types", 'Int'>
    readonly recommended_interval_months: FieldRef<"maintenance_types", 'Int'>
    readonly estimated_cost: FieldRef<"maintenance_types", 'Decimal'>
  }
    

  // Custom InputTypes
  /**
   * maintenance_types findUnique
   */
  export type maintenance_typesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the maintenance_types
     */
    select?: maintenance_typesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the maintenance_types
     */
    omit?: maintenance_typesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: maintenance_typesInclude<ExtArgs> | null
    /**
     * Filter, which maintenance_types to fetch.
     */
    where: maintenance_typesWhereUniqueInput
  }

  /**
   * maintenance_types findUniqueOrThrow
   */
  export type maintenance_typesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the maintenance_types
     */
    select?: maintenance_typesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the maintenance_types
     */
    omit?: maintenance_typesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: maintenance_typesInclude<ExtArgs> | null
    /**
     * Filter, which maintenance_types to fetch.
     */
    where: maintenance_typesWhereUniqueInput
  }

  /**
   * maintenance_types findFirst
   */
  export type maintenance_typesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the maintenance_types
     */
    select?: maintenance_typesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the maintenance_types
     */
    omit?: maintenance_typesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: maintenance_typesInclude<ExtArgs> | null
    /**
     * Filter, which maintenance_types to fetch.
     */
    where?: maintenance_typesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of maintenance_types to fetch.
     */
    orderBy?: maintenance_typesOrderByWithRelationInput | maintenance_typesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for maintenance_types.
     */
    cursor?: maintenance_typesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` maintenance_types from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` maintenance_types.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of maintenance_types.
     */
    distinct?: Maintenance_typesScalarFieldEnum | Maintenance_typesScalarFieldEnum[]
  }

  /**
   * maintenance_types findFirstOrThrow
   */
  export type maintenance_typesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the maintenance_types
     */
    select?: maintenance_typesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the maintenance_types
     */
    omit?: maintenance_typesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: maintenance_typesInclude<ExtArgs> | null
    /**
     * Filter, which maintenance_types to fetch.
     */
    where?: maintenance_typesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of maintenance_types to fetch.
     */
    orderBy?: maintenance_typesOrderByWithRelationInput | maintenance_typesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for maintenance_types.
     */
    cursor?: maintenance_typesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` maintenance_types from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` maintenance_types.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of maintenance_types.
     */
    distinct?: Maintenance_typesScalarFieldEnum | Maintenance_typesScalarFieldEnum[]
  }

  /**
   * maintenance_types findMany
   */
  export type maintenance_typesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the maintenance_types
     */
    select?: maintenance_typesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the maintenance_types
     */
    omit?: maintenance_typesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: maintenance_typesInclude<ExtArgs> | null
    /**
     * Filter, which maintenance_types to fetch.
     */
    where?: maintenance_typesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of maintenance_types to fetch.
     */
    orderBy?: maintenance_typesOrderByWithRelationInput | maintenance_typesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing maintenance_types.
     */
    cursor?: maintenance_typesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` maintenance_types from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` maintenance_types.
     */
    skip?: number
    distinct?: Maintenance_typesScalarFieldEnum | Maintenance_typesScalarFieldEnum[]
  }

  /**
   * maintenance_types create
   */
  export type maintenance_typesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the maintenance_types
     */
    select?: maintenance_typesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the maintenance_types
     */
    omit?: maintenance_typesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: maintenance_typesInclude<ExtArgs> | null
    /**
     * The data needed to create a maintenance_types.
     */
    data: XOR<maintenance_typesCreateInput, maintenance_typesUncheckedCreateInput>
  }

  /**
   * maintenance_types createMany
   */
  export type maintenance_typesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many maintenance_types.
     */
    data: maintenance_typesCreateManyInput | maintenance_typesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * maintenance_types createManyAndReturn
   */
  export type maintenance_typesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the maintenance_types
     */
    select?: maintenance_typesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the maintenance_types
     */
    omit?: maintenance_typesOmit<ExtArgs> | null
    /**
     * The data used to create many maintenance_types.
     */
    data: maintenance_typesCreateManyInput | maintenance_typesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * maintenance_types update
   */
  export type maintenance_typesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the maintenance_types
     */
    select?: maintenance_typesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the maintenance_types
     */
    omit?: maintenance_typesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: maintenance_typesInclude<ExtArgs> | null
    /**
     * The data needed to update a maintenance_types.
     */
    data: XOR<maintenance_typesUpdateInput, maintenance_typesUncheckedUpdateInput>
    /**
     * Choose, which maintenance_types to update.
     */
    where: maintenance_typesWhereUniqueInput
  }

  /**
   * maintenance_types updateMany
   */
  export type maintenance_typesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update maintenance_types.
     */
    data: XOR<maintenance_typesUpdateManyMutationInput, maintenance_typesUncheckedUpdateManyInput>
    /**
     * Filter which maintenance_types to update
     */
    where?: maintenance_typesWhereInput
    /**
     * Limit how many maintenance_types to update.
     */
    limit?: number
  }

  /**
   * maintenance_types updateManyAndReturn
   */
  export type maintenance_typesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the maintenance_types
     */
    select?: maintenance_typesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the maintenance_types
     */
    omit?: maintenance_typesOmit<ExtArgs> | null
    /**
     * The data used to update maintenance_types.
     */
    data: XOR<maintenance_typesUpdateManyMutationInput, maintenance_typesUncheckedUpdateManyInput>
    /**
     * Filter which maintenance_types to update
     */
    where?: maintenance_typesWhereInput
    /**
     * Limit how many maintenance_types to update.
     */
    limit?: number
  }

  /**
   * maintenance_types upsert
   */
  export type maintenance_typesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the maintenance_types
     */
    select?: maintenance_typesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the maintenance_types
     */
    omit?: maintenance_typesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: maintenance_typesInclude<ExtArgs> | null
    /**
     * The filter to search for the maintenance_types to update in case it exists.
     */
    where: maintenance_typesWhereUniqueInput
    /**
     * In case the maintenance_types found by the `where` argument doesn't exist, create a new maintenance_types with this data.
     */
    create: XOR<maintenance_typesCreateInput, maintenance_typesUncheckedCreateInput>
    /**
     * In case the maintenance_types was found with the provided `where` argument, update it with this data.
     */
    update: XOR<maintenance_typesUpdateInput, maintenance_typesUncheckedUpdateInput>
  }

  /**
   * maintenance_types delete
   */
  export type maintenance_typesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the maintenance_types
     */
    select?: maintenance_typesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the maintenance_types
     */
    omit?: maintenance_typesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: maintenance_typesInclude<ExtArgs> | null
    /**
     * Filter which maintenance_types to delete.
     */
    where: maintenance_typesWhereUniqueInput
  }

  /**
   * maintenance_types deleteMany
   */
  export type maintenance_typesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which maintenance_types to delete
     */
    where?: maintenance_typesWhereInput
    /**
     * Limit how many maintenance_types to delete.
     */
    limit?: number
  }

  /**
   * maintenance_types.maintenance_records
   */
  export type maintenance_types$maintenance_recordsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the maintenance_records
     */
    select?: maintenance_recordsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the maintenance_records
     */
    omit?: maintenance_recordsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: maintenance_recordsInclude<ExtArgs> | null
    where?: maintenance_recordsWhereInput
    orderBy?: maintenance_recordsOrderByWithRelationInput | maintenance_recordsOrderByWithRelationInput[]
    cursor?: maintenance_recordsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Maintenance_recordsScalarFieldEnum | Maintenance_recordsScalarFieldEnum[]
  }

  /**
   * maintenance_types without action
   */
  export type maintenance_typesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the maintenance_types
     */
    select?: maintenance_typesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the maintenance_types
     */
    omit?: maintenance_typesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: maintenance_typesInclude<ExtArgs> | null
  }


  /**
   * Model reports
   */

  export type AggregateReports = {
    _count: ReportsCountAggregateOutputType | null
    _avg: ReportsAvgAggregateOutputType | null
    _sum: ReportsSumAggregateOutputType | null
    _min: ReportsMinAggregateOutputType | null
    _max: ReportsMaxAggregateOutputType | null
  }

  export type ReportsAvgAggregateOutputType = {
    report_id: number | null
    company_id: number | null
    generated_by: number | null
  }

  export type ReportsSumAggregateOutputType = {
    report_id: number | null
    company_id: number | null
    generated_by: number | null
  }

  export type ReportsMinAggregateOutputType = {
    report_id: number | null
    company_id: number | null
    report_name: string | null
    report_type: string | null
    generated_by: number | null
    generation_date: Date | null
    date_range_start: Date | null
    date_range_end: Date | null
    file_path: string | null
    status: string | null
  }

  export type ReportsMaxAggregateOutputType = {
    report_id: number | null
    company_id: number | null
    report_name: string | null
    report_type: string | null
    generated_by: number | null
    generation_date: Date | null
    date_range_start: Date | null
    date_range_end: Date | null
    file_path: string | null
    status: string | null
  }

  export type ReportsCountAggregateOutputType = {
    report_id: number
    company_id: number
    report_name: number
    report_type: number
    generated_by: number
    generation_date: number
    date_range_start: number
    date_range_end: number
    parameters: number
    file_path: number
    status: number
    _all: number
  }


  export type ReportsAvgAggregateInputType = {
    report_id?: true
    company_id?: true
    generated_by?: true
  }

  export type ReportsSumAggregateInputType = {
    report_id?: true
    company_id?: true
    generated_by?: true
  }

  export type ReportsMinAggregateInputType = {
    report_id?: true
    company_id?: true
    report_name?: true
    report_type?: true
    generated_by?: true
    generation_date?: true
    date_range_start?: true
    date_range_end?: true
    file_path?: true
    status?: true
  }

  export type ReportsMaxAggregateInputType = {
    report_id?: true
    company_id?: true
    report_name?: true
    report_type?: true
    generated_by?: true
    generation_date?: true
    date_range_start?: true
    date_range_end?: true
    file_path?: true
    status?: true
  }

  export type ReportsCountAggregateInputType = {
    report_id?: true
    company_id?: true
    report_name?: true
    report_type?: true
    generated_by?: true
    generation_date?: true
    date_range_start?: true
    date_range_end?: true
    parameters?: true
    file_path?: true
    status?: true
    _all?: true
  }

  export type ReportsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which reports to aggregate.
     */
    where?: reportsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reports to fetch.
     */
    orderBy?: reportsOrderByWithRelationInput | reportsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: reportsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reports.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned reports
    **/
    _count?: true | ReportsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ReportsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ReportsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ReportsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ReportsMaxAggregateInputType
  }

  export type GetReportsAggregateType<T extends ReportsAggregateArgs> = {
        [P in keyof T & keyof AggregateReports]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReports[P]>
      : GetScalarType<T[P], AggregateReports[P]>
  }




  export type reportsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: reportsWhereInput
    orderBy?: reportsOrderByWithAggregationInput | reportsOrderByWithAggregationInput[]
    by: ReportsScalarFieldEnum[] | ReportsScalarFieldEnum
    having?: reportsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReportsCountAggregateInputType | true
    _avg?: ReportsAvgAggregateInputType
    _sum?: ReportsSumAggregateInputType
    _min?: ReportsMinAggregateInputType
    _max?: ReportsMaxAggregateInputType
  }

  export type ReportsGroupByOutputType = {
    report_id: number
    company_id: number | null
    report_name: string
    report_type: string
    generated_by: number | null
    generation_date: Date | null
    date_range_start: Date | null
    date_range_end: Date | null
    parameters: JsonValue | null
    file_path: string | null
    status: string | null
    _count: ReportsCountAggregateOutputType | null
    _avg: ReportsAvgAggregateOutputType | null
    _sum: ReportsSumAggregateOutputType | null
    _min: ReportsMinAggregateOutputType | null
    _max: ReportsMaxAggregateOutputType | null
  }

  type GetReportsGroupByPayload<T extends reportsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ReportsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ReportsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ReportsGroupByOutputType[P]>
            : GetScalarType<T[P], ReportsGroupByOutputType[P]>
        }
      >
    >


  export type reportsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    report_id?: boolean
    company_id?: boolean
    report_name?: boolean
    report_type?: boolean
    generated_by?: boolean
    generation_date?: boolean
    date_range_start?: boolean
    date_range_end?: boolean
    parameters?: boolean
    file_path?: boolean
    status?: boolean
    companies?: boolean | reports$companiesArgs<ExtArgs>
    users?: boolean | reports$usersArgs<ExtArgs>
  }, ExtArgs["result"]["reports"]>

  export type reportsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    report_id?: boolean
    company_id?: boolean
    report_name?: boolean
    report_type?: boolean
    generated_by?: boolean
    generation_date?: boolean
    date_range_start?: boolean
    date_range_end?: boolean
    parameters?: boolean
    file_path?: boolean
    status?: boolean
    companies?: boolean | reports$companiesArgs<ExtArgs>
    users?: boolean | reports$usersArgs<ExtArgs>
  }, ExtArgs["result"]["reports"]>

  export type reportsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    report_id?: boolean
    company_id?: boolean
    report_name?: boolean
    report_type?: boolean
    generated_by?: boolean
    generation_date?: boolean
    date_range_start?: boolean
    date_range_end?: boolean
    parameters?: boolean
    file_path?: boolean
    status?: boolean
    companies?: boolean | reports$companiesArgs<ExtArgs>
    users?: boolean | reports$usersArgs<ExtArgs>
  }, ExtArgs["result"]["reports"]>

  export type reportsSelectScalar = {
    report_id?: boolean
    company_id?: boolean
    report_name?: boolean
    report_type?: boolean
    generated_by?: boolean
    generation_date?: boolean
    date_range_start?: boolean
    date_range_end?: boolean
    parameters?: boolean
    file_path?: boolean
    status?: boolean
  }

  export type reportsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"report_id" | "company_id" | "report_name" | "report_type" | "generated_by" | "generation_date" | "date_range_start" | "date_range_end" | "parameters" | "file_path" | "status", ExtArgs["result"]["reports"]>
  export type reportsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    companies?: boolean | reports$companiesArgs<ExtArgs>
    users?: boolean | reports$usersArgs<ExtArgs>
  }
  export type reportsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    companies?: boolean | reports$companiesArgs<ExtArgs>
    users?: boolean | reports$usersArgs<ExtArgs>
  }
  export type reportsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    companies?: boolean | reports$companiesArgs<ExtArgs>
    users?: boolean | reports$usersArgs<ExtArgs>
  }

  export type $reportsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "reports"
    objects: {
      companies: Prisma.$companiesPayload<ExtArgs> | null
      users: Prisma.$usersPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      report_id: number
      company_id: number | null
      report_name: string
      report_type: string
      generated_by: number | null
      generation_date: Date | null
      date_range_start: Date | null
      date_range_end: Date | null
      parameters: Prisma.JsonValue | null
      file_path: string | null
      status: string | null
    }, ExtArgs["result"]["reports"]>
    composites: {}
  }

  type reportsGetPayload<S extends boolean | null | undefined | reportsDefaultArgs> = $Result.GetResult<Prisma.$reportsPayload, S>

  type reportsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<reportsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ReportsCountAggregateInputType | true
    }

  export interface reportsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['reports'], meta: { name: 'reports' } }
    /**
     * Find zero or one Reports that matches the filter.
     * @param {reportsFindUniqueArgs} args - Arguments to find a Reports
     * @example
     * // Get one Reports
     * const reports = await prisma.reports.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends reportsFindUniqueArgs>(args: SelectSubset<T, reportsFindUniqueArgs<ExtArgs>>): Prisma__reportsClient<$Result.GetResult<Prisma.$reportsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Reports that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {reportsFindUniqueOrThrowArgs} args - Arguments to find a Reports
     * @example
     * // Get one Reports
     * const reports = await prisma.reports.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends reportsFindUniqueOrThrowArgs>(args: SelectSubset<T, reportsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__reportsClient<$Result.GetResult<Prisma.$reportsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Reports that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reportsFindFirstArgs} args - Arguments to find a Reports
     * @example
     * // Get one Reports
     * const reports = await prisma.reports.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends reportsFindFirstArgs>(args?: SelectSubset<T, reportsFindFirstArgs<ExtArgs>>): Prisma__reportsClient<$Result.GetResult<Prisma.$reportsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Reports that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reportsFindFirstOrThrowArgs} args - Arguments to find a Reports
     * @example
     * // Get one Reports
     * const reports = await prisma.reports.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends reportsFindFirstOrThrowArgs>(args?: SelectSubset<T, reportsFindFirstOrThrowArgs<ExtArgs>>): Prisma__reportsClient<$Result.GetResult<Prisma.$reportsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Reports that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reportsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Reports
     * const reports = await prisma.reports.findMany()
     * 
     * // Get first 10 Reports
     * const reports = await prisma.reports.findMany({ take: 10 })
     * 
     * // Only select the `report_id`
     * const reportsWithReport_idOnly = await prisma.reports.findMany({ select: { report_id: true } })
     * 
     */
    findMany<T extends reportsFindManyArgs>(args?: SelectSubset<T, reportsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$reportsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Reports.
     * @param {reportsCreateArgs} args - Arguments to create a Reports.
     * @example
     * // Create one Reports
     * const Reports = await prisma.reports.create({
     *   data: {
     *     // ... data to create a Reports
     *   }
     * })
     * 
     */
    create<T extends reportsCreateArgs>(args: SelectSubset<T, reportsCreateArgs<ExtArgs>>): Prisma__reportsClient<$Result.GetResult<Prisma.$reportsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Reports.
     * @param {reportsCreateManyArgs} args - Arguments to create many Reports.
     * @example
     * // Create many Reports
     * const reports = await prisma.reports.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends reportsCreateManyArgs>(args?: SelectSubset<T, reportsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Reports and returns the data saved in the database.
     * @param {reportsCreateManyAndReturnArgs} args - Arguments to create many Reports.
     * @example
     * // Create many Reports
     * const reports = await prisma.reports.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Reports and only return the `report_id`
     * const reportsWithReport_idOnly = await prisma.reports.createManyAndReturn({
     *   select: { report_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends reportsCreateManyAndReturnArgs>(args?: SelectSubset<T, reportsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$reportsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Reports.
     * @param {reportsDeleteArgs} args - Arguments to delete one Reports.
     * @example
     * // Delete one Reports
     * const Reports = await prisma.reports.delete({
     *   where: {
     *     // ... filter to delete one Reports
     *   }
     * })
     * 
     */
    delete<T extends reportsDeleteArgs>(args: SelectSubset<T, reportsDeleteArgs<ExtArgs>>): Prisma__reportsClient<$Result.GetResult<Prisma.$reportsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Reports.
     * @param {reportsUpdateArgs} args - Arguments to update one Reports.
     * @example
     * // Update one Reports
     * const reports = await prisma.reports.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends reportsUpdateArgs>(args: SelectSubset<T, reportsUpdateArgs<ExtArgs>>): Prisma__reportsClient<$Result.GetResult<Prisma.$reportsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Reports.
     * @param {reportsDeleteManyArgs} args - Arguments to filter Reports to delete.
     * @example
     * // Delete a few Reports
     * const { count } = await prisma.reports.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends reportsDeleteManyArgs>(args?: SelectSubset<T, reportsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Reports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reportsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Reports
     * const reports = await prisma.reports.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends reportsUpdateManyArgs>(args: SelectSubset<T, reportsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Reports and returns the data updated in the database.
     * @param {reportsUpdateManyAndReturnArgs} args - Arguments to update many Reports.
     * @example
     * // Update many Reports
     * const reports = await prisma.reports.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Reports and only return the `report_id`
     * const reportsWithReport_idOnly = await prisma.reports.updateManyAndReturn({
     *   select: { report_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends reportsUpdateManyAndReturnArgs>(args: SelectSubset<T, reportsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$reportsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Reports.
     * @param {reportsUpsertArgs} args - Arguments to update or create a Reports.
     * @example
     * // Update or create a Reports
     * const reports = await prisma.reports.upsert({
     *   create: {
     *     // ... data to create a Reports
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Reports we want to update
     *   }
     * })
     */
    upsert<T extends reportsUpsertArgs>(args: SelectSubset<T, reportsUpsertArgs<ExtArgs>>): Prisma__reportsClient<$Result.GetResult<Prisma.$reportsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Reports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reportsCountArgs} args - Arguments to filter Reports to count.
     * @example
     * // Count the number of Reports
     * const count = await prisma.reports.count({
     *   where: {
     *     // ... the filter for the Reports we want to count
     *   }
     * })
    **/
    count<T extends reportsCountArgs>(
      args?: Subset<T, reportsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ReportsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Reports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReportsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ReportsAggregateArgs>(args: Subset<T, ReportsAggregateArgs>): Prisma.PrismaPromise<GetReportsAggregateType<T>>

    /**
     * Group by Reports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reportsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends reportsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: reportsGroupByArgs['orderBy'] }
        : { orderBy?: reportsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, reportsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReportsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the reports model
   */
  readonly fields: reportsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for reports.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__reportsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    companies<T extends reports$companiesArgs<ExtArgs> = {}>(args?: Subset<T, reports$companiesArgs<ExtArgs>>): Prisma__companiesClient<$Result.GetResult<Prisma.$companiesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    users<T extends reports$usersArgs<ExtArgs> = {}>(args?: Subset<T, reports$usersArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the reports model
   */
  interface reportsFieldRefs {
    readonly report_id: FieldRef<"reports", 'Int'>
    readonly company_id: FieldRef<"reports", 'Int'>
    readonly report_name: FieldRef<"reports", 'String'>
    readonly report_type: FieldRef<"reports", 'String'>
    readonly generated_by: FieldRef<"reports", 'Int'>
    readonly generation_date: FieldRef<"reports", 'DateTime'>
    readonly date_range_start: FieldRef<"reports", 'DateTime'>
    readonly date_range_end: FieldRef<"reports", 'DateTime'>
    readonly parameters: FieldRef<"reports", 'Json'>
    readonly file_path: FieldRef<"reports", 'String'>
    readonly status: FieldRef<"reports", 'String'>
  }
    

  // Custom InputTypes
  /**
   * reports findUnique
   */
  export type reportsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reports
     */
    select?: reportsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reports
     */
    omit?: reportsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportsInclude<ExtArgs> | null
    /**
     * Filter, which reports to fetch.
     */
    where: reportsWhereUniqueInput
  }

  /**
   * reports findUniqueOrThrow
   */
  export type reportsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reports
     */
    select?: reportsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reports
     */
    omit?: reportsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportsInclude<ExtArgs> | null
    /**
     * Filter, which reports to fetch.
     */
    where: reportsWhereUniqueInput
  }

  /**
   * reports findFirst
   */
  export type reportsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reports
     */
    select?: reportsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reports
     */
    omit?: reportsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportsInclude<ExtArgs> | null
    /**
     * Filter, which reports to fetch.
     */
    where?: reportsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reports to fetch.
     */
    orderBy?: reportsOrderByWithRelationInput | reportsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for reports.
     */
    cursor?: reportsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reports.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of reports.
     */
    distinct?: ReportsScalarFieldEnum | ReportsScalarFieldEnum[]
  }

  /**
   * reports findFirstOrThrow
   */
  export type reportsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reports
     */
    select?: reportsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reports
     */
    omit?: reportsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportsInclude<ExtArgs> | null
    /**
     * Filter, which reports to fetch.
     */
    where?: reportsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reports to fetch.
     */
    orderBy?: reportsOrderByWithRelationInput | reportsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for reports.
     */
    cursor?: reportsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reports.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of reports.
     */
    distinct?: ReportsScalarFieldEnum | ReportsScalarFieldEnum[]
  }

  /**
   * reports findMany
   */
  export type reportsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reports
     */
    select?: reportsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reports
     */
    omit?: reportsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportsInclude<ExtArgs> | null
    /**
     * Filter, which reports to fetch.
     */
    where?: reportsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reports to fetch.
     */
    orderBy?: reportsOrderByWithRelationInput | reportsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing reports.
     */
    cursor?: reportsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reports.
     */
    skip?: number
    distinct?: ReportsScalarFieldEnum | ReportsScalarFieldEnum[]
  }

  /**
   * reports create
   */
  export type reportsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reports
     */
    select?: reportsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reports
     */
    omit?: reportsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportsInclude<ExtArgs> | null
    /**
     * The data needed to create a reports.
     */
    data: XOR<reportsCreateInput, reportsUncheckedCreateInput>
  }

  /**
   * reports createMany
   */
  export type reportsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many reports.
     */
    data: reportsCreateManyInput | reportsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * reports createManyAndReturn
   */
  export type reportsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reports
     */
    select?: reportsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the reports
     */
    omit?: reportsOmit<ExtArgs> | null
    /**
     * The data used to create many reports.
     */
    data: reportsCreateManyInput | reportsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * reports update
   */
  export type reportsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reports
     */
    select?: reportsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reports
     */
    omit?: reportsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportsInclude<ExtArgs> | null
    /**
     * The data needed to update a reports.
     */
    data: XOR<reportsUpdateInput, reportsUncheckedUpdateInput>
    /**
     * Choose, which reports to update.
     */
    where: reportsWhereUniqueInput
  }

  /**
   * reports updateMany
   */
  export type reportsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update reports.
     */
    data: XOR<reportsUpdateManyMutationInput, reportsUncheckedUpdateManyInput>
    /**
     * Filter which reports to update
     */
    where?: reportsWhereInput
    /**
     * Limit how many reports to update.
     */
    limit?: number
  }

  /**
   * reports updateManyAndReturn
   */
  export type reportsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reports
     */
    select?: reportsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the reports
     */
    omit?: reportsOmit<ExtArgs> | null
    /**
     * The data used to update reports.
     */
    data: XOR<reportsUpdateManyMutationInput, reportsUncheckedUpdateManyInput>
    /**
     * Filter which reports to update
     */
    where?: reportsWhereInput
    /**
     * Limit how many reports to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * reports upsert
   */
  export type reportsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reports
     */
    select?: reportsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reports
     */
    omit?: reportsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportsInclude<ExtArgs> | null
    /**
     * The filter to search for the reports to update in case it exists.
     */
    where: reportsWhereUniqueInput
    /**
     * In case the reports found by the `where` argument doesn't exist, create a new reports with this data.
     */
    create: XOR<reportsCreateInput, reportsUncheckedCreateInput>
    /**
     * In case the reports was found with the provided `where` argument, update it with this data.
     */
    update: XOR<reportsUpdateInput, reportsUncheckedUpdateInput>
  }

  /**
   * reports delete
   */
  export type reportsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reports
     */
    select?: reportsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reports
     */
    omit?: reportsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportsInclude<ExtArgs> | null
    /**
     * Filter which reports to delete.
     */
    where: reportsWhereUniqueInput
  }

  /**
   * reports deleteMany
   */
  export type reportsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which reports to delete
     */
    where?: reportsWhereInput
    /**
     * Limit how many reports to delete.
     */
    limit?: number
  }

  /**
   * reports.companies
   */
  export type reports$companiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the companies
     */
    select?: companiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the companies
     */
    omit?: companiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: companiesInclude<ExtArgs> | null
    where?: companiesWhereInput
  }

  /**
   * reports.users
   */
  export type reports$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    where?: usersWhereInput
  }

  /**
   * reports without action
   */
  export type reportsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reports
     */
    select?: reportsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reports
     */
    omit?: reportsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportsInclude<ExtArgs> | null
  }


  /**
   * Model safety_inspections
   */

  export type AggregateSafety_inspections = {
    _count: Safety_inspectionsCountAggregateOutputType | null
    _avg: Safety_inspectionsAvgAggregateOutputType | null
    _sum: Safety_inspectionsSumAggregateOutputType | null
    _min: Safety_inspectionsMinAggregateOutputType | null
    _max: Safety_inspectionsMaxAggregateOutputType | null
  }

  export type Safety_inspectionsAvgAggregateOutputType = {
    inspection_id: number | null
    vehicle_id: number | null
    odometer_reading: Decimal | null
    overall_score: Decimal | null
    defects_found: number | null
    critical_defects: number | null
  }

  export type Safety_inspectionsSumAggregateOutputType = {
    inspection_id: number | null
    vehicle_id: number | null
    odometer_reading: Decimal | null
    overall_score: Decimal | null
    defects_found: number | null
    critical_defects: number | null
  }

  export type Safety_inspectionsMinAggregateOutputType = {
    inspection_id: number | null
    vehicle_id: number | null
    inspector_name: string | null
    inspection_date: Date | null
    inspection_type: string | null
    odometer_reading: Decimal | null
    overall_score: Decimal | null
    passed: boolean | null
    defects_found: number | null
    critical_defects: number | null
    notes: string | null
    next_inspection_due: Date | null
    certificate_number: string | null
  }

  export type Safety_inspectionsMaxAggregateOutputType = {
    inspection_id: number | null
    vehicle_id: number | null
    inspector_name: string | null
    inspection_date: Date | null
    inspection_type: string | null
    odometer_reading: Decimal | null
    overall_score: Decimal | null
    passed: boolean | null
    defects_found: number | null
    critical_defects: number | null
    notes: string | null
    next_inspection_due: Date | null
    certificate_number: string | null
  }

  export type Safety_inspectionsCountAggregateOutputType = {
    inspection_id: number
    vehicle_id: number
    inspector_name: number
    inspection_date: number
    inspection_type: number
    odometer_reading: number
    overall_score: number
    passed: number
    defects_found: number
    critical_defects: number
    notes: number
    next_inspection_due: number
    certificate_number: number
    _all: number
  }


  export type Safety_inspectionsAvgAggregateInputType = {
    inspection_id?: true
    vehicle_id?: true
    odometer_reading?: true
    overall_score?: true
    defects_found?: true
    critical_defects?: true
  }

  export type Safety_inspectionsSumAggregateInputType = {
    inspection_id?: true
    vehicle_id?: true
    odometer_reading?: true
    overall_score?: true
    defects_found?: true
    critical_defects?: true
  }

  export type Safety_inspectionsMinAggregateInputType = {
    inspection_id?: true
    vehicle_id?: true
    inspector_name?: true
    inspection_date?: true
    inspection_type?: true
    odometer_reading?: true
    overall_score?: true
    passed?: true
    defects_found?: true
    critical_defects?: true
    notes?: true
    next_inspection_due?: true
    certificate_number?: true
  }

  export type Safety_inspectionsMaxAggregateInputType = {
    inspection_id?: true
    vehicle_id?: true
    inspector_name?: true
    inspection_date?: true
    inspection_type?: true
    odometer_reading?: true
    overall_score?: true
    passed?: true
    defects_found?: true
    critical_defects?: true
    notes?: true
    next_inspection_due?: true
    certificate_number?: true
  }

  export type Safety_inspectionsCountAggregateInputType = {
    inspection_id?: true
    vehicle_id?: true
    inspector_name?: true
    inspection_date?: true
    inspection_type?: true
    odometer_reading?: true
    overall_score?: true
    passed?: true
    defects_found?: true
    critical_defects?: true
    notes?: true
    next_inspection_due?: true
    certificate_number?: true
    _all?: true
  }

  export type Safety_inspectionsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which safety_inspections to aggregate.
     */
    where?: safety_inspectionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of safety_inspections to fetch.
     */
    orderBy?: safety_inspectionsOrderByWithRelationInput | safety_inspectionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: safety_inspectionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` safety_inspections from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` safety_inspections.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned safety_inspections
    **/
    _count?: true | Safety_inspectionsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Safety_inspectionsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Safety_inspectionsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Safety_inspectionsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Safety_inspectionsMaxAggregateInputType
  }

  export type GetSafety_inspectionsAggregateType<T extends Safety_inspectionsAggregateArgs> = {
        [P in keyof T & keyof AggregateSafety_inspections]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSafety_inspections[P]>
      : GetScalarType<T[P], AggregateSafety_inspections[P]>
  }




  export type safety_inspectionsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: safety_inspectionsWhereInput
    orderBy?: safety_inspectionsOrderByWithAggregationInput | safety_inspectionsOrderByWithAggregationInput[]
    by: Safety_inspectionsScalarFieldEnum[] | Safety_inspectionsScalarFieldEnum
    having?: safety_inspectionsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Safety_inspectionsCountAggregateInputType | true
    _avg?: Safety_inspectionsAvgAggregateInputType
    _sum?: Safety_inspectionsSumAggregateInputType
    _min?: Safety_inspectionsMinAggregateInputType
    _max?: Safety_inspectionsMaxAggregateInputType
  }

  export type Safety_inspectionsGroupByOutputType = {
    inspection_id: number
    vehicle_id: number | null
    inspector_name: string | null
    inspection_date: Date
    inspection_type: string
    odometer_reading: Decimal | null
    overall_score: Decimal | null
    passed: boolean
    defects_found: number | null
    critical_defects: number | null
    notes: string | null
    next_inspection_due: Date | null
    certificate_number: string | null
    _count: Safety_inspectionsCountAggregateOutputType | null
    _avg: Safety_inspectionsAvgAggregateOutputType | null
    _sum: Safety_inspectionsSumAggregateOutputType | null
    _min: Safety_inspectionsMinAggregateOutputType | null
    _max: Safety_inspectionsMaxAggregateOutputType | null
  }

  type GetSafety_inspectionsGroupByPayload<T extends safety_inspectionsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Safety_inspectionsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Safety_inspectionsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Safety_inspectionsGroupByOutputType[P]>
            : GetScalarType<T[P], Safety_inspectionsGroupByOutputType[P]>
        }
      >
    >


  export type safety_inspectionsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    inspection_id?: boolean
    vehicle_id?: boolean
    inspector_name?: boolean
    inspection_date?: boolean
    inspection_type?: boolean
    odometer_reading?: boolean
    overall_score?: boolean
    passed?: boolean
    defects_found?: boolean
    critical_defects?: boolean
    notes?: boolean
    next_inspection_due?: boolean
    certificate_number?: boolean
    vehicles?: boolean | safety_inspections$vehiclesArgs<ExtArgs>
  }, ExtArgs["result"]["safety_inspections"]>

  export type safety_inspectionsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    inspection_id?: boolean
    vehicle_id?: boolean
    inspector_name?: boolean
    inspection_date?: boolean
    inspection_type?: boolean
    odometer_reading?: boolean
    overall_score?: boolean
    passed?: boolean
    defects_found?: boolean
    critical_defects?: boolean
    notes?: boolean
    next_inspection_due?: boolean
    certificate_number?: boolean
    vehicles?: boolean | safety_inspections$vehiclesArgs<ExtArgs>
  }, ExtArgs["result"]["safety_inspections"]>

  export type safety_inspectionsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    inspection_id?: boolean
    vehicle_id?: boolean
    inspector_name?: boolean
    inspection_date?: boolean
    inspection_type?: boolean
    odometer_reading?: boolean
    overall_score?: boolean
    passed?: boolean
    defects_found?: boolean
    critical_defects?: boolean
    notes?: boolean
    next_inspection_due?: boolean
    certificate_number?: boolean
    vehicles?: boolean | safety_inspections$vehiclesArgs<ExtArgs>
  }, ExtArgs["result"]["safety_inspections"]>

  export type safety_inspectionsSelectScalar = {
    inspection_id?: boolean
    vehicle_id?: boolean
    inspector_name?: boolean
    inspection_date?: boolean
    inspection_type?: boolean
    odometer_reading?: boolean
    overall_score?: boolean
    passed?: boolean
    defects_found?: boolean
    critical_defects?: boolean
    notes?: boolean
    next_inspection_due?: boolean
    certificate_number?: boolean
  }

  export type safety_inspectionsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"inspection_id" | "vehicle_id" | "inspector_name" | "inspection_date" | "inspection_type" | "odometer_reading" | "overall_score" | "passed" | "defects_found" | "critical_defects" | "notes" | "next_inspection_due" | "certificate_number", ExtArgs["result"]["safety_inspections"]>
  export type safety_inspectionsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    vehicles?: boolean | safety_inspections$vehiclesArgs<ExtArgs>
  }
  export type safety_inspectionsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    vehicles?: boolean | safety_inspections$vehiclesArgs<ExtArgs>
  }
  export type safety_inspectionsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    vehicles?: boolean | safety_inspections$vehiclesArgs<ExtArgs>
  }

  export type $safety_inspectionsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "safety_inspections"
    objects: {
      vehicles: Prisma.$vehiclesPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      inspection_id: number
      vehicle_id: number | null
      inspector_name: string | null
      inspection_date: Date
      inspection_type: string
      odometer_reading: Prisma.Decimal | null
      overall_score: Prisma.Decimal | null
      passed: boolean
      defects_found: number | null
      critical_defects: number | null
      notes: string | null
      next_inspection_due: Date | null
      certificate_number: string | null
    }, ExtArgs["result"]["safety_inspections"]>
    composites: {}
  }

  type safety_inspectionsGetPayload<S extends boolean | null | undefined | safety_inspectionsDefaultArgs> = $Result.GetResult<Prisma.$safety_inspectionsPayload, S>

  type safety_inspectionsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<safety_inspectionsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Safety_inspectionsCountAggregateInputType | true
    }

  export interface safety_inspectionsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['safety_inspections'], meta: { name: 'safety_inspections' } }
    /**
     * Find zero or one Safety_inspections that matches the filter.
     * @param {safety_inspectionsFindUniqueArgs} args - Arguments to find a Safety_inspections
     * @example
     * // Get one Safety_inspections
     * const safety_inspections = await prisma.safety_inspections.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends safety_inspectionsFindUniqueArgs>(args: SelectSubset<T, safety_inspectionsFindUniqueArgs<ExtArgs>>): Prisma__safety_inspectionsClient<$Result.GetResult<Prisma.$safety_inspectionsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Safety_inspections that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {safety_inspectionsFindUniqueOrThrowArgs} args - Arguments to find a Safety_inspections
     * @example
     * // Get one Safety_inspections
     * const safety_inspections = await prisma.safety_inspections.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends safety_inspectionsFindUniqueOrThrowArgs>(args: SelectSubset<T, safety_inspectionsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__safety_inspectionsClient<$Result.GetResult<Prisma.$safety_inspectionsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Safety_inspections that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {safety_inspectionsFindFirstArgs} args - Arguments to find a Safety_inspections
     * @example
     * // Get one Safety_inspections
     * const safety_inspections = await prisma.safety_inspections.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends safety_inspectionsFindFirstArgs>(args?: SelectSubset<T, safety_inspectionsFindFirstArgs<ExtArgs>>): Prisma__safety_inspectionsClient<$Result.GetResult<Prisma.$safety_inspectionsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Safety_inspections that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {safety_inspectionsFindFirstOrThrowArgs} args - Arguments to find a Safety_inspections
     * @example
     * // Get one Safety_inspections
     * const safety_inspections = await prisma.safety_inspections.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends safety_inspectionsFindFirstOrThrowArgs>(args?: SelectSubset<T, safety_inspectionsFindFirstOrThrowArgs<ExtArgs>>): Prisma__safety_inspectionsClient<$Result.GetResult<Prisma.$safety_inspectionsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Safety_inspections that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {safety_inspectionsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Safety_inspections
     * const safety_inspections = await prisma.safety_inspections.findMany()
     * 
     * // Get first 10 Safety_inspections
     * const safety_inspections = await prisma.safety_inspections.findMany({ take: 10 })
     * 
     * // Only select the `inspection_id`
     * const safety_inspectionsWithInspection_idOnly = await prisma.safety_inspections.findMany({ select: { inspection_id: true } })
     * 
     */
    findMany<T extends safety_inspectionsFindManyArgs>(args?: SelectSubset<T, safety_inspectionsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$safety_inspectionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Safety_inspections.
     * @param {safety_inspectionsCreateArgs} args - Arguments to create a Safety_inspections.
     * @example
     * // Create one Safety_inspections
     * const Safety_inspections = await prisma.safety_inspections.create({
     *   data: {
     *     // ... data to create a Safety_inspections
     *   }
     * })
     * 
     */
    create<T extends safety_inspectionsCreateArgs>(args: SelectSubset<T, safety_inspectionsCreateArgs<ExtArgs>>): Prisma__safety_inspectionsClient<$Result.GetResult<Prisma.$safety_inspectionsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Safety_inspections.
     * @param {safety_inspectionsCreateManyArgs} args - Arguments to create many Safety_inspections.
     * @example
     * // Create many Safety_inspections
     * const safety_inspections = await prisma.safety_inspections.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends safety_inspectionsCreateManyArgs>(args?: SelectSubset<T, safety_inspectionsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Safety_inspections and returns the data saved in the database.
     * @param {safety_inspectionsCreateManyAndReturnArgs} args - Arguments to create many Safety_inspections.
     * @example
     * // Create many Safety_inspections
     * const safety_inspections = await prisma.safety_inspections.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Safety_inspections and only return the `inspection_id`
     * const safety_inspectionsWithInspection_idOnly = await prisma.safety_inspections.createManyAndReturn({
     *   select: { inspection_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends safety_inspectionsCreateManyAndReturnArgs>(args?: SelectSubset<T, safety_inspectionsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$safety_inspectionsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Safety_inspections.
     * @param {safety_inspectionsDeleteArgs} args - Arguments to delete one Safety_inspections.
     * @example
     * // Delete one Safety_inspections
     * const Safety_inspections = await prisma.safety_inspections.delete({
     *   where: {
     *     // ... filter to delete one Safety_inspections
     *   }
     * })
     * 
     */
    delete<T extends safety_inspectionsDeleteArgs>(args: SelectSubset<T, safety_inspectionsDeleteArgs<ExtArgs>>): Prisma__safety_inspectionsClient<$Result.GetResult<Prisma.$safety_inspectionsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Safety_inspections.
     * @param {safety_inspectionsUpdateArgs} args - Arguments to update one Safety_inspections.
     * @example
     * // Update one Safety_inspections
     * const safety_inspections = await prisma.safety_inspections.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends safety_inspectionsUpdateArgs>(args: SelectSubset<T, safety_inspectionsUpdateArgs<ExtArgs>>): Prisma__safety_inspectionsClient<$Result.GetResult<Prisma.$safety_inspectionsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Safety_inspections.
     * @param {safety_inspectionsDeleteManyArgs} args - Arguments to filter Safety_inspections to delete.
     * @example
     * // Delete a few Safety_inspections
     * const { count } = await prisma.safety_inspections.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends safety_inspectionsDeleteManyArgs>(args?: SelectSubset<T, safety_inspectionsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Safety_inspections.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {safety_inspectionsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Safety_inspections
     * const safety_inspections = await prisma.safety_inspections.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends safety_inspectionsUpdateManyArgs>(args: SelectSubset<T, safety_inspectionsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Safety_inspections and returns the data updated in the database.
     * @param {safety_inspectionsUpdateManyAndReturnArgs} args - Arguments to update many Safety_inspections.
     * @example
     * // Update many Safety_inspections
     * const safety_inspections = await prisma.safety_inspections.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Safety_inspections and only return the `inspection_id`
     * const safety_inspectionsWithInspection_idOnly = await prisma.safety_inspections.updateManyAndReturn({
     *   select: { inspection_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends safety_inspectionsUpdateManyAndReturnArgs>(args: SelectSubset<T, safety_inspectionsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$safety_inspectionsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Safety_inspections.
     * @param {safety_inspectionsUpsertArgs} args - Arguments to update or create a Safety_inspections.
     * @example
     * // Update or create a Safety_inspections
     * const safety_inspections = await prisma.safety_inspections.upsert({
     *   create: {
     *     // ... data to create a Safety_inspections
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Safety_inspections we want to update
     *   }
     * })
     */
    upsert<T extends safety_inspectionsUpsertArgs>(args: SelectSubset<T, safety_inspectionsUpsertArgs<ExtArgs>>): Prisma__safety_inspectionsClient<$Result.GetResult<Prisma.$safety_inspectionsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Safety_inspections.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {safety_inspectionsCountArgs} args - Arguments to filter Safety_inspections to count.
     * @example
     * // Count the number of Safety_inspections
     * const count = await prisma.safety_inspections.count({
     *   where: {
     *     // ... the filter for the Safety_inspections we want to count
     *   }
     * })
    **/
    count<T extends safety_inspectionsCountArgs>(
      args?: Subset<T, safety_inspectionsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Safety_inspectionsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Safety_inspections.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Safety_inspectionsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Safety_inspectionsAggregateArgs>(args: Subset<T, Safety_inspectionsAggregateArgs>): Prisma.PrismaPromise<GetSafety_inspectionsAggregateType<T>>

    /**
     * Group by Safety_inspections.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {safety_inspectionsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends safety_inspectionsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: safety_inspectionsGroupByArgs['orderBy'] }
        : { orderBy?: safety_inspectionsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, safety_inspectionsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSafety_inspectionsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the safety_inspections model
   */
  readonly fields: safety_inspectionsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for safety_inspections.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__safety_inspectionsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    vehicles<T extends safety_inspections$vehiclesArgs<ExtArgs> = {}>(args?: Subset<T, safety_inspections$vehiclesArgs<ExtArgs>>): Prisma__vehiclesClient<$Result.GetResult<Prisma.$vehiclesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the safety_inspections model
   */
  interface safety_inspectionsFieldRefs {
    readonly inspection_id: FieldRef<"safety_inspections", 'Int'>
    readonly vehicle_id: FieldRef<"safety_inspections", 'Int'>
    readonly inspector_name: FieldRef<"safety_inspections", 'String'>
    readonly inspection_date: FieldRef<"safety_inspections", 'DateTime'>
    readonly inspection_type: FieldRef<"safety_inspections", 'String'>
    readonly odometer_reading: FieldRef<"safety_inspections", 'Decimal'>
    readonly overall_score: FieldRef<"safety_inspections", 'Decimal'>
    readonly passed: FieldRef<"safety_inspections", 'Boolean'>
    readonly defects_found: FieldRef<"safety_inspections", 'Int'>
    readonly critical_defects: FieldRef<"safety_inspections", 'Int'>
    readonly notes: FieldRef<"safety_inspections", 'String'>
    readonly next_inspection_due: FieldRef<"safety_inspections", 'DateTime'>
    readonly certificate_number: FieldRef<"safety_inspections", 'String'>
  }
    

  // Custom InputTypes
  /**
   * safety_inspections findUnique
   */
  export type safety_inspectionsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the safety_inspections
     */
    select?: safety_inspectionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the safety_inspections
     */
    omit?: safety_inspectionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: safety_inspectionsInclude<ExtArgs> | null
    /**
     * Filter, which safety_inspections to fetch.
     */
    where: safety_inspectionsWhereUniqueInput
  }

  /**
   * safety_inspections findUniqueOrThrow
   */
  export type safety_inspectionsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the safety_inspections
     */
    select?: safety_inspectionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the safety_inspections
     */
    omit?: safety_inspectionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: safety_inspectionsInclude<ExtArgs> | null
    /**
     * Filter, which safety_inspections to fetch.
     */
    where: safety_inspectionsWhereUniqueInput
  }

  /**
   * safety_inspections findFirst
   */
  export type safety_inspectionsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the safety_inspections
     */
    select?: safety_inspectionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the safety_inspections
     */
    omit?: safety_inspectionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: safety_inspectionsInclude<ExtArgs> | null
    /**
     * Filter, which safety_inspections to fetch.
     */
    where?: safety_inspectionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of safety_inspections to fetch.
     */
    orderBy?: safety_inspectionsOrderByWithRelationInput | safety_inspectionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for safety_inspections.
     */
    cursor?: safety_inspectionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` safety_inspections from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` safety_inspections.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of safety_inspections.
     */
    distinct?: Safety_inspectionsScalarFieldEnum | Safety_inspectionsScalarFieldEnum[]
  }

  /**
   * safety_inspections findFirstOrThrow
   */
  export type safety_inspectionsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the safety_inspections
     */
    select?: safety_inspectionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the safety_inspections
     */
    omit?: safety_inspectionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: safety_inspectionsInclude<ExtArgs> | null
    /**
     * Filter, which safety_inspections to fetch.
     */
    where?: safety_inspectionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of safety_inspections to fetch.
     */
    orderBy?: safety_inspectionsOrderByWithRelationInput | safety_inspectionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for safety_inspections.
     */
    cursor?: safety_inspectionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` safety_inspections from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` safety_inspections.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of safety_inspections.
     */
    distinct?: Safety_inspectionsScalarFieldEnum | Safety_inspectionsScalarFieldEnum[]
  }

  /**
   * safety_inspections findMany
   */
  export type safety_inspectionsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the safety_inspections
     */
    select?: safety_inspectionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the safety_inspections
     */
    omit?: safety_inspectionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: safety_inspectionsInclude<ExtArgs> | null
    /**
     * Filter, which safety_inspections to fetch.
     */
    where?: safety_inspectionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of safety_inspections to fetch.
     */
    orderBy?: safety_inspectionsOrderByWithRelationInput | safety_inspectionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing safety_inspections.
     */
    cursor?: safety_inspectionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` safety_inspections from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` safety_inspections.
     */
    skip?: number
    distinct?: Safety_inspectionsScalarFieldEnum | Safety_inspectionsScalarFieldEnum[]
  }

  /**
   * safety_inspections create
   */
  export type safety_inspectionsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the safety_inspections
     */
    select?: safety_inspectionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the safety_inspections
     */
    omit?: safety_inspectionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: safety_inspectionsInclude<ExtArgs> | null
    /**
     * The data needed to create a safety_inspections.
     */
    data: XOR<safety_inspectionsCreateInput, safety_inspectionsUncheckedCreateInput>
  }

  /**
   * safety_inspections createMany
   */
  export type safety_inspectionsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many safety_inspections.
     */
    data: safety_inspectionsCreateManyInput | safety_inspectionsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * safety_inspections createManyAndReturn
   */
  export type safety_inspectionsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the safety_inspections
     */
    select?: safety_inspectionsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the safety_inspections
     */
    omit?: safety_inspectionsOmit<ExtArgs> | null
    /**
     * The data used to create many safety_inspections.
     */
    data: safety_inspectionsCreateManyInput | safety_inspectionsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: safety_inspectionsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * safety_inspections update
   */
  export type safety_inspectionsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the safety_inspections
     */
    select?: safety_inspectionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the safety_inspections
     */
    omit?: safety_inspectionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: safety_inspectionsInclude<ExtArgs> | null
    /**
     * The data needed to update a safety_inspections.
     */
    data: XOR<safety_inspectionsUpdateInput, safety_inspectionsUncheckedUpdateInput>
    /**
     * Choose, which safety_inspections to update.
     */
    where: safety_inspectionsWhereUniqueInput
  }

  /**
   * safety_inspections updateMany
   */
  export type safety_inspectionsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update safety_inspections.
     */
    data: XOR<safety_inspectionsUpdateManyMutationInput, safety_inspectionsUncheckedUpdateManyInput>
    /**
     * Filter which safety_inspections to update
     */
    where?: safety_inspectionsWhereInput
    /**
     * Limit how many safety_inspections to update.
     */
    limit?: number
  }

  /**
   * safety_inspections updateManyAndReturn
   */
  export type safety_inspectionsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the safety_inspections
     */
    select?: safety_inspectionsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the safety_inspections
     */
    omit?: safety_inspectionsOmit<ExtArgs> | null
    /**
     * The data used to update safety_inspections.
     */
    data: XOR<safety_inspectionsUpdateManyMutationInput, safety_inspectionsUncheckedUpdateManyInput>
    /**
     * Filter which safety_inspections to update
     */
    where?: safety_inspectionsWhereInput
    /**
     * Limit how many safety_inspections to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: safety_inspectionsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * safety_inspections upsert
   */
  export type safety_inspectionsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the safety_inspections
     */
    select?: safety_inspectionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the safety_inspections
     */
    omit?: safety_inspectionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: safety_inspectionsInclude<ExtArgs> | null
    /**
     * The filter to search for the safety_inspections to update in case it exists.
     */
    where: safety_inspectionsWhereUniqueInput
    /**
     * In case the safety_inspections found by the `where` argument doesn't exist, create a new safety_inspections with this data.
     */
    create: XOR<safety_inspectionsCreateInput, safety_inspectionsUncheckedCreateInput>
    /**
     * In case the safety_inspections was found with the provided `where` argument, update it with this data.
     */
    update: XOR<safety_inspectionsUpdateInput, safety_inspectionsUncheckedUpdateInput>
  }

  /**
   * safety_inspections delete
   */
  export type safety_inspectionsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the safety_inspections
     */
    select?: safety_inspectionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the safety_inspections
     */
    omit?: safety_inspectionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: safety_inspectionsInclude<ExtArgs> | null
    /**
     * Filter which safety_inspections to delete.
     */
    where: safety_inspectionsWhereUniqueInput
  }

  /**
   * safety_inspections deleteMany
   */
  export type safety_inspectionsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which safety_inspections to delete
     */
    where?: safety_inspectionsWhereInput
    /**
     * Limit how many safety_inspections to delete.
     */
    limit?: number
  }

  /**
   * safety_inspections.vehicles
   */
  export type safety_inspections$vehiclesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vehicles
     */
    select?: vehiclesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the vehicles
     */
    omit?: vehiclesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: vehiclesInclude<ExtArgs> | null
    where?: vehiclesWhereInput
  }

  /**
   * safety_inspections without action
   */
  export type safety_inspectionsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the safety_inspections
     */
    select?: safety_inspectionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the safety_inspections
     */
    omit?: safety_inspectionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: safety_inspectionsInclude<ExtArgs> | null
  }


  /**
   * Model service_providers
   */

  export type AggregateService_providers = {
    _count: Service_providersCountAggregateOutputType | null
    _avg: Service_providersAvgAggregateOutputType | null
    _sum: Service_providersSumAggregateOutputType | null
    _min: Service_providersMinAggregateOutputType | null
    _max: Service_providersMaxAggregateOutputType | null
  }

  export type Service_providersAvgAggregateOutputType = {
    provider_id: number | null
    company_id: number | null
    hourly_rate: Decimal | null
    rating: Decimal | null
  }

  export type Service_providersSumAggregateOutputType = {
    provider_id: number | null
    company_id: number | null
    hourly_rate: Decimal | null
    rating: Decimal | null
  }

  export type Service_providersMinAggregateOutputType = {
    provider_id: number | null
    company_id: number | null
    provider_name: string | null
    service_type: string | null
    contact_person: string | null
    phone: string | null
    email: string | null
    address: string | null
    hourly_rate: Decimal | null
    rating: Decimal | null
    is_preferred: boolean | null
  }

  export type Service_providersMaxAggregateOutputType = {
    provider_id: number | null
    company_id: number | null
    provider_name: string | null
    service_type: string | null
    contact_person: string | null
    phone: string | null
    email: string | null
    address: string | null
    hourly_rate: Decimal | null
    rating: Decimal | null
    is_preferred: boolean | null
  }

  export type Service_providersCountAggregateOutputType = {
    provider_id: number
    company_id: number
    provider_name: number
    service_type: number
    contact_person: number
    phone: number
    email: number
    address: number
    hourly_rate: number
    rating: number
    is_preferred: number
    _all: number
  }


  export type Service_providersAvgAggregateInputType = {
    provider_id?: true
    company_id?: true
    hourly_rate?: true
    rating?: true
  }

  export type Service_providersSumAggregateInputType = {
    provider_id?: true
    company_id?: true
    hourly_rate?: true
    rating?: true
  }

  export type Service_providersMinAggregateInputType = {
    provider_id?: true
    company_id?: true
    provider_name?: true
    service_type?: true
    contact_person?: true
    phone?: true
    email?: true
    address?: true
    hourly_rate?: true
    rating?: true
    is_preferred?: true
  }

  export type Service_providersMaxAggregateInputType = {
    provider_id?: true
    company_id?: true
    provider_name?: true
    service_type?: true
    contact_person?: true
    phone?: true
    email?: true
    address?: true
    hourly_rate?: true
    rating?: true
    is_preferred?: true
  }

  export type Service_providersCountAggregateInputType = {
    provider_id?: true
    company_id?: true
    provider_name?: true
    service_type?: true
    contact_person?: true
    phone?: true
    email?: true
    address?: true
    hourly_rate?: true
    rating?: true
    is_preferred?: true
    _all?: true
  }

  export type Service_providersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which service_providers to aggregate.
     */
    where?: service_providersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of service_providers to fetch.
     */
    orderBy?: service_providersOrderByWithRelationInput | service_providersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: service_providersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` service_providers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` service_providers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned service_providers
    **/
    _count?: true | Service_providersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Service_providersAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Service_providersSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Service_providersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Service_providersMaxAggregateInputType
  }

  export type GetService_providersAggregateType<T extends Service_providersAggregateArgs> = {
        [P in keyof T & keyof AggregateService_providers]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateService_providers[P]>
      : GetScalarType<T[P], AggregateService_providers[P]>
  }




  export type service_providersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: service_providersWhereInput
    orderBy?: service_providersOrderByWithAggregationInput | service_providersOrderByWithAggregationInput[]
    by: Service_providersScalarFieldEnum[] | Service_providersScalarFieldEnum
    having?: service_providersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Service_providersCountAggregateInputType | true
    _avg?: Service_providersAvgAggregateInputType
    _sum?: Service_providersSumAggregateInputType
    _min?: Service_providersMinAggregateInputType
    _max?: Service_providersMaxAggregateInputType
  }

  export type Service_providersGroupByOutputType = {
    provider_id: number
    company_id: number | null
    provider_name: string
    service_type: string
    contact_person: string | null
    phone: string | null
    email: string | null
    address: string | null
    hourly_rate: Decimal | null
    rating: Decimal | null
    is_preferred: boolean | null
    _count: Service_providersCountAggregateOutputType | null
    _avg: Service_providersAvgAggregateOutputType | null
    _sum: Service_providersSumAggregateOutputType | null
    _min: Service_providersMinAggregateOutputType | null
    _max: Service_providersMaxAggregateOutputType | null
  }

  type GetService_providersGroupByPayload<T extends service_providersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Service_providersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Service_providersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Service_providersGroupByOutputType[P]>
            : GetScalarType<T[P], Service_providersGroupByOutputType[P]>
        }
      >
    >


  export type service_providersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    provider_id?: boolean
    company_id?: boolean
    provider_name?: boolean
    service_type?: boolean
    contact_person?: boolean
    phone?: boolean
    email?: boolean
    address?: boolean
    hourly_rate?: boolean
    rating?: boolean
    is_preferred?: boolean
    maintenance_records?: boolean | service_providers$maintenance_recordsArgs<ExtArgs>
    companies?: boolean | service_providers$companiesArgs<ExtArgs>
    _count?: boolean | Service_providersCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["service_providers"]>

  export type service_providersSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    provider_id?: boolean
    company_id?: boolean
    provider_name?: boolean
    service_type?: boolean
    contact_person?: boolean
    phone?: boolean
    email?: boolean
    address?: boolean
    hourly_rate?: boolean
    rating?: boolean
    is_preferred?: boolean
    companies?: boolean | service_providers$companiesArgs<ExtArgs>
  }, ExtArgs["result"]["service_providers"]>

  export type service_providersSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    provider_id?: boolean
    company_id?: boolean
    provider_name?: boolean
    service_type?: boolean
    contact_person?: boolean
    phone?: boolean
    email?: boolean
    address?: boolean
    hourly_rate?: boolean
    rating?: boolean
    is_preferred?: boolean
    companies?: boolean | service_providers$companiesArgs<ExtArgs>
  }, ExtArgs["result"]["service_providers"]>

  export type service_providersSelectScalar = {
    provider_id?: boolean
    company_id?: boolean
    provider_name?: boolean
    service_type?: boolean
    contact_person?: boolean
    phone?: boolean
    email?: boolean
    address?: boolean
    hourly_rate?: boolean
    rating?: boolean
    is_preferred?: boolean
  }

  export type service_providersOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"provider_id" | "company_id" | "provider_name" | "service_type" | "contact_person" | "phone" | "email" | "address" | "hourly_rate" | "rating" | "is_preferred", ExtArgs["result"]["service_providers"]>
  export type service_providersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    maintenance_records?: boolean | service_providers$maintenance_recordsArgs<ExtArgs>
    companies?: boolean | service_providers$companiesArgs<ExtArgs>
    _count?: boolean | Service_providersCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type service_providersIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    companies?: boolean | service_providers$companiesArgs<ExtArgs>
  }
  export type service_providersIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    companies?: boolean | service_providers$companiesArgs<ExtArgs>
  }

  export type $service_providersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "service_providers"
    objects: {
      maintenance_records: Prisma.$maintenance_recordsPayload<ExtArgs>[]
      companies: Prisma.$companiesPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      provider_id: number
      company_id: number | null
      provider_name: string
      service_type: string
      contact_person: string | null
      phone: string | null
      email: string | null
      address: string | null
      hourly_rate: Prisma.Decimal | null
      rating: Prisma.Decimal | null
      is_preferred: boolean | null
    }, ExtArgs["result"]["service_providers"]>
    composites: {}
  }

  type service_providersGetPayload<S extends boolean | null | undefined | service_providersDefaultArgs> = $Result.GetResult<Prisma.$service_providersPayload, S>

  type service_providersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<service_providersFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Service_providersCountAggregateInputType | true
    }

  export interface service_providersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['service_providers'], meta: { name: 'service_providers' } }
    /**
     * Find zero or one Service_providers that matches the filter.
     * @param {service_providersFindUniqueArgs} args - Arguments to find a Service_providers
     * @example
     * // Get one Service_providers
     * const service_providers = await prisma.service_providers.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends service_providersFindUniqueArgs>(args: SelectSubset<T, service_providersFindUniqueArgs<ExtArgs>>): Prisma__service_providersClient<$Result.GetResult<Prisma.$service_providersPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Service_providers that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {service_providersFindUniqueOrThrowArgs} args - Arguments to find a Service_providers
     * @example
     * // Get one Service_providers
     * const service_providers = await prisma.service_providers.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends service_providersFindUniqueOrThrowArgs>(args: SelectSubset<T, service_providersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__service_providersClient<$Result.GetResult<Prisma.$service_providersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Service_providers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {service_providersFindFirstArgs} args - Arguments to find a Service_providers
     * @example
     * // Get one Service_providers
     * const service_providers = await prisma.service_providers.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends service_providersFindFirstArgs>(args?: SelectSubset<T, service_providersFindFirstArgs<ExtArgs>>): Prisma__service_providersClient<$Result.GetResult<Prisma.$service_providersPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Service_providers that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {service_providersFindFirstOrThrowArgs} args - Arguments to find a Service_providers
     * @example
     * // Get one Service_providers
     * const service_providers = await prisma.service_providers.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends service_providersFindFirstOrThrowArgs>(args?: SelectSubset<T, service_providersFindFirstOrThrowArgs<ExtArgs>>): Prisma__service_providersClient<$Result.GetResult<Prisma.$service_providersPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Service_providers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {service_providersFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Service_providers
     * const service_providers = await prisma.service_providers.findMany()
     * 
     * // Get first 10 Service_providers
     * const service_providers = await prisma.service_providers.findMany({ take: 10 })
     * 
     * // Only select the `provider_id`
     * const service_providersWithProvider_idOnly = await prisma.service_providers.findMany({ select: { provider_id: true } })
     * 
     */
    findMany<T extends service_providersFindManyArgs>(args?: SelectSubset<T, service_providersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$service_providersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Service_providers.
     * @param {service_providersCreateArgs} args - Arguments to create a Service_providers.
     * @example
     * // Create one Service_providers
     * const Service_providers = await prisma.service_providers.create({
     *   data: {
     *     // ... data to create a Service_providers
     *   }
     * })
     * 
     */
    create<T extends service_providersCreateArgs>(args: SelectSubset<T, service_providersCreateArgs<ExtArgs>>): Prisma__service_providersClient<$Result.GetResult<Prisma.$service_providersPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Service_providers.
     * @param {service_providersCreateManyArgs} args - Arguments to create many Service_providers.
     * @example
     * // Create many Service_providers
     * const service_providers = await prisma.service_providers.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends service_providersCreateManyArgs>(args?: SelectSubset<T, service_providersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Service_providers and returns the data saved in the database.
     * @param {service_providersCreateManyAndReturnArgs} args - Arguments to create many Service_providers.
     * @example
     * // Create many Service_providers
     * const service_providers = await prisma.service_providers.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Service_providers and only return the `provider_id`
     * const service_providersWithProvider_idOnly = await prisma.service_providers.createManyAndReturn({
     *   select: { provider_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends service_providersCreateManyAndReturnArgs>(args?: SelectSubset<T, service_providersCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$service_providersPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Service_providers.
     * @param {service_providersDeleteArgs} args - Arguments to delete one Service_providers.
     * @example
     * // Delete one Service_providers
     * const Service_providers = await prisma.service_providers.delete({
     *   where: {
     *     // ... filter to delete one Service_providers
     *   }
     * })
     * 
     */
    delete<T extends service_providersDeleteArgs>(args: SelectSubset<T, service_providersDeleteArgs<ExtArgs>>): Prisma__service_providersClient<$Result.GetResult<Prisma.$service_providersPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Service_providers.
     * @param {service_providersUpdateArgs} args - Arguments to update one Service_providers.
     * @example
     * // Update one Service_providers
     * const service_providers = await prisma.service_providers.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends service_providersUpdateArgs>(args: SelectSubset<T, service_providersUpdateArgs<ExtArgs>>): Prisma__service_providersClient<$Result.GetResult<Prisma.$service_providersPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Service_providers.
     * @param {service_providersDeleteManyArgs} args - Arguments to filter Service_providers to delete.
     * @example
     * // Delete a few Service_providers
     * const { count } = await prisma.service_providers.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends service_providersDeleteManyArgs>(args?: SelectSubset<T, service_providersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Service_providers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {service_providersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Service_providers
     * const service_providers = await prisma.service_providers.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends service_providersUpdateManyArgs>(args: SelectSubset<T, service_providersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Service_providers and returns the data updated in the database.
     * @param {service_providersUpdateManyAndReturnArgs} args - Arguments to update many Service_providers.
     * @example
     * // Update many Service_providers
     * const service_providers = await prisma.service_providers.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Service_providers and only return the `provider_id`
     * const service_providersWithProvider_idOnly = await prisma.service_providers.updateManyAndReturn({
     *   select: { provider_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends service_providersUpdateManyAndReturnArgs>(args: SelectSubset<T, service_providersUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$service_providersPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Service_providers.
     * @param {service_providersUpsertArgs} args - Arguments to update or create a Service_providers.
     * @example
     * // Update or create a Service_providers
     * const service_providers = await prisma.service_providers.upsert({
     *   create: {
     *     // ... data to create a Service_providers
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Service_providers we want to update
     *   }
     * })
     */
    upsert<T extends service_providersUpsertArgs>(args: SelectSubset<T, service_providersUpsertArgs<ExtArgs>>): Prisma__service_providersClient<$Result.GetResult<Prisma.$service_providersPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Service_providers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {service_providersCountArgs} args - Arguments to filter Service_providers to count.
     * @example
     * // Count the number of Service_providers
     * const count = await prisma.service_providers.count({
     *   where: {
     *     // ... the filter for the Service_providers we want to count
     *   }
     * })
    **/
    count<T extends service_providersCountArgs>(
      args?: Subset<T, service_providersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Service_providersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Service_providers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Service_providersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Service_providersAggregateArgs>(args: Subset<T, Service_providersAggregateArgs>): Prisma.PrismaPromise<GetService_providersAggregateType<T>>

    /**
     * Group by Service_providers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {service_providersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends service_providersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: service_providersGroupByArgs['orderBy'] }
        : { orderBy?: service_providersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, service_providersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetService_providersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the service_providers model
   */
  readonly fields: service_providersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for service_providers.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__service_providersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    maintenance_records<T extends service_providers$maintenance_recordsArgs<ExtArgs> = {}>(args?: Subset<T, service_providers$maintenance_recordsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$maintenance_recordsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    companies<T extends service_providers$companiesArgs<ExtArgs> = {}>(args?: Subset<T, service_providers$companiesArgs<ExtArgs>>): Prisma__companiesClient<$Result.GetResult<Prisma.$companiesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the service_providers model
   */
  interface service_providersFieldRefs {
    readonly provider_id: FieldRef<"service_providers", 'Int'>
    readonly company_id: FieldRef<"service_providers", 'Int'>
    readonly provider_name: FieldRef<"service_providers", 'String'>
    readonly service_type: FieldRef<"service_providers", 'String'>
    readonly contact_person: FieldRef<"service_providers", 'String'>
    readonly phone: FieldRef<"service_providers", 'String'>
    readonly email: FieldRef<"service_providers", 'String'>
    readonly address: FieldRef<"service_providers", 'String'>
    readonly hourly_rate: FieldRef<"service_providers", 'Decimal'>
    readonly rating: FieldRef<"service_providers", 'Decimal'>
    readonly is_preferred: FieldRef<"service_providers", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * service_providers findUnique
   */
  export type service_providersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the service_providers
     */
    select?: service_providersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the service_providers
     */
    omit?: service_providersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: service_providersInclude<ExtArgs> | null
    /**
     * Filter, which service_providers to fetch.
     */
    where: service_providersWhereUniqueInput
  }

  /**
   * service_providers findUniqueOrThrow
   */
  export type service_providersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the service_providers
     */
    select?: service_providersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the service_providers
     */
    omit?: service_providersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: service_providersInclude<ExtArgs> | null
    /**
     * Filter, which service_providers to fetch.
     */
    where: service_providersWhereUniqueInput
  }

  /**
   * service_providers findFirst
   */
  export type service_providersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the service_providers
     */
    select?: service_providersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the service_providers
     */
    omit?: service_providersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: service_providersInclude<ExtArgs> | null
    /**
     * Filter, which service_providers to fetch.
     */
    where?: service_providersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of service_providers to fetch.
     */
    orderBy?: service_providersOrderByWithRelationInput | service_providersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for service_providers.
     */
    cursor?: service_providersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` service_providers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` service_providers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of service_providers.
     */
    distinct?: Service_providersScalarFieldEnum | Service_providersScalarFieldEnum[]
  }

  /**
   * service_providers findFirstOrThrow
   */
  export type service_providersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the service_providers
     */
    select?: service_providersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the service_providers
     */
    omit?: service_providersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: service_providersInclude<ExtArgs> | null
    /**
     * Filter, which service_providers to fetch.
     */
    where?: service_providersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of service_providers to fetch.
     */
    orderBy?: service_providersOrderByWithRelationInput | service_providersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for service_providers.
     */
    cursor?: service_providersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` service_providers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` service_providers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of service_providers.
     */
    distinct?: Service_providersScalarFieldEnum | Service_providersScalarFieldEnum[]
  }

  /**
   * service_providers findMany
   */
  export type service_providersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the service_providers
     */
    select?: service_providersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the service_providers
     */
    omit?: service_providersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: service_providersInclude<ExtArgs> | null
    /**
     * Filter, which service_providers to fetch.
     */
    where?: service_providersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of service_providers to fetch.
     */
    orderBy?: service_providersOrderByWithRelationInput | service_providersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing service_providers.
     */
    cursor?: service_providersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` service_providers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` service_providers.
     */
    skip?: number
    distinct?: Service_providersScalarFieldEnum | Service_providersScalarFieldEnum[]
  }

  /**
   * service_providers create
   */
  export type service_providersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the service_providers
     */
    select?: service_providersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the service_providers
     */
    omit?: service_providersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: service_providersInclude<ExtArgs> | null
    /**
     * The data needed to create a service_providers.
     */
    data: XOR<service_providersCreateInput, service_providersUncheckedCreateInput>
  }

  /**
   * service_providers createMany
   */
  export type service_providersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many service_providers.
     */
    data: service_providersCreateManyInput | service_providersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * service_providers createManyAndReturn
   */
  export type service_providersCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the service_providers
     */
    select?: service_providersSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the service_providers
     */
    omit?: service_providersOmit<ExtArgs> | null
    /**
     * The data used to create many service_providers.
     */
    data: service_providersCreateManyInput | service_providersCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: service_providersIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * service_providers update
   */
  export type service_providersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the service_providers
     */
    select?: service_providersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the service_providers
     */
    omit?: service_providersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: service_providersInclude<ExtArgs> | null
    /**
     * The data needed to update a service_providers.
     */
    data: XOR<service_providersUpdateInput, service_providersUncheckedUpdateInput>
    /**
     * Choose, which service_providers to update.
     */
    where: service_providersWhereUniqueInput
  }

  /**
   * service_providers updateMany
   */
  export type service_providersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update service_providers.
     */
    data: XOR<service_providersUpdateManyMutationInput, service_providersUncheckedUpdateManyInput>
    /**
     * Filter which service_providers to update
     */
    where?: service_providersWhereInput
    /**
     * Limit how many service_providers to update.
     */
    limit?: number
  }

  /**
   * service_providers updateManyAndReturn
   */
  export type service_providersUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the service_providers
     */
    select?: service_providersSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the service_providers
     */
    omit?: service_providersOmit<ExtArgs> | null
    /**
     * The data used to update service_providers.
     */
    data: XOR<service_providersUpdateManyMutationInput, service_providersUncheckedUpdateManyInput>
    /**
     * Filter which service_providers to update
     */
    where?: service_providersWhereInput
    /**
     * Limit how many service_providers to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: service_providersIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * service_providers upsert
   */
  export type service_providersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the service_providers
     */
    select?: service_providersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the service_providers
     */
    omit?: service_providersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: service_providersInclude<ExtArgs> | null
    /**
     * The filter to search for the service_providers to update in case it exists.
     */
    where: service_providersWhereUniqueInput
    /**
     * In case the service_providers found by the `where` argument doesn't exist, create a new service_providers with this data.
     */
    create: XOR<service_providersCreateInput, service_providersUncheckedCreateInput>
    /**
     * In case the service_providers was found with the provided `where` argument, update it with this data.
     */
    update: XOR<service_providersUpdateInput, service_providersUncheckedUpdateInput>
  }

  /**
   * service_providers delete
   */
  export type service_providersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the service_providers
     */
    select?: service_providersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the service_providers
     */
    omit?: service_providersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: service_providersInclude<ExtArgs> | null
    /**
     * Filter which service_providers to delete.
     */
    where: service_providersWhereUniqueInput
  }

  /**
   * service_providers deleteMany
   */
  export type service_providersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which service_providers to delete
     */
    where?: service_providersWhereInput
    /**
     * Limit how many service_providers to delete.
     */
    limit?: number
  }

  /**
   * service_providers.maintenance_records
   */
  export type service_providers$maintenance_recordsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the maintenance_records
     */
    select?: maintenance_recordsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the maintenance_records
     */
    omit?: maintenance_recordsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: maintenance_recordsInclude<ExtArgs> | null
    where?: maintenance_recordsWhereInput
    orderBy?: maintenance_recordsOrderByWithRelationInput | maintenance_recordsOrderByWithRelationInput[]
    cursor?: maintenance_recordsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Maintenance_recordsScalarFieldEnum | Maintenance_recordsScalarFieldEnum[]
  }

  /**
   * service_providers.companies
   */
  export type service_providers$companiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the companies
     */
    select?: companiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the companies
     */
    omit?: companiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: companiesInclude<ExtArgs> | null
    where?: companiesWhereInput
  }

  /**
   * service_providers without action
   */
  export type service_providersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the service_providers
     */
    select?: service_providersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the service_providers
     */
    omit?: service_providersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: service_providersInclude<ExtArgs> | null
  }


  /**
   * Model trips
   */

  export type AggregateTrips = {
    _count: TripsCountAggregateOutputType | null
    _avg: TripsAvgAggregateOutputType | null
    _sum: TripsSumAggregateOutputType | null
    _min: TripsMinAggregateOutputType | null
    _max: TripsMaxAggregateOutputType | null
  }

  export type TripsAvgAggregateOutputType = {
    trip_id: number | null
    vehicle_id: number | null
    driver_id: number | null
    start_odometer: Decimal | null
    end_odometer: Decimal | null
    distance_traveled: Decimal | null
    fuel_consumed: Decimal | null
    average_speed: Decimal | null
    max_speed: Decimal | null
    idle_time_minutes: number | null
    harsh_braking_count: number | null
    harsh_acceleration_count: number | null
    speeding_violations: number | null
    route_efficiency_score: Decimal | null
    cost: Decimal | null
  }

  export type TripsSumAggregateOutputType = {
    trip_id: number | null
    vehicle_id: number | null
    driver_id: number | null
    start_odometer: Decimal | null
    end_odometer: Decimal | null
    distance_traveled: Decimal | null
    fuel_consumed: Decimal | null
    average_speed: Decimal | null
    max_speed: Decimal | null
    idle_time_minutes: number | null
    harsh_braking_count: number | null
    harsh_acceleration_count: number | null
    speeding_violations: number | null
    route_efficiency_score: Decimal | null
    cost: Decimal | null
  }

  export type TripsMinAggregateOutputType = {
    trip_id: number | null
    vehicle_id: number | null
    driver_id: number | null
    start_time: Date | null
    end_time: Date | null
    start_location: string | null
    end_location: string | null
    start_odometer: Decimal | null
    end_odometer: Decimal | null
    distance_traveled: Decimal | null
    purpose: string | null
    trip_type: string | null
    fuel_consumed: Decimal | null
    average_speed: Decimal | null
    max_speed: Decimal | null
    idle_time_minutes: number | null
    harsh_braking_count: number | null
    harsh_acceleration_count: number | null
    speeding_violations: number | null
    route_efficiency_score: Decimal | null
    cost: Decimal | null
    notes: string | null
    created_at: Date | null
  }

  export type TripsMaxAggregateOutputType = {
    trip_id: number | null
    vehicle_id: number | null
    driver_id: number | null
    start_time: Date | null
    end_time: Date | null
    start_location: string | null
    end_location: string | null
    start_odometer: Decimal | null
    end_odometer: Decimal | null
    distance_traveled: Decimal | null
    purpose: string | null
    trip_type: string | null
    fuel_consumed: Decimal | null
    average_speed: Decimal | null
    max_speed: Decimal | null
    idle_time_minutes: number | null
    harsh_braking_count: number | null
    harsh_acceleration_count: number | null
    speeding_violations: number | null
    route_efficiency_score: Decimal | null
    cost: Decimal | null
    notes: string | null
    created_at: Date | null
  }

  export type TripsCountAggregateOutputType = {
    trip_id: number
    vehicle_id: number
    driver_id: number
    start_time: number
    end_time: number
    start_location: number
    end_location: number
    start_odometer: number
    end_odometer: number
    distance_traveled: number
    purpose: number
    trip_type: number
    fuel_consumed: number
    average_speed: number
    max_speed: number
    idle_time_minutes: number
    harsh_braking_count: number
    harsh_acceleration_count: number
    speeding_violations: number
    route_efficiency_score: number
    cost: number
    notes: number
    created_at: number
    _all: number
  }


  export type TripsAvgAggregateInputType = {
    trip_id?: true
    vehicle_id?: true
    driver_id?: true
    start_odometer?: true
    end_odometer?: true
    distance_traveled?: true
    fuel_consumed?: true
    average_speed?: true
    max_speed?: true
    idle_time_minutes?: true
    harsh_braking_count?: true
    harsh_acceleration_count?: true
    speeding_violations?: true
    route_efficiency_score?: true
    cost?: true
  }

  export type TripsSumAggregateInputType = {
    trip_id?: true
    vehicle_id?: true
    driver_id?: true
    start_odometer?: true
    end_odometer?: true
    distance_traveled?: true
    fuel_consumed?: true
    average_speed?: true
    max_speed?: true
    idle_time_minutes?: true
    harsh_braking_count?: true
    harsh_acceleration_count?: true
    speeding_violations?: true
    route_efficiency_score?: true
    cost?: true
  }

  export type TripsMinAggregateInputType = {
    trip_id?: true
    vehicle_id?: true
    driver_id?: true
    start_time?: true
    end_time?: true
    start_location?: true
    end_location?: true
    start_odometer?: true
    end_odometer?: true
    distance_traveled?: true
    purpose?: true
    trip_type?: true
    fuel_consumed?: true
    average_speed?: true
    max_speed?: true
    idle_time_minutes?: true
    harsh_braking_count?: true
    harsh_acceleration_count?: true
    speeding_violations?: true
    route_efficiency_score?: true
    cost?: true
    notes?: true
    created_at?: true
  }

  export type TripsMaxAggregateInputType = {
    trip_id?: true
    vehicle_id?: true
    driver_id?: true
    start_time?: true
    end_time?: true
    start_location?: true
    end_location?: true
    start_odometer?: true
    end_odometer?: true
    distance_traveled?: true
    purpose?: true
    trip_type?: true
    fuel_consumed?: true
    average_speed?: true
    max_speed?: true
    idle_time_minutes?: true
    harsh_braking_count?: true
    harsh_acceleration_count?: true
    speeding_violations?: true
    route_efficiency_score?: true
    cost?: true
    notes?: true
    created_at?: true
  }

  export type TripsCountAggregateInputType = {
    trip_id?: true
    vehicle_id?: true
    driver_id?: true
    start_time?: true
    end_time?: true
    start_location?: true
    end_location?: true
    start_odometer?: true
    end_odometer?: true
    distance_traveled?: true
    purpose?: true
    trip_type?: true
    fuel_consumed?: true
    average_speed?: true
    max_speed?: true
    idle_time_minutes?: true
    harsh_braking_count?: true
    harsh_acceleration_count?: true
    speeding_violations?: true
    route_efficiency_score?: true
    cost?: true
    notes?: true
    created_at?: true
    _all?: true
  }

  export type TripsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which trips to aggregate.
     */
    where?: tripsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of trips to fetch.
     */
    orderBy?: tripsOrderByWithRelationInput | tripsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tripsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` trips from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` trips.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned trips
    **/
    _count?: true | TripsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TripsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TripsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TripsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TripsMaxAggregateInputType
  }

  export type GetTripsAggregateType<T extends TripsAggregateArgs> = {
        [P in keyof T & keyof AggregateTrips]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTrips[P]>
      : GetScalarType<T[P], AggregateTrips[P]>
  }




  export type tripsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tripsWhereInput
    orderBy?: tripsOrderByWithAggregationInput | tripsOrderByWithAggregationInput[]
    by: TripsScalarFieldEnum[] | TripsScalarFieldEnum
    having?: tripsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TripsCountAggregateInputType | true
    _avg?: TripsAvgAggregateInputType
    _sum?: TripsSumAggregateInputType
    _min?: TripsMinAggregateInputType
    _max?: TripsMaxAggregateInputType
  }

  export type TripsGroupByOutputType = {
    trip_id: number
    vehicle_id: number | null
    driver_id: number | null
    start_time: Date | null
    end_time: Date | null
    start_location: string | null
    end_location: string | null
    start_odometer: Decimal | null
    end_odometer: Decimal | null
    distance_traveled: Decimal | null
    purpose: string | null
    trip_type: string | null
    fuel_consumed: Decimal | null
    average_speed: Decimal | null
    max_speed: Decimal | null
    idle_time_minutes: number | null
    harsh_braking_count: number | null
    harsh_acceleration_count: number | null
    speeding_violations: number | null
    route_efficiency_score: Decimal | null
    cost: Decimal | null
    notes: string | null
    created_at: Date | null
    _count: TripsCountAggregateOutputType | null
    _avg: TripsAvgAggregateOutputType | null
    _sum: TripsSumAggregateOutputType | null
    _min: TripsMinAggregateOutputType | null
    _max: TripsMaxAggregateOutputType | null
  }

  type GetTripsGroupByPayload<T extends tripsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TripsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TripsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TripsGroupByOutputType[P]>
            : GetScalarType<T[P], TripsGroupByOutputType[P]>
        }
      >
    >


  export type tripsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    trip_id?: boolean
    vehicle_id?: boolean
    driver_id?: boolean
    start_time?: boolean
    end_time?: boolean
    start_location?: boolean
    end_location?: boolean
    start_odometer?: boolean
    end_odometer?: boolean
    distance_traveled?: boolean
    purpose?: boolean
    trip_type?: boolean
    fuel_consumed?: boolean
    average_speed?: boolean
    max_speed?: boolean
    idle_time_minutes?: boolean
    harsh_braking_count?: boolean
    harsh_acceleration_count?: boolean
    speeding_violations?: boolean
    route_efficiency_score?: boolean
    cost?: boolean
    notes?: boolean
    created_at?: boolean
    drivers?: boolean | trips$driversArgs<ExtArgs>
    vehicles?: boolean | trips$vehiclesArgs<ExtArgs>
  }, ExtArgs["result"]["trips"]>

  export type tripsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    trip_id?: boolean
    vehicle_id?: boolean
    driver_id?: boolean
    start_time?: boolean
    end_time?: boolean
    start_location?: boolean
    end_location?: boolean
    start_odometer?: boolean
    end_odometer?: boolean
    distance_traveled?: boolean
    purpose?: boolean
    trip_type?: boolean
    fuel_consumed?: boolean
    average_speed?: boolean
    max_speed?: boolean
    idle_time_minutes?: boolean
    harsh_braking_count?: boolean
    harsh_acceleration_count?: boolean
    speeding_violations?: boolean
    route_efficiency_score?: boolean
    cost?: boolean
    notes?: boolean
    created_at?: boolean
    drivers?: boolean | trips$driversArgs<ExtArgs>
    vehicles?: boolean | trips$vehiclesArgs<ExtArgs>
  }, ExtArgs["result"]["trips"]>

  export type tripsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    trip_id?: boolean
    vehicle_id?: boolean
    driver_id?: boolean
    start_time?: boolean
    end_time?: boolean
    start_location?: boolean
    end_location?: boolean
    start_odometer?: boolean
    end_odometer?: boolean
    distance_traveled?: boolean
    purpose?: boolean
    trip_type?: boolean
    fuel_consumed?: boolean
    average_speed?: boolean
    max_speed?: boolean
    idle_time_minutes?: boolean
    harsh_braking_count?: boolean
    harsh_acceleration_count?: boolean
    speeding_violations?: boolean
    route_efficiency_score?: boolean
    cost?: boolean
    notes?: boolean
    created_at?: boolean
    drivers?: boolean | trips$driversArgs<ExtArgs>
    vehicles?: boolean | trips$vehiclesArgs<ExtArgs>
  }, ExtArgs["result"]["trips"]>

  export type tripsSelectScalar = {
    trip_id?: boolean
    vehicle_id?: boolean
    driver_id?: boolean
    start_time?: boolean
    end_time?: boolean
    start_location?: boolean
    end_location?: boolean
    start_odometer?: boolean
    end_odometer?: boolean
    distance_traveled?: boolean
    purpose?: boolean
    trip_type?: boolean
    fuel_consumed?: boolean
    average_speed?: boolean
    max_speed?: boolean
    idle_time_minutes?: boolean
    harsh_braking_count?: boolean
    harsh_acceleration_count?: boolean
    speeding_violations?: boolean
    route_efficiency_score?: boolean
    cost?: boolean
    notes?: boolean
    created_at?: boolean
  }

  export type tripsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"trip_id" | "vehicle_id" | "driver_id" | "start_time" | "end_time" | "start_location" | "end_location" | "start_odometer" | "end_odometer" | "distance_traveled" | "purpose" | "trip_type" | "fuel_consumed" | "average_speed" | "max_speed" | "idle_time_minutes" | "harsh_braking_count" | "harsh_acceleration_count" | "speeding_violations" | "route_efficiency_score" | "cost" | "notes" | "created_at", ExtArgs["result"]["trips"]>
  export type tripsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    drivers?: boolean | trips$driversArgs<ExtArgs>
    vehicles?: boolean | trips$vehiclesArgs<ExtArgs>
  }
  export type tripsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    drivers?: boolean | trips$driversArgs<ExtArgs>
    vehicles?: boolean | trips$vehiclesArgs<ExtArgs>
  }
  export type tripsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    drivers?: boolean | trips$driversArgs<ExtArgs>
    vehicles?: boolean | trips$vehiclesArgs<ExtArgs>
  }

  export type $tripsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "trips"
    objects: {
      drivers: Prisma.$driversPayload<ExtArgs> | null
      vehicles: Prisma.$vehiclesPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      trip_id: number
      vehicle_id: number | null
      driver_id: number | null
      start_time: Date | null
      end_time: Date | null
      start_location: string | null
      end_location: string | null
      start_odometer: Prisma.Decimal | null
      end_odometer: Prisma.Decimal | null
      distance_traveled: Prisma.Decimal | null
      purpose: string | null
      trip_type: string | null
      fuel_consumed: Prisma.Decimal | null
      average_speed: Prisma.Decimal | null
      max_speed: Prisma.Decimal | null
      idle_time_minutes: number | null
      harsh_braking_count: number | null
      harsh_acceleration_count: number | null
      speeding_violations: number | null
      route_efficiency_score: Prisma.Decimal | null
      cost: Prisma.Decimal | null
      notes: string | null
      created_at: Date | null
    }, ExtArgs["result"]["trips"]>
    composites: {}
  }

  type tripsGetPayload<S extends boolean | null | undefined | tripsDefaultArgs> = $Result.GetResult<Prisma.$tripsPayload, S>

  type tripsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<tripsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TripsCountAggregateInputType | true
    }

  export interface tripsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['trips'], meta: { name: 'trips' } }
    /**
     * Find zero or one Trips that matches the filter.
     * @param {tripsFindUniqueArgs} args - Arguments to find a Trips
     * @example
     * // Get one Trips
     * const trips = await prisma.trips.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tripsFindUniqueArgs>(args: SelectSubset<T, tripsFindUniqueArgs<ExtArgs>>): Prisma__tripsClient<$Result.GetResult<Prisma.$tripsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Trips that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {tripsFindUniqueOrThrowArgs} args - Arguments to find a Trips
     * @example
     * // Get one Trips
     * const trips = await prisma.trips.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tripsFindUniqueOrThrowArgs>(args: SelectSubset<T, tripsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tripsClient<$Result.GetResult<Prisma.$tripsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Trips that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tripsFindFirstArgs} args - Arguments to find a Trips
     * @example
     * // Get one Trips
     * const trips = await prisma.trips.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tripsFindFirstArgs>(args?: SelectSubset<T, tripsFindFirstArgs<ExtArgs>>): Prisma__tripsClient<$Result.GetResult<Prisma.$tripsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Trips that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tripsFindFirstOrThrowArgs} args - Arguments to find a Trips
     * @example
     * // Get one Trips
     * const trips = await prisma.trips.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tripsFindFirstOrThrowArgs>(args?: SelectSubset<T, tripsFindFirstOrThrowArgs<ExtArgs>>): Prisma__tripsClient<$Result.GetResult<Prisma.$tripsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Trips that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tripsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Trips
     * const trips = await prisma.trips.findMany()
     * 
     * // Get first 10 Trips
     * const trips = await prisma.trips.findMany({ take: 10 })
     * 
     * // Only select the `trip_id`
     * const tripsWithTrip_idOnly = await prisma.trips.findMany({ select: { trip_id: true } })
     * 
     */
    findMany<T extends tripsFindManyArgs>(args?: SelectSubset<T, tripsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tripsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Trips.
     * @param {tripsCreateArgs} args - Arguments to create a Trips.
     * @example
     * // Create one Trips
     * const Trips = await prisma.trips.create({
     *   data: {
     *     // ... data to create a Trips
     *   }
     * })
     * 
     */
    create<T extends tripsCreateArgs>(args: SelectSubset<T, tripsCreateArgs<ExtArgs>>): Prisma__tripsClient<$Result.GetResult<Prisma.$tripsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Trips.
     * @param {tripsCreateManyArgs} args - Arguments to create many Trips.
     * @example
     * // Create many Trips
     * const trips = await prisma.trips.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tripsCreateManyArgs>(args?: SelectSubset<T, tripsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Trips and returns the data saved in the database.
     * @param {tripsCreateManyAndReturnArgs} args - Arguments to create many Trips.
     * @example
     * // Create many Trips
     * const trips = await prisma.trips.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Trips and only return the `trip_id`
     * const tripsWithTrip_idOnly = await prisma.trips.createManyAndReturn({
     *   select: { trip_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends tripsCreateManyAndReturnArgs>(args?: SelectSubset<T, tripsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tripsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Trips.
     * @param {tripsDeleteArgs} args - Arguments to delete one Trips.
     * @example
     * // Delete one Trips
     * const Trips = await prisma.trips.delete({
     *   where: {
     *     // ... filter to delete one Trips
     *   }
     * })
     * 
     */
    delete<T extends tripsDeleteArgs>(args: SelectSubset<T, tripsDeleteArgs<ExtArgs>>): Prisma__tripsClient<$Result.GetResult<Prisma.$tripsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Trips.
     * @param {tripsUpdateArgs} args - Arguments to update one Trips.
     * @example
     * // Update one Trips
     * const trips = await prisma.trips.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tripsUpdateArgs>(args: SelectSubset<T, tripsUpdateArgs<ExtArgs>>): Prisma__tripsClient<$Result.GetResult<Prisma.$tripsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Trips.
     * @param {tripsDeleteManyArgs} args - Arguments to filter Trips to delete.
     * @example
     * // Delete a few Trips
     * const { count } = await prisma.trips.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tripsDeleteManyArgs>(args?: SelectSubset<T, tripsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Trips.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tripsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Trips
     * const trips = await prisma.trips.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tripsUpdateManyArgs>(args: SelectSubset<T, tripsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Trips and returns the data updated in the database.
     * @param {tripsUpdateManyAndReturnArgs} args - Arguments to update many Trips.
     * @example
     * // Update many Trips
     * const trips = await prisma.trips.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Trips and only return the `trip_id`
     * const tripsWithTrip_idOnly = await prisma.trips.updateManyAndReturn({
     *   select: { trip_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends tripsUpdateManyAndReturnArgs>(args: SelectSubset<T, tripsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tripsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Trips.
     * @param {tripsUpsertArgs} args - Arguments to update or create a Trips.
     * @example
     * // Update or create a Trips
     * const trips = await prisma.trips.upsert({
     *   create: {
     *     // ... data to create a Trips
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Trips we want to update
     *   }
     * })
     */
    upsert<T extends tripsUpsertArgs>(args: SelectSubset<T, tripsUpsertArgs<ExtArgs>>): Prisma__tripsClient<$Result.GetResult<Prisma.$tripsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Trips.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tripsCountArgs} args - Arguments to filter Trips to count.
     * @example
     * // Count the number of Trips
     * const count = await prisma.trips.count({
     *   where: {
     *     // ... the filter for the Trips we want to count
     *   }
     * })
    **/
    count<T extends tripsCountArgs>(
      args?: Subset<T, tripsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TripsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Trips.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TripsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TripsAggregateArgs>(args: Subset<T, TripsAggregateArgs>): Prisma.PrismaPromise<GetTripsAggregateType<T>>

    /**
     * Group by Trips.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tripsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tripsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tripsGroupByArgs['orderBy'] }
        : { orderBy?: tripsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tripsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTripsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the trips model
   */
  readonly fields: tripsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for trips.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tripsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    drivers<T extends trips$driversArgs<ExtArgs> = {}>(args?: Subset<T, trips$driversArgs<ExtArgs>>): Prisma__driversClient<$Result.GetResult<Prisma.$driversPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    vehicles<T extends trips$vehiclesArgs<ExtArgs> = {}>(args?: Subset<T, trips$vehiclesArgs<ExtArgs>>): Prisma__vehiclesClient<$Result.GetResult<Prisma.$vehiclesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the trips model
   */
  interface tripsFieldRefs {
    readonly trip_id: FieldRef<"trips", 'Int'>
    readonly vehicle_id: FieldRef<"trips", 'Int'>
    readonly driver_id: FieldRef<"trips", 'Int'>
    readonly start_time: FieldRef<"trips", 'DateTime'>
    readonly end_time: FieldRef<"trips", 'DateTime'>
    readonly start_location: FieldRef<"trips", 'String'>
    readonly end_location: FieldRef<"trips", 'String'>
    readonly start_odometer: FieldRef<"trips", 'Decimal'>
    readonly end_odometer: FieldRef<"trips", 'Decimal'>
    readonly distance_traveled: FieldRef<"trips", 'Decimal'>
    readonly purpose: FieldRef<"trips", 'String'>
    readonly trip_type: FieldRef<"trips", 'String'>
    readonly fuel_consumed: FieldRef<"trips", 'Decimal'>
    readonly average_speed: FieldRef<"trips", 'Decimal'>
    readonly max_speed: FieldRef<"trips", 'Decimal'>
    readonly idle_time_minutes: FieldRef<"trips", 'Int'>
    readonly harsh_braking_count: FieldRef<"trips", 'Int'>
    readonly harsh_acceleration_count: FieldRef<"trips", 'Int'>
    readonly speeding_violations: FieldRef<"trips", 'Int'>
    readonly route_efficiency_score: FieldRef<"trips", 'Decimal'>
    readonly cost: FieldRef<"trips", 'Decimal'>
    readonly notes: FieldRef<"trips", 'String'>
    readonly created_at: FieldRef<"trips", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * trips findUnique
   */
  export type tripsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the trips
     */
    select?: tripsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the trips
     */
    omit?: tripsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tripsInclude<ExtArgs> | null
    /**
     * Filter, which trips to fetch.
     */
    where: tripsWhereUniqueInput
  }

  /**
   * trips findUniqueOrThrow
   */
  export type tripsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the trips
     */
    select?: tripsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the trips
     */
    omit?: tripsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tripsInclude<ExtArgs> | null
    /**
     * Filter, which trips to fetch.
     */
    where: tripsWhereUniqueInput
  }

  /**
   * trips findFirst
   */
  export type tripsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the trips
     */
    select?: tripsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the trips
     */
    omit?: tripsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tripsInclude<ExtArgs> | null
    /**
     * Filter, which trips to fetch.
     */
    where?: tripsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of trips to fetch.
     */
    orderBy?: tripsOrderByWithRelationInput | tripsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for trips.
     */
    cursor?: tripsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` trips from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` trips.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of trips.
     */
    distinct?: TripsScalarFieldEnum | TripsScalarFieldEnum[]
  }

  /**
   * trips findFirstOrThrow
   */
  export type tripsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the trips
     */
    select?: tripsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the trips
     */
    omit?: tripsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tripsInclude<ExtArgs> | null
    /**
     * Filter, which trips to fetch.
     */
    where?: tripsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of trips to fetch.
     */
    orderBy?: tripsOrderByWithRelationInput | tripsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for trips.
     */
    cursor?: tripsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` trips from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` trips.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of trips.
     */
    distinct?: TripsScalarFieldEnum | TripsScalarFieldEnum[]
  }

  /**
   * trips findMany
   */
  export type tripsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the trips
     */
    select?: tripsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the trips
     */
    omit?: tripsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tripsInclude<ExtArgs> | null
    /**
     * Filter, which trips to fetch.
     */
    where?: tripsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of trips to fetch.
     */
    orderBy?: tripsOrderByWithRelationInput | tripsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing trips.
     */
    cursor?: tripsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` trips from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` trips.
     */
    skip?: number
    distinct?: TripsScalarFieldEnum | TripsScalarFieldEnum[]
  }

  /**
   * trips create
   */
  export type tripsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the trips
     */
    select?: tripsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the trips
     */
    omit?: tripsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tripsInclude<ExtArgs> | null
    /**
     * The data needed to create a trips.
     */
    data?: XOR<tripsCreateInput, tripsUncheckedCreateInput>
  }

  /**
   * trips createMany
   */
  export type tripsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many trips.
     */
    data: tripsCreateManyInput | tripsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * trips createManyAndReturn
   */
  export type tripsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the trips
     */
    select?: tripsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the trips
     */
    omit?: tripsOmit<ExtArgs> | null
    /**
     * The data used to create many trips.
     */
    data: tripsCreateManyInput | tripsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tripsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * trips update
   */
  export type tripsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the trips
     */
    select?: tripsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the trips
     */
    omit?: tripsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tripsInclude<ExtArgs> | null
    /**
     * The data needed to update a trips.
     */
    data: XOR<tripsUpdateInput, tripsUncheckedUpdateInput>
    /**
     * Choose, which trips to update.
     */
    where: tripsWhereUniqueInput
  }

  /**
   * trips updateMany
   */
  export type tripsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update trips.
     */
    data: XOR<tripsUpdateManyMutationInput, tripsUncheckedUpdateManyInput>
    /**
     * Filter which trips to update
     */
    where?: tripsWhereInput
    /**
     * Limit how many trips to update.
     */
    limit?: number
  }

  /**
   * trips updateManyAndReturn
   */
  export type tripsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the trips
     */
    select?: tripsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the trips
     */
    omit?: tripsOmit<ExtArgs> | null
    /**
     * The data used to update trips.
     */
    data: XOR<tripsUpdateManyMutationInput, tripsUncheckedUpdateManyInput>
    /**
     * Filter which trips to update
     */
    where?: tripsWhereInput
    /**
     * Limit how many trips to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tripsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * trips upsert
   */
  export type tripsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the trips
     */
    select?: tripsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the trips
     */
    omit?: tripsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tripsInclude<ExtArgs> | null
    /**
     * The filter to search for the trips to update in case it exists.
     */
    where: tripsWhereUniqueInput
    /**
     * In case the trips found by the `where` argument doesn't exist, create a new trips with this data.
     */
    create: XOR<tripsCreateInput, tripsUncheckedCreateInput>
    /**
     * In case the trips was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tripsUpdateInput, tripsUncheckedUpdateInput>
  }

  /**
   * trips delete
   */
  export type tripsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the trips
     */
    select?: tripsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the trips
     */
    omit?: tripsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tripsInclude<ExtArgs> | null
    /**
     * Filter which trips to delete.
     */
    where: tripsWhereUniqueInput
  }

  /**
   * trips deleteMany
   */
  export type tripsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which trips to delete
     */
    where?: tripsWhereInput
    /**
     * Limit how many trips to delete.
     */
    limit?: number
  }

  /**
   * trips.drivers
   */
  export type trips$driversArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the drivers
     */
    select?: driversSelect<ExtArgs> | null
    /**
     * Omit specific fields from the drivers
     */
    omit?: driversOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: driversInclude<ExtArgs> | null
    where?: driversWhereInput
  }

  /**
   * trips.vehicles
   */
  export type trips$vehiclesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vehicles
     */
    select?: vehiclesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the vehicles
     */
    omit?: vehiclesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: vehiclesInclude<ExtArgs> | null
    where?: vehiclesWhereInput
  }

  /**
   * trips without action
   */
  export type tripsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the trips
     */
    select?: tripsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the trips
     */
    omit?: tripsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tripsInclude<ExtArgs> | null
  }


  /**
   * Model users
   */

  export type AggregateUsers = {
    _count: UsersCountAggregateOutputType | null
    _avg: UsersAvgAggregateOutputType | null
    _sum: UsersSumAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  export type UsersAvgAggregateOutputType = {
    user_id: number | null
    company_id: number | null
  }

  export type UsersSumAggregateOutputType = {
    user_id: number | null
    company_id: number | null
  }

  export type UsersMinAggregateOutputType = {
    user_id: number | null
    company_id: number | null
    username: string | null
    email: string | null
    password_hash: string | null
    first_name: string | null
    last_name: string | null
    role: string | null
    phone: string | null
    is_active: boolean | null
    last_login: Date | null
    created_at: Date | null
  }

  export type UsersMaxAggregateOutputType = {
    user_id: number | null
    company_id: number | null
    username: string | null
    email: string | null
    password_hash: string | null
    first_name: string | null
    last_name: string | null
    role: string | null
    phone: string | null
    is_active: boolean | null
    last_login: Date | null
    created_at: Date | null
  }

  export type UsersCountAggregateOutputType = {
    user_id: number
    company_id: number
    username: number
    email: number
    password_hash: number
    first_name: number
    last_name: number
    role: number
    phone: number
    is_active: number
    last_login: number
    created_at: number
    _all: number
  }


  export type UsersAvgAggregateInputType = {
    user_id?: true
    company_id?: true
  }

  export type UsersSumAggregateInputType = {
    user_id?: true
    company_id?: true
  }

  export type UsersMinAggregateInputType = {
    user_id?: true
    company_id?: true
    username?: true
    email?: true
    password_hash?: true
    first_name?: true
    last_name?: true
    role?: true
    phone?: true
    is_active?: true
    last_login?: true
    created_at?: true
  }

  export type UsersMaxAggregateInputType = {
    user_id?: true
    company_id?: true
    username?: true
    email?: true
    password_hash?: true
    first_name?: true
    last_name?: true
    role?: true
    phone?: true
    is_active?: true
    last_login?: true
    created_at?: true
  }

  export type UsersCountAggregateInputType = {
    user_id?: true
    company_id?: true
    username?: true
    email?: true
    password_hash?: true
    first_name?: true
    last_name?: true
    role?: true
    phone?: true
    is_active?: true
    last_login?: true
    created_at?: true
    _all?: true
  }

  export type UsersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which users to aggregate.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned users
    **/
    _count?: true | UsersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UsersAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UsersSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsersMaxAggregateInputType
  }

  export type GetUsersAggregateType<T extends UsersAggregateArgs> = {
        [P in keyof T & keyof AggregateUsers]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsers[P]>
      : GetScalarType<T[P], AggregateUsers[P]>
  }




  export type usersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: usersWhereInput
    orderBy?: usersOrderByWithAggregationInput | usersOrderByWithAggregationInput[]
    by: UsersScalarFieldEnum[] | UsersScalarFieldEnum
    having?: usersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsersCountAggregateInputType | true
    _avg?: UsersAvgAggregateInputType
    _sum?: UsersSumAggregateInputType
    _min?: UsersMinAggregateInputType
    _max?: UsersMaxAggregateInputType
  }

  export type UsersGroupByOutputType = {
    user_id: number
    company_id: number | null
    username: string
    email: string
    password_hash: string
    first_name: string | null
    last_name: string | null
    role: string
    phone: string | null
    is_active: boolean | null
    last_login: Date | null
    created_at: Date | null
    _count: UsersCountAggregateOutputType | null
    _avg: UsersAvgAggregateOutputType | null
    _sum: UsersSumAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  type GetUsersGroupByPayload<T extends usersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsersGroupByOutputType[P]>
            : GetScalarType<T[P], UsersGroupByOutputType[P]>
        }
      >
    >


  export type usersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    user_id?: boolean
    company_id?: boolean
    username?: boolean
    email?: boolean
    password_hash?: boolean
    first_name?: boolean
    last_name?: boolean
    role?: boolean
    phone?: boolean
    is_active?: boolean
    last_login?: boolean
    created_at?: boolean
    reports?: boolean | users$reportsArgs<ExtArgs>
    companies?: boolean | users$companiesArgs<ExtArgs>
    _count?: boolean | UsersCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["users"]>

  export type usersSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    user_id?: boolean
    company_id?: boolean
    username?: boolean
    email?: boolean
    password_hash?: boolean
    first_name?: boolean
    last_name?: boolean
    role?: boolean
    phone?: boolean
    is_active?: boolean
    last_login?: boolean
    created_at?: boolean
    companies?: boolean | users$companiesArgs<ExtArgs>
  }, ExtArgs["result"]["users"]>

  export type usersSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    user_id?: boolean
    company_id?: boolean
    username?: boolean
    email?: boolean
    password_hash?: boolean
    first_name?: boolean
    last_name?: boolean
    role?: boolean
    phone?: boolean
    is_active?: boolean
    last_login?: boolean
    created_at?: boolean
    companies?: boolean | users$companiesArgs<ExtArgs>
  }, ExtArgs["result"]["users"]>

  export type usersSelectScalar = {
    user_id?: boolean
    company_id?: boolean
    username?: boolean
    email?: boolean
    password_hash?: boolean
    first_name?: boolean
    last_name?: boolean
    role?: boolean
    phone?: boolean
    is_active?: boolean
    last_login?: boolean
    created_at?: boolean
  }

  export type usersOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"user_id" | "company_id" | "username" | "email" | "password_hash" | "first_name" | "last_name" | "role" | "phone" | "is_active" | "last_login" | "created_at", ExtArgs["result"]["users"]>
  export type usersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reports?: boolean | users$reportsArgs<ExtArgs>
    companies?: boolean | users$companiesArgs<ExtArgs>
    _count?: boolean | UsersCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type usersIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    companies?: boolean | users$companiesArgs<ExtArgs>
  }
  export type usersIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    companies?: boolean | users$companiesArgs<ExtArgs>
  }

  export type $usersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "users"
    objects: {
      reports: Prisma.$reportsPayload<ExtArgs>[]
      companies: Prisma.$companiesPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      user_id: number
      company_id: number | null
      username: string
      email: string
      password_hash: string
      first_name: string | null
      last_name: string | null
      role: string
      phone: string | null
      is_active: boolean | null
      last_login: Date | null
      created_at: Date | null
    }, ExtArgs["result"]["users"]>
    composites: {}
  }

  type usersGetPayload<S extends boolean | null | undefined | usersDefaultArgs> = $Result.GetResult<Prisma.$usersPayload, S>

  type usersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<usersFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UsersCountAggregateInputType | true
    }

  export interface usersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['users'], meta: { name: 'users' } }
    /**
     * Find zero or one Users that matches the filter.
     * @param {usersFindUniqueArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends usersFindUniqueArgs>(args: SelectSubset<T, usersFindUniqueArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Users that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {usersFindUniqueOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends usersFindUniqueOrThrowArgs>(args: SelectSubset<T, usersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindFirstArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends usersFindFirstArgs>(args?: SelectSubset<T, usersFindFirstArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Users that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindFirstOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends usersFindFirstOrThrowArgs>(args?: SelectSubset<T, usersFindFirstOrThrowArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.users.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.users.findMany({ take: 10 })
     * 
     * // Only select the `user_id`
     * const usersWithUser_idOnly = await prisma.users.findMany({ select: { user_id: true } })
     * 
     */
    findMany<T extends usersFindManyArgs>(args?: SelectSubset<T, usersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Users.
     * @param {usersCreateArgs} args - Arguments to create a Users.
     * @example
     * // Create one Users
     * const Users = await prisma.users.create({
     *   data: {
     *     // ... data to create a Users
     *   }
     * })
     * 
     */
    create<T extends usersCreateArgs>(args: SelectSubset<T, usersCreateArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {usersCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const users = await prisma.users.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends usersCreateManyArgs>(args?: SelectSubset<T, usersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {usersCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const users = await prisma.users.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `user_id`
     * const usersWithUser_idOnly = await prisma.users.createManyAndReturn({
     *   select: { user_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends usersCreateManyAndReturnArgs>(args?: SelectSubset<T, usersCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Users.
     * @param {usersDeleteArgs} args - Arguments to delete one Users.
     * @example
     * // Delete one Users
     * const Users = await prisma.users.delete({
     *   where: {
     *     // ... filter to delete one Users
     *   }
     * })
     * 
     */
    delete<T extends usersDeleteArgs>(args: SelectSubset<T, usersDeleteArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Users.
     * @param {usersUpdateArgs} args - Arguments to update one Users.
     * @example
     * // Update one Users
     * const users = await prisma.users.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends usersUpdateArgs>(args: SelectSubset<T, usersUpdateArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {usersDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.users.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends usersDeleteManyArgs>(args?: SelectSubset<T, usersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const users = await prisma.users.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends usersUpdateManyArgs>(args: SelectSubset<T, usersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users and returns the data updated in the database.
     * @param {usersUpdateManyAndReturnArgs} args - Arguments to update many Users.
     * @example
     * // Update many Users
     * const users = await prisma.users.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Users and only return the `user_id`
     * const usersWithUser_idOnly = await prisma.users.updateManyAndReturn({
     *   select: { user_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends usersUpdateManyAndReturnArgs>(args: SelectSubset<T, usersUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Users.
     * @param {usersUpsertArgs} args - Arguments to update or create a Users.
     * @example
     * // Update or create a Users
     * const users = await prisma.users.upsert({
     *   create: {
     *     // ... data to create a Users
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Users we want to update
     *   }
     * })
     */
    upsert<T extends usersUpsertArgs>(args: SelectSubset<T, usersUpsertArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.users.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends usersCountArgs>(
      args?: Subset<T, usersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsersAggregateArgs>(args: Subset<T, UsersAggregateArgs>): Prisma.PrismaPromise<GetUsersAggregateType<T>>

    /**
     * Group by Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends usersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: usersGroupByArgs['orderBy'] }
        : { orderBy?: usersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, usersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the users model
   */
  readonly fields: usersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for users.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__usersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    reports<T extends users$reportsArgs<ExtArgs> = {}>(args?: Subset<T, users$reportsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$reportsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    companies<T extends users$companiesArgs<ExtArgs> = {}>(args?: Subset<T, users$companiesArgs<ExtArgs>>): Prisma__companiesClient<$Result.GetResult<Prisma.$companiesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the users model
   */
  interface usersFieldRefs {
    readonly user_id: FieldRef<"users", 'Int'>
    readonly company_id: FieldRef<"users", 'Int'>
    readonly username: FieldRef<"users", 'String'>
    readonly email: FieldRef<"users", 'String'>
    readonly password_hash: FieldRef<"users", 'String'>
    readonly first_name: FieldRef<"users", 'String'>
    readonly last_name: FieldRef<"users", 'String'>
    readonly role: FieldRef<"users", 'String'>
    readonly phone: FieldRef<"users", 'String'>
    readonly is_active: FieldRef<"users", 'Boolean'>
    readonly last_login: FieldRef<"users", 'DateTime'>
    readonly created_at: FieldRef<"users", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * users findUnique
   */
  export type usersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users findUniqueOrThrow
   */
  export type usersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users findFirst
   */
  export type usersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * users findFirstOrThrow
   */
  export type usersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * users findMany
   */
  export type usersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * users create
   */
  export type usersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * The data needed to create a users.
     */
    data: XOR<usersCreateInput, usersUncheckedCreateInput>
  }

  /**
   * users createMany
   */
  export type usersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many users.
     */
    data: usersCreateManyInput | usersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * users createManyAndReturn
   */
  export type usersCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * The data used to create many users.
     */
    data: usersCreateManyInput | usersCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * users update
   */
  export type usersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * The data needed to update a users.
     */
    data: XOR<usersUpdateInput, usersUncheckedUpdateInput>
    /**
     * Choose, which users to update.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users updateMany
   */
  export type usersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update users.
     */
    data: XOR<usersUpdateManyMutationInput, usersUncheckedUpdateManyInput>
    /**
     * Filter which users to update
     */
    where?: usersWhereInput
    /**
     * Limit how many users to update.
     */
    limit?: number
  }

  /**
   * users updateManyAndReturn
   */
  export type usersUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * The data used to update users.
     */
    data: XOR<usersUpdateManyMutationInput, usersUncheckedUpdateManyInput>
    /**
     * Filter which users to update
     */
    where?: usersWhereInput
    /**
     * Limit how many users to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * users upsert
   */
  export type usersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * The filter to search for the users to update in case it exists.
     */
    where: usersWhereUniqueInput
    /**
     * In case the users found by the `where` argument doesn't exist, create a new users with this data.
     */
    create: XOR<usersCreateInput, usersUncheckedCreateInput>
    /**
     * In case the users was found with the provided `where` argument, update it with this data.
     */
    update: XOR<usersUpdateInput, usersUncheckedUpdateInput>
  }

  /**
   * users delete
   */
  export type usersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter which users to delete.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users deleteMany
   */
  export type usersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which users to delete
     */
    where?: usersWhereInput
    /**
     * Limit how many users to delete.
     */
    limit?: number
  }

  /**
   * users.reports
   */
  export type users$reportsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reports
     */
    select?: reportsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reports
     */
    omit?: reportsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportsInclude<ExtArgs> | null
    where?: reportsWhereInput
    orderBy?: reportsOrderByWithRelationInput | reportsOrderByWithRelationInput[]
    cursor?: reportsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReportsScalarFieldEnum | ReportsScalarFieldEnum[]
  }

  /**
   * users.companies
   */
  export type users$companiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the companies
     */
    select?: companiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the companies
     */
    omit?: companiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: companiesInclude<ExtArgs> | null
    where?: companiesWhereInput
  }

  /**
   * users without action
   */
  export type usersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
  }


  /**
   * Model vehicle_assignments
   */

  export type AggregateVehicle_assignments = {
    _count: Vehicle_assignmentsCountAggregateOutputType | null
    _avg: Vehicle_assignmentsAvgAggregateOutputType | null
    _sum: Vehicle_assignmentsSumAggregateOutputType | null
    _min: Vehicle_assignmentsMinAggregateOutputType | null
    _max: Vehicle_assignmentsMaxAggregateOutputType | null
  }

  export type Vehicle_assignmentsAvgAggregateOutputType = {
    assignment_id: number | null
    vehicle_id: number | null
    driver_id: number | null
  }

  export type Vehicle_assignmentsSumAggregateOutputType = {
    assignment_id: number | null
    vehicle_id: number | null
    driver_id: number | null
  }

  export type Vehicle_assignmentsMinAggregateOutputType = {
    assignment_id: number | null
    vehicle_id: number | null
    driver_id: number | null
    assigned_date: Date | null
    end_date: Date | null
    assignment_type: string | null
    notes: string | null
    is_active: boolean | null
  }

  export type Vehicle_assignmentsMaxAggregateOutputType = {
    assignment_id: number | null
    vehicle_id: number | null
    driver_id: number | null
    assigned_date: Date | null
    end_date: Date | null
    assignment_type: string | null
    notes: string | null
    is_active: boolean | null
  }

  export type Vehicle_assignmentsCountAggregateOutputType = {
    assignment_id: number
    vehicle_id: number
    driver_id: number
    assigned_date: number
    end_date: number
    assignment_type: number
    notes: number
    is_active: number
    _all: number
  }


  export type Vehicle_assignmentsAvgAggregateInputType = {
    assignment_id?: true
    vehicle_id?: true
    driver_id?: true
  }

  export type Vehicle_assignmentsSumAggregateInputType = {
    assignment_id?: true
    vehicle_id?: true
    driver_id?: true
  }

  export type Vehicle_assignmentsMinAggregateInputType = {
    assignment_id?: true
    vehicle_id?: true
    driver_id?: true
    assigned_date?: true
    end_date?: true
    assignment_type?: true
    notes?: true
    is_active?: true
  }

  export type Vehicle_assignmentsMaxAggregateInputType = {
    assignment_id?: true
    vehicle_id?: true
    driver_id?: true
    assigned_date?: true
    end_date?: true
    assignment_type?: true
    notes?: true
    is_active?: true
  }

  export type Vehicle_assignmentsCountAggregateInputType = {
    assignment_id?: true
    vehicle_id?: true
    driver_id?: true
    assigned_date?: true
    end_date?: true
    assignment_type?: true
    notes?: true
    is_active?: true
    _all?: true
  }

  export type Vehicle_assignmentsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which vehicle_assignments to aggregate.
     */
    where?: vehicle_assignmentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of vehicle_assignments to fetch.
     */
    orderBy?: vehicle_assignmentsOrderByWithRelationInput | vehicle_assignmentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: vehicle_assignmentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` vehicle_assignments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` vehicle_assignments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned vehicle_assignments
    **/
    _count?: true | Vehicle_assignmentsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Vehicle_assignmentsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Vehicle_assignmentsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Vehicle_assignmentsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Vehicle_assignmentsMaxAggregateInputType
  }

  export type GetVehicle_assignmentsAggregateType<T extends Vehicle_assignmentsAggregateArgs> = {
        [P in keyof T & keyof AggregateVehicle_assignments]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVehicle_assignments[P]>
      : GetScalarType<T[P], AggregateVehicle_assignments[P]>
  }




  export type vehicle_assignmentsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: vehicle_assignmentsWhereInput
    orderBy?: vehicle_assignmentsOrderByWithAggregationInput | vehicle_assignmentsOrderByWithAggregationInput[]
    by: Vehicle_assignmentsScalarFieldEnum[] | Vehicle_assignmentsScalarFieldEnum
    having?: vehicle_assignmentsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Vehicle_assignmentsCountAggregateInputType | true
    _avg?: Vehicle_assignmentsAvgAggregateInputType
    _sum?: Vehicle_assignmentsSumAggregateInputType
    _min?: Vehicle_assignmentsMinAggregateInputType
    _max?: Vehicle_assignmentsMaxAggregateInputType
  }

  export type Vehicle_assignmentsGroupByOutputType = {
    assignment_id: number
    vehicle_id: number | null
    driver_id: number | null
    assigned_date: Date
    end_date: Date | null
    assignment_type: string | null
    notes: string | null
    is_active: boolean | null
    _count: Vehicle_assignmentsCountAggregateOutputType | null
    _avg: Vehicle_assignmentsAvgAggregateOutputType | null
    _sum: Vehicle_assignmentsSumAggregateOutputType | null
    _min: Vehicle_assignmentsMinAggregateOutputType | null
    _max: Vehicle_assignmentsMaxAggregateOutputType | null
  }

  type GetVehicle_assignmentsGroupByPayload<T extends vehicle_assignmentsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Vehicle_assignmentsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Vehicle_assignmentsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Vehicle_assignmentsGroupByOutputType[P]>
            : GetScalarType<T[P], Vehicle_assignmentsGroupByOutputType[P]>
        }
      >
    >


  export type vehicle_assignmentsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    assignment_id?: boolean
    vehicle_id?: boolean
    driver_id?: boolean
    assigned_date?: boolean
    end_date?: boolean
    assignment_type?: boolean
    notes?: boolean
    is_active?: boolean
    drivers?: boolean | vehicle_assignments$driversArgs<ExtArgs>
    vehicles?: boolean | vehicle_assignments$vehiclesArgs<ExtArgs>
  }, ExtArgs["result"]["vehicle_assignments"]>

  export type vehicle_assignmentsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    assignment_id?: boolean
    vehicle_id?: boolean
    driver_id?: boolean
    assigned_date?: boolean
    end_date?: boolean
    assignment_type?: boolean
    notes?: boolean
    is_active?: boolean
    drivers?: boolean | vehicle_assignments$driversArgs<ExtArgs>
    vehicles?: boolean | vehicle_assignments$vehiclesArgs<ExtArgs>
  }, ExtArgs["result"]["vehicle_assignments"]>

  export type vehicle_assignmentsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    assignment_id?: boolean
    vehicle_id?: boolean
    driver_id?: boolean
    assigned_date?: boolean
    end_date?: boolean
    assignment_type?: boolean
    notes?: boolean
    is_active?: boolean
    drivers?: boolean | vehicle_assignments$driversArgs<ExtArgs>
    vehicles?: boolean | vehicle_assignments$vehiclesArgs<ExtArgs>
  }, ExtArgs["result"]["vehicle_assignments"]>

  export type vehicle_assignmentsSelectScalar = {
    assignment_id?: boolean
    vehicle_id?: boolean
    driver_id?: boolean
    assigned_date?: boolean
    end_date?: boolean
    assignment_type?: boolean
    notes?: boolean
    is_active?: boolean
  }

  export type vehicle_assignmentsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"assignment_id" | "vehicle_id" | "driver_id" | "assigned_date" | "end_date" | "assignment_type" | "notes" | "is_active", ExtArgs["result"]["vehicle_assignments"]>
  export type vehicle_assignmentsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    drivers?: boolean | vehicle_assignments$driversArgs<ExtArgs>
    vehicles?: boolean | vehicle_assignments$vehiclesArgs<ExtArgs>
  }
  export type vehicle_assignmentsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    drivers?: boolean | vehicle_assignments$driversArgs<ExtArgs>
    vehicles?: boolean | vehicle_assignments$vehiclesArgs<ExtArgs>
  }
  export type vehicle_assignmentsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    drivers?: boolean | vehicle_assignments$driversArgs<ExtArgs>
    vehicles?: boolean | vehicle_assignments$vehiclesArgs<ExtArgs>
  }

  export type $vehicle_assignmentsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "vehicle_assignments"
    objects: {
      drivers: Prisma.$driversPayload<ExtArgs> | null
      vehicles: Prisma.$vehiclesPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      assignment_id: number
      vehicle_id: number | null
      driver_id: number | null
      assigned_date: Date
      end_date: Date | null
      assignment_type: string | null
      notes: string | null
      is_active: boolean | null
    }, ExtArgs["result"]["vehicle_assignments"]>
    composites: {}
  }

  type vehicle_assignmentsGetPayload<S extends boolean | null | undefined | vehicle_assignmentsDefaultArgs> = $Result.GetResult<Prisma.$vehicle_assignmentsPayload, S>

  type vehicle_assignmentsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<vehicle_assignmentsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Vehicle_assignmentsCountAggregateInputType | true
    }

  export interface vehicle_assignmentsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['vehicle_assignments'], meta: { name: 'vehicle_assignments' } }
    /**
     * Find zero or one Vehicle_assignments that matches the filter.
     * @param {vehicle_assignmentsFindUniqueArgs} args - Arguments to find a Vehicle_assignments
     * @example
     * // Get one Vehicle_assignments
     * const vehicle_assignments = await prisma.vehicle_assignments.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends vehicle_assignmentsFindUniqueArgs>(args: SelectSubset<T, vehicle_assignmentsFindUniqueArgs<ExtArgs>>): Prisma__vehicle_assignmentsClient<$Result.GetResult<Prisma.$vehicle_assignmentsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Vehicle_assignments that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {vehicle_assignmentsFindUniqueOrThrowArgs} args - Arguments to find a Vehicle_assignments
     * @example
     * // Get one Vehicle_assignments
     * const vehicle_assignments = await prisma.vehicle_assignments.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends vehicle_assignmentsFindUniqueOrThrowArgs>(args: SelectSubset<T, vehicle_assignmentsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__vehicle_assignmentsClient<$Result.GetResult<Prisma.$vehicle_assignmentsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Vehicle_assignments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {vehicle_assignmentsFindFirstArgs} args - Arguments to find a Vehicle_assignments
     * @example
     * // Get one Vehicle_assignments
     * const vehicle_assignments = await prisma.vehicle_assignments.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends vehicle_assignmentsFindFirstArgs>(args?: SelectSubset<T, vehicle_assignmentsFindFirstArgs<ExtArgs>>): Prisma__vehicle_assignmentsClient<$Result.GetResult<Prisma.$vehicle_assignmentsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Vehicle_assignments that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {vehicle_assignmentsFindFirstOrThrowArgs} args - Arguments to find a Vehicle_assignments
     * @example
     * // Get one Vehicle_assignments
     * const vehicle_assignments = await prisma.vehicle_assignments.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends vehicle_assignmentsFindFirstOrThrowArgs>(args?: SelectSubset<T, vehicle_assignmentsFindFirstOrThrowArgs<ExtArgs>>): Prisma__vehicle_assignmentsClient<$Result.GetResult<Prisma.$vehicle_assignmentsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Vehicle_assignments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {vehicle_assignmentsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Vehicle_assignments
     * const vehicle_assignments = await prisma.vehicle_assignments.findMany()
     * 
     * // Get first 10 Vehicle_assignments
     * const vehicle_assignments = await prisma.vehicle_assignments.findMany({ take: 10 })
     * 
     * // Only select the `assignment_id`
     * const vehicle_assignmentsWithAssignment_idOnly = await prisma.vehicle_assignments.findMany({ select: { assignment_id: true } })
     * 
     */
    findMany<T extends vehicle_assignmentsFindManyArgs>(args?: SelectSubset<T, vehicle_assignmentsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$vehicle_assignmentsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Vehicle_assignments.
     * @param {vehicle_assignmentsCreateArgs} args - Arguments to create a Vehicle_assignments.
     * @example
     * // Create one Vehicle_assignments
     * const Vehicle_assignments = await prisma.vehicle_assignments.create({
     *   data: {
     *     // ... data to create a Vehicle_assignments
     *   }
     * })
     * 
     */
    create<T extends vehicle_assignmentsCreateArgs>(args: SelectSubset<T, vehicle_assignmentsCreateArgs<ExtArgs>>): Prisma__vehicle_assignmentsClient<$Result.GetResult<Prisma.$vehicle_assignmentsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Vehicle_assignments.
     * @param {vehicle_assignmentsCreateManyArgs} args - Arguments to create many Vehicle_assignments.
     * @example
     * // Create many Vehicle_assignments
     * const vehicle_assignments = await prisma.vehicle_assignments.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends vehicle_assignmentsCreateManyArgs>(args?: SelectSubset<T, vehicle_assignmentsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Vehicle_assignments and returns the data saved in the database.
     * @param {vehicle_assignmentsCreateManyAndReturnArgs} args - Arguments to create many Vehicle_assignments.
     * @example
     * // Create many Vehicle_assignments
     * const vehicle_assignments = await prisma.vehicle_assignments.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Vehicle_assignments and only return the `assignment_id`
     * const vehicle_assignmentsWithAssignment_idOnly = await prisma.vehicle_assignments.createManyAndReturn({
     *   select: { assignment_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends vehicle_assignmentsCreateManyAndReturnArgs>(args?: SelectSubset<T, vehicle_assignmentsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$vehicle_assignmentsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Vehicle_assignments.
     * @param {vehicle_assignmentsDeleteArgs} args - Arguments to delete one Vehicle_assignments.
     * @example
     * // Delete one Vehicle_assignments
     * const Vehicle_assignments = await prisma.vehicle_assignments.delete({
     *   where: {
     *     // ... filter to delete one Vehicle_assignments
     *   }
     * })
     * 
     */
    delete<T extends vehicle_assignmentsDeleteArgs>(args: SelectSubset<T, vehicle_assignmentsDeleteArgs<ExtArgs>>): Prisma__vehicle_assignmentsClient<$Result.GetResult<Prisma.$vehicle_assignmentsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Vehicle_assignments.
     * @param {vehicle_assignmentsUpdateArgs} args - Arguments to update one Vehicle_assignments.
     * @example
     * // Update one Vehicle_assignments
     * const vehicle_assignments = await prisma.vehicle_assignments.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends vehicle_assignmentsUpdateArgs>(args: SelectSubset<T, vehicle_assignmentsUpdateArgs<ExtArgs>>): Prisma__vehicle_assignmentsClient<$Result.GetResult<Prisma.$vehicle_assignmentsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Vehicle_assignments.
     * @param {vehicle_assignmentsDeleteManyArgs} args - Arguments to filter Vehicle_assignments to delete.
     * @example
     * // Delete a few Vehicle_assignments
     * const { count } = await prisma.vehicle_assignments.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends vehicle_assignmentsDeleteManyArgs>(args?: SelectSubset<T, vehicle_assignmentsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Vehicle_assignments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {vehicle_assignmentsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Vehicle_assignments
     * const vehicle_assignments = await prisma.vehicle_assignments.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends vehicle_assignmentsUpdateManyArgs>(args: SelectSubset<T, vehicle_assignmentsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Vehicle_assignments and returns the data updated in the database.
     * @param {vehicle_assignmentsUpdateManyAndReturnArgs} args - Arguments to update many Vehicle_assignments.
     * @example
     * // Update many Vehicle_assignments
     * const vehicle_assignments = await prisma.vehicle_assignments.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Vehicle_assignments and only return the `assignment_id`
     * const vehicle_assignmentsWithAssignment_idOnly = await prisma.vehicle_assignments.updateManyAndReturn({
     *   select: { assignment_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends vehicle_assignmentsUpdateManyAndReturnArgs>(args: SelectSubset<T, vehicle_assignmentsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$vehicle_assignmentsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Vehicle_assignments.
     * @param {vehicle_assignmentsUpsertArgs} args - Arguments to update or create a Vehicle_assignments.
     * @example
     * // Update or create a Vehicle_assignments
     * const vehicle_assignments = await prisma.vehicle_assignments.upsert({
     *   create: {
     *     // ... data to create a Vehicle_assignments
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Vehicle_assignments we want to update
     *   }
     * })
     */
    upsert<T extends vehicle_assignmentsUpsertArgs>(args: SelectSubset<T, vehicle_assignmentsUpsertArgs<ExtArgs>>): Prisma__vehicle_assignmentsClient<$Result.GetResult<Prisma.$vehicle_assignmentsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Vehicle_assignments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {vehicle_assignmentsCountArgs} args - Arguments to filter Vehicle_assignments to count.
     * @example
     * // Count the number of Vehicle_assignments
     * const count = await prisma.vehicle_assignments.count({
     *   where: {
     *     // ... the filter for the Vehicle_assignments we want to count
     *   }
     * })
    **/
    count<T extends vehicle_assignmentsCountArgs>(
      args?: Subset<T, vehicle_assignmentsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Vehicle_assignmentsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Vehicle_assignments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Vehicle_assignmentsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Vehicle_assignmentsAggregateArgs>(args: Subset<T, Vehicle_assignmentsAggregateArgs>): Prisma.PrismaPromise<GetVehicle_assignmentsAggregateType<T>>

    /**
     * Group by Vehicle_assignments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {vehicle_assignmentsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends vehicle_assignmentsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: vehicle_assignmentsGroupByArgs['orderBy'] }
        : { orderBy?: vehicle_assignmentsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, vehicle_assignmentsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVehicle_assignmentsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the vehicle_assignments model
   */
  readonly fields: vehicle_assignmentsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for vehicle_assignments.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__vehicle_assignmentsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    drivers<T extends vehicle_assignments$driversArgs<ExtArgs> = {}>(args?: Subset<T, vehicle_assignments$driversArgs<ExtArgs>>): Prisma__driversClient<$Result.GetResult<Prisma.$driversPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    vehicles<T extends vehicle_assignments$vehiclesArgs<ExtArgs> = {}>(args?: Subset<T, vehicle_assignments$vehiclesArgs<ExtArgs>>): Prisma__vehiclesClient<$Result.GetResult<Prisma.$vehiclesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the vehicle_assignments model
   */
  interface vehicle_assignmentsFieldRefs {
    readonly assignment_id: FieldRef<"vehicle_assignments", 'Int'>
    readonly vehicle_id: FieldRef<"vehicle_assignments", 'Int'>
    readonly driver_id: FieldRef<"vehicle_assignments", 'Int'>
    readonly assigned_date: FieldRef<"vehicle_assignments", 'DateTime'>
    readonly end_date: FieldRef<"vehicle_assignments", 'DateTime'>
    readonly assignment_type: FieldRef<"vehicle_assignments", 'String'>
    readonly notes: FieldRef<"vehicle_assignments", 'String'>
    readonly is_active: FieldRef<"vehicle_assignments", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * vehicle_assignments findUnique
   */
  export type vehicle_assignmentsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vehicle_assignments
     */
    select?: vehicle_assignmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the vehicle_assignments
     */
    omit?: vehicle_assignmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: vehicle_assignmentsInclude<ExtArgs> | null
    /**
     * Filter, which vehicle_assignments to fetch.
     */
    where: vehicle_assignmentsWhereUniqueInput
  }

  /**
   * vehicle_assignments findUniqueOrThrow
   */
  export type vehicle_assignmentsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vehicle_assignments
     */
    select?: vehicle_assignmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the vehicle_assignments
     */
    omit?: vehicle_assignmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: vehicle_assignmentsInclude<ExtArgs> | null
    /**
     * Filter, which vehicle_assignments to fetch.
     */
    where: vehicle_assignmentsWhereUniqueInput
  }

  /**
   * vehicle_assignments findFirst
   */
  export type vehicle_assignmentsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vehicle_assignments
     */
    select?: vehicle_assignmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the vehicle_assignments
     */
    omit?: vehicle_assignmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: vehicle_assignmentsInclude<ExtArgs> | null
    /**
     * Filter, which vehicle_assignments to fetch.
     */
    where?: vehicle_assignmentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of vehicle_assignments to fetch.
     */
    orderBy?: vehicle_assignmentsOrderByWithRelationInput | vehicle_assignmentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for vehicle_assignments.
     */
    cursor?: vehicle_assignmentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` vehicle_assignments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` vehicle_assignments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of vehicle_assignments.
     */
    distinct?: Vehicle_assignmentsScalarFieldEnum | Vehicle_assignmentsScalarFieldEnum[]
  }

  /**
   * vehicle_assignments findFirstOrThrow
   */
  export type vehicle_assignmentsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vehicle_assignments
     */
    select?: vehicle_assignmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the vehicle_assignments
     */
    omit?: vehicle_assignmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: vehicle_assignmentsInclude<ExtArgs> | null
    /**
     * Filter, which vehicle_assignments to fetch.
     */
    where?: vehicle_assignmentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of vehicle_assignments to fetch.
     */
    orderBy?: vehicle_assignmentsOrderByWithRelationInput | vehicle_assignmentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for vehicle_assignments.
     */
    cursor?: vehicle_assignmentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` vehicle_assignments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` vehicle_assignments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of vehicle_assignments.
     */
    distinct?: Vehicle_assignmentsScalarFieldEnum | Vehicle_assignmentsScalarFieldEnum[]
  }

  /**
   * vehicle_assignments findMany
   */
  export type vehicle_assignmentsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vehicle_assignments
     */
    select?: vehicle_assignmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the vehicle_assignments
     */
    omit?: vehicle_assignmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: vehicle_assignmentsInclude<ExtArgs> | null
    /**
     * Filter, which vehicle_assignments to fetch.
     */
    where?: vehicle_assignmentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of vehicle_assignments to fetch.
     */
    orderBy?: vehicle_assignmentsOrderByWithRelationInput | vehicle_assignmentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing vehicle_assignments.
     */
    cursor?: vehicle_assignmentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` vehicle_assignments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` vehicle_assignments.
     */
    skip?: number
    distinct?: Vehicle_assignmentsScalarFieldEnum | Vehicle_assignmentsScalarFieldEnum[]
  }

  /**
   * vehicle_assignments create
   */
  export type vehicle_assignmentsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vehicle_assignments
     */
    select?: vehicle_assignmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the vehicle_assignments
     */
    omit?: vehicle_assignmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: vehicle_assignmentsInclude<ExtArgs> | null
    /**
     * The data needed to create a vehicle_assignments.
     */
    data: XOR<vehicle_assignmentsCreateInput, vehicle_assignmentsUncheckedCreateInput>
  }

  /**
   * vehicle_assignments createMany
   */
  export type vehicle_assignmentsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many vehicle_assignments.
     */
    data: vehicle_assignmentsCreateManyInput | vehicle_assignmentsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * vehicle_assignments createManyAndReturn
   */
  export type vehicle_assignmentsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vehicle_assignments
     */
    select?: vehicle_assignmentsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the vehicle_assignments
     */
    omit?: vehicle_assignmentsOmit<ExtArgs> | null
    /**
     * The data used to create many vehicle_assignments.
     */
    data: vehicle_assignmentsCreateManyInput | vehicle_assignmentsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: vehicle_assignmentsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * vehicle_assignments update
   */
  export type vehicle_assignmentsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vehicle_assignments
     */
    select?: vehicle_assignmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the vehicle_assignments
     */
    omit?: vehicle_assignmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: vehicle_assignmentsInclude<ExtArgs> | null
    /**
     * The data needed to update a vehicle_assignments.
     */
    data: XOR<vehicle_assignmentsUpdateInput, vehicle_assignmentsUncheckedUpdateInput>
    /**
     * Choose, which vehicle_assignments to update.
     */
    where: vehicle_assignmentsWhereUniqueInput
  }

  /**
   * vehicle_assignments updateMany
   */
  export type vehicle_assignmentsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update vehicle_assignments.
     */
    data: XOR<vehicle_assignmentsUpdateManyMutationInput, vehicle_assignmentsUncheckedUpdateManyInput>
    /**
     * Filter which vehicle_assignments to update
     */
    where?: vehicle_assignmentsWhereInput
    /**
     * Limit how many vehicle_assignments to update.
     */
    limit?: number
  }

  /**
   * vehicle_assignments updateManyAndReturn
   */
  export type vehicle_assignmentsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vehicle_assignments
     */
    select?: vehicle_assignmentsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the vehicle_assignments
     */
    omit?: vehicle_assignmentsOmit<ExtArgs> | null
    /**
     * The data used to update vehicle_assignments.
     */
    data: XOR<vehicle_assignmentsUpdateManyMutationInput, vehicle_assignmentsUncheckedUpdateManyInput>
    /**
     * Filter which vehicle_assignments to update
     */
    where?: vehicle_assignmentsWhereInput
    /**
     * Limit how many vehicle_assignments to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: vehicle_assignmentsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * vehicle_assignments upsert
   */
  export type vehicle_assignmentsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vehicle_assignments
     */
    select?: vehicle_assignmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the vehicle_assignments
     */
    omit?: vehicle_assignmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: vehicle_assignmentsInclude<ExtArgs> | null
    /**
     * The filter to search for the vehicle_assignments to update in case it exists.
     */
    where: vehicle_assignmentsWhereUniqueInput
    /**
     * In case the vehicle_assignments found by the `where` argument doesn't exist, create a new vehicle_assignments with this data.
     */
    create: XOR<vehicle_assignmentsCreateInput, vehicle_assignmentsUncheckedCreateInput>
    /**
     * In case the vehicle_assignments was found with the provided `where` argument, update it with this data.
     */
    update: XOR<vehicle_assignmentsUpdateInput, vehicle_assignmentsUncheckedUpdateInput>
  }

  /**
   * vehicle_assignments delete
   */
  export type vehicle_assignmentsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vehicle_assignments
     */
    select?: vehicle_assignmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the vehicle_assignments
     */
    omit?: vehicle_assignmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: vehicle_assignmentsInclude<ExtArgs> | null
    /**
     * Filter which vehicle_assignments to delete.
     */
    where: vehicle_assignmentsWhereUniqueInput
  }

  /**
   * vehicle_assignments deleteMany
   */
  export type vehicle_assignmentsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which vehicle_assignments to delete
     */
    where?: vehicle_assignmentsWhereInput
    /**
     * Limit how many vehicle_assignments to delete.
     */
    limit?: number
  }

  /**
   * vehicle_assignments.drivers
   */
  export type vehicle_assignments$driversArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the drivers
     */
    select?: driversSelect<ExtArgs> | null
    /**
     * Omit specific fields from the drivers
     */
    omit?: driversOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: driversInclude<ExtArgs> | null
    where?: driversWhereInput
  }

  /**
   * vehicle_assignments.vehicles
   */
  export type vehicle_assignments$vehiclesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vehicles
     */
    select?: vehiclesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the vehicles
     */
    omit?: vehiclesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: vehiclesInclude<ExtArgs> | null
    where?: vehiclesWhereInput
  }

  /**
   * vehicle_assignments without action
   */
  export type vehicle_assignmentsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vehicle_assignments
     */
    select?: vehicle_assignmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the vehicle_assignments
     */
    omit?: vehicle_assignmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: vehicle_assignmentsInclude<ExtArgs> | null
  }


  /**
   * Model vehicle_types
   */

  export type AggregateVehicle_types = {
    _count: Vehicle_typesCountAggregateOutputType | null
    _avg: Vehicle_typesAvgAggregateOutputType | null
    _sum: Vehicle_typesSumAggregateOutputType | null
    _min: Vehicle_typesMinAggregateOutputType | null
    _max: Vehicle_typesMaxAggregateOutputType | null
  }

  export type Vehicle_typesAvgAggregateOutputType = {
    type_id: number | null
    fuel_efficiency_rating: Decimal | null
    capacity_passengers: number | null
    capacity_cargo_cubic_feet: Decimal | null
  }

  export type Vehicle_typesSumAggregateOutputType = {
    type_id: number | null
    fuel_efficiency_rating: Decimal | null
    capacity_passengers: number | null
    capacity_cargo_cubic_feet: Decimal | null
  }

  export type Vehicle_typesMinAggregateOutputType = {
    type_id: number | null
    type_name: string | null
    description: string | null
    fuel_efficiency_rating: Decimal | null
    capacity_passengers: number | null
    capacity_cargo_cubic_feet: Decimal | null
  }

  export type Vehicle_typesMaxAggregateOutputType = {
    type_id: number | null
    type_name: string | null
    description: string | null
    fuel_efficiency_rating: Decimal | null
    capacity_passengers: number | null
    capacity_cargo_cubic_feet: Decimal | null
  }

  export type Vehicle_typesCountAggregateOutputType = {
    type_id: number
    type_name: number
    description: number
    fuel_efficiency_rating: number
    capacity_passengers: number
    capacity_cargo_cubic_feet: number
    _all: number
  }


  export type Vehicle_typesAvgAggregateInputType = {
    type_id?: true
    fuel_efficiency_rating?: true
    capacity_passengers?: true
    capacity_cargo_cubic_feet?: true
  }

  export type Vehicle_typesSumAggregateInputType = {
    type_id?: true
    fuel_efficiency_rating?: true
    capacity_passengers?: true
    capacity_cargo_cubic_feet?: true
  }

  export type Vehicle_typesMinAggregateInputType = {
    type_id?: true
    type_name?: true
    description?: true
    fuel_efficiency_rating?: true
    capacity_passengers?: true
    capacity_cargo_cubic_feet?: true
  }

  export type Vehicle_typesMaxAggregateInputType = {
    type_id?: true
    type_name?: true
    description?: true
    fuel_efficiency_rating?: true
    capacity_passengers?: true
    capacity_cargo_cubic_feet?: true
  }

  export type Vehicle_typesCountAggregateInputType = {
    type_id?: true
    type_name?: true
    description?: true
    fuel_efficiency_rating?: true
    capacity_passengers?: true
    capacity_cargo_cubic_feet?: true
    _all?: true
  }

  export type Vehicle_typesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which vehicle_types to aggregate.
     */
    where?: vehicle_typesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of vehicle_types to fetch.
     */
    orderBy?: vehicle_typesOrderByWithRelationInput | vehicle_typesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: vehicle_typesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` vehicle_types from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` vehicle_types.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned vehicle_types
    **/
    _count?: true | Vehicle_typesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Vehicle_typesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Vehicle_typesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Vehicle_typesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Vehicle_typesMaxAggregateInputType
  }

  export type GetVehicle_typesAggregateType<T extends Vehicle_typesAggregateArgs> = {
        [P in keyof T & keyof AggregateVehicle_types]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVehicle_types[P]>
      : GetScalarType<T[P], AggregateVehicle_types[P]>
  }




  export type vehicle_typesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: vehicle_typesWhereInput
    orderBy?: vehicle_typesOrderByWithAggregationInput | vehicle_typesOrderByWithAggregationInput[]
    by: Vehicle_typesScalarFieldEnum[] | Vehicle_typesScalarFieldEnum
    having?: vehicle_typesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Vehicle_typesCountAggregateInputType | true
    _avg?: Vehicle_typesAvgAggregateInputType
    _sum?: Vehicle_typesSumAggregateInputType
    _min?: Vehicle_typesMinAggregateInputType
    _max?: Vehicle_typesMaxAggregateInputType
  }

  export type Vehicle_typesGroupByOutputType = {
    type_id: number
    type_name: string
    description: string | null
    fuel_efficiency_rating: Decimal | null
    capacity_passengers: number | null
    capacity_cargo_cubic_feet: Decimal | null
    _count: Vehicle_typesCountAggregateOutputType | null
    _avg: Vehicle_typesAvgAggregateOutputType | null
    _sum: Vehicle_typesSumAggregateOutputType | null
    _min: Vehicle_typesMinAggregateOutputType | null
    _max: Vehicle_typesMaxAggregateOutputType | null
  }

  type GetVehicle_typesGroupByPayload<T extends vehicle_typesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Vehicle_typesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Vehicle_typesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Vehicle_typesGroupByOutputType[P]>
            : GetScalarType<T[P], Vehicle_typesGroupByOutputType[P]>
        }
      >
    >


  export type vehicle_typesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    type_id?: boolean
    type_name?: boolean
    description?: boolean
    fuel_efficiency_rating?: boolean
    capacity_passengers?: boolean
    capacity_cargo_cubic_feet?: boolean
    vehicles?: boolean | vehicle_types$vehiclesArgs<ExtArgs>
    _count?: boolean | Vehicle_typesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["vehicle_types"]>

  export type vehicle_typesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    type_id?: boolean
    type_name?: boolean
    description?: boolean
    fuel_efficiency_rating?: boolean
    capacity_passengers?: boolean
    capacity_cargo_cubic_feet?: boolean
  }, ExtArgs["result"]["vehicle_types"]>

  export type vehicle_typesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    type_id?: boolean
    type_name?: boolean
    description?: boolean
    fuel_efficiency_rating?: boolean
    capacity_passengers?: boolean
    capacity_cargo_cubic_feet?: boolean
  }, ExtArgs["result"]["vehicle_types"]>

  export type vehicle_typesSelectScalar = {
    type_id?: boolean
    type_name?: boolean
    description?: boolean
    fuel_efficiency_rating?: boolean
    capacity_passengers?: boolean
    capacity_cargo_cubic_feet?: boolean
  }

  export type vehicle_typesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"type_id" | "type_name" | "description" | "fuel_efficiency_rating" | "capacity_passengers" | "capacity_cargo_cubic_feet", ExtArgs["result"]["vehicle_types"]>
  export type vehicle_typesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    vehicles?: boolean | vehicle_types$vehiclesArgs<ExtArgs>
    _count?: boolean | Vehicle_typesCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type vehicle_typesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type vehicle_typesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $vehicle_typesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "vehicle_types"
    objects: {
      vehicles: Prisma.$vehiclesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      type_id: number
      type_name: string
      description: string | null
      fuel_efficiency_rating: Prisma.Decimal | null
      capacity_passengers: number | null
      capacity_cargo_cubic_feet: Prisma.Decimal | null
    }, ExtArgs["result"]["vehicle_types"]>
    composites: {}
  }

  type vehicle_typesGetPayload<S extends boolean | null | undefined | vehicle_typesDefaultArgs> = $Result.GetResult<Prisma.$vehicle_typesPayload, S>

  type vehicle_typesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<vehicle_typesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Vehicle_typesCountAggregateInputType | true
    }

  export interface vehicle_typesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['vehicle_types'], meta: { name: 'vehicle_types' } }
    /**
     * Find zero or one Vehicle_types that matches the filter.
     * @param {vehicle_typesFindUniqueArgs} args - Arguments to find a Vehicle_types
     * @example
     * // Get one Vehicle_types
     * const vehicle_types = await prisma.vehicle_types.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends vehicle_typesFindUniqueArgs>(args: SelectSubset<T, vehicle_typesFindUniqueArgs<ExtArgs>>): Prisma__vehicle_typesClient<$Result.GetResult<Prisma.$vehicle_typesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Vehicle_types that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {vehicle_typesFindUniqueOrThrowArgs} args - Arguments to find a Vehicle_types
     * @example
     * // Get one Vehicle_types
     * const vehicle_types = await prisma.vehicle_types.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends vehicle_typesFindUniqueOrThrowArgs>(args: SelectSubset<T, vehicle_typesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__vehicle_typesClient<$Result.GetResult<Prisma.$vehicle_typesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Vehicle_types that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {vehicle_typesFindFirstArgs} args - Arguments to find a Vehicle_types
     * @example
     * // Get one Vehicle_types
     * const vehicle_types = await prisma.vehicle_types.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends vehicle_typesFindFirstArgs>(args?: SelectSubset<T, vehicle_typesFindFirstArgs<ExtArgs>>): Prisma__vehicle_typesClient<$Result.GetResult<Prisma.$vehicle_typesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Vehicle_types that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {vehicle_typesFindFirstOrThrowArgs} args - Arguments to find a Vehicle_types
     * @example
     * // Get one Vehicle_types
     * const vehicle_types = await prisma.vehicle_types.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends vehicle_typesFindFirstOrThrowArgs>(args?: SelectSubset<T, vehicle_typesFindFirstOrThrowArgs<ExtArgs>>): Prisma__vehicle_typesClient<$Result.GetResult<Prisma.$vehicle_typesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Vehicle_types that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {vehicle_typesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Vehicle_types
     * const vehicle_types = await prisma.vehicle_types.findMany()
     * 
     * // Get first 10 Vehicle_types
     * const vehicle_types = await prisma.vehicle_types.findMany({ take: 10 })
     * 
     * // Only select the `type_id`
     * const vehicle_typesWithType_idOnly = await prisma.vehicle_types.findMany({ select: { type_id: true } })
     * 
     */
    findMany<T extends vehicle_typesFindManyArgs>(args?: SelectSubset<T, vehicle_typesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$vehicle_typesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Vehicle_types.
     * @param {vehicle_typesCreateArgs} args - Arguments to create a Vehicle_types.
     * @example
     * // Create one Vehicle_types
     * const Vehicle_types = await prisma.vehicle_types.create({
     *   data: {
     *     // ... data to create a Vehicle_types
     *   }
     * })
     * 
     */
    create<T extends vehicle_typesCreateArgs>(args: SelectSubset<T, vehicle_typesCreateArgs<ExtArgs>>): Prisma__vehicle_typesClient<$Result.GetResult<Prisma.$vehicle_typesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Vehicle_types.
     * @param {vehicle_typesCreateManyArgs} args - Arguments to create many Vehicle_types.
     * @example
     * // Create many Vehicle_types
     * const vehicle_types = await prisma.vehicle_types.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends vehicle_typesCreateManyArgs>(args?: SelectSubset<T, vehicle_typesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Vehicle_types and returns the data saved in the database.
     * @param {vehicle_typesCreateManyAndReturnArgs} args - Arguments to create many Vehicle_types.
     * @example
     * // Create many Vehicle_types
     * const vehicle_types = await prisma.vehicle_types.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Vehicle_types and only return the `type_id`
     * const vehicle_typesWithType_idOnly = await prisma.vehicle_types.createManyAndReturn({
     *   select: { type_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends vehicle_typesCreateManyAndReturnArgs>(args?: SelectSubset<T, vehicle_typesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$vehicle_typesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Vehicle_types.
     * @param {vehicle_typesDeleteArgs} args - Arguments to delete one Vehicle_types.
     * @example
     * // Delete one Vehicle_types
     * const Vehicle_types = await prisma.vehicle_types.delete({
     *   where: {
     *     // ... filter to delete one Vehicle_types
     *   }
     * })
     * 
     */
    delete<T extends vehicle_typesDeleteArgs>(args: SelectSubset<T, vehicle_typesDeleteArgs<ExtArgs>>): Prisma__vehicle_typesClient<$Result.GetResult<Prisma.$vehicle_typesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Vehicle_types.
     * @param {vehicle_typesUpdateArgs} args - Arguments to update one Vehicle_types.
     * @example
     * // Update one Vehicle_types
     * const vehicle_types = await prisma.vehicle_types.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends vehicle_typesUpdateArgs>(args: SelectSubset<T, vehicle_typesUpdateArgs<ExtArgs>>): Prisma__vehicle_typesClient<$Result.GetResult<Prisma.$vehicle_typesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Vehicle_types.
     * @param {vehicle_typesDeleteManyArgs} args - Arguments to filter Vehicle_types to delete.
     * @example
     * // Delete a few Vehicle_types
     * const { count } = await prisma.vehicle_types.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends vehicle_typesDeleteManyArgs>(args?: SelectSubset<T, vehicle_typesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Vehicle_types.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {vehicle_typesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Vehicle_types
     * const vehicle_types = await prisma.vehicle_types.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends vehicle_typesUpdateManyArgs>(args: SelectSubset<T, vehicle_typesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Vehicle_types and returns the data updated in the database.
     * @param {vehicle_typesUpdateManyAndReturnArgs} args - Arguments to update many Vehicle_types.
     * @example
     * // Update many Vehicle_types
     * const vehicle_types = await prisma.vehicle_types.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Vehicle_types and only return the `type_id`
     * const vehicle_typesWithType_idOnly = await prisma.vehicle_types.updateManyAndReturn({
     *   select: { type_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends vehicle_typesUpdateManyAndReturnArgs>(args: SelectSubset<T, vehicle_typesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$vehicle_typesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Vehicle_types.
     * @param {vehicle_typesUpsertArgs} args - Arguments to update or create a Vehicle_types.
     * @example
     * // Update or create a Vehicle_types
     * const vehicle_types = await prisma.vehicle_types.upsert({
     *   create: {
     *     // ... data to create a Vehicle_types
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Vehicle_types we want to update
     *   }
     * })
     */
    upsert<T extends vehicle_typesUpsertArgs>(args: SelectSubset<T, vehicle_typesUpsertArgs<ExtArgs>>): Prisma__vehicle_typesClient<$Result.GetResult<Prisma.$vehicle_typesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Vehicle_types.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {vehicle_typesCountArgs} args - Arguments to filter Vehicle_types to count.
     * @example
     * // Count the number of Vehicle_types
     * const count = await prisma.vehicle_types.count({
     *   where: {
     *     // ... the filter for the Vehicle_types we want to count
     *   }
     * })
    **/
    count<T extends vehicle_typesCountArgs>(
      args?: Subset<T, vehicle_typesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Vehicle_typesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Vehicle_types.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Vehicle_typesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Vehicle_typesAggregateArgs>(args: Subset<T, Vehicle_typesAggregateArgs>): Prisma.PrismaPromise<GetVehicle_typesAggregateType<T>>

    /**
     * Group by Vehicle_types.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {vehicle_typesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends vehicle_typesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: vehicle_typesGroupByArgs['orderBy'] }
        : { orderBy?: vehicle_typesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, vehicle_typesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVehicle_typesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the vehicle_types model
   */
  readonly fields: vehicle_typesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for vehicle_types.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__vehicle_typesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    vehicles<T extends vehicle_types$vehiclesArgs<ExtArgs> = {}>(args?: Subset<T, vehicle_types$vehiclesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$vehiclesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the vehicle_types model
   */
  interface vehicle_typesFieldRefs {
    readonly type_id: FieldRef<"vehicle_types", 'Int'>
    readonly type_name: FieldRef<"vehicle_types", 'String'>
    readonly description: FieldRef<"vehicle_types", 'String'>
    readonly fuel_efficiency_rating: FieldRef<"vehicle_types", 'Decimal'>
    readonly capacity_passengers: FieldRef<"vehicle_types", 'Int'>
    readonly capacity_cargo_cubic_feet: FieldRef<"vehicle_types", 'Decimal'>
  }
    

  // Custom InputTypes
  /**
   * vehicle_types findUnique
   */
  export type vehicle_typesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vehicle_types
     */
    select?: vehicle_typesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the vehicle_types
     */
    omit?: vehicle_typesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: vehicle_typesInclude<ExtArgs> | null
    /**
     * Filter, which vehicle_types to fetch.
     */
    where: vehicle_typesWhereUniqueInput
  }

  /**
   * vehicle_types findUniqueOrThrow
   */
  export type vehicle_typesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vehicle_types
     */
    select?: vehicle_typesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the vehicle_types
     */
    omit?: vehicle_typesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: vehicle_typesInclude<ExtArgs> | null
    /**
     * Filter, which vehicle_types to fetch.
     */
    where: vehicle_typesWhereUniqueInput
  }

  /**
   * vehicle_types findFirst
   */
  export type vehicle_typesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vehicle_types
     */
    select?: vehicle_typesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the vehicle_types
     */
    omit?: vehicle_typesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: vehicle_typesInclude<ExtArgs> | null
    /**
     * Filter, which vehicle_types to fetch.
     */
    where?: vehicle_typesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of vehicle_types to fetch.
     */
    orderBy?: vehicle_typesOrderByWithRelationInput | vehicle_typesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for vehicle_types.
     */
    cursor?: vehicle_typesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` vehicle_types from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` vehicle_types.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of vehicle_types.
     */
    distinct?: Vehicle_typesScalarFieldEnum | Vehicle_typesScalarFieldEnum[]
  }

  /**
   * vehicle_types findFirstOrThrow
   */
  export type vehicle_typesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vehicle_types
     */
    select?: vehicle_typesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the vehicle_types
     */
    omit?: vehicle_typesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: vehicle_typesInclude<ExtArgs> | null
    /**
     * Filter, which vehicle_types to fetch.
     */
    where?: vehicle_typesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of vehicle_types to fetch.
     */
    orderBy?: vehicle_typesOrderByWithRelationInput | vehicle_typesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for vehicle_types.
     */
    cursor?: vehicle_typesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` vehicle_types from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` vehicle_types.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of vehicle_types.
     */
    distinct?: Vehicle_typesScalarFieldEnum | Vehicle_typesScalarFieldEnum[]
  }

  /**
   * vehicle_types findMany
   */
  export type vehicle_typesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vehicle_types
     */
    select?: vehicle_typesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the vehicle_types
     */
    omit?: vehicle_typesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: vehicle_typesInclude<ExtArgs> | null
    /**
     * Filter, which vehicle_types to fetch.
     */
    where?: vehicle_typesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of vehicle_types to fetch.
     */
    orderBy?: vehicle_typesOrderByWithRelationInput | vehicle_typesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing vehicle_types.
     */
    cursor?: vehicle_typesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` vehicle_types from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` vehicle_types.
     */
    skip?: number
    distinct?: Vehicle_typesScalarFieldEnum | Vehicle_typesScalarFieldEnum[]
  }

  /**
   * vehicle_types create
   */
  export type vehicle_typesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vehicle_types
     */
    select?: vehicle_typesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the vehicle_types
     */
    omit?: vehicle_typesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: vehicle_typesInclude<ExtArgs> | null
    /**
     * The data needed to create a vehicle_types.
     */
    data: XOR<vehicle_typesCreateInput, vehicle_typesUncheckedCreateInput>
  }

  /**
   * vehicle_types createMany
   */
  export type vehicle_typesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many vehicle_types.
     */
    data: vehicle_typesCreateManyInput | vehicle_typesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * vehicle_types createManyAndReturn
   */
  export type vehicle_typesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vehicle_types
     */
    select?: vehicle_typesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the vehicle_types
     */
    omit?: vehicle_typesOmit<ExtArgs> | null
    /**
     * The data used to create many vehicle_types.
     */
    data: vehicle_typesCreateManyInput | vehicle_typesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * vehicle_types update
   */
  export type vehicle_typesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vehicle_types
     */
    select?: vehicle_typesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the vehicle_types
     */
    omit?: vehicle_typesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: vehicle_typesInclude<ExtArgs> | null
    /**
     * The data needed to update a vehicle_types.
     */
    data: XOR<vehicle_typesUpdateInput, vehicle_typesUncheckedUpdateInput>
    /**
     * Choose, which vehicle_types to update.
     */
    where: vehicle_typesWhereUniqueInput
  }

  /**
   * vehicle_types updateMany
   */
  export type vehicle_typesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update vehicle_types.
     */
    data: XOR<vehicle_typesUpdateManyMutationInput, vehicle_typesUncheckedUpdateManyInput>
    /**
     * Filter which vehicle_types to update
     */
    where?: vehicle_typesWhereInput
    /**
     * Limit how many vehicle_types to update.
     */
    limit?: number
  }

  /**
   * vehicle_types updateManyAndReturn
   */
  export type vehicle_typesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vehicle_types
     */
    select?: vehicle_typesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the vehicle_types
     */
    omit?: vehicle_typesOmit<ExtArgs> | null
    /**
     * The data used to update vehicle_types.
     */
    data: XOR<vehicle_typesUpdateManyMutationInput, vehicle_typesUncheckedUpdateManyInput>
    /**
     * Filter which vehicle_types to update
     */
    where?: vehicle_typesWhereInput
    /**
     * Limit how many vehicle_types to update.
     */
    limit?: number
  }

  /**
   * vehicle_types upsert
   */
  export type vehicle_typesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vehicle_types
     */
    select?: vehicle_typesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the vehicle_types
     */
    omit?: vehicle_typesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: vehicle_typesInclude<ExtArgs> | null
    /**
     * The filter to search for the vehicle_types to update in case it exists.
     */
    where: vehicle_typesWhereUniqueInput
    /**
     * In case the vehicle_types found by the `where` argument doesn't exist, create a new vehicle_types with this data.
     */
    create: XOR<vehicle_typesCreateInput, vehicle_typesUncheckedCreateInput>
    /**
     * In case the vehicle_types was found with the provided `where` argument, update it with this data.
     */
    update: XOR<vehicle_typesUpdateInput, vehicle_typesUncheckedUpdateInput>
  }

  /**
   * vehicle_types delete
   */
  export type vehicle_typesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vehicle_types
     */
    select?: vehicle_typesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the vehicle_types
     */
    omit?: vehicle_typesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: vehicle_typesInclude<ExtArgs> | null
    /**
     * Filter which vehicle_types to delete.
     */
    where: vehicle_typesWhereUniqueInput
  }

  /**
   * vehicle_types deleteMany
   */
  export type vehicle_typesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which vehicle_types to delete
     */
    where?: vehicle_typesWhereInput
    /**
     * Limit how many vehicle_types to delete.
     */
    limit?: number
  }

  /**
   * vehicle_types.vehicles
   */
  export type vehicle_types$vehiclesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vehicles
     */
    select?: vehiclesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the vehicles
     */
    omit?: vehiclesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: vehiclesInclude<ExtArgs> | null
    where?: vehiclesWhereInput
    orderBy?: vehiclesOrderByWithRelationInput | vehiclesOrderByWithRelationInput[]
    cursor?: vehiclesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: VehiclesScalarFieldEnum | VehiclesScalarFieldEnum[]
  }

  /**
   * vehicle_types without action
   */
  export type vehicle_typesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vehicle_types
     */
    select?: vehicle_typesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the vehicle_types
     */
    omit?: vehicle_typesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: vehicle_typesInclude<ExtArgs> | null
  }


  /**
   * Model vehicles
   */

  export type AggregateVehicles = {
    _count: VehiclesCountAggregateOutputType | null
    _avg: VehiclesAvgAggregateOutputType | null
    _sum: VehiclesSumAggregateOutputType | null
    _min: VehiclesMinAggregateOutputType | null
    _max: VehiclesMaxAggregateOutputType | null
  }

  export type VehiclesAvgAggregateOutputType = {
    vehicle_id: number | null
    company_id: number | null
    vehicle_type_id: number | null
    year: number | null
    purchase_price: Decimal | null
    current_value: Decimal | null
    odometer_reading: Decimal | null
    fuel_capacity: Decimal | null
    assigned_driver_id: number | null
    department_id: number | null
  }

  export type VehiclesSumAggregateOutputType = {
    vehicle_id: number | null
    company_id: number | null
    vehicle_type_id: number | null
    year: number | null
    purchase_price: Decimal | null
    current_value: Decimal | null
    odometer_reading: Decimal | null
    fuel_capacity: Decimal | null
    assigned_driver_id: number | null
    department_id: number | null
  }

  export type VehiclesMinAggregateOutputType = {
    vehicle_id: number | null
    company_id: number | null
    vehicle_type_id: number | null
    vin: string | null
    license_plate: string | null
    make: string | null
    model: string | null
    year: number | null
    color: string | null
    fuel_type: string | null
    engine_size: string | null
    transmission: string | null
    purchase_date: Date | null
    purchase_price: Decimal | null
    current_value: Decimal | null
    odometer_reading: Decimal | null
    fuel_capacity: Decimal | null
    insurance_policy_number: string | null
    insurance_expiry: Date | null
    registration_expiry: Date | null
    status: string | null
    gps_device_id: string | null
    assigned_driver_id: number | null
    department_id: number | null
    notes: string | null
    created_at: Date | null
  }

  export type VehiclesMaxAggregateOutputType = {
    vehicle_id: number | null
    company_id: number | null
    vehicle_type_id: number | null
    vin: string | null
    license_plate: string | null
    make: string | null
    model: string | null
    year: number | null
    color: string | null
    fuel_type: string | null
    engine_size: string | null
    transmission: string | null
    purchase_date: Date | null
    purchase_price: Decimal | null
    current_value: Decimal | null
    odometer_reading: Decimal | null
    fuel_capacity: Decimal | null
    insurance_policy_number: string | null
    insurance_expiry: Date | null
    registration_expiry: Date | null
    status: string | null
    gps_device_id: string | null
    assigned_driver_id: number | null
    department_id: number | null
    notes: string | null
    created_at: Date | null
  }

  export type VehiclesCountAggregateOutputType = {
    vehicle_id: number
    company_id: number
    vehicle_type_id: number
    vin: number
    license_plate: number
    make: number
    model: number
    year: number
    color: number
    fuel_type: number
    engine_size: number
    transmission: number
    purchase_date: number
    purchase_price: number
    current_value: number
    odometer_reading: number
    fuel_capacity: number
    insurance_policy_number: number
    insurance_expiry: number
    registration_expiry: number
    status: number
    gps_device_id: number
    assigned_driver_id: number
    department_id: number
    notes: number
    created_at: number
    _all: number
  }


  export type VehiclesAvgAggregateInputType = {
    vehicle_id?: true
    company_id?: true
    vehicle_type_id?: true
    year?: true
    purchase_price?: true
    current_value?: true
    odometer_reading?: true
    fuel_capacity?: true
    assigned_driver_id?: true
    department_id?: true
  }

  export type VehiclesSumAggregateInputType = {
    vehicle_id?: true
    company_id?: true
    vehicle_type_id?: true
    year?: true
    purchase_price?: true
    current_value?: true
    odometer_reading?: true
    fuel_capacity?: true
    assigned_driver_id?: true
    department_id?: true
  }

  export type VehiclesMinAggregateInputType = {
    vehicle_id?: true
    company_id?: true
    vehicle_type_id?: true
    vin?: true
    license_plate?: true
    make?: true
    model?: true
    year?: true
    color?: true
    fuel_type?: true
    engine_size?: true
    transmission?: true
    purchase_date?: true
    purchase_price?: true
    current_value?: true
    odometer_reading?: true
    fuel_capacity?: true
    insurance_policy_number?: true
    insurance_expiry?: true
    registration_expiry?: true
    status?: true
    gps_device_id?: true
    assigned_driver_id?: true
    department_id?: true
    notes?: true
    created_at?: true
  }

  export type VehiclesMaxAggregateInputType = {
    vehicle_id?: true
    company_id?: true
    vehicle_type_id?: true
    vin?: true
    license_plate?: true
    make?: true
    model?: true
    year?: true
    color?: true
    fuel_type?: true
    engine_size?: true
    transmission?: true
    purchase_date?: true
    purchase_price?: true
    current_value?: true
    odometer_reading?: true
    fuel_capacity?: true
    insurance_policy_number?: true
    insurance_expiry?: true
    registration_expiry?: true
    status?: true
    gps_device_id?: true
    assigned_driver_id?: true
    department_id?: true
    notes?: true
    created_at?: true
  }

  export type VehiclesCountAggregateInputType = {
    vehicle_id?: true
    company_id?: true
    vehicle_type_id?: true
    vin?: true
    license_plate?: true
    make?: true
    model?: true
    year?: true
    color?: true
    fuel_type?: true
    engine_size?: true
    transmission?: true
    purchase_date?: true
    purchase_price?: true
    current_value?: true
    odometer_reading?: true
    fuel_capacity?: true
    insurance_policy_number?: true
    insurance_expiry?: true
    registration_expiry?: true
    status?: true
    gps_device_id?: true
    assigned_driver_id?: true
    department_id?: true
    notes?: true
    created_at?: true
    _all?: true
  }

  export type VehiclesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which vehicles to aggregate.
     */
    where?: vehiclesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of vehicles to fetch.
     */
    orderBy?: vehiclesOrderByWithRelationInput | vehiclesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: vehiclesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` vehicles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` vehicles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned vehicles
    **/
    _count?: true | VehiclesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: VehiclesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: VehiclesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: VehiclesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: VehiclesMaxAggregateInputType
  }

  export type GetVehiclesAggregateType<T extends VehiclesAggregateArgs> = {
        [P in keyof T & keyof AggregateVehicles]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVehicles[P]>
      : GetScalarType<T[P], AggregateVehicles[P]>
  }




  export type vehiclesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: vehiclesWhereInput
    orderBy?: vehiclesOrderByWithAggregationInput | vehiclesOrderByWithAggregationInput[]
    by: VehiclesScalarFieldEnum[] | VehiclesScalarFieldEnum
    having?: vehiclesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: VehiclesCountAggregateInputType | true
    _avg?: VehiclesAvgAggregateInputType
    _sum?: VehiclesSumAggregateInputType
    _min?: VehiclesMinAggregateInputType
    _max?: VehiclesMaxAggregateInputType
  }

  export type VehiclesGroupByOutputType = {
    vehicle_id: number
    company_id: number | null
    vehicle_type_id: number | null
    vin: string
    license_plate: string
    make: string
    model: string
    year: number
    color: string | null
    fuel_type: string
    engine_size: string | null
    transmission: string | null
    purchase_date: Date | null
    purchase_price: Decimal | null
    current_value: Decimal | null
    odometer_reading: Decimal | null
    fuel_capacity: Decimal | null
    insurance_policy_number: string | null
    insurance_expiry: Date | null
    registration_expiry: Date | null
    status: string | null
    gps_device_id: string | null
    assigned_driver_id: number | null
    department_id: number | null
    notes: string | null
    created_at: Date | null
    _count: VehiclesCountAggregateOutputType | null
    _avg: VehiclesAvgAggregateOutputType | null
    _sum: VehiclesSumAggregateOutputType | null
    _min: VehiclesMinAggregateOutputType | null
    _max: VehiclesMaxAggregateOutputType | null
  }

  type GetVehiclesGroupByPayload<T extends vehiclesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<VehiclesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof VehiclesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], VehiclesGroupByOutputType[P]>
            : GetScalarType<T[P], VehiclesGroupByOutputType[P]>
        }
      >
    >


  export type vehiclesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    vehicle_id?: boolean
    company_id?: boolean
    vehicle_type_id?: boolean
    vin?: boolean
    license_plate?: boolean
    make?: boolean
    model?: boolean
    year?: boolean
    color?: boolean
    fuel_type?: boolean
    engine_size?: boolean
    transmission?: boolean
    purchase_date?: boolean
    purchase_price?: boolean
    current_value?: boolean
    odometer_reading?: boolean
    fuel_capacity?: boolean
    insurance_policy_number?: boolean
    insurance_expiry?: boolean
    registration_expiry?: boolean
    status?: boolean
    gps_device_id?: boolean
    assigned_driver_id?: boolean
    department_id?: boolean
    notes?: boolean
    created_at?: boolean
    expenses?: boolean | vehicles$expensesArgs<ExtArgs>
    fuel_transactions?: boolean | vehicles$fuel_transactionsArgs<ExtArgs>
    gps_tracking?: boolean | vehicles$gps_trackingArgs<ExtArgs>
    incidents?: boolean | vehicles$incidentsArgs<ExtArgs>
    maintenance_records?: boolean | vehicles$maintenance_recordsArgs<ExtArgs>
    safety_inspections?: boolean | vehicles$safety_inspectionsArgs<ExtArgs>
    trips?: boolean | vehicles$tripsArgs<ExtArgs>
    vehicle_assignments?: boolean | vehicles$vehicle_assignmentsArgs<ExtArgs>
    drivers?: boolean | vehicles$driversArgs<ExtArgs>
    companies?: boolean | vehicles$companiesArgs<ExtArgs>
    departments?: boolean | vehicles$departmentsArgs<ExtArgs>
    vehicle_types?: boolean | vehicles$vehicle_typesArgs<ExtArgs>
    _count?: boolean | VehiclesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["vehicles"]>

  export type vehiclesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    vehicle_id?: boolean
    company_id?: boolean
    vehicle_type_id?: boolean
    vin?: boolean
    license_plate?: boolean
    make?: boolean
    model?: boolean
    year?: boolean
    color?: boolean
    fuel_type?: boolean
    engine_size?: boolean
    transmission?: boolean
    purchase_date?: boolean
    purchase_price?: boolean
    current_value?: boolean
    odometer_reading?: boolean
    fuel_capacity?: boolean
    insurance_policy_number?: boolean
    insurance_expiry?: boolean
    registration_expiry?: boolean
    status?: boolean
    gps_device_id?: boolean
    assigned_driver_id?: boolean
    department_id?: boolean
    notes?: boolean
    created_at?: boolean
    drivers?: boolean | vehicles$driversArgs<ExtArgs>
    companies?: boolean | vehicles$companiesArgs<ExtArgs>
    departments?: boolean | vehicles$departmentsArgs<ExtArgs>
    vehicle_types?: boolean | vehicles$vehicle_typesArgs<ExtArgs>
  }, ExtArgs["result"]["vehicles"]>

  export type vehiclesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    vehicle_id?: boolean
    company_id?: boolean
    vehicle_type_id?: boolean
    vin?: boolean
    license_plate?: boolean
    make?: boolean
    model?: boolean
    year?: boolean
    color?: boolean
    fuel_type?: boolean
    engine_size?: boolean
    transmission?: boolean
    purchase_date?: boolean
    purchase_price?: boolean
    current_value?: boolean
    odometer_reading?: boolean
    fuel_capacity?: boolean
    insurance_policy_number?: boolean
    insurance_expiry?: boolean
    registration_expiry?: boolean
    status?: boolean
    gps_device_id?: boolean
    assigned_driver_id?: boolean
    department_id?: boolean
    notes?: boolean
    created_at?: boolean
    drivers?: boolean | vehicles$driversArgs<ExtArgs>
    companies?: boolean | vehicles$companiesArgs<ExtArgs>
    departments?: boolean | vehicles$departmentsArgs<ExtArgs>
    vehicle_types?: boolean | vehicles$vehicle_typesArgs<ExtArgs>
  }, ExtArgs["result"]["vehicles"]>

  export type vehiclesSelectScalar = {
    vehicle_id?: boolean
    company_id?: boolean
    vehicle_type_id?: boolean
    vin?: boolean
    license_plate?: boolean
    make?: boolean
    model?: boolean
    year?: boolean
    color?: boolean
    fuel_type?: boolean
    engine_size?: boolean
    transmission?: boolean
    purchase_date?: boolean
    purchase_price?: boolean
    current_value?: boolean
    odometer_reading?: boolean
    fuel_capacity?: boolean
    insurance_policy_number?: boolean
    insurance_expiry?: boolean
    registration_expiry?: boolean
    status?: boolean
    gps_device_id?: boolean
    assigned_driver_id?: boolean
    department_id?: boolean
    notes?: boolean
    created_at?: boolean
  }

  export type vehiclesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"vehicle_id" | "company_id" | "vehicle_type_id" | "vin" | "license_plate" | "make" | "model" | "year" | "color" | "fuel_type" | "engine_size" | "transmission" | "purchase_date" | "purchase_price" | "current_value" | "odometer_reading" | "fuel_capacity" | "insurance_policy_number" | "insurance_expiry" | "registration_expiry" | "status" | "gps_device_id" | "assigned_driver_id" | "department_id" | "notes" | "created_at", ExtArgs["result"]["vehicles"]>
  export type vehiclesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    expenses?: boolean | vehicles$expensesArgs<ExtArgs>
    fuel_transactions?: boolean | vehicles$fuel_transactionsArgs<ExtArgs>
    gps_tracking?: boolean | vehicles$gps_trackingArgs<ExtArgs>
    incidents?: boolean | vehicles$incidentsArgs<ExtArgs>
    maintenance_records?: boolean | vehicles$maintenance_recordsArgs<ExtArgs>
    safety_inspections?: boolean | vehicles$safety_inspectionsArgs<ExtArgs>
    trips?: boolean | vehicles$tripsArgs<ExtArgs>
    vehicle_assignments?: boolean | vehicles$vehicle_assignmentsArgs<ExtArgs>
    drivers?: boolean | vehicles$driversArgs<ExtArgs>
    companies?: boolean | vehicles$companiesArgs<ExtArgs>
    departments?: boolean | vehicles$departmentsArgs<ExtArgs>
    vehicle_types?: boolean | vehicles$vehicle_typesArgs<ExtArgs>
    _count?: boolean | VehiclesCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type vehiclesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    drivers?: boolean | vehicles$driversArgs<ExtArgs>
    companies?: boolean | vehicles$companiesArgs<ExtArgs>
    departments?: boolean | vehicles$departmentsArgs<ExtArgs>
    vehicle_types?: boolean | vehicles$vehicle_typesArgs<ExtArgs>
  }
  export type vehiclesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    drivers?: boolean | vehicles$driversArgs<ExtArgs>
    companies?: boolean | vehicles$companiesArgs<ExtArgs>
    departments?: boolean | vehicles$departmentsArgs<ExtArgs>
    vehicle_types?: boolean | vehicles$vehicle_typesArgs<ExtArgs>
  }

  export type $vehiclesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "vehicles"
    objects: {
      expenses: Prisma.$expensesPayload<ExtArgs>[]
      fuel_transactions: Prisma.$fuel_transactionsPayload<ExtArgs>[]
      gps_tracking: Prisma.$gps_trackingPayload<ExtArgs>[]
      incidents: Prisma.$incidentsPayload<ExtArgs>[]
      maintenance_records: Prisma.$maintenance_recordsPayload<ExtArgs>[]
      safety_inspections: Prisma.$safety_inspectionsPayload<ExtArgs>[]
      trips: Prisma.$tripsPayload<ExtArgs>[]
      vehicle_assignments: Prisma.$vehicle_assignmentsPayload<ExtArgs>[]
      drivers: Prisma.$driversPayload<ExtArgs> | null
      companies: Prisma.$companiesPayload<ExtArgs> | null
      departments: Prisma.$departmentsPayload<ExtArgs> | null
      vehicle_types: Prisma.$vehicle_typesPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      vehicle_id: number
      company_id: number | null
      vehicle_type_id: number | null
      vin: string
      license_plate: string
      make: string
      model: string
      year: number
      color: string | null
      fuel_type: string
      engine_size: string | null
      transmission: string | null
      purchase_date: Date | null
      purchase_price: Prisma.Decimal | null
      current_value: Prisma.Decimal | null
      odometer_reading: Prisma.Decimal | null
      fuel_capacity: Prisma.Decimal | null
      insurance_policy_number: string | null
      insurance_expiry: Date | null
      registration_expiry: Date | null
      status: string | null
      gps_device_id: string | null
      assigned_driver_id: number | null
      department_id: number | null
      notes: string | null
      created_at: Date | null
    }, ExtArgs["result"]["vehicles"]>
    composites: {}
  }

  type vehiclesGetPayload<S extends boolean | null | undefined | vehiclesDefaultArgs> = $Result.GetResult<Prisma.$vehiclesPayload, S>

  type vehiclesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<vehiclesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: VehiclesCountAggregateInputType | true
    }

  export interface vehiclesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['vehicles'], meta: { name: 'vehicles' } }
    /**
     * Find zero or one Vehicles that matches the filter.
     * @param {vehiclesFindUniqueArgs} args - Arguments to find a Vehicles
     * @example
     * // Get one Vehicles
     * const vehicles = await prisma.vehicles.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends vehiclesFindUniqueArgs>(args: SelectSubset<T, vehiclesFindUniqueArgs<ExtArgs>>): Prisma__vehiclesClient<$Result.GetResult<Prisma.$vehiclesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Vehicles that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {vehiclesFindUniqueOrThrowArgs} args - Arguments to find a Vehicles
     * @example
     * // Get one Vehicles
     * const vehicles = await prisma.vehicles.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends vehiclesFindUniqueOrThrowArgs>(args: SelectSubset<T, vehiclesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__vehiclesClient<$Result.GetResult<Prisma.$vehiclesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Vehicles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {vehiclesFindFirstArgs} args - Arguments to find a Vehicles
     * @example
     * // Get one Vehicles
     * const vehicles = await prisma.vehicles.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends vehiclesFindFirstArgs>(args?: SelectSubset<T, vehiclesFindFirstArgs<ExtArgs>>): Prisma__vehiclesClient<$Result.GetResult<Prisma.$vehiclesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Vehicles that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {vehiclesFindFirstOrThrowArgs} args - Arguments to find a Vehicles
     * @example
     * // Get one Vehicles
     * const vehicles = await prisma.vehicles.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends vehiclesFindFirstOrThrowArgs>(args?: SelectSubset<T, vehiclesFindFirstOrThrowArgs<ExtArgs>>): Prisma__vehiclesClient<$Result.GetResult<Prisma.$vehiclesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Vehicles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {vehiclesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Vehicles
     * const vehicles = await prisma.vehicles.findMany()
     * 
     * // Get first 10 Vehicles
     * const vehicles = await prisma.vehicles.findMany({ take: 10 })
     * 
     * // Only select the `vehicle_id`
     * const vehiclesWithVehicle_idOnly = await prisma.vehicles.findMany({ select: { vehicle_id: true } })
     * 
     */
    findMany<T extends vehiclesFindManyArgs>(args?: SelectSubset<T, vehiclesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$vehiclesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Vehicles.
     * @param {vehiclesCreateArgs} args - Arguments to create a Vehicles.
     * @example
     * // Create one Vehicles
     * const Vehicles = await prisma.vehicles.create({
     *   data: {
     *     // ... data to create a Vehicles
     *   }
     * })
     * 
     */
    create<T extends vehiclesCreateArgs>(args: SelectSubset<T, vehiclesCreateArgs<ExtArgs>>): Prisma__vehiclesClient<$Result.GetResult<Prisma.$vehiclesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Vehicles.
     * @param {vehiclesCreateManyArgs} args - Arguments to create many Vehicles.
     * @example
     * // Create many Vehicles
     * const vehicles = await prisma.vehicles.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends vehiclesCreateManyArgs>(args?: SelectSubset<T, vehiclesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Vehicles and returns the data saved in the database.
     * @param {vehiclesCreateManyAndReturnArgs} args - Arguments to create many Vehicles.
     * @example
     * // Create many Vehicles
     * const vehicles = await prisma.vehicles.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Vehicles and only return the `vehicle_id`
     * const vehiclesWithVehicle_idOnly = await prisma.vehicles.createManyAndReturn({
     *   select: { vehicle_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends vehiclesCreateManyAndReturnArgs>(args?: SelectSubset<T, vehiclesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$vehiclesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Vehicles.
     * @param {vehiclesDeleteArgs} args - Arguments to delete one Vehicles.
     * @example
     * // Delete one Vehicles
     * const Vehicles = await prisma.vehicles.delete({
     *   where: {
     *     // ... filter to delete one Vehicles
     *   }
     * })
     * 
     */
    delete<T extends vehiclesDeleteArgs>(args: SelectSubset<T, vehiclesDeleteArgs<ExtArgs>>): Prisma__vehiclesClient<$Result.GetResult<Prisma.$vehiclesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Vehicles.
     * @param {vehiclesUpdateArgs} args - Arguments to update one Vehicles.
     * @example
     * // Update one Vehicles
     * const vehicles = await prisma.vehicles.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends vehiclesUpdateArgs>(args: SelectSubset<T, vehiclesUpdateArgs<ExtArgs>>): Prisma__vehiclesClient<$Result.GetResult<Prisma.$vehiclesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Vehicles.
     * @param {vehiclesDeleteManyArgs} args - Arguments to filter Vehicles to delete.
     * @example
     * // Delete a few Vehicles
     * const { count } = await prisma.vehicles.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends vehiclesDeleteManyArgs>(args?: SelectSubset<T, vehiclesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Vehicles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {vehiclesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Vehicles
     * const vehicles = await prisma.vehicles.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends vehiclesUpdateManyArgs>(args: SelectSubset<T, vehiclesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Vehicles and returns the data updated in the database.
     * @param {vehiclesUpdateManyAndReturnArgs} args - Arguments to update many Vehicles.
     * @example
     * // Update many Vehicles
     * const vehicles = await prisma.vehicles.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Vehicles and only return the `vehicle_id`
     * const vehiclesWithVehicle_idOnly = await prisma.vehicles.updateManyAndReturn({
     *   select: { vehicle_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends vehiclesUpdateManyAndReturnArgs>(args: SelectSubset<T, vehiclesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$vehiclesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Vehicles.
     * @param {vehiclesUpsertArgs} args - Arguments to update or create a Vehicles.
     * @example
     * // Update or create a Vehicles
     * const vehicles = await prisma.vehicles.upsert({
     *   create: {
     *     // ... data to create a Vehicles
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Vehicles we want to update
     *   }
     * })
     */
    upsert<T extends vehiclesUpsertArgs>(args: SelectSubset<T, vehiclesUpsertArgs<ExtArgs>>): Prisma__vehiclesClient<$Result.GetResult<Prisma.$vehiclesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Vehicles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {vehiclesCountArgs} args - Arguments to filter Vehicles to count.
     * @example
     * // Count the number of Vehicles
     * const count = await prisma.vehicles.count({
     *   where: {
     *     // ... the filter for the Vehicles we want to count
     *   }
     * })
    **/
    count<T extends vehiclesCountArgs>(
      args?: Subset<T, vehiclesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], VehiclesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Vehicles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VehiclesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends VehiclesAggregateArgs>(args: Subset<T, VehiclesAggregateArgs>): Prisma.PrismaPromise<GetVehiclesAggregateType<T>>

    /**
     * Group by Vehicles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {vehiclesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends vehiclesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: vehiclesGroupByArgs['orderBy'] }
        : { orderBy?: vehiclesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, vehiclesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVehiclesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the vehicles model
   */
  readonly fields: vehiclesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for vehicles.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__vehiclesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    expenses<T extends vehicles$expensesArgs<ExtArgs> = {}>(args?: Subset<T, vehicles$expensesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$expensesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    fuel_transactions<T extends vehicles$fuel_transactionsArgs<ExtArgs> = {}>(args?: Subset<T, vehicles$fuel_transactionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$fuel_transactionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    gps_tracking<T extends vehicles$gps_trackingArgs<ExtArgs> = {}>(args?: Subset<T, vehicles$gps_trackingArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$gps_trackingPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    incidents<T extends vehicles$incidentsArgs<ExtArgs> = {}>(args?: Subset<T, vehicles$incidentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$incidentsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    maintenance_records<T extends vehicles$maintenance_recordsArgs<ExtArgs> = {}>(args?: Subset<T, vehicles$maintenance_recordsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$maintenance_recordsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    safety_inspections<T extends vehicles$safety_inspectionsArgs<ExtArgs> = {}>(args?: Subset<T, vehicles$safety_inspectionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$safety_inspectionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    trips<T extends vehicles$tripsArgs<ExtArgs> = {}>(args?: Subset<T, vehicles$tripsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tripsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    vehicle_assignments<T extends vehicles$vehicle_assignmentsArgs<ExtArgs> = {}>(args?: Subset<T, vehicles$vehicle_assignmentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$vehicle_assignmentsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    drivers<T extends vehicles$driversArgs<ExtArgs> = {}>(args?: Subset<T, vehicles$driversArgs<ExtArgs>>): Prisma__driversClient<$Result.GetResult<Prisma.$driversPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    companies<T extends vehicles$companiesArgs<ExtArgs> = {}>(args?: Subset<T, vehicles$companiesArgs<ExtArgs>>): Prisma__companiesClient<$Result.GetResult<Prisma.$companiesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    departments<T extends vehicles$departmentsArgs<ExtArgs> = {}>(args?: Subset<T, vehicles$departmentsArgs<ExtArgs>>): Prisma__departmentsClient<$Result.GetResult<Prisma.$departmentsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    vehicle_types<T extends vehicles$vehicle_typesArgs<ExtArgs> = {}>(args?: Subset<T, vehicles$vehicle_typesArgs<ExtArgs>>): Prisma__vehicle_typesClient<$Result.GetResult<Prisma.$vehicle_typesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the vehicles model
   */
  interface vehiclesFieldRefs {
    readonly vehicle_id: FieldRef<"vehicles", 'Int'>
    readonly company_id: FieldRef<"vehicles", 'Int'>
    readonly vehicle_type_id: FieldRef<"vehicles", 'Int'>
    readonly vin: FieldRef<"vehicles", 'String'>
    readonly license_plate: FieldRef<"vehicles", 'String'>
    readonly make: FieldRef<"vehicles", 'String'>
    readonly model: FieldRef<"vehicles", 'String'>
    readonly year: FieldRef<"vehicles", 'Int'>
    readonly color: FieldRef<"vehicles", 'String'>
    readonly fuel_type: FieldRef<"vehicles", 'String'>
    readonly engine_size: FieldRef<"vehicles", 'String'>
    readonly transmission: FieldRef<"vehicles", 'String'>
    readonly purchase_date: FieldRef<"vehicles", 'DateTime'>
    readonly purchase_price: FieldRef<"vehicles", 'Decimal'>
    readonly current_value: FieldRef<"vehicles", 'Decimal'>
    readonly odometer_reading: FieldRef<"vehicles", 'Decimal'>
    readonly fuel_capacity: FieldRef<"vehicles", 'Decimal'>
    readonly insurance_policy_number: FieldRef<"vehicles", 'String'>
    readonly insurance_expiry: FieldRef<"vehicles", 'DateTime'>
    readonly registration_expiry: FieldRef<"vehicles", 'DateTime'>
    readonly status: FieldRef<"vehicles", 'String'>
    readonly gps_device_id: FieldRef<"vehicles", 'String'>
    readonly assigned_driver_id: FieldRef<"vehicles", 'Int'>
    readonly department_id: FieldRef<"vehicles", 'Int'>
    readonly notes: FieldRef<"vehicles", 'String'>
    readonly created_at: FieldRef<"vehicles", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * vehicles findUnique
   */
  export type vehiclesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vehicles
     */
    select?: vehiclesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the vehicles
     */
    omit?: vehiclesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: vehiclesInclude<ExtArgs> | null
    /**
     * Filter, which vehicles to fetch.
     */
    where: vehiclesWhereUniqueInput
  }

  /**
   * vehicles findUniqueOrThrow
   */
  export type vehiclesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vehicles
     */
    select?: vehiclesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the vehicles
     */
    omit?: vehiclesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: vehiclesInclude<ExtArgs> | null
    /**
     * Filter, which vehicles to fetch.
     */
    where: vehiclesWhereUniqueInput
  }

  /**
   * vehicles findFirst
   */
  export type vehiclesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vehicles
     */
    select?: vehiclesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the vehicles
     */
    omit?: vehiclesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: vehiclesInclude<ExtArgs> | null
    /**
     * Filter, which vehicles to fetch.
     */
    where?: vehiclesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of vehicles to fetch.
     */
    orderBy?: vehiclesOrderByWithRelationInput | vehiclesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for vehicles.
     */
    cursor?: vehiclesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` vehicles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` vehicles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of vehicles.
     */
    distinct?: VehiclesScalarFieldEnum | VehiclesScalarFieldEnum[]
  }

  /**
   * vehicles findFirstOrThrow
   */
  export type vehiclesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vehicles
     */
    select?: vehiclesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the vehicles
     */
    omit?: vehiclesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: vehiclesInclude<ExtArgs> | null
    /**
     * Filter, which vehicles to fetch.
     */
    where?: vehiclesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of vehicles to fetch.
     */
    orderBy?: vehiclesOrderByWithRelationInput | vehiclesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for vehicles.
     */
    cursor?: vehiclesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` vehicles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` vehicles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of vehicles.
     */
    distinct?: VehiclesScalarFieldEnum | VehiclesScalarFieldEnum[]
  }

  /**
   * vehicles findMany
   */
  export type vehiclesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vehicles
     */
    select?: vehiclesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the vehicles
     */
    omit?: vehiclesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: vehiclesInclude<ExtArgs> | null
    /**
     * Filter, which vehicles to fetch.
     */
    where?: vehiclesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of vehicles to fetch.
     */
    orderBy?: vehiclesOrderByWithRelationInput | vehiclesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing vehicles.
     */
    cursor?: vehiclesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` vehicles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` vehicles.
     */
    skip?: number
    distinct?: VehiclesScalarFieldEnum | VehiclesScalarFieldEnum[]
  }

  /**
   * vehicles create
   */
  export type vehiclesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vehicles
     */
    select?: vehiclesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the vehicles
     */
    omit?: vehiclesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: vehiclesInclude<ExtArgs> | null
    /**
     * The data needed to create a vehicles.
     */
    data: XOR<vehiclesCreateInput, vehiclesUncheckedCreateInput>
  }

  /**
   * vehicles createMany
   */
  export type vehiclesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many vehicles.
     */
    data: vehiclesCreateManyInput | vehiclesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * vehicles createManyAndReturn
   */
  export type vehiclesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vehicles
     */
    select?: vehiclesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the vehicles
     */
    omit?: vehiclesOmit<ExtArgs> | null
    /**
     * The data used to create many vehicles.
     */
    data: vehiclesCreateManyInput | vehiclesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: vehiclesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * vehicles update
   */
  export type vehiclesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vehicles
     */
    select?: vehiclesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the vehicles
     */
    omit?: vehiclesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: vehiclesInclude<ExtArgs> | null
    /**
     * The data needed to update a vehicles.
     */
    data: XOR<vehiclesUpdateInput, vehiclesUncheckedUpdateInput>
    /**
     * Choose, which vehicles to update.
     */
    where: vehiclesWhereUniqueInput
  }

  /**
   * vehicles updateMany
   */
  export type vehiclesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update vehicles.
     */
    data: XOR<vehiclesUpdateManyMutationInput, vehiclesUncheckedUpdateManyInput>
    /**
     * Filter which vehicles to update
     */
    where?: vehiclesWhereInput
    /**
     * Limit how many vehicles to update.
     */
    limit?: number
  }

  /**
   * vehicles updateManyAndReturn
   */
  export type vehiclesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vehicles
     */
    select?: vehiclesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the vehicles
     */
    omit?: vehiclesOmit<ExtArgs> | null
    /**
     * The data used to update vehicles.
     */
    data: XOR<vehiclesUpdateManyMutationInput, vehiclesUncheckedUpdateManyInput>
    /**
     * Filter which vehicles to update
     */
    where?: vehiclesWhereInput
    /**
     * Limit how many vehicles to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: vehiclesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * vehicles upsert
   */
  export type vehiclesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vehicles
     */
    select?: vehiclesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the vehicles
     */
    omit?: vehiclesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: vehiclesInclude<ExtArgs> | null
    /**
     * The filter to search for the vehicles to update in case it exists.
     */
    where: vehiclesWhereUniqueInput
    /**
     * In case the vehicles found by the `where` argument doesn't exist, create a new vehicles with this data.
     */
    create: XOR<vehiclesCreateInput, vehiclesUncheckedCreateInput>
    /**
     * In case the vehicles was found with the provided `where` argument, update it with this data.
     */
    update: XOR<vehiclesUpdateInput, vehiclesUncheckedUpdateInput>
  }

  /**
   * vehicles delete
   */
  export type vehiclesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vehicles
     */
    select?: vehiclesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the vehicles
     */
    omit?: vehiclesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: vehiclesInclude<ExtArgs> | null
    /**
     * Filter which vehicles to delete.
     */
    where: vehiclesWhereUniqueInput
  }

  /**
   * vehicles deleteMany
   */
  export type vehiclesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which vehicles to delete
     */
    where?: vehiclesWhereInput
    /**
     * Limit how many vehicles to delete.
     */
    limit?: number
  }

  /**
   * vehicles.expenses
   */
  export type vehicles$expensesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the expenses
     */
    select?: expensesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the expenses
     */
    omit?: expensesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: expensesInclude<ExtArgs> | null
    where?: expensesWhereInput
    orderBy?: expensesOrderByWithRelationInput | expensesOrderByWithRelationInput[]
    cursor?: expensesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ExpensesScalarFieldEnum | ExpensesScalarFieldEnum[]
  }

  /**
   * vehicles.fuel_transactions
   */
  export type vehicles$fuel_transactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fuel_transactions
     */
    select?: fuel_transactionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the fuel_transactions
     */
    omit?: fuel_transactionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fuel_transactionsInclude<ExtArgs> | null
    where?: fuel_transactionsWhereInput
    orderBy?: fuel_transactionsOrderByWithRelationInput | fuel_transactionsOrderByWithRelationInput[]
    cursor?: fuel_transactionsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Fuel_transactionsScalarFieldEnum | Fuel_transactionsScalarFieldEnum[]
  }

  /**
   * vehicles.gps_tracking
   */
  export type vehicles$gps_trackingArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the gps_tracking
     */
    select?: gps_trackingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the gps_tracking
     */
    omit?: gps_trackingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: gps_trackingInclude<ExtArgs> | null
    where?: gps_trackingWhereInput
    orderBy?: gps_trackingOrderByWithRelationInput | gps_trackingOrderByWithRelationInput[]
    cursor?: gps_trackingWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Gps_trackingScalarFieldEnum | Gps_trackingScalarFieldEnum[]
  }

  /**
   * vehicles.incidents
   */
  export type vehicles$incidentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the incidents
     */
    select?: incidentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the incidents
     */
    omit?: incidentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: incidentsInclude<ExtArgs> | null
    where?: incidentsWhereInput
    orderBy?: incidentsOrderByWithRelationInput | incidentsOrderByWithRelationInput[]
    cursor?: incidentsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: IncidentsScalarFieldEnum | IncidentsScalarFieldEnum[]
  }

  /**
   * vehicles.maintenance_records
   */
  export type vehicles$maintenance_recordsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the maintenance_records
     */
    select?: maintenance_recordsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the maintenance_records
     */
    omit?: maintenance_recordsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: maintenance_recordsInclude<ExtArgs> | null
    where?: maintenance_recordsWhereInput
    orderBy?: maintenance_recordsOrderByWithRelationInput | maintenance_recordsOrderByWithRelationInput[]
    cursor?: maintenance_recordsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Maintenance_recordsScalarFieldEnum | Maintenance_recordsScalarFieldEnum[]
  }

  /**
   * vehicles.safety_inspections
   */
  export type vehicles$safety_inspectionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the safety_inspections
     */
    select?: safety_inspectionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the safety_inspections
     */
    omit?: safety_inspectionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: safety_inspectionsInclude<ExtArgs> | null
    where?: safety_inspectionsWhereInput
    orderBy?: safety_inspectionsOrderByWithRelationInput | safety_inspectionsOrderByWithRelationInput[]
    cursor?: safety_inspectionsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Safety_inspectionsScalarFieldEnum | Safety_inspectionsScalarFieldEnum[]
  }

  /**
   * vehicles.trips
   */
  export type vehicles$tripsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the trips
     */
    select?: tripsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the trips
     */
    omit?: tripsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tripsInclude<ExtArgs> | null
    where?: tripsWhereInput
    orderBy?: tripsOrderByWithRelationInput | tripsOrderByWithRelationInput[]
    cursor?: tripsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TripsScalarFieldEnum | TripsScalarFieldEnum[]
  }

  /**
   * vehicles.vehicle_assignments
   */
  export type vehicles$vehicle_assignmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vehicle_assignments
     */
    select?: vehicle_assignmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the vehicle_assignments
     */
    omit?: vehicle_assignmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: vehicle_assignmentsInclude<ExtArgs> | null
    where?: vehicle_assignmentsWhereInput
    orderBy?: vehicle_assignmentsOrderByWithRelationInput | vehicle_assignmentsOrderByWithRelationInput[]
    cursor?: vehicle_assignmentsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Vehicle_assignmentsScalarFieldEnum | Vehicle_assignmentsScalarFieldEnum[]
  }

  /**
   * vehicles.drivers
   */
  export type vehicles$driversArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the drivers
     */
    select?: driversSelect<ExtArgs> | null
    /**
     * Omit specific fields from the drivers
     */
    omit?: driversOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: driversInclude<ExtArgs> | null
    where?: driversWhereInput
  }

  /**
   * vehicles.companies
   */
  export type vehicles$companiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the companies
     */
    select?: companiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the companies
     */
    omit?: companiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: companiesInclude<ExtArgs> | null
    where?: companiesWhereInput
  }

  /**
   * vehicles.departments
   */
  export type vehicles$departmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the departments
     */
    select?: departmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the departments
     */
    omit?: departmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: departmentsInclude<ExtArgs> | null
    where?: departmentsWhereInput
  }

  /**
   * vehicles.vehicle_types
   */
  export type vehicles$vehicle_typesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vehicle_types
     */
    select?: vehicle_typesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the vehicle_types
     */
    omit?: vehicle_typesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: vehicle_typesInclude<ExtArgs> | null
    where?: vehicle_typesWhereInput
  }

  /**
   * vehicles without action
   */
  export type vehiclesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vehicles
     */
    select?: vehiclesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the vehicles
     */
    omit?: vehiclesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: vehiclesInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const CompaniesScalarFieldEnum: {
    company_id: 'company_id',
    company_name: 'company_name',
    address: 'address',
    phone: 'phone',
    email: 'email',
    contact_person: 'contact_person',
    subscription_plan: 'subscription_plan',
    created_at: 'created_at',
    is_active: 'is_active'
  };

  export type CompaniesScalarFieldEnum = (typeof CompaniesScalarFieldEnum)[keyof typeof CompaniesScalarFieldEnum]


  export const Cost_categoriesScalarFieldEnum: {
    category_id: 'category_id',
    category_name: 'category_name',
    description: 'description',
    is_active: 'is_active'
  };

  export type Cost_categoriesScalarFieldEnum = (typeof Cost_categoriesScalarFieldEnum)[keyof typeof Cost_categoriesScalarFieldEnum]


  export const DepartmentsScalarFieldEnum: {
    department_id: 'department_id',
    company_id: 'company_id',
    department_name: 'department_name',
    manager_name: 'manager_name',
    budget: 'budget'
  };

  export type DepartmentsScalarFieldEnum = (typeof DepartmentsScalarFieldEnum)[keyof typeof DepartmentsScalarFieldEnum]


  export const Driver_certificationsScalarFieldEnum: {
    certification_id: 'certification_id',
    driver_id: 'driver_id',
    certification_name: 'certification_name',
    issuing_authority: 'issuing_authority',
    issue_date: 'issue_date',
    expiry_date: 'expiry_date',
    certification_number: 'certification_number',
    is_active: 'is_active'
  };

  export type Driver_certificationsScalarFieldEnum = (typeof Driver_certificationsScalarFieldEnum)[keyof typeof Driver_certificationsScalarFieldEnum]


  export const DriversScalarFieldEnum: {
    driver_id: 'driver_id',
    company_id: 'company_id',
    employee_id: 'employee_id',
    first_name: 'first_name',
    last_name: 'last_name',
    license_number: 'license_number',
    license_class: 'license_class',
    license_expiry_date: 'license_expiry_date',
    date_of_birth: 'date_of_birth',
    hire_date: 'hire_date',
    phone: 'phone',
    email: 'email',
    address: 'address',
    emergency_contact_name: 'emergency_contact_name',
    emergency_contact_phone: 'emergency_contact_phone',
    salary: 'salary',
    status: 'status',
    safety_score: 'safety_score',
    total_miles_driven: 'total_miles_driven',
    years_experience: 'years_experience',
    created_at: 'created_at'
  };

  export type DriversScalarFieldEnum = (typeof DriversScalarFieldEnum)[keyof typeof DriversScalarFieldEnum]


  export const ExpensesScalarFieldEnum: {
    expense_id: 'expense_id',
    vehicle_id: 'vehicle_id',
    driver_id: 'driver_id',
    category_id: 'category_id',
    expense_date: 'expense_date',
    amount: 'amount',
    description: 'description',
    vendor: 'vendor',
    invoice_number: 'invoice_number',
    receipt_available: 'receipt_available',
    approved_by: 'approved_by',
    approval_date: 'approval_date',
    reimbursable: 'reimbursable',
    notes: 'notes',
    created_at: 'created_at'
  };

  export type ExpensesScalarFieldEnum = (typeof ExpensesScalarFieldEnum)[keyof typeof ExpensesScalarFieldEnum]


  export const Fuel_stationsScalarFieldEnum: {
    station_id: 'station_id',
    station_name: 'station_name',
    address: 'address',
    latitude: 'latitude',
    longitude: 'longitude',
    brand: 'brand',
    has_fleet_card: 'has_fleet_card',
    avg_price_per_gallon: 'avg_price_per_gallon'
  };

  export type Fuel_stationsScalarFieldEnum = (typeof Fuel_stationsScalarFieldEnum)[keyof typeof Fuel_stationsScalarFieldEnum]


  export const Fuel_transactionsScalarFieldEnum: {
    transaction_id: 'transaction_id',
    vehicle_id: 'vehicle_id',
    driver_id: 'driver_id',
    fuel_station_id: 'fuel_station_id',
    transaction_date: 'transaction_date',
    odometer_reading: 'odometer_reading',
    gallons_purchased: 'gallons_purchased',
    price_per_gallon: 'price_per_gallon',
    total_amount: 'total_amount',
    fuel_type: 'fuel_type',
    payment_method: 'payment_method',
    card_number_last_four: 'card_number_last_four',
    receipt_number: 'receipt_number',
    mpg_calculated: 'mpg_calculated',
    notes: 'notes'
  };

  export type Fuel_transactionsScalarFieldEnum = (typeof Fuel_transactionsScalarFieldEnum)[keyof typeof Fuel_transactionsScalarFieldEnum]


  export const Gps_trackingScalarFieldEnum: {
    tracking_id: 'tracking_id',
    vehicle_id: 'vehicle_id',
    timestamp: 'timestamp',
    latitude: 'latitude',
    longitude: 'longitude',
    speed: 'speed',
    heading: 'heading',
    altitude: 'altitude',
    gps_quality: 'gps_quality',
    engine_status: 'engine_status',
    fuel_level_percent: 'fuel_level_percent',
    odometer: 'odometer'
  };

  export type Gps_trackingScalarFieldEnum = (typeof Gps_trackingScalarFieldEnum)[keyof typeof Gps_trackingScalarFieldEnum]


  export const IncidentsScalarFieldEnum: {
    incident_id: 'incident_id',
    vehicle_id: 'vehicle_id',
    driver_id: 'driver_id',
    incident_date: 'incident_date',
    incident_type: 'incident_type',
    severity: 'severity',
    location: 'location',
    description: 'description',
    police_report_number: 'police_report_number',
    insurance_claim_number: 'insurance_claim_number',
    estimated_damage_cost: 'estimated_damage_cost',
    actual_repair_cost: 'actual_repair_cost',
    injuries_reported: 'injuries_reported',
    fatalities: 'fatalities',
    at_fault: 'at_fault',
    weather_conditions: 'weather_conditions',
    road_conditions: 'road_conditions',
    photos_available: 'photos_available',
    status: 'status',
    resolution_date: 'resolution_date',
    lessons_learned: 'lessons_learned',
    created_at: 'created_at'
  };

  export type IncidentsScalarFieldEnum = (typeof IncidentsScalarFieldEnum)[keyof typeof IncidentsScalarFieldEnum]


  export const Maintenance_recordsScalarFieldEnum: {
    maintenance_id: 'maintenance_id',
    vehicle_id: 'vehicle_id',
    maintenance_type_id: 'maintenance_type_id',
    service_provider_id: 'service_provider_id',
    scheduled_date: 'scheduled_date',
    completed_date: 'completed_date',
    odometer_at_service: 'odometer_at_service',
    cost: 'cost',
    labor_hours: 'labor_hours',
    description: 'description',
    parts_used: 'parts_used',
    technician_name: 'technician_name',
    status: 'status',
    next_service_due_date: 'next_service_due_date',
    next_service_due_miles: 'next_service_due_miles',
    warranty_expiry_date: 'warranty_expiry_date',
    invoice_number: 'invoice_number',
    notes: 'notes',
    created_at: 'created_at'
  };

  export type Maintenance_recordsScalarFieldEnum = (typeof Maintenance_recordsScalarFieldEnum)[keyof typeof Maintenance_recordsScalarFieldEnum]


  export const Maintenance_typesScalarFieldEnum: {
    maintenance_type_id: 'maintenance_type_id',
    type_name: 'type_name',
    description: 'description',
    recommended_interval_miles: 'recommended_interval_miles',
    recommended_interval_months: 'recommended_interval_months',
    estimated_cost: 'estimated_cost'
  };

  export type Maintenance_typesScalarFieldEnum = (typeof Maintenance_typesScalarFieldEnum)[keyof typeof Maintenance_typesScalarFieldEnum]


  export const ReportsScalarFieldEnum: {
    report_id: 'report_id',
    company_id: 'company_id',
    report_name: 'report_name',
    report_type: 'report_type',
    generated_by: 'generated_by',
    generation_date: 'generation_date',
    date_range_start: 'date_range_start',
    date_range_end: 'date_range_end',
    parameters: 'parameters',
    file_path: 'file_path',
    status: 'status'
  };

  export type ReportsScalarFieldEnum = (typeof ReportsScalarFieldEnum)[keyof typeof ReportsScalarFieldEnum]


  export const Safety_inspectionsScalarFieldEnum: {
    inspection_id: 'inspection_id',
    vehicle_id: 'vehicle_id',
    inspector_name: 'inspector_name',
    inspection_date: 'inspection_date',
    inspection_type: 'inspection_type',
    odometer_reading: 'odometer_reading',
    overall_score: 'overall_score',
    passed: 'passed',
    defects_found: 'defects_found',
    critical_defects: 'critical_defects',
    notes: 'notes',
    next_inspection_due: 'next_inspection_due',
    certificate_number: 'certificate_number'
  };

  export type Safety_inspectionsScalarFieldEnum = (typeof Safety_inspectionsScalarFieldEnum)[keyof typeof Safety_inspectionsScalarFieldEnum]


  export const Service_providersScalarFieldEnum: {
    provider_id: 'provider_id',
    company_id: 'company_id',
    provider_name: 'provider_name',
    service_type: 'service_type',
    contact_person: 'contact_person',
    phone: 'phone',
    email: 'email',
    address: 'address',
    hourly_rate: 'hourly_rate',
    rating: 'rating',
    is_preferred: 'is_preferred'
  };

  export type Service_providersScalarFieldEnum = (typeof Service_providersScalarFieldEnum)[keyof typeof Service_providersScalarFieldEnum]


  export const TripsScalarFieldEnum: {
    trip_id: 'trip_id',
    vehicle_id: 'vehicle_id',
    driver_id: 'driver_id',
    start_time: 'start_time',
    end_time: 'end_time',
    start_location: 'start_location',
    end_location: 'end_location',
    start_odometer: 'start_odometer',
    end_odometer: 'end_odometer',
    distance_traveled: 'distance_traveled',
    purpose: 'purpose',
    trip_type: 'trip_type',
    fuel_consumed: 'fuel_consumed',
    average_speed: 'average_speed',
    max_speed: 'max_speed',
    idle_time_minutes: 'idle_time_minutes',
    harsh_braking_count: 'harsh_braking_count',
    harsh_acceleration_count: 'harsh_acceleration_count',
    speeding_violations: 'speeding_violations',
    route_efficiency_score: 'route_efficiency_score',
    cost: 'cost',
    notes: 'notes',
    created_at: 'created_at'
  };

  export type TripsScalarFieldEnum = (typeof TripsScalarFieldEnum)[keyof typeof TripsScalarFieldEnum]


  export const UsersScalarFieldEnum: {
    user_id: 'user_id',
    company_id: 'company_id',
    username: 'username',
    email: 'email',
    password_hash: 'password_hash',
    first_name: 'first_name',
    last_name: 'last_name',
    role: 'role',
    phone: 'phone',
    is_active: 'is_active',
    last_login: 'last_login',
    created_at: 'created_at'
  };

  export type UsersScalarFieldEnum = (typeof UsersScalarFieldEnum)[keyof typeof UsersScalarFieldEnum]


  export const Vehicle_assignmentsScalarFieldEnum: {
    assignment_id: 'assignment_id',
    vehicle_id: 'vehicle_id',
    driver_id: 'driver_id',
    assigned_date: 'assigned_date',
    end_date: 'end_date',
    assignment_type: 'assignment_type',
    notes: 'notes',
    is_active: 'is_active'
  };

  export type Vehicle_assignmentsScalarFieldEnum = (typeof Vehicle_assignmentsScalarFieldEnum)[keyof typeof Vehicle_assignmentsScalarFieldEnum]


  export const Vehicle_typesScalarFieldEnum: {
    type_id: 'type_id',
    type_name: 'type_name',
    description: 'description',
    fuel_efficiency_rating: 'fuel_efficiency_rating',
    capacity_passengers: 'capacity_passengers',
    capacity_cargo_cubic_feet: 'capacity_cargo_cubic_feet'
  };

  export type Vehicle_typesScalarFieldEnum = (typeof Vehicle_typesScalarFieldEnum)[keyof typeof Vehicle_typesScalarFieldEnum]


  export const VehiclesScalarFieldEnum: {
    vehicle_id: 'vehicle_id',
    company_id: 'company_id',
    vehicle_type_id: 'vehicle_type_id',
    vin: 'vin',
    license_plate: 'license_plate',
    make: 'make',
    model: 'model',
    year: 'year',
    color: 'color',
    fuel_type: 'fuel_type',
    engine_size: 'engine_size',
    transmission: 'transmission',
    purchase_date: 'purchase_date',
    purchase_price: 'purchase_price',
    current_value: 'current_value',
    odometer_reading: 'odometer_reading',
    fuel_capacity: 'fuel_capacity',
    insurance_policy_number: 'insurance_policy_number',
    insurance_expiry: 'insurance_expiry',
    registration_expiry: 'registration_expiry',
    status: 'status',
    gps_device_id: 'gps_device_id',
    assigned_driver_id: 'assigned_driver_id',
    department_id: 'department_id',
    notes: 'notes',
    created_at: 'created_at'
  };

  export type VehiclesScalarFieldEnum = (typeof VehiclesScalarFieldEnum)[keyof typeof VehiclesScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'QueryMode'
   */
  export type EnumQueryModeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'QueryMode'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type companiesWhereInput = {
    AND?: companiesWhereInput | companiesWhereInput[]
    OR?: companiesWhereInput[]
    NOT?: companiesWhereInput | companiesWhereInput[]
    company_id?: IntFilter<"companies"> | number
    company_name?: StringFilter<"companies"> | string
    address?: StringNullableFilter<"companies"> | string | null
    phone?: StringNullableFilter<"companies"> | string | null
    email?: StringNullableFilter<"companies"> | string | null
    contact_person?: StringNullableFilter<"companies"> | string | null
    subscription_plan?: StringNullableFilter<"companies"> | string | null
    created_at?: DateTimeNullableFilter<"companies"> | Date | string | null
    is_active?: BoolNullableFilter<"companies"> | boolean | null
    departments?: DepartmentsListRelationFilter
    drivers?: DriversListRelationFilter
    reports?: ReportsListRelationFilter
    service_providers?: Service_providersListRelationFilter
    users?: UsersListRelationFilter
    vehicles?: VehiclesListRelationFilter
  }

  export type companiesOrderByWithRelationInput = {
    company_id?: SortOrder
    company_name?: SortOrder
    address?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    contact_person?: SortOrderInput | SortOrder
    subscription_plan?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    is_active?: SortOrderInput | SortOrder
    departments?: departmentsOrderByRelationAggregateInput
    drivers?: driversOrderByRelationAggregateInput
    reports?: reportsOrderByRelationAggregateInput
    service_providers?: service_providersOrderByRelationAggregateInput
    users?: usersOrderByRelationAggregateInput
    vehicles?: vehiclesOrderByRelationAggregateInput
  }

  export type companiesWhereUniqueInput = Prisma.AtLeast<{
    company_id?: number
    company_name?: string
    AND?: companiesWhereInput | companiesWhereInput[]
    OR?: companiesWhereInput[]
    NOT?: companiesWhereInput | companiesWhereInput[]
    address?: StringNullableFilter<"companies"> | string | null
    phone?: StringNullableFilter<"companies"> | string | null
    email?: StringNullableFilter<"companies"> | string | null
    contact_person?: StringNullableFilter<"companies"> | string | null
    subscription_plan?: StringNullableFilter<"companies"> | string | null
    created_at?: DateTimeNullableFilter<"companies"> | Date | string | null
    is_active?: BoolNullableFilter<"companies"> | boolean | null
    departments?: DepartmentsListRelationFilter
    drivers?: DriversListRelationFilter
    reports?: ReportsListRelationFilter
    service_providers?: Service_providersListRelationFilter
    users?: UsersListRelationFilter
    vehicles?: VehiclesListRelationFilter
  }, "company_id" | "company_name">

  export type companiesOrderByWithAggregationInput = {
    company_id?: SortOrder
    company_name?: SortOrder
    address?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    contact_person?: SortOrderInput | SortOrder
    subscription_plan?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    is_active?: SortOrderInput | SortOrder
    _count?: companiesCountOrderByAggregateInput
    _avg?: companiesAvgOrderByAggregateInput
    _max?: companiesMaxOrderByAggregateInput
    _min?: companiesMinOrderByAggregateInput
    _sum?: companiesSumOrderByAggregateInput
  }

  export type companiesScalarWhereWithAggregatesInput = {
    AND?: companiesScalarWhereWithAggregatesInput | companiesScalarWhereWithAggregatesInput[]
    OR?: companiesScalarWhereWithAggregatesInput[]
    NOT?: companiesScalarWhereWithAggregatesInput | companiesScalarWhereWithAggregatesInput[]
    company_id?: IntWithAggregatesFilter<"companies"> | number
    company_name?: StringWithAggregatesFilter<"companies"> | string
    address?: StringNullableWithAggregatesFilter<"companies"> | string | null
    phone?: StringNullableWithAggregatesFilter<"companies"> | string | null
    email?: StringNullableWithAggregatesFilter<"companies"> | string | null
    contact_person?: StringNullableWithAggregatesFilter<"companies"> | string | null
    subscription_plan?: StringNullableWithAggregatesFilter<"companies"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"companies"> | Date | string | null
    is_active?: BoolNullableWithAggregatesFilter<"companies"> | boolean | null
  }

  export type cost_categoriesWhereInput = {
    AND?: cost_categoriesWhereInput | cost_categoriesWhereInput[]
    OR?: cost_categoriesWhereInput[]
    NOT?: cost_categoriesWhereInput | cost_categoriesWhereInput[]
    category_id?: IntFilter<"cost_categories"> | number
    category_name?: StringFilter<"cost_categories"> | string
    description?: StringNullableFilter<"cost_categories"> | string | null
    is_active?: BoolNullableFilter<"cost_categories"> | boolean | null
    expenses?: ExpensesListRelationFilter
  }

  export type cost_categoriesOrderByWithRelationInput = {
    category_id?: SortOrder
    category_name?: SortOrder
    description?: SortOrderInput | SortOrder
    is_active?: SortOrderInput | SortOrder
    expenses?: expensesOrderByRelationAggregateInput
  }

  export type cost_categoriesWhereUniqueInput = Prisma.AtLeast<{
    category_id?: number
    AND?: cost_categoriesWhereInput | cost_categoriesWhereInput[]
    OR?: cost_categoriesWhereInput[]
    NOT?: cost_categoriesWhereInput | cost_categoriesWhereInput[]
    category_name?: StringFilter<"cost_categories"> | string
    description?: StringNullableFilter<"cost_categories"> | string | null
    is_active?: BoolNullableFilter<"cost_categories"> | boolean | null
    expenses?: ExpensesListRelationFilter
  }, "category_id">

  export type cost_categoriesOrderByWithAggregationInput = {
    category_id?: SortOrder
    category_name?: SortOrder
    description?: SortOrderInput | SortOrder
    is_active?: SortOrderInput | SortOrder
    _count?: cost_categoriesCountOrderByAggregateInput
    _avg?: cost_categoriesAvgOrderByAggregateInput
    _max?: cost_categoriesMaxOrderByAggregateInput
    _min?: cost_categoriesMinOrderByAggregateInput
    _sum?: cost_categoriesSumOrderByAggregateInput
  }

  export type cost_categoriesScalarWhereWithAggregatesInput = {
    AND?: cost_categoriesScalarWhereWithAggregatesInput | cost_categoriesScalarWhereWithAggregatesInput[]
    OR?: cost_categoriesScalarWhereWithAggregatesInput[]
    NOT?: cost_categoriesScalarWhereWithAggregatesInput | cost_categoriesScalarWhereWithAggregatesInput[]
    category_id?: IntWithAggregatesFilter<"cost_categories"> | number
    category_name?: StringWithAggregatesFilter<"cost_categories"> | string
    description?: StringNullableWithAggregatesFilter<"cost_categories"> | string | null
    is_active?: BoolNullableWithAggregatesFilter<"cost_categories"> | boolean | null
  }

  export type departmentsWhereInput = {
    AND?: departmentsWhereInput | departmentsWhereInput[]
    OR?: departmentsWhereInput[]
    NOT?: departmentsWhereInput | departmentsWhereInput[]
    department_id?: IntFilter<"departments"> | number
    company_id?: IntNullableFilter<"departments"> | number | null
    department_name?: StringFilter<"departments"> | string
    manager_name?: StringNullableFilter<"departments"> | string | null
    budget?: DecimalNullableFilter<"departments"> | Decimal | DecimalJsLike | number | string | null
    companies?: XOR<CompaniesNullableScalarRelationFilter, companiesWhereInput> | null
    vehicles?: VehiclesListRelationFilter
  }

  export type departmentsOrderByWithRelationInput = {
    department_id?: SortOrder
    company_id?: SortOrderInput | SortOrder
    department_name?: SortOrder
    manager_name?: SortOrderInput | SortOrder
    budget?: SortOrderInput | SortOrder
    companies?: companiesOrderByWithRelationInput
    vehicles?: vehiclesOrderByRelationAggregateInput
  }

  export type departmentsWhereUniqueInput = Prisma.AtLeast<{
    department_id?: number
    AND?: departmentsWhereInput | departmentsWhereInput[]
    OR?: departmentsWhereInput[]
    NOT?: departmentsWhereInput | departmentsWhereInput[]
    company_id?: IntNullableFilter<"departments"> | number | null
    department_name?: StringFilter<"departments"> | string
    manager_name?: StringNullableFilter<"departments"> | string | null
    budget?: DecimalNullableFilter<"departments"> | Decimal | DecimalJsLike | number | string | null
    companies?: XOR<CompaniesNullableScalarRelationFilter, companiesWhereInput> | null
    vehicles?: VehiclesListRelationFilter
  }, "department_id">

  export type departmentsOrderByWithAggregationInput = {
    department_id?: SortOrder
    company_id?: SortOrderInput | SortOrder
    department_name?: SortOrder
    manager_name?: SortOrderInput | SortOrder
    budget?: SortOrderInput | SortOrder
    _count?: departmentsCountOrderByAggregateInput
    _avg?: departmentsAvgOrderByAggregateInput
    _max?: departmentsMaxOrderByAggregateInput
    _min?: departmentsMinOrderByAggregateInput
    _sum?: departmentsSumOrderByAggregateInput
  }

  export type departmentsScalarWhereWithAggregatesInput = {
    AND?: departmentsScalarWhereWithAggregatesInput | departmentsScalarWhereWithAggregatesInput[]
    OR?: departmentsScalarWhereWithAggregatesInput[]
    NOT?: departmentsScalarWhereWithAggregatesInput | departmentsScalarWhereWithAggregatesInput[]
    department_id?: IntWithAggregatesFilter<"departments"> | number
    company_id?: IntNullableWithAggregatesFilter<"departments"> | number | null
    department_name?: StringWithAggregatesFilter<"departments"> | string
    manager_name?: StringNullableWithAggregatesFilter<"departments"> | string | null
    budget?: DecimalNullableWithAggregatesFilter<"departments"> | Decimal | DecimalJsLike | number | string | null
  }

  export type driver_certificationsWhereInput = {
    AND?: driver_certificationsWhereInput | driver_certificationsWhereInput[]
    OR?: driver_certificationsWhereInput[]
    NOT?: driver_certificationsWhereInput | driver_certificationsWhereInput[]
    certification_id?: IntFilter<"driver_certifications"> | number
    driver_id?: IntNullableFilter<"driver_certifications"> | number | null
    certification_name?: StringNullableFilter<"driver_certifications"> | string | null
    issuing_authority?: StringNullableFilter<"driver_certifications"> | string | null
    issue_date?: DateTimeNullableFilter<"driver_certifications"> | Date | string | null
    expiry_date?: DateTimeNullableFilter<"driver_certifications"> | Date | string | null
    certification_number?: StringNullableFilter<"driver_certifications"> | string | null
    is_active?: BoolNullableFilter<"driver_certifications"> | boolean | null
    drivers?: XOR<DriversNullableScalarRelationFilter, driversWhereInput> | null
  }

  export type driver_certificationsOrderByWithRelationInput = {
    certification_id?: SortOrder
    driver_id?: SortOrderInput | SortOrder
    certification_name?: SortOrderInput | SortOrder
    issuing_authority?: SortOrderInput | SortOrder
    issue_date?: SortOrderInput | SortOrder
    expiry_date?: SortOrderInput | SortOrder
    certification_number?: SortOrderInput | SortOrder
    is_active?: SortOrderInput | SortOrder
    drivers?: driversOrderByWithRelationInput
  }

  export type driver_certificationsWhereUniqueInput = Prisma.AtLeast<{
    certification_id?: number
    AND?: driver_certificationsWhereInput | driver_certificationsWhereInput[]
    OR?: driver_certificationsWhereInput[]
    NOT?: driver_certificationsWhereInput | driver_certificationsWhereInput[]
    driver_id?: IntNullableFilter<"driver_certifications"> | number | null
    certification_name?: StringNullableFilter<"driver_certifications"> | string | null
    issuing_authority?: StringNullableFilter<"driver_certifications"> | string | null
    issue_date?: DateTimeNullableFilter<"driver_certifications"> | Date | string | null
    expiry_date?: DateTimeNullableFilter<"driver_certifications"> | Date | string | null
    certification_number?: StringNullableFilter<"driver_certifications"> | string | null
    is_active?: BoolNullableFilter<"driver_certifications"> | boolean | null
    drivers?: XOR<DriversNullableScalarRelationFilter, driversWhereInput> | null
  }, "certification_id">

  export type driver_certificationsOrderByWithAggregationInput = {
    certification_id?: SortOrder
    driver_id?: SortOrderInput | SortOrder
    certification_name?: SortOrderInput | SortOrder
    issuing_authority?: SortOrderInput | SortOrder
    issue_date?: SortOrderInput | SortOrder
    expiry_date?: SortOrderInput | SortOrder
    certification_number?: SortOrderInput | SortOrder
    is_active?: SortOrderInput | SortOrder
    _count?: driver_certificationsCountOrderByAggregateInput
    _avg?: driver_certificationsAvgOrderByAggregateInput
    _max?: driver_certificationsMaxOrderByAggregateInput
    _min?: driver_certificationsMinOrderByAggregateInput
    _sum?: driver_certificationsSumOrderByAggregateInput
  }

  export type driver_certificationsScalarWhereWithAggregatesInput = {
    AND?: driver_certificationsScalarWhereWithAggregatesInput | driver_certificationsScalarWhereWithAggregatesInput[]
    OR?: driver_certificationsScalarWhereWithAggregatesInput[]
    NOT?: driver_certificationsScalarWhereWithAggregatesInput | driver_certificationsScalarWhereWithAggregatesInput[]
    certification_id?: IntWithAggregatesFilter<"driver_certifications"> | number
    driver_id?: IntNullableWithAggregatesFilter<"driver_certifications"> | number | null
    certification_name?: StringNullableWithAggregatesFilter<"driver_certifications"> | string | null
    issuing_authority?: StringNullableWithAggregatesFilter<"driver_certifications"> | string | null
    issue_date?: DateTimeNullableWithAggregatesFilter<"driver_certifications"> | Date | string | null
    expiry_date?: DateTimeNullableWithAggregatesFilter<"driver_certifications"> | Date | string | null
    certification_number?: StringNullableWithAggregatesFilter<"driver_certifications"> | string | null
    is_active?: BoolNullableWithAggregatesFilter<"driver_certifications"> | boolean | null
  }

  export type driversWhereInput = {
    AND?: driversWhereInput | driversWhereInput[]
    OR?: driversWhereInput[]
    NOT?: driversWhereInput | driversWhereInput[]
    driver_id?: IntFilter<"drivers"> | number
    company_id?: IntNullableFilter<"drivers"> | number | null
    employee_id?: StringNullableFilter<"drivers"> | string | null
    first_name?: StringFilter<"drivers"> | string
    last_name?: StringFilter<"drivers"> | string
    license_number?: StringFilter<"drivers"> | string
    license_class?: StringNullableFilter<"drivers"> | string | null
    license_expiry_date?: DateTimeNullableFilter<"drivers"> | Date | string | null
    date_of_birth?: DateTimeNullableFilter<"drivers"> | Date | string | null
    hire_date?: DateTimeNullableFilter<"drivers"> | Date | string | null
    phone?: StringNullableFilter<"drivers"> | string | null
    email?: StringNullableFilter<"drivers"> | string | null
    address?: StringNullableFilter<"drivers"> | string | null
    emergency_contact_name?: StringNullableFilter<"drivers"> | string | null
    emergency_contact_phone?: StringNullableFilter<"drivers"> | string | null
    salary?: DecimalNullableFilter<"drivers"> | Decimal | DecimalJsLike | number | string | null
    status?: StringNullableFilter<"drivers"> | string | null
    safety_score?: DecimalNullableFilter<"drivers"> | Decimal | DecimalJsLike | number | string | null
    total_miles_driven?: DecimalNullableFilter<"drivers"> | Decimal | DecimalJsLike | number | string | null
    years_experience?: IntNullableFilter<"drivers"> | number | null
    created_at?: DateTimeNullableFilter<"drivers"> | Date | string | null
    driver_certifications?: Driver_certificationsListRelationFilter
    companies?: XOR<CompaniesNullableScalarRelationFilter, companiesWhereInput> | null
    expenses?: ExpensesListRelationFilter
    fuel_transactions?: Fuel_transactionsListRelationFilter
    incidents?: IncidentsListRelationFilter
    trips?: TripsListRelationFilter
    vehicle_assignments?: Vehicle_assignmentsListRelationFilter
    vehicles?: VehiclesListRelationFilter
  }

  export type driversOrderByWithRelationInput = {
    driver_id?: SortOrder
    company_id?: SortOrderInput | SortOrder
    employee_id?: SortOrderInput | SortOrder
    first_name?: SortOrder
    last_name?: SortOrder
    license_number?: SortOrder
    license_class?: SortOrderInput | SortOrder
    license_expiry_date?: SortOrderInput | SortOrder
    date_of_birth?: SortOrderInput | SortOrder
    hire_date?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    address?: SortOrderInput | SortOrder
    emergency_contact_name?: SortOrderInput | SortOrder
    emergency_contact_phone?: SortOrderInput | SortOrder
    salary?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    safety_score?: SortOrderInput | SortOrder
    total_miles_driven?: SortOrderInput | SortOrder
    years_experience?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    driver_certifications?: driver_certificationsOrderByRelationAggregateInput
    companies?: companiesOrderByWithRelationInput
    expenses?: expensesOrderByRelationAggregateInput
    fuel_transactions?: fuel_transactionsOrderByRelationAggregateInput
    incidents?: incidentsOrderByRelationAggregateInput
    trips?: tripsOrderByRelationAggregateInput
    vehicle_assignments?: vehicle_assignmentsOrderByRelationAggregateInput
    vehicles?: vehiclesOrderByRelationAggregateInput
  }

  export type driversWhereUniqueInput = Prisma.AtLeast<{
    driver_id?: number
    license_number?: string
    AND?: driversWhereInput | driversWhereInput[]
    OR?: driversWhereInput[]
    NOT?: driversWhereInput | driversWhereInput[]
    company_id?: IntNullableFilter<"drivers"> | number | null
    employee_id?: StringNullableFilter<"drivers"> | string | null
    first_name?: StringFilter<"drivers"> | string
    last_name?: StringFilter<"drivers"> | string
    license_class?: StringNullableFilter<"drivers"> | string | null
    license_expiry_date?: DateTimeNullableFilter<"drivers"> | Date | string | null
    date_of_birth?: DateTimeNullableFilter<"drivers"> | Date | string | null
    hire_date?: DateTimeNullableFilter<"drivers"> | Date | string | null
    phone?: StringNullableFilter<"drivers"> | string | null
    email?: StringNullableFilter<"drivers"> | string | null
    address?: StringNullableFilter<"drivers"> | string | null
    emergency_contact_name?: StringNullableFilter<"drivers"> | string | null
    emergency_contact_phone?: StringNullableFilter<"drivers"> | string | null
    salary?: DecimalNullableFilter<"drivers"> | Decimal | DecimalJsLike | number | string | null
    status?: StringNullableFilter<"drivers"> | string | null
    safety_score?: DecimalNullableFilter<"drivers"> | Decimal | DecimalJsLike | number | string | null
    total_miles_driven?: DecimalNullableFilter<"drivers"> | Decimal | DecimalJsLike | number | string | null
    years_experience?: IntNullableFilter<"drivers"> | number | null
    created_at?: DateTimeNullableFilter<"drivers"> | Date | string | null
    driver_certifications?: Driver_certificationsListRelationFilter
    companies?: XOR<CompaniesNullableScalarRelationFilter, companiesWhereInput> | null
    expenses?: ExpensesListRelationFilter
    fuel_transactions?: Fuel_transactionsListRelationFilter
    incidents?: IncidentsListRelationFilter
    trips?: TripsListRelationFilter
    vehicle_assignments?: Vehicle_assignmentsListRelationFilter
    vehicles?: VehiclesListRelationFilter
  }, "driver_id" | "license_number">

  export type driversOrderByWithAggregationInput = {
    driver_id?: SortOrder
    company_id?: SortOrderInput | SortOrder
    employee_id?: SortOrderInput | SortOrder
    first_name?: SortOrder
    last_name?: SortOrder
    license_number?: SortOrder
    license_class?: SortOrderInput | SortOrder
    license_expiry_date?: SortOrderInput | SortOrder
    date_of_birth?: SortOrderInput | SortOrder
    hire_date?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    address?: SortOrderInput | SortOrder
    emergency_contact_name?: SortOrderInput | SortOrder
    emergency_contact_phone?: SortOrderInput | SortOrder
    salary?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    safety_score?: SortOrderInput | SortOrder
    total_miles_driven?: SortOrderInput | SortOrder
    years_experience?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    _count?: driversCountOrderByAggregateInput
    _avg?: driversAvgOrderByAggregateInput
    _max?: driversMaxOrderByAggregateInput
    _min?: driversMinOrderByAggregateInput
    _sum?: driversSumOrderByAggregateInput
  }

  export type driversScalarWhereWithAggregatesInput = {
    AND?: driversScalarWhereWithAggregatesInput | driversScalarWhereWithAggregatesInput[]
    OR?: driversScalarWhereWithAggregatesInput[]
    NOT?: driversScalarWhereWithAggregatesInput | driversScalarWhereWithAggregatesInput[]
    driver_id?: IntWithAggregatesFilter<"drivers"> | number
    company_id?: IntNullableWithAggregatesFilter<"drivers"> | number | null
    employee_id?: StringNullableWithAggregatesFilter<"drivers"> | string | null
    first_name?: StringWithAggregatesFilter<"drivers"> | string
    last_name?: StringWithAggregatesFilter<"drivers"> | string
    license_number?: StringWithAggregatesFilter<"drivers"> | string
    license_class?: StringNullableWithAggregatesFilter<"drivers"> | string | null
    license_expiry_date?: DateTimeNullableWithAggregatesFilter<"drivers"> | Date | string | null
    date_of_birth?: DateTimeNullableWithAggregatesFilter<"drivers"> | Date | string | null
    hire_date?: DateTimeNullableWithAggregatesFilter<"drivers"> | Date | string | null
    phone?: StringNullableWithAggregatesFilter<"drivers"> | string | null
    email?: StringNullableWithAggregatesFilter<"drivers"> | string | null
    address?: StringNullableWithAggregatesFilter<"drivers"> | string | null
    emergency_contact_name?: StringNullableWithAggregatesFilter<"drivers"> | string | null
    emergency_contact_phone?: StringNullableWithAggregatesFilter<"drivers"> | string | null
    salary?: DecimalNullableWithAggregatesFilter<"drivers"> | Decimal | DecimalJsLike | number | string | null
    status?: StringNullableWithAggregatesFilter<"drivers"> | string | null
    safety_score?: DecimalNullableWithAggregatesFilter<"drivers"> | Decimal | DecimalJsLike | number | string | null
    total_miles_driven?: DecimalNullableWithAggregatesFilter<"drivers"> | Decimal | DecimalJsLike | number | string | null
    years_experience?: IntNullableWithAggregatesFilter<"drivers"> | number | null
    created_at?: DateTimeNullableWithAggregatesFilter<"drivers"> | Date | string | null
  }

  export type expensesWhereInput = {
    AND?: expensesWhereInput | expensesWhereInput[]
    OR?: expensesWhereInput[]
    NOT?: expensesWhereInput | expensesWhereInput[]
    expense_id?: IntFilter<"expenses"> | number
    vehicle_id?: IntNullableFilter<"expenses"> | number | null
    driver_id?: IntNullableFilter<"expenses"> | number | null
    category_id?: IntNullableFilter<"expenses"> | number | null
    expense_date?: DateTimeFilter<"expenses"> | Date | string
    amount?: DecimalFilter<"expenses"> | Decimal | DecimalJsLike | number | string
    description?: StringNullableFilter<"expenses"> | string | null
    vendor?: StringNullableFilter<"expenses"> | string | null
    invoice_number?: StringNullableFilter<"expenses"> | string | null
    receipt_available?: BoolNullableFilter<"expenses"> | boolean | null
    approved_by?: StringNullableFilter<"expenses"> | string | null
    approval_date?: DateTimeNullableFilter<"expenses"> | Date | string | null
    reimbursable?: BoolNullableFilter<"expenses"> | boolean | null
    notes?: StringNullableFilter<"expenses"> | string | null
    created_at?: DateTimeNullableFilter<"expenses"> | Date | string | null
    cost_categories?: XOR<Cost_categoriesNullableScalarRelationFilter, cost_categoriesWhereInput> | null
    drivers?: XOR<DriversNullableScalarRelationFilter, driversWhereInput> | null
    vehicles?: XOR<VehiclesNullableScalarRelationFilter, vehiclesWhereInput> | null
  }

  export type expensesOrderByWithRelationInput = {
    expense_id?: SortOrder
    vehicle_id?: SortOrderInput | SortOrder
    driver_id?: SortOrderInput | SortOrder
    category_id?: SortOrderInput | SortOrder
    expense_date?: SortOrder
    amount?: SortOrder
    description?: SortOrderInput | SortOrder
    vendor?: SortOrderInput | SortOrder
    invoice_number?: SortOrderInput | SortOrder
    receipt_available?: SortOrderInput | SortOrder
    approved_by?: SortOrderInput | SortOrder
    approval_date?: SortOrderInput | SortOrder
    reimbursable?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    cost_categories?: cost_categoriesOrderByWithRelationInput
    drivers?: driversOrderByWithRelationInput
    vehicles?: vehiclesOrderByWithRelationInput
  }

  export type expensesWhereUniqueInput = Prisma.AtLeast<{
    expense_id?: number
    AND?: expensesWhereInput | expensesWhereInput[]
    OR?: expensesWhereInput[]
    NOT?: expensesWhereInput | expensesWhereInput[]
    vehicle_id?: IntNullableFilter<"expenses"> | number | null
    driver_id?: IntNullableFilter<"expenses"> | number | null
    category_id?: IntNullableFilter<"expenses"> | number | null
    expense_date?: DateTimeFilter<"expenses"> | Date | string
    amount?: DecimalFilter<"expenses"> | Decimal | DecimalJsLike | number | string
    description?: StringNullableFilter<"expenses"> | string | null
    vendor?: StringNullableFilter<"expenses"> | string | null
    invoice_number?: StringNullableFilter<"expenses"> | string | null
    receipt_available?: BoolNullableFilter<"expenses"> | boolean | null
    approved_by?: StringNullableFilter<"expenses"> | string | null
    approval_date?: DateTimeNullableFilter<"expenses"> | Date | string | null
    reimbursable?: BoolNullableFilter<"expenses"> | boolean | null
    notes?: StringNullableFilter<"expenses"> | string | null
    created_at?: DateTimeNullableFilter<"expenses"> | Date | string | null
    cost_categories?: XOR<Cost_categoriesNullableScalarRelationFilter, cost_categoriesWhereInput> | null
    drivers?: XOR<DriversNullableScalarRelationFilter, driversWhereInput> | null
    vehicles?: XOR<VehiclesNullableScalarRelationFilter, vehiclesWhereInput> | null
  }, "expense_id">

  export type expensesOrderByWithAggregationInput = {
    expense_id?: SortOrder
    vehicle_id?: SortOrderInput | SortOrder
    driver_id?: SortOrderInput | SortOrder
    category_id?: SortOrderInput | SortOrder
    expense_date?: SortOrder
    amount?: SortOrder
    description?: SortOrderInput | SortOrder
    vendor?: SortOrderInput | SortOrder
    invoice_number?: SortOrderInput | SortOrder
    receipt_available?: SortOrderInput | SortOrder
    approved_by?: SortOrderInput | SortOrder
    approval_date?: SortOrderInput | SortOrder
    reimbursable?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    _count?: expensesCountOrderByAggregateInput
    _avg?: expensesAvgOrderByAggregateInput
    _max?: expensesMaxOrderByAggregateInput
    _min?: expensesMinOrderByAggregateInput
    _sum?: expensesSumOrderByAggregateInput
  }

  export type expensesScalarWhereWithAggregatesInput = {
    AND?: expensesScalarWhereWithAggregatesInput | expensesScalarWhereWithAggregatesInput[]
    OR?: expensesScalarWhereWithAggregatesInput[]
    NOT?: expensesScalarWhereWithAggregatesInput | expensesScalarWhereWithAggregatesInput[]
    expense_id?: IntWithAggregatesFilter<"expenses"> | number
    vehicle_id?: IntNullableWithAggregatesFilter<"expenses"> | number | null
    driver_id?: IntNullableWithAggregatesFilter<"expenses"> | number | null
    category_id?: IntNullableWithAggregatesFilter<"expenses"> | number | null
    expense_date?: DateTimeWithAggregatesFilter<"expenses"> | Date | string
    amount?: DecimalWithAggregatesFilter<"expenses"> | Decimal | DecimalJsLike | number | string
    description?: StringNullableWithAggregatesFilter<"expenses"> | string | null
    vendor?: StringNullableWithAggregatesFilter<"expenses"> | string | null
    invoice_number?: StringNullableWithAggregatesFilter<"expenses"> | string | null
    receipt_available?: BoolNullableWithAggregatesFilter<"expenses"> | boolean | null
    approved_by?: StringNullableWithAggregatesFilter<"expenses"> | string | null
    approval_date?: DateTimeNullableWithAggregatesFilter<"expenses"> | Date | string | null
    reimbursable?: BoolNullableWithAggregatesFilter<"expenses"> | boolean | null
    notes?: StringNullableWithAggregatesFilter<"expenses"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"expenses"> | Date | string | null
  }

  export type fuel_stationsWhereInput = {
    AND?: fuel_stationsWhereInput | fuel_stationsWhereInput[]
    OR?: fuel_stationsWhereInput[]
    NOT?: fuel_stationsWhereInput | fuel_stationsWhereInput[]
    station_id?: IntFilter<"fuel_stations"> | number
    station_name?: StringNullableFilter<"fuel_stations"> | string | null
    address?: StringNullableFilter<"fuel_stations"> | string | null
    latitude?: DecimalNullableFilter<"fuel_stations"> | Decimal | DecimalJsLike | number | string | null
    longitude?: DecimalNullableFilter<"fuel_stations"> | Decimal | DecimalJsLike | number | string | null
    brand?: StringNullableFilter<"fuel_stations"> | string | null
    has_fleet_card?: BoolNullableFilter<"fuel_stations"> | boolean | null
    avg_price_per_gallon?: DecimalNullableFilter<"fuel_stations"> | Decimal | DecimalJsLike | number | string | null
    fuel_transactions?: Fuel_transactionsListRelationFilter
  }

  export type fuel_stationsOrderByWithRelationInput = {
    station_id?: SortOrder
    station_name?: SortOrderInput | SortOrder
    address?: SortOrderInput | SortOrder
    latitude?: SortOrderInput | SortOrder
    longitude?: SortOrderInput | SortOrder
    brand?: SortOrderInput | SortOrder
    has_fleet_card?: SortOrderInput | SortOrder
    avg_price_per_gallon?: SortOrderInput | SortOrder
    fuel_transactions?: fuel_transactionsOrderByRelationAggregateInput
  }

  export type fuel_stationsWhereUniqueInput = Prisma.AtLeast<{
    station_id?: number
    AND?: fuel_stationsWhereInput | fuel_stationsWhereInput[]
    OR?: fuel_stationsWhereInput[]
    NOT?: fuel_stationsWhereInput | fuel_stationsWhereInput[]
    station_name?: StringNullableFilter<"fuel_stations"> | string | null
    address?: StringNullableFilter<"fuel_stations"> | string | null
    latitude?: DecimalNullableFilter<"fuel_stations"> | Decimal | DecimalJsLike | number | string | null
    longitude?: DecimalNullableFilter<"fuel_stations"> | Decimal | DecimalJsLike | number | string | null
    brand?: StringNullableFilter<"fuel_stations"> | string | null
    has_fleet_card?: BoolNullableFilter<"fuel_stations"> | boolean | null
    avg_price_per_gallon?: DecimalNullableFilter<"fuel_stations"> | Decimal | DecimalJsLike | number | string | null
    fuel_transactions?: Fuel_transactionsListRelationFilter
  }, "station_id">

  export type fuel_stationsOrderByWithAggregationInput = {
    station_id?: SortOrder
    station_name?: SortOrderInput | SortOrder
    address?: SortOrderInput | SortOrder
    latitude?: SortOrderInput | SortOrder
    longitude?: SortOrderInput | SortOrder
    brand?: SortOrderInput | SortOrder
    has_fleet_card?: SortOrderInput | SortOrder
    avg_price_per_gallon?: SortOrderInput | SortOrder
    _count?: fuel_stationsCountOrderByAggregateInput
    _avg?: fuel_stationsAvgOrderByAggregateInput
    _max?: fuel_stationsMaxOrderByAggregateInput
    _min?: fuel_stationsMinOrderByAggregateInput
    _sum?: fuel_stationsSumOrderByAggregateInput
  }

  export type fuel_stationsScalarWhereWithAggregatesInput = {
    AND?: fuel_stationsScalarWhereWithAggregatesInput | fuel_stationsScalarWhereWithAggregatesInput[]
    OR?: fuel_stationsScalarWhereWithAggregatesInput[]
    NOT?: fuel_stationsScalarWhereWithAggregatesInput | fuel_stationsScalarWhereWithAggregatesInput[]
    station_id?: IntWithAggregatesFilter<"fuel_stations"> | number
    station_name?: StringNullableWithAggregatesFilter<"fuel_stations"> | string | null
    address?: StringNullableWithAggregatesFilter<"fuel_stations"> | string | null
    latitude?: DecimalNullableWithAggregatesFilter<"fuel_stations"> | Decimal | DecimalJsLike | number | string | null
    longitude?: DecimalNullableWithAggregatesFilter<"fuel_stations"> | Decimal | DecimalJsLike | number | string | null
    brand?: StringNullableWithAggregatesFilter<"fuel_stations"> | string | null
    has_fleet_card?: BoolNullableWithAggregatesFilter<"fuel_stations"> | boolean | null
    avg_price_per_gallon?: DecimalNullableWithAggregatesFilter<"fuel_stations"> | Decimal | DecimalJsLike | number | string | null
  }

  export type fuel_transactionsWhereInput = {
    AND?: fuel_transactionsWhereInput | fuel_transactionsWhereInput[]
    OR?: fuel_transactionsWhereInput[]
    NOT?: fuel_transactionsWhereInput | fuel_transactionsWhereInput[]
    transaction_id?: IntFilter<"fuel_transactions"> | number
    vehicle_id?: IntNullableFilter<"fuel_transactions"> | number | null
    driver_id?: IntNullableFilter<"fuel_transactions"> | number | null
    fuel_station_id?: IntNullableFilter<"fuel_transactions"> | number | null
    transaction_date?: DateTimeFilter<"fuel_transactions"> | Date | string
    odometer_reading?: DecimalNullableFilter<"fuel_transactions"> | Decimal | DecimalJsLike | number | string | null
    gallons_purchased?: DecimalNullableFilter<"fuel_transactions"> | Decimal | DecimalJsLike | number | string | null
    price_per_gallon?: DecimalNullableFilter<"fuel_transactions"> | Decimal | DecimalJsLike | number | string | null
    total_amount?: DecimalNullableFilter<"fuel_transactions"> | Decimal | DecimalJsLike | number | string | null
    fuel_type?: StringNullableFilter<"fuel_transactions"> | string | null
    payment_method?: StringNullableFilter<"fuel_transactions"> | string | null
    card_number_last_four?: StringNullableFilter<"fuel_transactions"> | string | null
    receipt_number?: StringNullableFilter<"fuel_transactions"> | string | null
    mpg_calculated?: DecimalNullableFilter<"fuel_transactions"> | Decimal | DecimalJsLike | number | string | null
    notes?: StringNullableFilter<"fuel_transactions"> | string | null
    drivers?: XOR<DriversNullableScalarRelationFilter, driversWhereInput> | null
    fuel_stations?: XOR<Fuel_stationsNullableScalarRelationFilter, fuel_stationsWhereInput> | null
    vehicles?: XOR<VehiclesNullableScalarRelationFilter, vehiclesWhereInput> | null
  }

  export type fuel_transactionsOrderByWithRelationInput = {
    transaction_id?: SortOrder
    vehicle_id?: SortOrderInput | SortOrder
    driver_id?: SortOrderInput | SortOrder
    fuel_station_id?: SortOrderInput | SortOrder
    transaction_date?: SortOrder
    odometer_reading?: SortOrderInput | SortOrder
    gallons_purchased?: SortOrderInput | SortOrder
    price_per_gallon?: SortOrderInput | SortOrder
    total_amount?: SortOrderInput | SortOrder
    fuel_type?: SortOrderInput | SortOrder
    payment_method?: SortOrderInput | SortOrder
    card_number_last_four?: SortOrderInput | SortOrder
    receipt_number?: SortOrderInput | SortOrder
    mpg_calculated?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    drivers?: driversOrderByWithRelationInput
    fuel_stations?: fuel_stationsOrderByWithRelationInput
    vehicles?: vehiclesOrderByWithRelationInput
  }

  export type fuel_transactionsWhereUniqueInput = Prisma.AtLeast<{
    transaction_id?: number
    AND?: fuel_transactionsWhereInput | fuel_transactionsWhereInput[]
    OR?: fuel_transactionsWhereInput[]
    NOT?: fuel_transactionsWhereInput | fuel_transactionsWhereInput[]
    vehicle_id?: IntNullableFilter<"fuel_transactions"> | number | null
    driver_id?: IntNullableFilter<"fuel_transactions"> | number | null
    fuel_station_id?: IntNullableFilter<"fuel_transactions"> | number | null
    transaction_date?: DateTimeFilter<"fuel_transactions"> | Date | string
    odometer_reading?: DecimalNullableFilter<"fuel_transactions"> | Decimal | DecimalJsLike | number | string | null
    gallons_purchased?: DecimalNullableFilter<"fuel_transactions"> | Decimal | DecimalJsLike | number | string | null
    price_per_gallon?: DecimalNullableFilter<"fuel_transactions"> | Decimal | DecimalJsLike | number | string | null
    total_amount?: DecimalNullableFilter<"fuel_transactions"> | Decimal | DecimalJsLike | number | string | null
    fuel_type?: StringNullableFilter<"fuel_transactions"> | string | null
    payment_method?: StringNullableFilter<"fuel_transactions"> | string | null
    card_number_last_four?: StringNullableFilter<"fuel_transactions"> | string | null
    receipt_number?: StringNullableFilter<"fuel_transactions"> | string | null
    mpg_calculated?: DecimalNullableFilter<"fuel_transactions"> | Decimal | DecimalJsLike | number | string | null
    notes?: StringNullableFilter<"fuel_transactions"> | string | null
    drivers?: XOR<DriversNullableScalarRelationFilter, driversWhereInput> | null
    fuel_stations?: XOR<Fuel_stationsNullableScalarRelationFilter, fuel_stationsWhereInput> | null
    vehicles?: XOR<VehiclesNullableScalarRelationFilter, vehiclesWhereInput> | null
  }, "transaction_id">

  export type fuel_transactionsOrderByWithAggregationInput = {
    transaction_id?: SortOrder
    vehicle_id?: SortOrderInput | SortOrder
    driver_id?: SortOrderInput | SortOrder
    fuel_station_id?: SortOrderInput | SortOrder
    transaction_date?: SortOrder
    odometer_reading?: SortOrderInput | SortOrder
    gallons_purchased?: SortOrderInput | SortOrder
    price_per_gallon?: SortOrderInput | SortOrder
    total_amount?: SortOrderInput | SortOrder
    fuel_type?: SortOrderInput | SortOrder
    payment_method?: SortOrderInput | SortOrder
    card_number_last_four?: SortOrderInput | SortOrder
    receipt_number?: SortOrderInput | SortOrder
    mpg_calculated?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    _count?: fuel_transactionsCountOrderByAggregateInput
    _avg?: fuel_transactionsAvgOrderByAggregateInput
    _max?: fuel_transactionsMaxOrderByAggregateInput
    _min?: fuel_transactionsMinOrderByAggregateInput
    _sum?: fuel_transactionsSumOrderByAggregateInput
  }

  export type fuel_transactionsScalarWhereWithAggregatesInput = {
    AND?: fuel_transactionsScalarWhereWithAggregatesInput | fuel_transactionsScalarWhereWithAggregatesInput[]
    OR?: fuel_transactionsScalarWhereWithAggregatesInput[]
    NOT?: fuel_transactionsScalarWhereWithAggregatesInput | fuel_transactionsScalarWhereWithAggregatesInput[]
    transaction_id?: IntWithAggregatesFilter<"fuel_transactions"> | number
    vehicle_id?: IntNullableWithAggregatesFilter<"fuel_transactions"> | number | null
    driver_id?: IntNullableWithAggregatesFilter<"fuel_transactions"> | number | null
    fuel_station_id?: IntNullableWithAggregatesFilter<"fuel_transactions"> | number | null
    transaction_date?: DateTimeWithAggregatesFilter<"fuel_transactions"> | Date | string
    odometer_reading?: DecimalNullableWithAggregatesFilter<"fuel_transactions"> | Decimal | DecimalJsLike | number | string | null
    gallons_purchased?: DecimalNullableWithAggregatesFilter<"fuel_transactions"> | Decimal | DecimalJsLike | number | string | null
    price_per_gallon?: DecimalNullableWithAggregatesFilter<"fuel_transactions"> | Decimal | DecimalJsLike | number | string | null
    total_amount?: DecimalNullableWithAggregatesFilter<"fuel_transactions"> | Decimal | DecimalJsLike | number | string | null
    fuel_type?: StringNullableWithAggregatesFilter<"fuel_transactions"> | string | null
    payment_method?: StringNullableWithAggregatesFilter<"fuel_transactions"> | string | null
    card_number_last_four?: StringNullableWithAggregatesFilter<"fuel_transactions"> | string | null
    receipt_number?: StringNullableWithAggregatesFilter<"fuel_transactions"> | string | null
    mpg_calculated?: DecimalNullableWithAggregatesFilter<"fuel_transactions"> | Decimal | DecimalJsLike | number | string | null
    notes?: StringNullableWithAggregatesFilter<"fuel_transactions"> | string | null
  }

  export type gps_trackingWhereInput = {
    AND?: gps_trackingWhereInput | gps_trackingWhereInput[]
    OR?: gps_trackingWhereInput[]
    NOT?: gps_trackingWhereInput | gps_trackingWhereInput[]
    tracking_id?: IntFilter<"gps_tracking"> | number
    vehicle_id?: IntNullableFilter<"gps_tracking"> | number | null
    timestamp?: DateTimeFilter<"gps_tracking"> | Date | string
    latitude?: DecimalNullableFilter<"gps_tracking"> | Decimal | DecimalJsLike | number | string | null
    longitude?: DecimalNullableFilter<"gps_tracking"> | Decimal | DecimalJsLike | number | string | null
    speed?: DecimalNullableFilter<"gps_tracking"> | Decimal | DecimalJsLike | number | string | null
    heading?: IntNullableFilter<"gps_tracking"> | number | null
    altitude?: DecimalNullableFilter<"gps_tracking"> | Decimal | DecimalJsLike | number | string | null
    gps_quality?: StringNullableFilter<"gps_tracking"> | string | null
    engine_status?: StringNullableFilter<"gps_tracking"> | string | null
    fuel_level_percent?: DecimalNullableFilter<"gps_tracking"> | Decimal | DecimalJsLike | number | string | null
    odometer?: DecimalNullableFilter<"gps_tracking"> | Decimal | DecimalJsLike | number | string | null
    vehicles?: XOR<VehiclesNullableScalarRelationFilter, vehiclesWhereInput> | null
  }

  export type gps_trackingOrderByWithRelationInput = {
    tracking_id?: SortOrder
    vehicle_id?: SortOrderInput | SortOrder
    timestamp?: SortOrder
    latitude?: SortOrderInput | SortOrder
    longitude?: SortOrderInput | SortOrder
    speed?: SortOrderInput | SortOrder
    heading?: SortOrderInput | SortOrder
    altitude?: SortOrderInput | SortOrder
    gps_quality?: SortOrderInput | SortOrder
    engine_status?: SortOrderInput | SortOrder
    fuel_level_percent?: SortOrderInput | SortOrder
    odometer?: SortOrderInput | SortOrder
    vehicles?: vehiclesOrderByWithRelationInput
  }

  export type gps_trackingWhereUniqueInput = Prisma.AtLeast<{
    tracking_id?: number
    AND?: gps_trackingWhereInput | gps_trackingWhereInput[]
    OR?: gps_trackingWhereInput[]
    NOT?: gps_trackingWhereInput | gps_trackingWhereInput[]
    vehicle_id?: IntNullableFilter<"gps_tracking"> | number | null
    timestamp?: DateTimeFilter<"gps_tracking"> | Date | string
    latitude?: DecimalNullableFilter<"gps_tracking"> | Decimal | DecimalJsLike | number | string | null
    longitude?: DecimalNullableFilter<"gps_tracking"> | Decimal | DecimalJsLike | number | string | null
    speed?: DecimalNullableFilter<"gps_tracking"> | Decimal | DecimalJsLike | number | string | null
    heading?: IntNullableFilter<"gps_tracking"> | number | null
    altitude?: DecimalNullableFilter<"gps_tracking"> | Decimal | DecimalJsLike | number | string | null
    gps_quality?: StringNullableFilter<"gps_tracking"> | string | null
    engine_status?: StringNullableFilter<"gps_tracking"> | string | null
    fuel_level_percent?: DecimalNullableFilter<"gps_tracking"> | Decimal | DecimalJsLike | number | string | null
    odometer?: DecimalNullableFilter<"gps_tracking"> | Decimal | DecimalJsLike | number | string | null
    vehicles?: XOR<VehiclesNullableScalarRelationFilter, vehiclesWhereInput> | null
  }, "tracking_id">

  export type gps_trackingOrderByWithAggregationInput = {
    tracking_id?: SortOrder
    vehicle_id?: SortOrderInput | SortOrder
    timestamp?: SortOrder
    latitude?: SortOrderInput | SortOrder
    longitude?: SortOrderInput | SortOrder
    speed?: SortOrderInput | SortOrder
    heading?: SortOrderInput | SortOrder
    altitude?: SortOrderInput | SortOrder
    gps_quality?: SortOrderInput | SortOrder
    engine_status?: SortOrderInput | SortOrder
    fuel_level_percent?: SortOrderInput | SortOrder
    odometer?: SortOrderInput | SortOrder
    _count?: gps_trackingCountOrderByAggregateInput
    _avg?: gps_trackingAvgOrderByAggregateInput
    _max?: gps_trackingMaxOrderByAggregateInput
    _min?: gps_trackingMinOrderByAggregateInput
    _sum?: gps_trackingSumOrderByAggregateInput
  }

  export type gps_trackingScalarWhereWithAggregatesInput = {
    AND?: gps_trackingScalarWhereWithAggregatesInput | gps_trackingScalarWhereWithAggregatesInput[]
    OR?: gps_trackingScalarWhereWithAggregatesInput[]
    NOT?: gps_trackingScalarWhereWithAggregatesInput | gps_trackingScalarWhereWithAggregatesInput[]
    tracking_id?: IntWithAggregatesFilter<"gps_tracking"> | number
    vehicle_id?: IntNullableWithAggregatesFilter<"gps_tracking"> | number | null
    timestamp?: DateTimeWithAggregatesFilter<"gps_tracking"> | Date | string
    latitude?: DecimalNullableWithAggregatesFilter<"gps_tracking"> | Decimal | DecimalJsLike | number | string | null
    longitude?: DecimalNullableWithAggregatesFilter<"gps_tracking"> | Decimal | DecimalJsLike | number | string | null
    speed?: DecimalNullableWithAggregatesFilter<"gps_tracking"> | Decimal | DecimalJsLike | number | string | null
    heading?: IntNullableWithAggregatesFilter<"gps_tracking"> | number | null
    altitude?: DecimalNullableWithAggregatesFilter<"gps_tracking"> | Decimal | DecimalJsLike | number | string | null
    gps_quality?: StringNullableWithAggregatesFilter<"gps_tracking"> | string | null
    engine_status?: StringNullableWithAggregatesFilter<"gps_tracking"> | string | null
    fuel_level_percent?: DecimalNullableWithAggregatesFilter<"gps_tracking"> | Decimal | DecimalJsLike | number | string | null
    odometer?: DecimalNullableWithAggregatesFilter<"gps_tracking"> | Decimal | DecimalJsLike | number | string | null
  }

  export type incidentsWhereInput = {
    AND?: incidentsWhereInput | incidentsWhereInput[]
    OR?: incidentsWhereInput[]
    NOT?: incidentsWhereInput | incidentsWhereInput[]
    incident_id?: IntFilter<"incidents"> | number
    vehicle_id?: IntNullableFilter<"incidents"> | number | null
    driver_id?: IntNullableFilter<"incidents"> | number | null
    incident_date?: DateTimeFilter<"incidents"> | Date | string
    incident_type?: StringFilter<"incidents"> | string
    severity?: StringFilter<"incidents"> | string
    location?: StringNullableFilter<"incidents"> | string | null
    description?: StringFilter<"incidents"> | string
    police_report_number?: StringNullableFilter<"incidents"> | string | null
    insurance_claim_number?: StringNullableFilter<"incidents"> | string | null
    estimated_damage_cost?: DecimalNullableFilter<"incidents"> | Decimal | DecimalJsLike | number | string | null
    actual_repair_cost?: DecimalNullableFilter<"incidents"> | Decimal | DecimalJsLike | number | string | null
    injuries_reported?: BoolNullableFilter<"incidents"> | boolean | null
    fatalities?: BoolNullableFilter<"incidents"> | boolean | null
    at_fault?: BoolNullableFilter<"incidents"> | boolean | null
    weather_conditions?: StringNullableFilter<"incidents"> | string | null
    road_conditions?: StringNullableFilter<"incidents"> | string | null
    photos_available?: BoolNullableFilter<"incidents"> | boolean | null
    status?: StringNullableFilter<"incidents"> | string | null
    resolution_date?: DateTimeNullableFilter<"incidents"> | Date | string | null
    lessons_learned?: StringNullableFilter<"incidents"> | string | null
    created_at?: DateTimeNullableFilter<"incidents"> | Date | string | null
    drivers?: XOR<DriversNullableScalarRelationFilter, driversWhereInput> | null
    vehicles?: XOR<VehiclesNullableScalarRelationFilter, vehiclesWhereInput> | null
  }

  export type incidentsOrderByWithRelationInput = {
    incident_id?: SortOrder
    vehicle_id?: SortOrderInput | SortOrder
    driver_id?: SortOrderInput | SortOrder
    incident_date?: SortOrder
    incident_type?: SortOrder
    severity?: SortOrder
    location?: SortOrderInput | SortOrder
    description?: SortOrder
    police_report_number?: SortOrderInput | SortOrder
    insurance_claim_number?: SortOrderInput | SortOrder
    estimated_damage_cost?: SortOrderInput | SortOrder
    actual_repair_cost?: SortOrderInput | SortOrder
    injuries_reported?: SortOrderInput | SortOrder
    fatalities?: SortOrderInput | SortOrder
    at_fault?: SortOrderInput | SortOrder
    weather_conditions?: SortOrderInput | SortOrder
    road_conditions?: SortOrderInput | SortOrder
    photos_available?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    resolution_date?: SortOrderInput | SortOrder
    lessons_learned?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    drivers?: driversOrderByWithRelationInput
    vehicles?: vehiclesOrderByWithRelationInput
  }

  export type incidentsWhereUniqueInput = Prisma.AtLeast<{
    incident_id?: number
    AND?: incidentsWhereInput | incidentsWhereInput[]
    OR?: incidentsWhereInput[]
    NOT?: incidentsWhereInput | incidentsWhereInput[]
    vehicle_id?: IntNullableFilter<"incidents"> | number | null
    driver_id?: IntNullableFilter<"incidents"> | number | null
    incident_date?: DateTimeFilter<"incidents"> | Date | string
    incident_type?: StringFilter<"incidents"> | string
    severity?: StringFilter<"incidents"> | string
    location?: StringNullableFilter<"incidents"> | string | null
    description?: StringFilter<"incidents"> | string
    police_report_number?: StringNullableFilter<"incidents"> | string | null
    insurance_claim_number?: StringNullableFilter<"incidents"> | string | null
    estimated_damage_cost?: DecimalNullableFilter<"incidents"> | Decimal | DecimalJsLike | number | string | null
    actual_repair_cost?: DecimalNullableFilter<"incidents"> | Decimal | DecimalJsLike | number | string | null
    injuries_reported?: BoolNullableFilter<"incidents"> | boolean | null
    fatalities?: BoolNullableFilter<"incidents"> | boolean | null
    at_fault?: BoolNullableFilter<"incidents"> | boolean | null
    weather_conditions?: StringNullableFilter<"incidents"> | string | null
    road_conditions?: StringNullableFilter<"incidents"> | string | null
    photos_available?: BoolNullableFilter<"incidents"> | boolean | null
    status?: StringNullableFilter<"incidents"> | string | null
    resolution_date?: DateTimeNullableFilter<"incidents"> | Date | string | null
    lessons_learned?: StringNullableFilter<"incidents"> | string | null
    created_at?: DateTimeNullableFilter<"incidents"> | Date | string | null
    drivers?: XOR<DriversNullableScalarRelationFilter, driversWhereInput> | null
    vehicles?: XOR<VehiclesNullableScalarRelationFilter, vehiclesWhereInput> | null
  }, "incident_id">

  export type incidentsOrderByWithAggregationInput = {
    incident_id?: SortOrder
    vehicle_id?: SortOrderInput | SortOrder
    driver_id?: SortOrderInput | SortOrder
    incident_date?: SortOrder
    incident_type?: SortOrder
    severity?: SortOrder
    location?: SortOrderInput | SortOrder
    description?: SortOrder
    police_report_number?: SortOrderInput | SortOrder
    insurance_claim_number?: SortOrderInput | SortOrder
    estimated_damage_cost?: SortOrderInput | SortOrder
    actual_repair_cost?: SortOrderInput | SortOrder
    injuries_reported?: SortOrderInput | SortOrder
    fatalities?: SortOrderInput | SortOrder
    at_fault?: SortOrderInput | SortOrder
    weather_conditions?: SortOrderInput | SortOrder
    road_conditions?: SortOrderInput | SortOrder
    photos_available?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    resolution_date?: SortOrderInput | SortOrder
    lessons_learned?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    _count?: incidentsCountOrderByAggregateInput
    _avg?: incidentsAvgOrderByAggregateInput
    _max?: incidentsMaxOrderByAggregateInput
    _min?: incidentsMinOrderByAggregateInput
    _sum?: incidentsSumOrderByAggregateInput
  }

  export type incidentsScalarWhereWithAggregatesInput = {
    AND?: incidentsScalarWhereWithAggregatesInput | incidentsScalarWhereWithAggregatesInput[]
    OR?: incidentsScalarWhereWithAggregatesInput[]
    NOT?: incidentsScalarWhereWithAggregatesInput | incidentsScalarWhereWithAggregatesInput[]
    incident_id?: IntWithAggregatesFilter<"incidents"> | number
    vehicle_id?: IntNullableWithAggregatesFilter<"incidents"> | number | null
    driver_id?: IntNullableWithAggregatesFilter<"incidents"> | number | null
    incident_date?: DateTimeWithAggregatesFilter<"incidents"> | Date | string
    incident_type?: StringWithAggregatesFilter<"incidents"> | string
    severity?: StringWithAggregatesFilter<"incidents"> | string
    location?: StringNullableWithAggregatesFilter<"incidents"> | string | null
    description?: StringWithAggregatesFilter<"incidents"> | string
    police_report_number?: StringNullableWithAggregatesFilter<"incidents"> | string | null
    insurance_claim_number?: StringNullableWithAggregatesFilter<"incidents"> | string | null
    estimated_damage_cost?: DecimalNullableWithAggregatesFilter<"incidents"> | Decimal | DecimalJsLike | number | string | null
    actual_repair_cost?: DecimalNullableWithAggregatesFilter<"incidents"> | Decimal | DecimalJsLike | number | string | null
    injuries_reported?: BoolNullableWithAggregatesFilter<"incidents"> | boolean | null
    fatalities?: BoolNullableWithAggregatesFilter<"incidents"> | boolean | null
    at_fault?: BoolNullableWithAggregatesFilter<"incidents"> | boolean | null
    weather_conditions?: StringNullableWithAggregatesFilter<"incidents"> | string | null
    road_conditions?: StringNullableWithAggregatesFilter<"incidents"> | string | null
    photos_available?: BoolNullableWithAggregatesFilter<"incidents"> | boolean | null
    status?: StringNullableWithAggregatesFilter<"incidents"> | string | null
    resolution_date?: DateTimeNullableWithAggregatesFilter<"incidents"> | Date | string | null
    lessons_learned?: StringNullableWithAggregatesFilter<"incidents"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"incidents"> | Date | string | null
  }

  export type maintenance_recordsWhereInput = {
    AND?: maintenance_recordsWhereInput | maintenance_recordsWhereInput[]
    OR?: maintenance_recordsWhereInput[]
    NOT?: maintenance_recordsWhereInput | maintenance_recordsWhereInput[]
    maintenance_id?: IntFilter<"maintenance_records"> | number
    vehicle_id?: IntNullableFilter<"maintenance_records"> | number | null
    maintenance_type_id?: IntNullableFilter<"maintenance_records"> | number | null
    service_provider_id?: IntNullableFilter<"maintenance_records"> | number | null
    scheduled_date?: DateTimeNullableFilter<"maintenance_records"> | Date | string | null
    completed_date?: DateTimeNullableFilter<"maintenance_records"> | Date | string | null
    odometer_at_service?: DecimalNullableFilter<"maintenance_records"> | Decimal | DecimalJsLike | number | string | null
    cost?: DecimalNullableFilter<"maintenance_records"> | Decimal | DecimalJsLike | number | string | null
    labor_hours?: DecimalNullableFilter<"maintenance_records"> | Decimal | DecimalJsLike | number | string | null
    description?: StringNullableFilter<"maintenance_records"> | string | null
    parts_used?: StringNullableFilter<"maintenance_records"> | string | null
    technician_name?: StringNullableFilter<"maintenance_records"> | string | null
    status?: StringNullableFilter<"maintenance_records"> | string | null
    next_service_due_date?: DateTimeNullableFilter<"maintenance_records"> | Date | string | null
    next_service_due_miles?: DecimalNullableFilter<"maintenance_records"> | Decimal | DecimalJsLike | number | string | null
    warranty_expiry_date?: DateTimeNullableFilter<"maintenance_records"> | Date | string | null
    invoice_number?: StringNullableFilter<"maintenance_records"> | string | null
    notes?: StringNullableFilter<"maintenance_records"> | string | null
    created_at?: DateTimeNullableFilter<"maintenance_records"> | Date | string | null
    maintenance_types?: XOR<Maintenance_typesNullableScalarRelationFilter, maintenance_typesWhereInput> | null
    service_providers?: XOR<Service_providersNullableScalarRelationFilter, service_providersWhereInput> | null
    vehicles?: XOR<VehiclesNullableScalarRelationFilter, vehiclesWhereInput> | null
  }

  export type maintenance_recordsOrderByWithRelationInput = {
    maintenance_id?: SortOrder
    vehicle_id?: SortOrderInput | SortOrder
    maintenance_type_id?: SortOrderInput | SortOrder
    service_provider_id?: SortOrderInput | SortOrder
    scheduled_date?: SortOrderInput | SortOrder
    completed_date?: SortOrderInput | SortOrder
    odometer_at_service?: SortOrderInput | SortOrder
    cost?: SortOrderInput | SortOrder
    labor_hours?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    parts_used?: SortOrderInput | SortOrder
    technician_name?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    next_service_due_date?: SortOrderInput | SortOrder
    next_service_due_miles?: SortOrderInput | SortOrder
    warranty_expiry_date?: SortOrderInput | SortOrder
    invoice_number?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    maintenance_types?: maintenance_typesOrderByWithRelationInput
    service_providers?: service_providersOrderByWithRelationInput
    vehicles?: vehiclesOrderByWithRelationInput
  }

  export type maintenance_recordsWhereUniqueInput = Prisma.AtLeast<{
    maintenance_id?: number
    AND?: maintenance_recordsWhereInput | maintenance_recordsWhereInput[]
    OR?: maintenance_recordsWhereInput[]
    NOT?: maintenance_recordsWhereInput | maintenance_recordsWhereInput[]
    vehicle_id?: IntNullableFilter<"maintenance_records"> | number | null
    maintenance_type_id?: IntNullableFilter<"maintenance_records"> | number | null
    service_provider_id?: IntNullableFilter<"maintenance_records"> | number | null
    scheduled_date?: DateTimeNullableFilter<"maintenance_records"> | Date | string | null
    completed_date?: DateTimeNullableFilter<"maintenance_records"> | Date | string | null
    odometer_at_service?: DecimalNullableFilter<"maintenance_records"> | Decimal | DecimalJsLike | number | string | null
    cost?: DecimalNullableFilter<"maintenance_records"> | Decimal | DecimalJsLike | number | string | null
    labor_hours?: DecimalNullableFilter<"maintenance_records"> | Decimal | DecimalJsLike | number | string | null
    description?: StringNullableFilter<"maintenance_records"> | string | null
    parts_used?: StringNullableFilter<"maintenance_records"> | string | null
    technician_name?: StringNullableFilter<"maintenance_records"> | string | null
    status?: StringNullableFilter<"maintenance_records"> | string | null
    next_service_due_date?: DateTimeNullableFilter<"maintenance_records"> | Date | string | null
    next_service_due_miles?: DecimalNullableFilter<"maintenance_records"> | Decimal | DecimalJsLike | number | string | null
    warranty_expiry_date?: DateTimeNullableFilter<"maintenance_records"> | Date | string | null
    invoice_number?: StringNullableFilter<"maintenance_records"> | string | null
    notes?: StringNullableFilter<"maintenance_records"> | string | null
    created_at?: DateTimeNullableFilter<"maintenance_records"> | Date | string | null
    maintenance_types?: XOR<Maintenance_typesNullableScalarRelationFilter, maintenance_typesWhereInput> | null
    service_providers?: XOR<Service_providersNullableScalarRelationFilter, service_providersWhereInput> | null
    vehicles?: XOR<VehiclesNullableScalarRelationFilter, vehiclesWhereInput> | null
  }, "maintenance_id">

  export type maintenance_recordsOrderByWithAggregationInput = {
    maintenance_id?: SortOrder
    vehicle_id?: SortOrderInput | SortOrder
    maintenance_type_id?: SortOrderInput | SortOrder
    service_provider_id?: SortOrderInput | SortOrder
    scheduled_date?: SortOrderInput | SortOrder
    completed_date?: SortOrderInput | SortOrder
    odometer_at_service?: SortOrderInput | SortOrder
    cost?: SortOrderInput | SortOrder
    labor_hours?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    parts_used?: SortOrderInput | SortOrder
    technician_name?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    next_service_due_date?: SortOrderInput | SortOrder
    next_service_due_miles?: SortOrderInput | SortOrder
    warranty_expiry_date?: SortOrderInput | SortOrder
    invoice_number?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    _count?: maintenance_recordsCountOrderByAggregateInput
    _avg?: maintenance_recordsAvgOrderByAggregateInput
    _max?: maintenance_recordsMaxOrderByAggregateInput
    _min?: maintenance_recordsMinOrderByAggregateInput
    _sum?: maintenance_recordsSumOrderByAggregateInput
  }

  export type maintenance_recordsScalarWhereWithAggregatesInput = {
    AND?: maintenance_recordsScalarWhereWithAggregatesInput | maintenance_recordsScalarWhereWithAggregatesInput[]
    OR?: maintenance_recordsScalarWhereWithAggregatesInput[]
    NOT?: maintenance_recordsScalarWhereWithAggregatesInput | maintenance_recordsScalarWhereWithAggregatesInput[]
    maintenance_id?: IntWithAggregatesFilter<"maintenance_records"> | number
    vehicle_id?: IntNullableWithAggregatesFilter<"maintenance_records"> | number | null
    maintenance_type_id?: IntNullableWithAggregatesFilter<"maintenance_records"> | number | null
    service_provider_id?: IntNullableWithAggregatesFilter<"maintenance_records"> | number | null
    scheduled_date?: DateTimeNullableWithAggregatesFilter<"maintenance_records"> | Date | string | null
    completed_date?: DateTimeNullableWithAggregatesFilter<"maintenance_records"> | Date | string | null
    odometer_at_service?: DecimalNullableWithAggregatesFilter<"maintenance_records"> | Decimal | DecimalJsLike | number | string | null
    cost?: DecimalNullableWithAggregatesFilter<"maintenance_records"> | Decimal | DecimalJsLike | number | string | null
    labor_hours?: DecimalNullableWithAggregatesFilter<"maintenance_records"> | Decimal | DecimalJsLike | number | string | null
    description?: StringNullableWithAggregatesFilter<"maintenance_records"> | string | null
    parts_used?: StringNullableWithAggregatesFilter<"maintenance_records"> | string | null
    technician_name?: StringNullableWithAggregatesFilter<"maintenance_records"> | string | null
    status?: StringNullableWithAggregatesFilter<"maintenance_records"> | string | null
    next_service_due_date?: DateTimeNullableWithAggregatesFilter<"maintenance_records"> | Date | string | null
    next_service_due_miles?: DecimalNullableWithAggregatesFilter<"maintenance_records"> | Decimal | DecimalJsLike | number | string | null
    warranty_expiry_date?: DateTimeNullableWithAggregatesFilter<"maintenance_records"> | Date | string | null
    invoice_number?: StringNullableWithAggregatesFilter<"maintenance_records"> | string | null
    notes?: StringNullableWithAggregatesFilter<"maintenance_records"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"maintenance_records"> | Date | string | null
  }

  export type maintenance_typesWhereInput = {
    AND?: maintenance_typesWhereInput | maintenance_typesWhereInput[]
    OR?: maintenance_typesWhereInput[]
    NOT?: maintenance_typesWhereInput | maintenance_typesWhereInput[]
    maintenance_type_id?: IntFilter<"maintenance_types"> | number
    type_name?: StringFilter<"maintenance_types"> | string
    description?: StringNullableFilter<"maintenance_types"> | string | null
    recommended_interval_miles?: IntNullableFilter<"maintenance_types"> | number | null
    recommended_interval_months?: IntNullableFilter<"maintenance_types"> | number | null
    estimated_cost?: DecimalNullableFilter<"maintenance_types"> | Decimal | DecimalJsLike | number | string | null
    maintenance_records?: Maintenance_recordsListRelationFilter
  }

  export type maintenance_typesOrderByWithRelationInput = {
    maintenance_type_id?: SortOrder
    type_name?: SortOrder
    description?: SortOrderInput | SortOrder
    recommended_interval_miles?: SortOrderInput | SortOrder
    recommended_interval_months?: SortOrderInput | SortOrder
    estimated_cost?: SortOrderInput | SortOrder
    maintenance_records?: maintenance_recordsOrderByRelationAggregateInput
  }

  export type maintenance_typesWhereUniqueInput = Prisma.AtLeast<{
    maintenance_type_id?: number
    AND?: maintenance_typesWhereInput | maintenance_typesWhereInput[]
    OR?: maintenance_typesWhereInput[]
    NOT?: maintenance_typesWhereInput | maintenance_typesWhereInput[]
    type_name?: StringFilter<"maintenance_types"> | string
    description?: StringNullableFilter<"maintenance_types"> | string | null
    recommended_interval_miles?: IntNullableFilter<"maintenance_types"> | number | null
    recommended_interval_months?: IntNullableFilter<"maintenance_types"> | number | null
    estimated_cost?: DecimalNullableFilter<"maintenance_types"> | Decimal | DecimalJsLike | number | string | null
    maintenance_records?: Maintenance_recordsListRelationFilter
  }, "maintenance_type_id">

  export type maintenance_typesOrderByWithAggregationInput = {
    maintenance_type_id?: SortOrder
    type_name?: SortOrder
    description?: SortOrderInput | SortOrder
    recommended_interval_miles?: SortOrderInput | SortOrder
    recommended_interval_months?: SortOrderInput | SortOrder
    estimated_cost?: SortOrderInput | SortOrder
    _count?: maintenance_typesCountOrderByAggregateInput
    _avg?: maintenance_typesAvgOrderByAggregateInput
    _max?: maintenance_typesMaxOrderByAggregateInput
    _min?: maintenance_typesMinOrderByAggregateInput
    _sum?: maintenance_typesSumOrderByAggregateInput
  }

  export type maintenance_typesScalarWhereWithAggregatesInput = {
    AND?: maintenance_typesScalarWhereWithAggregatesInput | maintenance_typesScalarWhereWithAggregatesInput[]
    OR?: maintenance_typesScalarWhereWithAggregatesInput[]
    NOT?: maintenance_typesScalarWhereWithAggregatesInput | maintenance_typesScalarWhereWithAggregatesInput[]
    maintenance_type_id?: IntWithAggregatesFilter<"maintenance_types"> | number
    type_name?: StringWithAggregatesFilter<"maintenance_types"> | string
    description?: StringNullableWithAggregatesFilter<"maintenance_types"> | string | null
    recommended_interval_miles?: IntNullableWithAggregatesFilter<"maintenance_types"> | number | null
    recommended_interval_months?: IntNullableWithAggregatesFilter<"maintenance_types"> | number | null
    estimated_cost?: DecimalNullableWithAggregatesFilter<"maintenance_types"> | Decimal | DecimalJsLike | number | string | null
  }

  export type reportsWhereInput = {
    AND?: reportsWhereInput | reportsWhereInput[]
    OR?: reportsWhereInput[]
    NOT?: reportsWhereInput | reportsWhereInput[]
    report_id?: IntFilter<"reports"> | number
    company_id?: IntNullableFilter<"reports"> | number | null
    report_name?: StringFilter<"reports"> | string
    report_type?: StringFilter<"reports"> | string
    generated_by?: IntNullableFilter<"reports"> | number | null
    generation_date?: DateTimeNullableFilter<"reports"> | Date | string | null
    date_range_start?: DateTimeNullableFilter<"reports"> | Date | string | null
    date_range_end?: DateTimeNullableFilter<"reports"> | Date | string | null
    parameters?: JsonNullableFilter<"reports">
    file_path?: StringNullableFilter<"reports"> | string | null
    status?: StringNullableFilter<"reports"> | string | null
    companies?: XOR<CompaniesNullableScalarRelationFilter, companiesWhereInput> | null
    users?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
  }

  export type reportsOrderByWithRelationInput = {
    report_id?: SortOrder
    company_id?: SortOrderInput | SortOrder
    report_name?: SortOrder
    report_type?: SortOrder
    generated_by?: SortOrderInput | SortOrder
    generation_date?: SortOrderInput | SortOrder
    date_range_start?: SortOrderInput | SortOrder
    date_range_end?: SortOrderInput | SortOrder
    parameters?: SortOrderInput | SortOrder
    file_path?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    companies?: companiesOrderByWithRelationInput
    users?: usersOrderByWithRelationInput
  }

  export type reportsWhereUniqueInput = Prisma.AtLeast<{
    report_id?: number
    AND?: reportsWhereInput | reportsWhereInput[]
    OR?: reportsWhereInput[]
    NOT?: reportsWhereInput | reportsWhereInput[]
    company_id?: IntNullableFilter<"reports"> | number | null
    report_name?: StringFilter<"reports"> | string
    report_type?: StringFilter<"reports"> | string
    generated_by?: IntNullableFilter<"reports"> | number | null
    generation_date?: DateTimeNullableFilter<"reports"> | Date | string | null
    date_range_start?: DateTimeNullableFilter<"reports"> | Date | string | null
    date_range_end?: DateTimeNullableFilter<"reports"> | Date | string | null
    parameters?: JsonNullableFilter<"reports">
    file_path?: StringNullableFilter<"reports"> | string | null
    status?: StringNullableFilter<"reports"> | string | null
    companies?: XOR<CompaniesNullableScalarRelationFilter, companiesWhereInput> | null
    users?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
  }, "report_id">

  export type reportsOrderByWithAggregationInput = {
    report_id?: SortOrder
    company_id?: SortOrderInput | SortOrder
    report_name?: SortOrder
    report_type?: SortOrder
    generated_by?: SortOrderInput | SortOrder
    generation_date?: SortOrderInput | SortOrder
    date_range_start?: SortOrderInput | SortOrder
    date_range_end?: SortOrderInput | SortOrder
    parameters?: SortOrderInput | SortOrder
    file_path?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    _count?: reportsCountOrderByAggregateInput
    _avg?: reportsAvgOrderByAggregateInput
    _max?: reportsMaxOrderByAggregateInput
    _min?: reportsMinOrderByAggregateInput
    _sum?: reportsSumOrderByAggregateInput
  }

  export type reportsScalarWhereWithAggregatesInput = {
    AND?: reportsScalarWhereWithAggregatesInput | reportsScalarWhereWithAggregatesInput[]
    OR?: reportsScalarWhereWithAggregatesInput[]
    NOT?: reportsScalarWhereWithAggregatesInput | reportsScalarWhereWithAggregatesInput[]
    report_id?: IntWithAggregatesFilter<"reports"> | number
    company_id?: IntNullableWithAggregatesFilter<"reports"> | number | null
    report_name?: StringWithAggregatesFilter<"reports"> | string
    report_type?: StringWithAggregatesFilter<"reports"> | string
    generated_by?: IntNullableWithAggregatesFilter<"reports"> | number | null
    generation_date?: DateTimeNullableWithAggregatesFilter<"reports"> | Date | string | null
    date_range_start?: DateTimeNullableWithAggregatesFilter<"reports"> | Date | string | null
    date_range_end?: DateTimeNullableWithAggregatesFilter<"reports"> | Date | string | null
    parameters?: JsonNullableWithAggregatesFilter<"reports">
    file_path?: StringNullableWithAggregatesFilter<"reports"> | string | null
    status?: StringNullableWithAggregatesFilter<"reports"> | string | null
  }

  export type safety_inspectionsWhereInput = {
    AND?: safety_inspectionsWhereInput | safety_inspectionsWhereInput[]
    OR?: safety_inspectionsWhereInput[]
    NOT?: safety_inspectionsWhereInput | safety_inspectionsWhereInput[]
    inspection_id?: IntFilter<"safety_inspections"> | number
    vehicle_id?: IntNullableFilter<"safety_inspections"> | number | null
    inspector_name?: StringNullableFilter<"safety_inspections"> | string | null
    inspection_date?: DateTimeFilter<"safety_inspections"> | Date | string
    inspection_type?: StringFilter<"safety_inspections"> | string
    odometer_reading?: DecimalNullableFilter<"safety_inspections"> | Decimal | DecimalJsLike | number | string | null
    overall_score?: DecimalNullableFilter<"safety_inspections"> | Decimal | DecimalJsLike | number | string | null
    passed?: BoolFilter<"safety_inspections"> | boolean
    defects_found?: IntNullableFilter<"safety_inspections"> | number | null
    critical_defects?: IntNullableFilter<"safety_inspections"> | number | null
    notes?: StringNullableFilter<"safety_inspections"> | string | null
    next_inspection_due?: DateTimeNullableFilter<"safety_inspections"> | Date | string | null
    certificate_number?: StringNullableFilter<"safety_inspections"> | string | null
    vehicles?: XOR<VehiclesNullableScalarRelationFilter, vehiclesWhereInput> | null
  }

  export type safety_inspectionsOrderByWithRelationInput = {
    inspection_id?: SortOrder
    vehicle_id?: SortOrderInput | SortOrder
    inspector_name?: SortOrderInput | SortOrder
    inspection_date?: SortOrder
    inspection_type?: SortOrder
    odometer_reading?: SortOrderInput | SortOrder
    overall_score?: SortOrderInput | SortOrder
    passed?: SortOrder
    defects_found?: SortOrderInput | SortOrder
    critical_defects?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    next_inspection_due?: SortOrderInput | SortOrder
    certificate_number?: SortOrderInput | SortOrder
    vehicles?: vehiclesOrderByWithRelationInput
  }

  export type safety_inspectionsWhereUniqueInput = Prisma.AtLeast<{
    inspection_id?: number
    AND?: safety_inspectionsWhereInput | safety_inspectionsWhereInput[]
    OR?: safety_inspectionsWhereInput[]
    NOT?: safety_inspectionsWhereInput | safety_inspectionsWhereInput[]
    vehicle_id?: IntNullableFilter<"safety_inspections"> | number | null
    inspector_name?: StringNullableFilter<"safety_inspections"> | string | null
    inspection_date?: DateTimeFilter<"safety_inspections"> | Date | string
    inspection_type?: StringFilter<"safety_inspections"> | string
    odometer_reading?: DecimalNullableFilter<"safety_inspections"> | Decimal | DecimalJsLike | number | string | null
    overall_score?: DecimalNullableFilter<"safety_inspections"> | Decimal | DecimalJsLike | number | string | null
    passed?: BoolFilter<"safety_inspections"> | boolean
    defects_found?: IntNullableFilter<"safety_inspections"> | number | null
    critical_defects?: IntNullableFilter<"safety_inspections"> | number | null
    notes?: StringNullableFilter<"safety_inspections"> | string | null
    next_inspection_due?: DateTimeNullableFilter<"safety_inspections"> | Date | string | null
    certificate_number?: StringNullableFilter<"safety_inspections"> | string | null
    vehicles?: XOR<VehiclesNullableScalarRelationFilter, vehiclesWhereInput> | null
  }, "inspection_id">

  export type safety_inspectionsOrderByWithAggregationInput = {
    inspection_id?: SortOrder
    vehicle_id?: SortOrderInput | SortOrder
    inspector_name?: SortOrderInput | SortOrder
    inspection_date?: SortOrder
    inspection_type?: SortOrder
    odometer_reading?: SortOrderInput | SortOrder
    overall_score?: SortOrderInput | SortOrder
    passed?: SortOrder
    defects_found?: SortOrderInput | SortOrder
    critical_defects?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    next_inspection_due?: SortOrderInput | SortOrder
    certificate_number?: SortOrderInput | SortOrder
    _count?: safety_inspectionsCountOrderByAggregateInput
    _avg?: safety_inspectionsAvgOrderByAggregateInput
    _max?: safety_inspectionsMaxOrderByAggregateInput
    _min?: safety_inspectionsMinOrderByAggregateInput
    _sum?: safety_inspectionsSumOrderByAggregateInput
  }

  export type safety_inspectionsScalarWhereWithAggregatesInput = {
    AND?: safety_inspectionsScalarWhereWithAggregatesInput | safety_inspectionsScalarWhereWithAggregatesInput[]
    OR?: safety_inspectionsScalarWhereWithAggregatesInput[]
    NOT?: safety_inspectionsScalarWhereWithAggregatesInput | safety_inspectionsScalarWhereWithAggregatesInput[]
    inspection_id?: IntWithAggregatesFilter<"safety_inspections"> | number
    vehicle_id?: IntNullableWithAggregatesFilter<"safety_inspections"> | number | null
    inspector_name?: StringNullableWithAggregatesFilter<"safety_inspections"> | string | null
    inspection_date?: DateTimeWithAggregatesFilter<"safety_inspections"> | Date | string
    inspection_type?: StringWithAggregatesFilter<"safety_inspections"> | string
    odometer_reading?: DecimalNullableWithAggregatesFilter<"safety_inspections"> | Decimal | DecimalJsLike | number | string | null
    overall_score?: DecimalNullableWithAggregatesFilter<"safety_inspections"> | Decimal | DecimalJsLike | number | string | null
    passed?: BoolWithAggregatesFilter<"safety_inspections"> | boolean
    defects_found?: IntNullableWithAggregatesFilter<"safety_inspections"> | number | null
    critical_defects?: IntNullableWithAggregatesFilter<"safety_inspections"> | number | null
    notes?: StringNullableWithAggregatesFilter<"safety_inspections"> | string | null
    next_inspection_due?: DateTimeNullableWithAggregatesFilter<"safety_inspections"> | Date | string | null
    certificate_number?: StringNullableWithAggregatesFilter<"safety_inspections"> | string | null
  }

  export type service_providersWhereInput = {
    AND?: service_providersWhereInput | service_providersWhereInput[]
    OR?: service_providersWhereInput[]
    NOT?: service_providersWhereInput | service_providersWhereInput[]
    provider_id?: IntFilter<"service_providers"> | number
    company_id?: IntNullableFilter<"service_providers"> | number | null
    provider_name?: StringFilter<"service_providers"> | string
    service_type?: StringFilter<"service_providers"> | string
    contact_person?: StringNullableFilter<"service_providers"> | string | null
    phone?: StringNullableFilter<"service_providers"> | string | null
    email?: StringNullableFilter<"service_providers"> | string | null
    address?: StringNullableFilter<"service_providers"> | string | null
    hourly_rate?: DecimalNullableFilter<"service_providers"> | Decimal | DecimalJsLike | number | string | null
    rating?: DecimalNullableFilter<"service_providers"> | Decimal | DecimalJsLike | number | string | null
    is_preferred?: BoolNullableFilter<"service_providers"> | boolean | null
    maintenance_records?: Maintenance_recordsListRelationFilter
    companies?: XOR<CompaniesNullableScalarRelationFilter, companiesWhereInput> | null
  }

  export type service_providersOrderByWithRelationInput = {
    provider_id?: SortOrder
    company_id?: SortOrderInput | SortOrder
    provider_name?: SortOrder
    service_type?: SortOrder
    contact_person?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    address?: SortOrderInput | SortOrder
    hourly_rate?: SortOrderInput | SortOrder
    rating?: SortOrderInput | SortOrder
    is_preferred?: SortOrderInput | SortOrder
    maintenance_records?: maintenance_recordsOrderByRelationAggregateInput
    companies?: companiesOrderByWithRelationInput
  }

  export type service_providersWhereUniqueInput = Prisma.AtLeast<{
    provider_id?: number
    AND?: service_providersWhereInput | service_providersWhereInput[]
    OR?: service_providersWhereInput[]
    NOT?: service_providersWhereInput | service_providersWhereInput[]
    company_id?: IntNullableFilter<"service_providers"> | number | null
    provider_name?: StringFilter<"service_providers"> | string
    service_type?: StringFilter<"service_providers"> | string
    contact_person?: StringNullableFilter<"service_providers"> | string | null
    phone?: StringNullableFilter<"service_providers"> | string | null
    email?: StringNullableFilter<"service_providers"> | string | null
    address?: StringNullableFilter<"service_providers"> | string | null
    hourly_rate?: DecimalNullableFilter<"service_providers"> | Decimal | DecimalJsLike | number | string | null
    rating?: DecimalNullableFilter<"service_providers"> | Decimal | DecimalJsLike | number | string | null
    is_preferred?: BoolNullableFilter<"service_providers"> | boolean | null
    maintenance_records?: Maintenance_recordsListRelationFilter
    companies?: XOR<CompaniesNullableScalarRelationFilter, companiesWhereInput> | null
  }, "provider_id">

  export type service_providersOrderByWithAggregationInput = {
    provider_id?: SortOrder
    company_id?: SortOrderInput | SortOrder
    provider_name?: SortOrder
    service_type?: SortOrder
    contact_person?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    address?: SortOrderInput | SortOrder
    hourly_rate?: SortOrderInput | SortOrder
    rating?: SortOrderInput | SortOrder
    is_preferred?: SortOrderInput | SortOrder
    _count?: service_providersCountOrderByAggregateInput
    _avg?: service_providersAvgOrderByAggregateInput
    _max?: service_providersMaxOrderByAggregateInput
    _min?: service_providersMinOrderByAggregateInput
    _sum?: service_providersSumOrderByAggregateInput
  }

  export type service_providersScalarWhereWithAggregatesInput = {
    AND?: service_providersScalarWhereWithAggregatesInput | service_providersScalarWhereWithAggregatesInput[]
    OR?: service_providersScalarWhereWithAggregatesInput[]
    NOT?: service_providersScalarWhereWithAggregatesInput | service_providersScalarWhereWithAggregatesInput[]
    provider_id?: IntWithAggregatesFilter<"service_providers"> | number
    company_id?: IntNullableWithAggregatesFilter<"service_providers"> | number | null
    provider_name?: StringWithAggregatesFilter<"service_providers"> | string
    service_type?: StringWithAggregatesFilter<"service_providers"> | string
    contact_person?: StringNullableWithAggregatesFilter<"service_providers"> | string | null
    phone?: StringNullableWithAggregatesFilter<"service_providers"> | string | null
    email?: StringNullableWithAggregatesFilter<"service_providers"> | string | null
    address?: StringNullableWithAggregatesFilter<"service_providers"> | string | null
    hourly_rate?: DecimalNullableWithAggregatesFilter<"service_providers"> | Decimal | DecimalJsLike | number | string | null
    rating?: DecimalNullableWithAggregatesFilter<"service_providers"> | Decimal | DecimalJsLike | number | string | null
    is_preferred?: BoolNullableWithAggregatesFilter<"service_providers"> | boolean | null
  }

  export type tripsWhereInput = {
    AND?: tripsWhereInput | tripsWhereInput[]
    OR?: tripsWhereInput[]
    NOT?: tripsWhereInput | tripsWhereInput[]
    trip_id?: IntFilter<"trips"> | number
    vehicle_id?: IntNullableFilter<"trips"> | number | null
    driver_id?: IntNullableFilter<"trips"> | number | null
    start_time?: DateTimeNullableFilter<"trips"> | Date | string | null
    end_time?: DateTimeNullableFilter<"trips"> | Date | string | null
    start_location?: StringNullableFilter<"trips"> | string | null
    end_location?: StringNullableFilter<"trips"> | string | null
    start_odometer?: DecimalNullableFilter<"trips"> | Decimal | DecimalJsLike | number | string | null
    end_odometer?: DecimalNullableFilter<"trips"> | Decimal | DecimalJsLike | number | string | null
    distance_traveled?: DecimalNullableFilter<"trips"> | Decimal | DecimalJsLike | number | string | null
    purpose?: StringNullableFilter<"trips"> | string | null
    trip_type?: StringNullableFilter<"trips"> | string | null
    fuel_consumed?: DecimalNullableFilter<"trips"> | Decimal | DecimalJsLike | number | string | null
    average_speed?: DecimalNullableFilter<"trips"> | Decimal | DecimalJsLike | number | string | null
    max_speed?: DecimalNullableFilter<"trips"> | Decimal | DecimalJsLike | number | string | null
    idle_time_minutes?: IntNullableFilter<"trips"> | number | null
    harsh_braking_count?: IntNullableFilter<"trips"> | number | null
    harsh_acceleration_count?: IntNullableFilter<"trips"> | number | null
    speeding_violations?: IntNullableFilter<"trips"> | number | null
    route_efficiency_score?: DecimalNullableFilter<"trips"> | Decimal | DecimalJsLike | number | string | null
    cost?: DecimalNullableFilter<"trips"> | Decimal | DecimalJsLike | number | string | null
    notes?: StringNullableFilter<"trips"> | string | null
    created_at?: DateTimeNullableFilter<"trips"> | Date | string | null
    drivers?: XOR<DriversNullableScalarRelationFilter, driversWhereInput> | null
    vehicles?: XOR<VehiclesNullableScalarRelationFilter, vehiclesWhereInput> | null
  }

  export type tripsOrderByWithRelationInput = {
    trip_id?: SortOrder
    vehicle_id?: SortOrderInput | SortOrder
    driver_id?: SortOrderInput | SortOrder
    start_time?: SortOrderInput | SortOrder
    end_time?: SortOrderInput | SortOrder
    start_location?: SortOrderInput | SortOrder
    end_location?: SortOrderInput | SortOrder
    start_odometer?: SortOrderInput | SortOrder
    end_odometer?: SortOrderInput | SortOrder
    distance_traveled?: SortOrderInput | SortOrder
    purpose?: SortOrderInput | SortOrder
    trip_type?: SortOrderInput | SortOrder
    fuel_consumed?: SortOrderInput | SortOrder
    average_speed?: SortOrderInput | SortOrder
    max_speed?: SortOrderInput | SortOrder
    idle_time_minutes?: SortOrderInput | SortOrder
    harsh_braking_count?: SortOrderInput | SortOrder
    harsh_acceleration_count?: SortOrderInput | SortOrder
    speeding_violations?: SortOrderInput | SortOrder
    route_efficiency_score?: SortOrderInput | SortOrder
    cost?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    drivers?: driversOrderByWithRelationInput
    vehicles?: vehiclesOrderByWithRelationInput
  }

  export type tripsWhereUniqueInput = Prisma.AtLeast<{
    trip_id?: number
    AND?: tripsWhereInput | tripsWhereInput[]
    OR?: tripsWhereInput[]
    NOT?: tripsWhereInput | tripsWhereInput[]
    vehicle_id?: IntNullableFilter<"trips"> | number | null
    driver_id?: IntNullableFilter<"trips"> | number | null
    start_time?: DateTimeNullableFilter<"trips"> | Date | string | null
    end_time?: DateTimeNullableFilter<"trips"> | Date | string | null
    start_location?: StringNullableFilter<"trips"> | string | null
    end_location?: StringNullableFilter<"trips"> | string | null
    start_odometer?: DecimalNullableFilter<"trips"> | Decimal | DecimalJsLike | number | string | null
    end_odometer?: DecimalNullableFilter<"trips"> | Decimal | DecimalJsLike | number | string | null
    distance_traveled?: DecimalNullableFilter<"trips"> | Decimal | DecimalJsLike | number | string | null
    purpose?: StringNullableFilter<"trips"> | string | null
    trip_type?: StringNullableFilter<"trips"> | string | null
    fuel_consumed?: DecimalNullableFilter<"trips"> | Decimal | DecimalJsLike | number | string | null
    average_speed?: DecimalNullableFilter<"trips"> | Decimal | DecimalJsLike | number | string | null
    max_speed?: DecimalNullableFilter<"trips"> | Decimal | DecimalJsLike | number | string | null
    idle_time_minutes?: IntNullableFilter<"trips"> | number | null
    harsh_braking_count?: IntNullableFilter<"trips"> | number | null
    harsh_acceleration_count?: IntNullableFilter<"trips"> | number | null
    speeding_violations?: IntNullableFilter<"trips"> | number | null
    route_efficiency_score?: DecimalNullableFilter<"trips"> | Decimal | DecimalJsLike | number | string | null
    cost?: DecimalNullableFilter<"trips"> | Decimal | DecimalJsLike | number | string | null
    notes?: StringNullableFilter<"trips"> | string | null
    created_at?: DateTimeNullableFilter<"trips"> | Date | string | null
    drivers?: XOR<DriversNullableScalarRelationFilter, driversWhereInput> | null
    vehicles?: XOR<VehiclesNullableScalarRelationFilter, vehiclesWhereInput> | null
  }, "trip_id">

  export type tripsOrderByWithAggregationInput = {
    trip_id?: SortOrder
    vehicle_id?: SortOrderInput | SortOrder
    driver_id?: SortOrderInput | SortOrder
    start_time?: SortOrderInput | SortOrder
    end_time?: SortOrderInput | SortOrder
    start_location?: SortOrderInput | SortOrder
    end_location?: SortOrderInput | SortOrder
    start_odometer?: SortOrderInput | SortOrder
    end_odometer?: SortOrderInput | SortOrder
    distance_traveled?: SortOrderInput | SortOrder
    purpose?: SortOrderInput | SortOrder
    trip_type?: SortOrderInput | SortOrder
    fuel_consumed?: SortOrderInput | SortOrder
    average_speed?: SortOrderInput | SortOrder
    max_speed?: SortOrderInput | SortOrder
    idle_time_minutes?: SortOrderInput | SortOrder
    harsh_braking_count?: SortOrderInput | SortOrder
    harsh_acceleration_count?: SortOrderInput | SortOrder
    speeding_violations?: SortOrderInput | SortOrder
    route_efficiency_score?: SortOrderInput | SortOrder
    cost?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    _count?: tripsCountOrderByAggregateInput
    _avg?: tripsAvgOrderByAggregateInput
    _max?: tripsMaxOrderByAggregateInput
    _min?: tripsMinOrderByAggregateInput
    _sum?: tripsSumOrderByAggregateInput
  }

  export type tripsScalarWhereWithAggregatesInput = {
    AND?: tripsScalarWhereWithAggregatesInput | tripsScalarWhereWithAggregatesInput[]
    OR?: tripsScalarWhereWithAggregatesInput[]
    NOT?: tripsScalarWhereWithAggregatesInput | tripsScalarWhereWithAggregatesInput[]
    trip_id?: IntWithAggregatesFilter<"trips"> | number
    vehicle_id?: IntNullableWithAggregatesFilter<"trips"> | number | null
    driver_id?: IntNullableWithAggregatesFilter<"trips"> | number | null
    start_time?: DateTimeNullableWithAggregatesFilter<"trips"> | Date | string | null
    end_time?: DateTimeNullableWithAggregatesFilter<"trips"> | Date | string | null
    start_location?: StringNullableWithAggregatesFilter<"trips"> | string | null
    end_location?: StringNullableWithAggregatesFilter<"trips"> | string | null
    start_odometer?: DecimalNullableWithAggregatesFilter<"trips"> | Decimal | DecimalJsLike | number | string | null
    end_odometer?: DecimalNullableWithAggregatesFilter<"trips"> | Decimal | DecimalJsLike | number | string | null
    distance_traveled?: DecimalNullableWithAggregatesFilter<"trips"> | Decimal | DecimalJsLike | number | string | null
    purpose?: StringNullableWithAggregatesFilter<"trips"> | string | null
    trip_type?: StringNullableWithAggregatesFilter<"trips"> | string | null
    fuel_consumed?: DecimalNullableWithAggregatesFilter<"trips"> | Decimal | DecimalJsLike | number | string | null
    average_speed?: DecimalNullableWithAggregatesFilter<"trips"> | Decimal | DecimalJsLike | number | string | null
    max_speed?: DecimalNullableWithAggregatesFilter<"trips"> | Decimal | DecimalJsLike | number | string | null
    idle_time_minutes?: IntNullableWithAggregatesFilter<"trips"> | number | null
    harsh_braking_count?: IntNullableWithAggregatesFilter<"trips"> | number | null
    harsh_acceleration_count?: IntNullableWithAggregatesFilter<"trips"> | number | null
    speeding_violations?: IntNullableWithAggregatesFilter<"trips"> | number | null
    route_efficiency_score?: DecimalNullableWithAggregatesFilter<"trips"> | Decimal | DecimalJsLike | number | string | null
    cost?: DecimalNullableWithAggregatesFilter<"trips"> | Decimal | DecimalJsLike | number | string | null
    notes?: StringNullableWithAggregatesFilter<"trips"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"trips"> | Date | string | null
  }

  export type usersWhereInput = {
    AND?: usersWhereInput | usersWhereInput[]
    OR?: usersWhereInput[]
    NOT?: usersWhereInput | usersWhereInput[]
    user_id?: IntFilter<"users"> | number
    company_id?: IntNullableFilter<"users"> | number | null
    username?: StringFilter<"users"> | string
    email?: StringFilter<"users"> | string
    password_hash?: StringFilter<"users"> | string
    first_name?: StringNullableFilter<"users"> | string | null
    last_name?: StringNullableFilter<"users"> | string | null
    role?: StringFilter<"users"> | string
    phone?: StringNullableFilter<"users"> | string | null
    is_active?: BoolNullableFilter<"users"> | boolean | null
    last_login?: DateTimeNullableFilter<"users"> | Date | string | null
    created_at?: DateTimeNullableFilter<"users"> | Date | string | null
    reports?: ReportsListRelationFilter
    companies?: XOR<CompaniesNullableScalarRelationFilter, companiesWhereInput> | null
  }

  export type usersOrderByWithRelationInput = {
    user_id?: SortOrder
    company_id?: SortOrderInput | SortOrder
    username?: SortOrder
    email?: SortOrder
    password_hash?: SortOrder
    first_name?: SortOrderInput | SortOrder
    last_name?: SortOrderInput | SortOrder
    role?: SortOrder
    phone?: SortOrderInput | SortOrder
    is_active?: SortOrderInput | SortOrder
    last_login?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    reports?: reportsOrderByRelationAggregateInput
    companies?: companiesOrderByWithRelationInput
  }

  export type usersWhereUniqueInput = Prisma.AtLeast<{
    user_id?: number
    username?: string
    email?: string
    AND?: usersWhereInput | usersWhereInput[]
    OR?: usersWhereInput[]
    NOT?: usersWhereInput | usersWhereInput[]
    company_id?: IntNullableFilter<"users"> | number | null
    password_hash?: StringFilter<"users"> | string
    first_name?: StringNullableFilter<"users"> | string | null
    last_name?: StringNullableFilter<"users"> | string | null
    role?: StringFilter<"users"> | string
    phone?: StringNullableFilter<"users"> | string | null
    is_active?: BoolNullableFilter<"users"> | boolean | null
    last_login?: DateTimeNullableFilter<"users"> | Date | string | null
    created_at?: DateTimeNullableFilter<"users"> | Date | string | null
    reports?: ReportsListRelationFilter
    companies?: XOR<CompaniesNullableScalarRelationFilter, companiesWhereInput> | null
  }, "user_id" | "username" | "email">

  export type usersOrderByWithAggregationInput = {
    user_id?: SortOrder
    company_id?: SortOrderInput | SortOrder
    username?: SortOrder
    email?: SortOrder
    password_hash?: SortOrder
    first_name?: SortOrderInput | SortOrder
    last_name?: SortOrderInput | SortOrder
    role?: SortOrder
    phone?: SortOrderInput | SortOrder
    is_active?: SortOrderInput | SortOrder
    last_login?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    _count?: usersCountOrderByAggregateInput
    _avg?: usersAvgOrderByAggregateInput
    _max?: usersMaxOrderByAggregateInput
    _min?: usersMinOrderByAggregateInput
    _sum?: usersSumOrderByAggregateInput
  }

  export type usersScalarWhereWithAggregatesInput = {
    AND?: usersScalarWhereWithAggregatesInput | usersScalarWhereWithAggregatesInput[]
    OR?: usersScalarWhereWithAggregatesInput[]
    NOT?: usersScalarWhereWithAggregatesInput | usersScalarWhereWithAggregatesInput[]
    user_id?: IntWithAggregatesFilter<"users"> | number
    company_id?: IntNullableWithAggregatesFilter<"users"> | number | null
    username?: StringWithAggregatesFilter<"users"> | string
    email?: StringWithAggregatesFilter<"users"> | string
    password_hash?: StringWithAggregatesFilter<"users"> | string
    first_name?: StringNullableWithAggregatesFilter<"users"> | string | null
    last_name?: StringNullableWithAggregatesFilter<"users"> | string | null
    role?: StringWithAggregatesFilter<"users"> | string
    phone?: StringNullableWithAggregatesFilter<"users"> | string | null
    is_active?: BoolNullableWithAggregatesFilter<"users"> | boolean | null
    last_login?: DateTimeNullableWithAggregatesFilter<"users"> | Date | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"users"> | Date | string | null
  }

  export type vehicle_assignmentsWhereInput = {
    AND?: vehicle_assignmentsWhereInput | vehicle_assignmentsWhereInput[]
    OR?: vehicle_assignmentsWhereInput[]
    NOT?: vehicle_assignmentsWhereInput | vehicle_assignmentsWhereInput[]
    assignment_id?: IntFilter<"vehicle_assignments"> | number
    vehicle_id?: IntNullableFilter<"vehicle_assignments"> | number | null
    driver_id?: IntNullableFilter<"vehicle_assignments"> | number | null
    assigned_date?: DateTimeFilter<"vehicle_assignments"> | Date | string
    end_date?: DateTimeNullableFilter<"vehicle_assignments"> | Date | string | null
    assignment_type?: StringNullableFilter<"vehicle_assignments"> | string | null
    notes?: StringNullableFilter<"vehicle_assignments"> | string | null
    is_active?: BoolNullableFilter<"vehicle_assignments"> | boolean | null
    drivers?: XOR<DriversNullableScalarRelationFilter, driversWhereInput> | null
    vehicles?: XOR<VehiclesNullableScalarRelationFilter, vehiclesWhereInput> | null
  }

  export type vehicle_assignmentsOrderByWithRelationInput = {
    assignment_id?: SortOrder
    vehicle_id?: SortOrderInput | SortOrder
    driver_id?: SortOrderInput | SortOrder
    assigned_date?: SortOrder
    end_date?: SortOrderInput | SortOrder
    assignment_type?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    is_active?: SortOrderInput | SortOrder
    drivers?: driversOrderByWithRelationInput
    vehicles?: vehiclesOrderByWithRelationInput
  }

  export type vehicle_assignmentsWhereUniqueInput = Prisma.AtLeast<{
    assignment_id?: number
    AND?: vehicle_assignmentsWhereInput | vehicle_assignmentsWhereInput[]
    OR?: vehicle_assignmentsWhereInput[]
    NOT?: vehicle_assignmentsWhereInput | vehicle_assignmentsWhereInput[]
    vehicle_id?: IntNullableFilter<"vehicle_assignments"> | number | null
    driver_id?: IntNullableFilter<"vehicle_assignments"> | number | null
    assigned_date?: DateTimeFilter<"vehicle_assignments"> | Date | string
    end_date?: DateTimeNullableFilter<"vehicle_assignments"> | Date | string | null
    assignment_type?: StringNullableFilter<"vehicle_assignments"> | string | null
    notes?: StringNullableFilter<"vehicle_assignments"> | string | null
    is_active?: BoolNullableFilter<"vehicle_assignments"> | boolean | null
    drivers?: XOR<DriversNullableScalarRelationFilter, driversWhereInput> | null
    vehicles?: XOR<VehiclesNullableScalarRelationFilter, vehiclesWhereInput> | null
  }, "assignment_id">

  export type vehicle_assignmentsOrderByWithAggregationInput = {
    assignment_id?: SortOrder
    vehicle_id?: SortOrderInput | SortOrder
    driver_id?: SortOrderInput | SortOrder
    assigned_date?: SortOrder
    end_date?: SortOrderInput | SortOrder
    assignment_type?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    is_active?: SortOrderInput | SortOrder
    _count?: vehicle_assignmentsCountOrderByAggregateInput
    _avg?: vehicle_assignmentsAvgOrderByAggregateInput
    _max?: vehicle_assignmentsMaxOrderByAggregateInput
    _min?: vehicle_assignmentsMinOrderByAggregateInput
    _sum?: vehicle_assignmentsSumOrderByAggregateInput
  }

  export type vehicle_assignmentsScalarWhereWithAggregatesInput = {
    AND?: vehicle_assignmentsScalarWhereWithAggregatesInput | vehicle_assignmentsScalarWhereWithAggregatesInput[]
    OR?: vehicle_assignmentsScalarWhereWithAggregatesInput[]
    NOT?: vehicle_assignmentsScalarWhereWithAggregatesInput | vehicle_assignmentsScalarWhereWithAggregatesInput[]
    assignment_id?: IntWithAggregatesFilter<"vehicle_assignments"> | number
    vehicle_id?: IntNullableWithAggregatesFilter<"vehicle_assignments"> | number | null
    driver_id?: IntNullableWithAggregatesFilter<"vehicle_assignments"> | number | null
    assigned_date?: DateTimeWithAggregatesFilter<"vehicle_assignments"> | Date | string
    end_date?: DateTimeNullableWithAggregatesFilter<"vehicle_assignments"> | Date | string | null
    assignment_type?: StringNullableWithAggregatesFilter<"vehicle_assignments"> | string | null
    notes?: StringNullableWithAggregatesFilter<"vehicle_assignments"> | string | null
    is_active?: BoolNullableWithAggregatesFilter<"vehicle_assignments"> | boolean | null
  }

  export type vehicle_typesWhereInput = {
    AND?: vehicle_typesWhereInput | vehicle_typesWhereInput[]
    OR?: vehicle_typesWhereInput[]
    NOT?: vehicle_typesWhereInput | vehicle_typesWhereInput[]
    type_id?: IntFilter<"vehicle_types"> | number
    type_name?: StringFilter<"vehicle_types"> | string
    description?: StringNullableFilter<"vehicle_types"> | string | null
    fuel_efficiency_rating?: DecimalNullableFilter<"vehicle_types"> | Decimal | DecimalJsLike | number | string | null
    capacity_passengers?: IntNullableFilter<"vehicle_types"> | number | null
    capacity_cargo_cubic_feet?: DecimalNullableFilter<"vehicle_types"> | Decimal | DecimalJsLike | number | string | null
    vehicles?: VehiclesListRelationFilter
  }

  export type vehicle_typesOrderByWithRelationInput = {
    type_id?: SortOrder
    type_name?: SortOrder
    description?: SortOrderInput | SortOrder
    fuel_efficiency_rating?: SortOrderInput | SortOrder
    capacity_passengers?: SortOrderInput | SortOrder
    capacity_cargo_cubic_feet?: SortOrderInput | SortOrder
    vehicles?: vehiclesOrderByRelationAggregateInput
  }

  export type vehicle_typesWhereUniqueInput = Prisma.AtLeast<{
    type_id?: number
    AND?: vehicle_typesWhereInput | vehicle_typesWhereInput[]
    OR?: vehicle_typesWhereInput[]
    NOT?: vehicle_typesWhereInput | vehicle_typesWhereInput[]
    type_name?: StringFilter<"vehicle_types"> | string
    description?: StringNullableFilter<"vehicle_types"> | string | null
    fuel_efficiency_rating?: DecimalNullableFilter<"vehicle_types"> | Decimal | DecimalJsLike | number | string | null
    capacity_passengers?: IntNullableFilter<"vehicle_types"> | number | null
    capacity_cargo_cubic_feet?: DecimalNullableFilter<"vehicle_types"> | Decimal | DecimalJsLike | number | string | null
    vehicles?: VehiclesListRelationFilter
  }, "type_id">

  export type vehicle_typesOrderByWithAggregationInput = {
    type_id?: SortOrder
    type_name?: SortOrder
    description?: SortOrderInput | SortOrder
    fuel_efficiency_rating?: SortOrderInput | SortOrder
    capacity_passengers?: SortOrderInput | SortOrder
    capacity_cargo_cubic_feet?: SortOrderInput | SortOrder
    _count?: vehicle_typesCountOrderByAggregateInput
    _avg?: vehicle_typesAvgOrderByAggregateInput
    _max?: vehicle_typesMaxOrderByAggregateInput
    _min?: vehicle_typesMinOrderByAggregateInput
    _sum?: vehicle_typesSumOrderByAggregateInput
  }

  export type vehicle_typesScalarWhereWithAggregatesInput = {
    AND?: vehicle_typesScalarWhereWithAggregatesInput | vehicle_typesScalarWhereWithAggregatesInput[]
    OR?: vehicle_typesScalarWhereWithAggregatesInput[]
    NOT?: vehicle_typesScalarWhereWithAggregatesInput | vehicle_typesScalarWhereWithAggregatesInput[]
    type_id?: IntWithAggregatesFilter<"vehicle_types"> | number
    type_name?: StringWithAggregatesFilter<"vehicle_types"> | string
    description?: StringNullableWithAggregatesFilter<"vehicle_types"> | string | null
    fuel_efficiency_rating?: DecimalNullableWithAggregatesFilter<"vehicle_types"> | Decimal | DecimalJsLike | number | string | null
    capacity_passengers?: IntNullableWithAggregatesFilter<"vehicle_types"> | number | null
    capacity_cargo_cubic_feet?: DecimalNullableWithAggregatesFilter<"vehicle_types"> | Decimal | DecimalJsLike | number | string | null
  }

  export type vehiclesWhereInput = {
    AND?: vehiclesWhereInput | vehiclesWhereInput[]
    OR?: vehiclesWhereInput[]
    NOT?: vehiclesWhereInput | vehiclesWhereInput[]
    vehicle_id?: IntFilter<"vehicles"> | number
    company_id?: IntNullableFilter<"vehicles"> | number | null
    vehicle_type_id?: IntNullableFilter<"vehicles"> | number | null
    vin?: StringFilter<"vehicles"> | string
    license_plate?: StringFilter<"vehicles"> | string
    make?: StringFilter<"vehicles"> | string
    model?: StringFilter<"vehicles"> | string
    year?: IntFilter<"vehicles"> | number
    color?: StringNullableFilter<"vehicles"> | string | null
    fuel_type?: StringFilter<"vehicles"> | string
    engine_size?: StringNullableFilter<"vehicles"> | string | null
    transmission?: StringNullableFilter<"vehicles"> | string | null
    purchase_date?: DateTimeNullableFilter<"vehicles"> | Date | string | null
    purchase_price?: DecimalNullableFilter<"vehicles"> | Decimal | DecimalJsLike | number | string | null
    current_value?: DecimalNullableFilter<"vehicles"> | Decimal | DecimalJsLike | number | string | null
    odometer_reading?: DecimalNullableFilter<"vehicles"> | Decimal | DecimalJsLike | number | string | null
    fuel_capacity?: DecimalNullableFilter<"vehicles"> | Decimal | DecimalJsLike | number | string | null
    insurance_policy_number?: StringNullableFilter<"vehicles"> | string | null
    insurance_expiry?: DateTimeNullableFilter<"vehicles"> | Date | string | null
    registration_expiry?: DateTimeNullableFilter<"vehicles"> | Date | string | null
    status?: StringNullableFilter<"vehicles"> | string | null
    gps_device_id?: StringNullableFilter<"vehicles"> | string | null
    assigned_driver_id?: IntNullableFilter<"vehicles"> | number | null
    department_id?: IntNullableFilter<"vehicles"> | number | null
    notes?: StringNullableFilter<"vehicles"> | string | null
    created_at?: DateTimeNullableFilter<"vehicles"> | Date | string | null
    expenses?: ExpensesListRelationFilter
    fuel_transactions?: Fuel_transactionsListRelationFilter
    gps_tracking?: Gps_trackingListRelationFilter
    incidents?: IncidentsListRelationFilter
    maintenance_records?: Maintenance_recordsListRelationFilter
    safety_inspections?: Safety_inspectionsListRelationFilter
    trips?: TripsListRelationFilter
    vehicle_assignments?: Vehicle_assignmentsListRelationFilter
    drivers?: XOR<DriversNullableScalarRelationFilter, driversWhereInput> | null
    companies?: XOR<CompaniesNullableScalarRelationFilter, companiesWhereInput> | null
    departments?: XOR<DepartmentsNullableScalarRelationFilter, departmentsWhereInput> | null
    vehicle_types?: XOR<Vehicle_typesNullableScalarRelationFilter, vehicle_typesWhereInput> | null
  }

  export type vehiclesOrderByWithRelationInput = {
    vehicle_id?: SortOrder
    company_id?: SortOrderInput | SortOrder
    vehicle_type_id?: SortOrderInput | SortOrder
    vin?: SortOrder
    license_plate?: SortOrder
    make?: SortOrder
    model?: SortOrder
    year?: SortOrder
    color?: SortOrderInput | SortOrder
    fuel_type?: SortOrder
    engine_size?: SortOrderInput | SortOrder
    transmission?: SortOrderInput | SortOrder
    purchase_date?: SortOrderInput | SortOrder
    purchase_price?: SortOrderInput | SortOrder
    current_value?: SortOrderInput | SortOrder
    odometer_reading?: SortOrderInput | SortOrder
    fuel_capacity?: SortOrderInput | SortOrder
    insurance_policy_number?: SortOrderInput | SortOrder
    insurance_expiry?: SortOrderInput | SortOrder
    registration_expiry?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    gps_device_id?: SortOrderInput | SortOrder
    assigned_driver_id?: SortOrderInput | SortOrder
    department_id?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    expenses?: expensesOrderByRelationAggregateInput
    fuel_transactions?: fuel_transactionsOrderByRelationAggregateInput
    gps_tracking?: gps_trackingOrderByRelationAggregateInput
    incidents?: incidentsOrderByRelationAggregateInput
    maintenance_records?: maintenance_recordsOrderByRelationAggregateInput
    safety_inspections?: safety_inspectionsOrderByRelationAggregateInput
    trips?: tripsOrderByRelationAggregateInput
    vehicle_assignments?: vehicle_assignmentsOrderByRelationAggregateInput
    drivers?: driversOrderByWithRelationInput
    companies?: companiesOrderByWithRelationInput
    departments?: departmentsOrderByWithRelationInput
    vehicle_types?: vehicle_typesOrderByWithRelationInput
  }

  export type vehiclesWhereUniqueInput = Prisma.AtLeast<{
    vehicle_id?: number
    vin?: string
    license_plate?: string
    AND?: vehiclesWhereInput | vehiclesWhereInput[]
    OR?: vehiclesWhereInput[]
    NOT?: vehiclesWhereInput | vehiclesWhereInput[]
    company_id?: IntNullableFilter<"vehicles"> | number | null
    vehicle_type_id?: IntNullableFilter<"vehicles"> | number | null
    make?: StringFilter<"vehicles"> | string
    model?: StringFilter<"vehicles"> | string
    year?: IntFilter<"vehicles"> | number
    color?: StringNullableFilter<"vehicles"> | string | null
    fuel_type?: StringFilter<"vehicles"> | string
    engine_size?: StringNullableFilter<"vehicles"> | string | null
    transmission?: StringNullableFilter<"vehicles"> | string | null
    purchase_date?: DateTimeNullableFilter<"vehicles"> | Date | string | null
    purchase_price?: DecimalNullableFilter<"vehicles"> | Decimal | DecimalJsLike | number | string | null
    current_value?: DecimalNullableFilter<"vehicles"> | Decimal | DecimalJsLike | number | string | null
    odometer_reading?: DecimalNullableFilter<"vehicles"> | Decimal | DecimalJsLike | number | string | null
    fuel_capacity?: DecimalNullableFilter<"vehicles"> | Decimal | DecimalJsLike | number | string | null
    insurance_policy_number?: StringNullableFilter<"vehicles"> | string | null
    insurance_expiry?: DateTimeNullableFilter<"vehicles"> | Date | string | null
    registration_expiry?: DateTimeNullableFilter<"vehicles"> | Date | string | null
    status?: StringNullableFilter<"vehicles"> | string | null
    gps_device_id?: StringNullableFilter<"vehicles"> | string | null
    assigned_driver_id?: IntNullableFilter<"vehicles"> | number | null
    department_id?: IntNullableFilter<"vehicles"> | number | null
    notes?: StringNullableFilter<"vehicles"> | string | null
    created_at?: DateTimeNullableFilter<"vehicles"> | Date | string | null
    expenses?: ExpensesListRelationFilter
    fuel_transactions?: Fuel_transactionsListRelationFilter
    gps_tracking?: Gps_trackingListRelationFilter
    incidents?: IncidentsListRelationFilter
    maintenance_records?: Maintenance_recordsListRelationFilter
    safety_inspections?: Safety_inspectionsListRelationFilter
    trips?: TripsListRelationFilter
    vehicle_assignments?: Vehicle_assignmentsListRelationFilter
    drivers?: XOR<DriversNullableScalarRelationFilter, driversWhereInput> | null
    companies?: XOR<CompaniesNullableScalarRelationFilter, companiesWhereInput> | null
    departments?: XOR<DepartmentsNullableScalarRelationFilter, departmentsWhereInput> | null
    vehicle_types?: XOR<Vehicle_typesNullableScalarRelationFilter, vehicle_typesWhereInput> | null
  }, "vehicle_id" | "vin" | "license_plate">

  export type vehiclesOrderByWithAggregationInput = {
    vehicle_id?: SortOrder
    company_id?: SortOrderInput | SortOrder
    vehicle_type_id?: SortOrderInput | SortOrder
    vin?: SortOrder
    license_plate?: SortOrder
    make?: SortOrder
    model?: SortOrder
    year?: SortOrder
    color?: SortOrderInput | SortOrder
    fuel_type?: SortOrder
    engine_size?: SortOrderInput | SortOrder
    transmission?: SortOrderInput | SortOrder
    purchase_date?: SortOrderInput | SortOrder
    purchase_price?: SortOrderInput | SortOrder
    current_value?: SortOrderInput | SortOrder
    odometer_reading?: SortOrderInput | SortOrder
    fuel_capacity?: SortOrderInput | SortOrder
    insurance_policy_number?: SortOrderInput | SortOrder
    insurance_expiry?: SortOrderInput | SortOrder
    registration_expiry?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    gps_device_id?: SortOrderInput | SortOrder
    assigned_driver_id?: SortOrderInput | SortOrder
    department_id?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    _count?: vehiclesCountOrderByAggregateInput
    _avg?: vehiclesAvgOrderByAggregateInput
    _max?: vehiclesMaxOrderByAggregateInput
    _min?: vehiclesMinOrderByAggregateInput
    _sum?: vehiclesSumOrderByAggregateInput
  }

  export type vehiclesScalarWhereWithAggregatesInput = {
    AND?: vehiclesScalarWhereWithAggregatesInput | vehiclesScalarWhereWithAggregatesInput[]
    OR?: vehiclesScalarWhereWithAggregatesInput[]
    NOT?: vehiclesScalarWhereWithAggregatesInput | vehiclesScalarWhereWithAggregatesInput[]
    vehicle_id?: IntWithAggregatesFilter<"vehicles"> | number
    company_id?: IntNullableWithAggregatesFilter<"vehicles"> | number | null
    vehicle_type_id?: IntNullableWithAggregatesFilter<"vehicles"> | number | null
    vin?: StringWithAggregatesFilter<"vehicles"> | string
    license_plate?: StringWithAggregatesFilter<"vehicles"> | string
    make?: StringWithAggregatesFilter<"vehicles"> | string
    model?: StringWithAggregatesFilter<"vehicles"> | string
    year?: IntWithAggregatesFilter<"vehicles"> | number
    color?: StringNullableWithAggregatesFilter<"vehicles"> | string | null
    fuel_type?: StringWithAggregatesFilter<"vehicles"> | string
    engine_size?: StringNullableWithAggregatesFilter<"vehicles"> | string | null
    transmission?: StringNullableWithAggregatesFilter<"vehicles"> | string | null
    purchase_date?: DateTimeNullableWithAggregatesFilter<"vehicles"> | Date | string | null
    purchase_price?: DecimalNullableWithAggregatesFilter<"vehicles"> | Decimal | DecimalJsLike | number | string | null
    current_value?: DecimalNullableWithAggregatesFilter<"vehicles"> | Decimal | DecimalJsLike | number | string | null
    odometer_reading?: DecimalNullableWithAggregatesFilter<"vehicles"> | Decimal | DecimalJsLike | number | string | null
    fuel_capacity?: DecimalNullableWithAggregatesFilter<"vehicles"> | Decimal | DecimalJsLike | number | string | null
    insurance_policy_number?: StringNullableWithAggregatesFilter<"vehicles"> | string | null
    insurance_expiry?: DateTimeNullableWithAggregatesFilter<"vehicles"> | Date | string | null
    registration_expiry?: DateTimeNullableWithAggregatesFilter<"vehicles"> | Date | string | null
    status?: StringNullableWithAggregatesFilter<"vehicles"> | string | null
    gps_device_id?: StringNullableWithAggregatesFilter<"vehicles"> | string | null
    assigned_driver_id?: IntNullableWithAggregatesFilter<"vehicles"> | number | null
    department_id?: IntNullableWithAggregatesFilter<"vehicles"> | number | null
    notes?: StringNullableWithAggregatesFilter<"vehicles"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"vehicles"> | Date | string | null
  }

  export type companiesCreateInput = {
    company_name: string
    address?: string | null
    phone?: string | null
    email?: string | null
    contact_person?: string | null
    subscription_plan?: string | null
    created_at?: Date | string | null
    is_active?: boolean | null
    departments?: departmentsCreateNestedManyWithoutCompaniesInput
    drivers?: driversCreateNestedManyWithoutCompaniesInput
    reports?: reportsCreateNestedManyWithoutCompaniesInput
    service_providers?: service_providersCreateNestedManyWithoutCompaniesInput
    users?: usersCreateNestedManyWithoutCompaniesInput
    vehicles?: vehiclesCreateNestedManyWithoutCompaniesInput
  }

  export type companiesUncheckedCreateInput = {
    company_id?: number
    company_name: string
    address?: string | null
    phone?: string | null
    email?: string | null
    contact_person?: string | null
    subscription_plan?: string | null
    created_at?: Date | string | null
    is_active?: boolean | null
    departments?: departmentsUncheckedCreateNestedManyWithoutCompaniesInput
    drivers?: driversUncheckedCreateNestedManyWithoutCompaniesInput
    reports?: reportsUncheckedCreateNestedManyWithoutCompaniesInput
    service_providers?: service_providersUncheckedCreateNestedManyWithoutCompaniesInput
    users?: usersUncheckedCreateNestedManyWithoutCompaniesInput
    vehicles?: vehiclesUncheckedCreateNestedManyWithoutCompaniesInput
  }

  export type companiesUpdateInput = {
    company_name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    contact_person?: NullableStringFieldUpdateOperationsInput | string | null
    subscription_plan?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    departments?: departmentsUpdateManyWithoutCompaniesNestedInput
    drivers?: driversUpdateManyWithoutCompaniesNestedInput
    reports?: reportsUpdateManyWithoutCompaniesNestedInput
    service_providers?: service_providersUpdateManyWithoutCompaniesNestedInput
    users?: usersUpdateManyWithoutCompaniesNestedInput
    vehicles?: vehiclesUpdateManyWithoutCompaniesNestedInput
  }

  export type companiesUncheckedUpdateInput = {
    company_id?: IntFieldUpdateOperationsInput | number
    company_name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    contact_person?: NullableStringFieldUpdateOperationsInput | string | null
    subscription_plan?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    departments?: departmentsUncheckedUpdateManyWithoutCompaniesNestedInput
    drivers?: driversUncheckedUpdateManyWithoutCompaniesNestedInput
    reports?: reportsUncheckedUpdateManyWithoutCompaniesNestedInput
    service_providers?: service_providersUncheckedUpdateManyWithoutCompaniesNestedInput
    users?: usersUncheckedUpdateManyWithoutCompaniesNestedInput
    vehicles?: vehiclesUncheckedUpdateManyWithoutCompaniesNestedInput
  }

  export type companiesCreateManyInput = {
    company_id?: number
    company_name: string
    address?: string | null
    phone?: string | null
    email?: string | null
    contact_person?: string | null
    subscription_plan?: string | null
    created_at?: Date | string | null
    is_active?: boolean | null
  }

  export type companiesUpdateManyMutationInput = {
    company_name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    contact_person?: NullableStringFieldUpdateOperationsInput | string | null
    subscription_plan?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type companiesUncheckedUpdateManyInput = {
    company_id?: IntFieldUpdateOperationsInput | number
    company_name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    contact_person?: NullableStringFieldUpdateOperationsInput | string | null
    subscription_plan?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type cost_categoriesCreateInput = {
    category_name: string
    description?: string | null
    is_active?: boolean | null
    expenses?: expensesCreateNestedManyWithoutCost_categoriesInput
  }

  export type cost_categoriesUncheckedCreateInput = {
    category_id?: number
    category_name: string
    description?: string | null
    is_active?: boolean | null
    expenses?: expensesUncheckedCreateNestedManyWithoutCost_categoriesInput
  }

  export type cost_categoriesUpdateInput = {
    category_name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    expenses?: expensesUpdateManyWithoutCost_categoriesNestedInput
  }

  export type cost_categoriesUncheckedUpdateInput = {
    category_id?: IntFieldUpdateOperationsInput | number
    category_name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    expenses?: expensesUncheckedUpdateManyWithoutCost_categoriesNestedInput
  }

  export type cost_categoriesCreateManyInput = {
    category_id?: number
    category_name: string
    description?: string | null
    is_active?: boolean | null
  }

  export type cost_categoriesUpdateManyMutationInput = {
    category_name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type cost_categoriesUncheckedUpdateManyInput = {
    category_id?: IntFieldUpdateOperationsInput | number
    category_name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type departmentsCreateInput = {
    department_name: string
    manager_name?: string | null
    budget?: Decimal | DecimalJsLike | number | string | null
    companies?: companiesCreateNestedOneWithoutDepartmentsInput
    vehicles?: vehiclesCreateNestedManyWithoutDepartmentsInput
  }

  export type departmentsUncheckedCreateInput = {
    department_id?: number
    company_id?: number | null
    department_name: string
    manager_name?: string | null
    budget?: Decimal | DecimalJsLike | number | string | null
    vehicles?: vehiclesUncheckedCreateNestedManyWithoutDepartmentsInput
  }

  export type departmentsUpdateInput = {
    department_name?: StringFieldUpdateOperationsInput | string
    manager_name?: NullableStringFieldUpdateOperationsInput | string | null
    budget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    companies?: companiesUpdateOneWithoutDepartmentsNestedInput
    vehicles?: vehiclesUpdateManyWithoutDepartmentsNestedInput
  }

  export type departmentsUncheckedUpdateInput = {
    department_id?: IntFieldUpdateOperationsInput | number
    company_id?: NullableIntFieldUpdateOperationsInput | number | null
    department_name?: StringFieldUpdateOperationsInput | string
    manager_name?: NullableStringFieldUpdateOperationsInput | string | null
    budget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    vehicles?: vehiclesUncheckedUpdateManyWithoutDepartmentsNestedInput
  }

  export type departmentsCreateManyInput = {
    department_id?: number
    company_id?: number | null
    department_name: string
    manager_name?: string | null
    budget?: Decimal | DecimalJsLike | number | string | null
  }

  export type departmentsUpdateManyMutationInput = {
    department_name?: StringFieldUpdateOperationsInput | string
    manager_name?: NullableStringFieldUpdateOperationsInput | string | null
    budget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type departmentsUncheckedUpdateManyInput = {
    department_id?: IntFieldUpdateOperationsInput | number
    company_id?: NullableIntFieldUpdateOperationsInput | number | null
    department_name?: StringFieldUpdateOperationsInput | string
    manager_name?: NullableStringFieldUpdateOperationsInput | string | null
    budget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type driver_certificationsCreateInput = {
    certification_name?: string | null
    issuing_authority?: string | null
    issue_date?: Date | string | null
    expiry_date?: Date | string | null
    certification_number?: string | null
    is_active?: boolean | null
    drivers?: driversCreateNestedOneWithoutDriver_certificationsInput
  }

  export type driver_certificationsUncheckedCreateInput = {
    certification_id?: number
    driver_id?: number | null
    certification_name?: string | null
    issuing_authority?: string | null
    issue_date?: Date | string | null
    expiry_date?: Date | string | null
    certification_number?: string | null
    is_active?: boolean | null
  }

  export type driver_certificationsUpdateInput = {
    certification_name?: NullableStringFieldUpdateOperationsInput | string | null
    issuing_authority?: NullableStringFieldUpdateOperationsInput | string | null
    issue_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiry_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    certification_number?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    drivers?: driversUpdateOneWithoutDriver_certificationsNestedInput
  }

  export type driver_certificationsUncheckedUpdateInput = {
    certification_id?: IntFieldUpdateOperationsInput | number
    driver_id?: NullableIntFieldUpdateOperationsInput | number | null
    certification_name?: NullableStringFieldUpdateOperationsInput | string | null
    issuing_authority?: NullableStringFieldUpdateOperationsInput | string | null
    issue_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiry_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    certification_number?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type driver_certificationsCreateManyInput = {
    certification_id?: number
    driver_id?: number | null
    certification_name?: string | null
    issuing_authority?: string | null
    issue_date?: Date | string | null
    expiry_date?: Date | string | null
    certification_number?: string | null
    is_active?: boolean | null
  }

  export type driver_certificationsUpdateManyMutationInput = {
    certification_name?: NullableStringFieldUpdateOperationsInput | string | null
    issuing_authority?: NullableStringFieldUpdateOperationsInput | string | null
    issue_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiry_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    certification_number?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type driver_certificationsUncheckedUpdateManyInput = {
    certification_id?: IntFieldUpdateOperationsInput | number
    driver_id?: NullableIntFieldUpdateOperationsInput | number | null
    certification_name?: NullableStringFieldUpdateOperationsInput | string | null
    issuing_authority?: NullableStringFieldUpdateOperationsInput | string | null
    issue_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiry_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    certification_number?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type driversCreateInput = {
    employee_id?: string | null
    first_name: string
    last_name: string
    license_number: string
    license_class?: string | null
    license_expiry_date?: Date | string | null
    date_of_birth?: Date | string | null
    hire_date?: Date | string | null
    phone?: string | null
    email?: string | null
    address?: string | null
    emergency_contact_name?: string | null
    emergency_contact_phone?: string | null
    salary?: Decimal | DecimalJsLike | number | string | null
    status?: string | null
    safety_score?: Decimal | DecimalJsLike | number | string | null
    total_miles_driven?: Decimal | DecimalJsLike | number | string | null
    years_experience?: number | null
    created_at?: Date | string | null
    driver_certifications?: driver_certificationsCreateNestedManyWithoutDriversInput
    companies?: companiesCreateNestedOneWithoutDriversInput
    expenses?: expensesCreateNestedManyWithoutDriversInput
    fuel_transactions?: fuel_transactionsCreateNestedManyWithoutDriversInput
    incidents?: incidentsCreateNestedManyWithoutDriversInput
    trips?: tripsCreateNestedManyWithoutDriversInput
    vehicle_assignments?: vehicle_assignmentsCreateNestedManyWithoutDriversInput
    vehicles?: vehiclesCreateNestedManyWithoutDriversInput
  }

  export type driversUncheckedCreateInput = {
    driver_id?: number
    company_id?: number | null
    employee_id?: string | null
    first_name: string
    last_name: string
    license_number: string
    license_class?: string | null
    license_expiry_date?: Date | string | null
    date_of_birth?: Date | string | null
    hire_date?: Date | string | null
    phone?: string | null
    email?: string | null
    address?: string | null
    emergency_contact_name?: string | null
    emergency_contact_phone?: string | null
    salary?: Decimal | DecimalJsLike | number | string | null
    status?: string | null
    safety_score?: Decimal | DecimalJsLike | number | string | null
    total_miles_driven?: Decimal | DecimalJsLike | number | string | null
    years_experience?: number | null
    created_at?: Date | string | null
    driver_certifications?: driver_certificationsUncheckedCreateNestedManyWithoutDriversInput
    expenses?: expensesUncheckedCreateNestedManyWithoutDriversInput
    fuel_transactions?: fuel_transactionsUncheckedCreateNestedManyWithoutDriversInput
    incidents?: incidentsUncheckedCreateNestedManyWithoutDriversInput
    trips?: tripsUncheckedCreateNestedManyWithoutDriversInput
    vehicle_assignments?: vehicle_assignmentsUncheckedCreateNestedManyWithoutDriversInput
    vehicles?: vehiclesUncheckedCreateNestedManyWithoutDriversInput
  }

  export type driversUpdateInput = {
    employee_id?: NullableStringFieldUpdateOperationsInput | string | null
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: StringFieldUpdateOperationsInput | string
    license_number?: StringFieldUpdateOperationsInput | string
    license_class?: NullableStringFieldUpdateOperationsInput | string | null
    license_expiry_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    date_of_birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hire_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    emergency_contact_name?: NullableStringFieldUpdateOperationsInput | string | null
    emergency_contact_phone?: NullableStringFieldUpdateOperationsInput | string | null
    salary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    safety_score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    total_miles_driven?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    years_experience?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    driver_certifications?: driver_certificationsUpdateManyWithoutDriversNestedInput
    companies?: companiesUpdateOneWithoutDriversNestedInput
    expenses?: expensesUpdateManyWithoutDriversNestedInput
    fuel_transactions?: fuel_transactionsUpdateManyWithoutDriversNestedInput
    incidents?: incidentsUpdateManyWithoutDriversNestedInput
    trips?: tripsUpdateManyWithoutDriversNestedInput
    vehicle_assignments?: vehicle_assignmentsUpdateManyWithoutDriversNestedInput
    vehicles?: vehiclesUpdateManyWithoutDriversNestedInput
  }

  export type driversUncheckedUpdateInput = {
    driver_id?: IntFieldUpdateOperationsInput | number
    company_id?: NullableIntFieldUpdateOperationsInput | number | null
    employee_id?: NullableStringFieldUpdateOperationsInput | string | null
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: StringFieldUpdateOperationsInput | string
    license_number?: StringFieldUpdateOperationsInput | string
    license_class?: NullableStringFieldUpdateOperationsInput | string | null
    license_expiry_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    date_of_birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hire_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    emergency_contact_name?: NullableStringFieldUpdateOperationsInput | string | null
    emergency_contact_phone?: NullableStringFieldUpdateOperationsInput | string | null
    salary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    safety_score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    total_miles_driven?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    years_experience?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    driver_certifications?: driver_certificationsUncheckedUpdateManyWithoutDriversNestedInput
    expenses?: expensesUncheckedUpdateManyWithoutDriversNestedInput
    fuel_transactions?: fuel_transactionsUncheckedUpdateManyWithoutDriversNestedInput
    incidents?: incidentsUncheckedUpdateManyWithoutDriversNestedInput
    trips?: tripsUncheckedUpdateManyWithoutDriversNestedInput
    vehicle_assignments?: vehicle_assignmentsUncheckedUpdateManyWithoutDriversNestedInput
    vehicles?: vehiclesUncheckedUpdateManyWithoutDriversNestedInput
  }

  export type driversCreateManyInput = {
    driver_id?: number
    company_id?: number | null
    employee_id?: string | null
    first_name: string
    last_name: string
    license_number: string
    license_class?: string | null
    license_expiry_date?: Date | string | null
    date_of_birth?: Date | string | null
    hire_date?: Date | string | null
    phone?: string | null
    email?: string | null
    address?: string | null
    emergency_contact_name?: string | null
    emergency_contact_phone?: string | null
    salary?: Decimal | DecimalJsLike | number | string | null
    status?: string | null
    safety_score?: Decimal | DecimalJsLike | number | string | null
    total_miles_driven?: Decimal | DecimalJsLike | number | string | null
    years_experience?: number | null
    created_at?: Date | string | null
  }

  export type driversUpdateManyMutationInput = {
    employee_id?: NullableStringFieldUpdateOperationsInput | string | null
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: StringFieldUpdateOperationsInput | string
    license_number?: StringFieldUpdateOperationsInput | string
    license_class?: NullableStringFieldUpdateOperationsInput | string | null
    license_expiry_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    date_of_birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hire_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    emergency_contact_name?: NullableStringFieldUpdateOperationsInput | string | null
    emergency_contact_phone?: NullableStringFieldUpdateOperationsInput | string | null
    salary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    safety_score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    total_miles_driven?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    years_experience?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type driversUncheckedUpdateManyInput = {
    driver_id?: IntFieldUpdateOperationsInput | number
    company_id?: NullableIntFieldUpdateOperationsInput | number | null
    employee_id?: NullableStringFieldUpdateOperationsInput | string | null
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: StringFieldUpdateOperationsInput | string
    license_number?: StringFieldUpdateOperationsInput | string
    license_class?: NullableStringFieldUpdateOperationsInput | string | null
    license_expiry_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    date_of_birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hire_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    emergency_contact_name?: NullableStringFieldUpdateOperationsInput | string | null
    emergency_contact_phone?: NullableStringFieldUpdateOperationsInput | string | null
    salary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    safety_score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    total_miles_driven?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    years_experience?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type expensesCreateInput = {
    expense_date: Date | string
    amount: Decimal | DecimalJsLike | number | string
    description?: string | null
    vendor?: string | null
    invoice_number?: string | null
    receipt_available?: boolean | null
    approved_by?: string | null
    approval_date?: Date | string | null
    reimbursable?: boolean | null
    notes?: string | null
    created_at?: Date | string | null
    cost_categories?: cost_categoriesCreateNestedOneWithoutExpensesInput
    drivers?: driversCreateNestedOneWithoutExpensesInput
    vehicles?: vehiclesCreateNestedOneWithoutExpensesInput
  }

  export type expensesUncheckedCreateInput = {
    expense_id?: number
    vehicle_id?: number | null
    driver_id?: number | null
    category_id?: number | null
    expense_date: Date | string
    amount: Decimal | DecimalJsLike | number | string
    description?: string | null
    vendor?: string | null
    invoice_number?: string | null
    receipt_available?: boolean | null
    approved_by?: string | null
    approval_date?: Date | string | null
    reimbursable?: boolean | null
    notes?: string | null
    created_at?: Date | string | null
  }

  export type expensesUpdateInput = {
    expense_date?: DateTimeFieldUpdateOperationsInput | Date | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    vendor?: NullableStringFieldUpdateOperationsInput | string | null
    invoice_number?: NullableStringFieldUpdateOperationsInput | string | null
    receipt_available?: NullableBoolFieldUpdateOperationsInput | boolean | null
    approved_by?: NullableStringFieldUpdateOperationsInput | string | null
    approval_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reimbursable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cost_categories?: cost_categoriesUpdateOneWithoutExpensesNestedInput
    drivers?: driversUpdateOneWithoutExpensesNestedInput
    vehicles?: vehiclesUpdateOneWithoutExpensesNestedInput
  }

  export type expensesUncheckedUpdateInput = {
    expense_id?: IntFieldUpdateOperationsInput | number
    vehicle_id?: NullableIntFieldUpdateOperationsInput | number | null
    driver_id?: NullableIntFieldUpdateOperationsInput | number | null
    category_id?: NullableIntFieldUpdateOperationsInput | number | null
    expense_date?: DateTimeFieldUpdateOperationsInput | Date | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    vendor?: NullableStringFieldUpdateOperationsInput | string | null
    invoice_number?: NullableStringFieldUpdateOperationsInput | string | null
    receipt_available?: NullableBoolFieldUpdateOperationsInput | boolean | null
    approved_by?: NullableStringFieldUpdateOperationsInput | string | null
    approval_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reimbursable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type expensesCreateManyInput = {
    expense_id?: number
    vehicle_id?: number | null
    driver_id?: number | null
    category_id?: number | null
    expense_date: Date | string
    amount: Decimal | DecimalJsLike | number | string
    description?: string | null
    vendor?: string | null
    invoice_number?: string | null
    receipt_available?: boolean | null
    approved_by?: string | null
    approval_date?: Date | string | null
    reimbursable?: boolean | null
    notes?: string | null
    created_at?: Date | string | null
  }

  export type expensesUpdateManyMutationInput = {
    expense_date?: DateTimeFieldUpdateOperationsInput | Date | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    vendor?: NullableStringFieldUpdateOperationsInput | string | null
    invoice_number?: NullableStringFieldUpdateOperationsInput | string | null
    receipt_available?: NullableBoolFieldUpdateOperationsInput | boolean | null
    approved_by?: NullableStringFieldUpdateOperationsInput | string | null
    approval_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reimbursable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type expensesUncheckedUpdateManyInput = {
    expense_id?: IntFieldUpdateOperationsInput | number
    vehicle_id?: NullableIntFieldUpdateOperationsInput | number | null
    driver_id?: NullableIntFieldUpdateOperationsInput | number | null
    category_id?: NullableIntFieldUpdateOperationsInput | number | null
    expense_date?: DateTimeFieldUpdateOperationsInput | Date | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    vendor?: NullableStringFieldUpdateOperationsInput | string | null
    invoice_number?: NullableStringFieldUpdateOperationsInput | string | null
    receipt_available?: NullableBoolFieldUpdateOperationsInput | boolean | null
    approved_by?: NullableStringFieldUpdateOperationsInput | string | null
    approval_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reimbursable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type fuel_stationsCreateInput = {
    station_name?: string | null
    address?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    brand?: string | null
    has_fleet_card?: boolean | null
    avg_price_per_gallon?: Decimal | DecimalJsLike | number | string | null
    fuel_transactions?: fuel_transactionsCreateNestedManyWithoutFuel_stationsInput
  }

  export type fuel_stationsUncheckedCreateInput = {
    station_id?: number
    station_name?: string | null
    address?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    brand?: string | null
    has_fleet_card?: boolean | null
    avg_price_per_gallon?: Decimal | DecimalJsLike | number | string | null
    fuel_transactions?: fuel_transactionsUncheckedCreateNestedManyWithoutFuel_stationsInput
  }

  export type fuel_stationsUpdateInput = {
    station_name?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    brand?: NullableStringFieldUpdateOperationsInput | string | null
    has_fleet_card?: NullableBoolFieldUpdateOperationsInput | boolean | null
    avg_price_per_gallon?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fuel_transactions?: fuel_transactionsUpdateManyWithoutFuel_stationsNestedInput
  }

  export type fuel_stationsUncheckedUpdateInput = {
    station_id?: IntFieldUpdateOperationsInput | number
    station_name?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    brand?: NullableStringFieldUpdateOperationsInput | string | null
    has_fleet_card?: NullableBoolFieldUpdateOperationsInput | boolean | null
    avg_price_per_gallon?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fuel_transactions?: fuel_transactionsUncheckedUpdateManyWithoutFuel_stationsNestedInput
  }

  export type fuel_stationsCreateManyInput = {
    station_id?: number
    station_name?: string | null
    address?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    brand?: string | null
    has_fleet_card?: boolean | null
    avg_price_per_gallon?: Decimal | DecimalJsLike | number | string | null
  }

  export type fuel_stationsUpdateManyMutationInput = {
    station_name?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    brand?: NullableStringFieldUpdateOperationsInput | string | null
    has_fleet_card?: NullableBoolFieldUpdateOperationsInput | boolean | null
    avg_price_per_gallon?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type fuel_stationsUncheckedUpdateManyInput = {
    station_id?: IntFieldUpdateOperationsInput | number
    station_name?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    brand?: NullableStringFieldUpdateOperationsInput | string | null
    has_fleet_card?: NullableBoolFieldUpdateOperationsInput | boolean | null
    avg_price_per_gallon?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type fuel_transactionsCreateInput = {
    transaction_date: Date | string
    odometer_reading?: Decimal | DecimalJsLike | number | string | null
    gallons_purchased?: Decimal | DecimalJsLike | number | string | null
    price_per_gallon?: Decimal | DecimalJsLike | number | string | null
    total_amount?: Decimal | DecimalJsLike | number | string | null
    fuel_type?: string | null
    payment_method?: string | null
    card_number_last_four?: string | null
    receipt_number?: string | null
    mpg_calculated?: Decimal | DecimalJsLike | number | string | null
    notes?: string | null
    drivers?: driversCreateNestedOneWithoutFuel_transactionsInput
    fuel_stations?: fuel_stationsCreateNestedOneWithoutFuel_transactionsInput
    vehicles?: vehiclesCreateNestedOneWithoutFuel_transactionsInput
  }

  export type fuel_transactionsUncheckedCreateInput = {
    transaction_id?: number
    vehicle_id?: number | null
    driver_id?: number | null
    fuel_station_id?: number | null
    transaction_date: Date | string
    odometer_reading?: Decimal | DecimalJsLike | number | string | null
    gallons_purchased?: Decimal | DecimalJsLike | number | string | null
    price_per_gallon?: Decimal | DecimalJsLike | number | string | null
    total_amount?: Decimal | DecimalJsLike | number | string | null
    fuel_type?: string | null
    payment_method?: string | null
    card_number_last_four?: string | null
    receipt_number?: string | null
    mpg_calculated?: Decimal | DecimalJsLike | number | string | null
    notes?: string | null
  }

  export type fuel_transactionsUpdateInput = {
    transaction_date?: DateTimeFieldUpdateOperationsInput | Date | string
    odometer_reading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    gallons_purchased?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    price_per_gallon?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    total_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fuel_type?: NullableStringFieldUpdateOperationsInput | string | null
    payment_method?: NullableStringFieldUpdateOperationsInput | string | null
    card_number_last_four?: NullableStringFieldUpdateOperationsInput | string | null
    receipt_number?: NullableStringFieldUpdateOperationsInput | string | null
    mpg_calculated?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    drivers?: driversUpdateOneWithoutFuel_transactionsNestedInput
    fuel_stations?: fuel_stationsUpdateOneWithoutFuel_transactionsNestedInput
    vehicles?: vehiclesUpdateOneWithoutFuel_transactionsNestedInput
  }

  export type fuel_transactionsUncheckedUpdateInput = {
    transaction_id?: IntFieldUpdateOperationsInput | number
    vehicle_id?: NullableIntFieldUpdateOperationsInput | number | null
    driver_id?: NullableIntFieldUpdateOperationsInput | number | null
    fuel_station_id?: NullableIntFieldUpdateOperationsInput | number | null
    transaction_date?: DateTimeFieldUpdateOperationsInput | Date | string
    odometer_reading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    gallons_purchased?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    price_per_gallon?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    total_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fuel_type?: NullableStringFieldUpdateOperationsInput | string | null
    payment_method?: NullableStringFieldUpdateOperationsInput | string | null
    card_number_last_four?: NullableStringFieldUpdateOperationsInput | string | null
    receipt_number?: NullableStringFieldUpdateOperationsInput | string | null
    mpg_calculated?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type fuel_transactionsCreateManyInput = {
    transaction_id?: number
    vehicle_id?: number | null
    driver_id?: number | null
    fuel_station_id?: number | null
    transaction_date: Date | string
    odometer_reading?: Decimal | DecimalJsLike | number | string | null
    gallons_purchased?: Decimal | DecimalJsLike | number | string | null
    price_per_gallon?: Decimal | DecimalJsLike | number | string | null
    total_amount?: Decimal | DecimalJsLike | number | string | null
    fuel_type?: string | null
    payment_method?: string | null
    card_number_last_four?: string | null
    receipt_number?: string | null
    mpg_calculated?: Decimal | DecimalJsLike | number | string | null
    notes?: string | null
  }

  export type fuel_transactionsUpdateManyMutationInput = {
    transaction_date?: DateTimeFieldUpdateOperationsInput | Date | string
    odometer_reading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    gallons_purchased?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    price_per_gallon?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    total_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fuel_type?: NullableStringFieldUpdateOperationsInput | string | null
    payment_method?: NullableStringFieldUpdateOperationsInput | string | null
    card_number_last_four?: NullableStringFieldUpdateOperationsInput | string | null
    receipt_number?: NullableStringFieldUpdateOperationsInput | string | null
    mpg_calculated?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type fuel_transactionsUncheckedUpdateManyInput = {
    transaction_id?: IntFieldUpdateOperationsInput | number
    vehicle_id?: NullableIntFieldUpdateOperationsInput | number | null
    driver_id?: NullableIntFieldUpdateOperationsInput | number | null
    fuel_station_id?: NullableIntFieldUpdateOperationsInput | number | null
    transaction_date?: DateTimeFieldUpdateOperationsInput | Date | string
    odometer_reading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    gallons_purchased?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    price_per_gallon?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    total_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fuel_type?: NullableStringFieldUpdateOperationsInput | string | null
    payment_method?: NullableStringFieldUpdateOperationsInput | string | null
    card_number_last_four?: NullableStringFieldUpdateOperationsInput | string | null
    receipt_number?: NullableStringFieldUpdateOperationsInput | string | null
    mpg_calculated?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type gps_trackingCreateInput = {
    timestamp: Date | string
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    speed?: Decimal | DecimalJsLike | number | string | null
    heading?: number | null
    altitude?: Decimal | DecimalJsLike | number | string | null
    gps_quality?: string | null
    engine_status?: string | null
    fuel_level_percent?: Decimal | DecimalJsLike | number | string | null
    odometer?: Decimal | DecimalJsLike | number | string | null
    vehicles?: vehiclesCreateNestedOneWithoutGps_trackingInput
  }

  export type gps_trackingUncheckedCreateInput = {
    tracking_id?: number
    vehicle_id?: number | null
    timestamp: Date | string
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    speed?: Decimal | DecimalJsLike | number | string | null
    heading?: number | null
    altitude?: Decimal | DecimalJsLike | number | string | null
    gps_quality?: string | null
    engine_status?: string | null
    fuel_level_percent?: Decimal | DecimalJsLike | number | string | null
    odometer?: Decimal | DecimalJsLike | number | string | null
  }

  export type gps_trackingUpdateInput = {
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    speed?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    heading?: NullableIntFieldUpdateOperationsInput | number | null
    altitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    gps_quality?: NullableStringFieldUpdateOperationsInput | string | null
    engine_status?: NullableStringFieldUpdateOperationsInput | string | null
    fuel_level_percent?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    odometer?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    vehicles?: vehiclesUpdateOneWithoutGps_trackingNestedInput
  }

  export type gps_trackingUncheckedUpdateInput = {
    tracking_id?: IntFieldUpdateOperationsInput | number
    vehicle_id?: NullableIntFieldUpdateOperationsInput | number | null
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    speed?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    heading?: NullableIntFieldUpdateOperationsInput | number | null
    altitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    gps_quality?: NullableStringFieldUpdateOperationsInput | string | null
    engine_status?: NullableStringFieldUpdateOperationsInput | string | null
    fuel_level_percent?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    odometer?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type gps_trackingCreateManyInput = {
    tracking_id?: number
    vehicle_id?: number | null
    timestamp: Date | string
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    speed?: Decimal | DecimalJsLike | number | string | null
    heading?: number | null
    altitude?: Decimal | DecimalJsLike | number | string | null
    gps_quality?: string | null
    engine_status?: string | null
    fuel_level_percent?: Decimal | DecimalJsLike | number | string | null
    odometer?: Decimal | DecimalJsLike | number | string | null
  }

  export type gps_trackingUpdateManyMutationInput = {
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    speed?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    heading?: NullableIntFieldUpdateOperationsInput | number | null
    altitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    gps_quality?: NullableStringFieldUpdateOperationsInput | string | null
    engine_status?: NullableStringFieldUpdateOperationsInput | string | null
    fuel_level_percent?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    odometer?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type gps_trackingUncheckedUpdateManyInput = {
    tracking_id?: IntFieldUpdateOperationsInput | number
    vehicle_id?: NullableIntFieldUpdateOperationsInput | number | null
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    speed?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    heading?: NullableIntFieldUpdateOperationsInput | number | null
    altitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    gps_quality?: NullableStringFieldUpdateOperationsInput | string | null
    engine_status?: NullableStringFieldUpdateOperationsInput | string | null
    fuel_level_percent?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    odometer?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type incidentsCreateInput = {
    incident_date: Date | string
    incident_type: string
    severity: string
    location?: string | null
    description: string
    police_report_number?: string | null
    insurance_claim_number?: string | null
    estimated_damage_cost?: Decimal | DecimalJsLike | number | string | null
    actual_repair_cost?: Decimal | DecimalJsLike | number | string | null
    injuries_reported?: boolean | null
    fatalities?: boolean | null
    at_fault?: boolean | null
    weather_conditions?: string | null
    road_conditions?: string | null
    photos_available?: boolean | null
    status?: string | null
    resolution_date?: Date | string | null
    lessons_learned?: string | null
    created_at?: Date | string | null
    drivers?: driversCreateNestedOneWithoutIncidentsInput
    vehicles?: vehiclesCreateNestedOneWithoutIncidentsInput
  }

  export type incidentsUncheckedCreateInput = {
    incident_id?: number
    vehicle_id?: number | null
    driver_id?: number | null
    incident_date: Date | string
    incident_type: string
    severity: string
    location?: string | null
    description: string
    police_report_number?: string | null
    insurance_claim_number?: string | null
    estimated_damage_cost?: Decimal | DecimalJsLike | number | string | null
    actual_repair_cost?: Decimal | DecimalJsLike | number | string | null
    injuries_reported?: boolean | null
    fatalities?: boolean | null
    at_fault?: boolean | null
    weather_conditions?: string | null
    road_conditions?: string | null
    photos_available?: boolean | null
    status?: string | null
    resolution_date?: Date | string | null
    lessons_learned?: string | null
    created_at?: Date | string | null
  }

  export type incidentsUpdateInput = {
    incident_date?: DateTimeFieldUpdateOperationsInput | Date | string
    incident_type?: StringFieldUpdateOperationsInput | string
    severity?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    police_report_number?: NullableStringFieldUpdateOperationsInput | string | null
    insurance_claim_number?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_damage_cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    actual_repair_cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    injuries_reported?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fatalities?: NullableBoolFieldUpdateOperationsInput | boolean | null
    at_fault?: NullableBoolFieldUpdateOperationsInput | boolean | null
    weather_conditions?: NullableStringFieldUpdateOperationsInput | string | null
    road_conditions?: NullableStringFieldUpdateOperationsInput | string | null
    photos_available?: NullableBoolFieldUpdateOperationsInput | boolean | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    resolution_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lessons_learned?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    drivers?: driversUpdateOneWithoutIncidentsNestedInput
    vehicles?: vehiclesUpdateOneWithoutIncidentsNestedInput
  }

  export type incidentsUncheckedUpdateInput = {
    incident_id?: IntFieldUpdateOperationsInput | number
    vehicle_id?: NullableIntFieldUpdateOperationsInput | number | null
    driver_id?: NullableIntFieldUpdateOperationsInput | number | null
    incident_date?: DateTimeFieldUpdateOperationsInput | Date | string
    incident_type?: StringFieldUpdateOperationsInput | string
    severity?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    police_report_number?: NullableStringFieldUpdateOperationsInput | string | null
    insurance_claim_number?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_damage_cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    actual_repair_cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    injuries_reported?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fatalities?: NullableBoolFieldUpdateOperationsInput | boolean | null
    at_fault?: NullableBoolFieldUpdateOperationsInput | boolean | null
    weather_conditions?: NullableStringFieldUpdateOperationsInput | string | null
    road_conditions?: NullableStringFieldUpdateOperationsInput | string | null
    photos_available?: NullableBoolFieldUpdateOperationsInput | boolean | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    resolution_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lessons_learned?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type incidentsCreateManyInput = {
    incident_id?: number
    vehicle_id?: number | null
    driver_id?: number | null
    incident_date: Date | string
    incident_type: string
    severity: string
    location?: string | null
    description: string
    police_report_number?: string | null
    insurance_claim_number?: string | null
    estimated_damage_cost?: Decimal | DecimalJsLike | number | string | null
    actual_repair_cost?: Decimal | DecimalJsLike | number | string | null
    injuries_reported?: boolean | null
    fatalities?: boolean | null
    at_fault?: boolean | null
    weather_conditions?: string | null
    road_conditions?: string | null
    photos_available?: boolean | null
    status?: string | null
    resolution_date?: Date | string | null
    lessons_learned?: string | null
    created_at?: Date | string | null
  }

  export type incidentsUpdateManyMutationInput = {
    incident_date?: DateTimeFieldUpdateOperationsInput | Date | string
    incident_type?: StringFieldUpdateOperationsInput | string
    severity?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    police_report_number?: NullableStringFieldUpdateOperationsInput | string | null
    insurance_claim_number?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_damage_cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    actual_repair_cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    injuries_reported?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fatalities?: NullableBoolFieldUpdateOperationsInput | boolean | null
    at_fault?: NullableBoolFieldUpdateOperationsInput | boolean | null
    weather_conditions?: NullableStringFieldUpdateOperationsInput | string | null
    road_conditions?: NullableStringFieldUpdateOperationsInput | string | null
    photos_available?: NullableBoolFieldUpdateOperationsInput | boolean | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    resolution_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lessons_learned?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type incidentsUncheckedUpdateManyInput = {
    incident_id?: IntFieldUpdateOperationsInput | number
    vehicle_id?: NullableIntFieldUpdateOperationsInput | number | null
    driver_id?: NullableIntFieldUpdateOperationsInput | number | null
    incident_date?: DateTimeFieldUpdateOperationsInput | Date | string
    incident_type?: StringFieldUpdateOperationsInput | string
    severity?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    police_report_number?: NullableStringFieldUpdateOperationsInput | string | null
    insurance_claim_number?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_damage_cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    actual_repair_cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    injuries_reported?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fatalities?: NullableBoolFieldUpdateOperationsInput | boolean | null
    at_fault?: NullableBoolFieldUpdateOperationsInput | boolean | null
    weather_conditions?: NullableStringFieldUpdateOperationsInput | string | null
    road_conditions?: NullableStringFieldUpdateOperationsInput | string | null
    photos_available?: NullableBoolFieldUpdateOperationsInput | boolean | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    resolution_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lessons_learned?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type maintenance_recordsCreateInput = {
    scheduled_date?: Date | string | null
    completed_date?: Date | string | null
    odometer_at_service?: Decimal | DecimalJsLike | number | string | null
    cost?: Decimal | DecimalJsLike | number | string | null
    labor_hours?: Decimal | DecimalJsLike | number | string | null
    description?: string | null
    parts_used?: string | null
    technician_name?: string | null
    status?: string | null
    next_service_due_date?: Date | string | null
    next_service_due_miles?: Decimal | DecimalJsLike | number | string | null
    warranty_expiry_date?: Date | string | null
    invoice_number?: string | null
    notes?: string | null
    created_at?: Date | string | null
    maintenance_types?: maintenance_typesCreateNestedOneWithoutMaintenance_recordsInput
    service_providers?: service_providersCreateNestedOneWithoutMaintenance_recordsInput
    vehicles?: vehiclesCreateNestedOneWithoutMaintenance_recordsInput
  }

  export type maintenance_recordsUncheckedCreateInput = {
    maintenance_id?: number
    vehicle_id?: number | null
    maintenance_type_id?: number | null
    service_provider_id?: number | null
    scheduled_date?: Date | string | null
    completed_date?: Date | string | null
    odometer_at_service?: Decimal | DecimalJsLike | number | string | null
    cost?: Decimal | DecimalJsLike | number | string | null
    labor_hours?: Decimal | DecimalJsLike | number | string | null
    description?: string | null
    parts_used?: string | null
    technician_name?: string | null
    status?: string | null
    next_service_due_date?: Date | string | null
    next_service_due_miles?: Decimal | DecimalJsLike | number | string | null
    warranty_expiry_date?: Date | string | null
    invoice_number?: string | null
    notes?: string | null
    created_at?: Date | string | null
  }

  export type maintenance_recordsUpdateInput = {
    scheduled_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completed_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    odometer_at_service?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    labor_hours?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    parts_used?: NullableStringFieldUpdateOperationsInput | string | null
    technician_name?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    next_service_due_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    next_service_due_miles?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    warranty_expiry_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    invoice_number?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maintenance_types?: maintenance_typesUpdateOneWithoutMaintenance_recordsNestedInput
    service_providers?: service_providersUpdateOneWithoutMaintenance_recordsNestedInput
    vehicles?: vehiclesUpdateOneWithoutMaintenance_recordsNestedInput
  }

  export type maintenance_recordsUncheckedUpdateInput = {
    maintenance_id?: IntFieldUpdateOperationsInput | number
    vehicle_id?: NullableIntFieldUpdateOperationsInput | number | null
    maintenance_type_id?: NullableIntFieldUpdateOperationsInput | number | null
    service_provider_id?: NullableIntFieldUpdateOperationsInput | number | null
    scheduled_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completed_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    odometer_at_service?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    labor_hours?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    parts_used?: NullableStringFieldUpdateOperationsInput | string | null
    technician_name?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    next_service_due_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    next_service_due_miles?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    warranty_expiry_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    invoice_number?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type maintenance_recordsCreateManyInput = {
    maintenance_id?: number
    vehicle_id?: number | null
    maintenance_type_id?: number | null
    service_provider_id?: number | null
    scheduled_date?: Date | string | null
    completed_date?: Date | string | null
    odometer_at_service?: Decimal | DecimalJsLike | number | string | null
    cost?: Decimal | DecimalJsLike | number | string | null
    labor_hours?: Decimal | DecimalJsLike | number | string | null
    description?: string | null
    parts_used?: string | null
    technician_name?: string | null
    status?: string | null
    next_service_due_date?: Date | string | null
    next_service_due_miles?: Decimal | DecimalJsLike | number | string | null
    warranty_expiry_date?: Date | string | null
    invoice_number?: string | null
    notes?: string | null
    created_at?: Date | string | null
  }

  export type maintenance_recordsUpdateManyMutationInput = {
    scheduled_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completed_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    odometer_at_service?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    labor_hours?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    parts_used?: NullableStringFieldUpdateOperationsInput | string | null
    technician_name?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    next_service_due_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    next_service_due_miles?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    warranty_expiry_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    invoice_number?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type maintenance_recordsUncheckedUpdateManyInput = {
    maintenance_id?: IntFieldUpdateOperationsInput | number
    vehicle_id?: NullableIntFieldUpdateOperationsInput | number | null
    maintenance_type_id?: NullableIntFieldUpdateOperationsInput | number | null
    service_provider_id?: NullableIntFieldUpdateOperationsInput | number | null
    scheduled_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completed_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    odometer_at_service?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    labor_hours?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    parts_used?: NullableStringFieldUpdateOperationsInput | string | null
    technician_name?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    next_service_due_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    next_service_due_miles?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    warranty_expiry_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    invoice_number?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type maintenance_typesCreateInput = {
    type_name: string
    description?: string | null
    recommended_interval_miles?: number | null
    recommended_interval_months?: number | null
    estimated_cost?: Decimal | DecimalJsLike | number | string | null
    maintenance_records?: maintenance_recordsCreateNestedManyWithoutMaintenance_typesInput
  }

  export type maintenance_typesUncheckedCreateInput = {
    maintenance_type_id?: number
    type_name: string
    description?: string | null
    recommended_interval_miles?: number | null
    recommended_interval_months?: number | null
    estimated_cost?: Decimal | DecimalJsLike | number | string | null
    maintenance_records?: maintenance_recordsUncheckedCreateNestedManyWithoutMaintenance_typesInput
  }

  export type maintenance_typesUpdateInput = {
    type_name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    recommended_interval_miles?: NullableIntFieldUpdateOperationsInput | number | null
    recommended_interval_months?: NullableIntFieldUpdateOperationsInput | number | null
    estimated_cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    maintenance_records?: maintenance_recordsUpdateManyWithoutMaintenance_typesNestedInput
  }

  export type maintenance_typesUncheckedUpdateInput = {
    maintenance_type_id?: IntFieldUpdateOperationsInput | number
    type_name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    recommended_interval_miles?: NullableIntFieldUpdateOperationsInput | number | null
    recommended_interval_months?: NullableIntFieldUpdateOperationsInput | number | null
    estimated_cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    maintenance_records?: maintenance_recordsUncheckedUpdateManyWithoutMaintenance_typesNestedInput
  }

  export type maintenance_typesCreateManyInput = {
    maintenance_type_id?: number
    type_name: string
    description?: string | null
    recommended_interval_miles?: number | null
    recommended_interval_months?: number | null
    estimated_cost?: Decimal | DecimalJsLike | number | string | null
  }

  export type maintenance_typesUpdateManyMutationInput = {
    type_name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    recommended_interval_miles?: NullableIntFieldUpdateOperationsInput | number | null
    recommended_interval_months?: NullableIntFieldUpdateOperationsInput | number | null
    estimated_cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type maintenance_typesUncheckedUpdateManyInput = {
    maintenance_type_id?: IntFieldUpdateOperationsInput | number
    type_name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    recommended_interval_miles?: NullableIntFieldUpdateOperationsInput | number | null
    recommended_interval_months?: NullableIntFieldUpdateOperationsInput | number | null
    estimated_cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type reportsCreateInput = {
    report_name: string
    report_type: string
    generation_date?: Date | string | null
    date_range_start?: Date | string | null
    date_range_end?: Date | string | null
    parameters?: NullableJsonNullValueInput | InputJsonValue
    file_path?: string | null
    status?: string | null
    companies?: companiesCreateNestedOneWithoutReportsInput
    users?: usersCreateNestedOneWithoutReportsInput
  }

  export type reportsUncheckedCreateInput = {
    report_id?: number
    company_id?: number | null
    report_name: string
    report_type: string
    generated_by?: number | null
    generation_date?: Date | string | null
    date_range_start?: Date | string | null
    date_range_end?: Date | string | null
    parameters?: NullableJsonNullValueInput | InputJsonValue
    file_path?: string | null
    status?: string | null
  }

  export type reportsUpdateInput = {
    report_name?: StringFieldUpdateOperationsInput | string
    report_type?: StringFieldUpdateOperationsInput | string
    generation_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    date_range_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    date_range_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parameters?: NullableJsonNullValueInput | InputJsonValue
    file_path?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    companies?: companiesUpdateOneWithoutReportsNestedInput
    users?: usersUpdateOneWithoutReportsNestedInput
  }

  export type reportsUncheckedUpdateInput = {
    report_id?: IntFieldUpdateOperationsInput | number
    company_id?: NullableIntFieldUpdateOperationsInput | number | null
    report_name?: StringFieldUpdateOperationsInput | string
    report_type?: StringFieldUpdateOperationsInput | string
    generated_by?: NullableIntFieldUpdateOperationsInput | number | null
    generation_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    date_range_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    date_range_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parameters?: NullableJsonNullValueInput | InputJsonValue
    file_path?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type reportsCreateManyInput = {
    report_id?: number
    company_id?: number | null
    report_name: string
    report_type: string
    generated_by?: number | null
    generation_date?: Date | string | null
    date_range_start?: Date | string | null
    date_range_end?: Date | string | null
    parameters?: NullableJsonNullValueInput | InputJsonValue
    file_path?: string | null
    status?: string | null
  }

  export type reportsUpdateManyMutationInput = {
    report_name?: StringFieldUpdateOperationsInput | string
    report_type?: StringFieldUpdateOperationsInput | string
    generation_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    date_range_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    date_range_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parameters?: NullableJsonNullValueInput | InputJsonValue
    file_path?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type reportsUncheckedUpdateManyInput = {
    report_id?: IntFieldUpdateOperationsInput | number
    company_id?: NullableIntFieldUpdateOperationsInput | number | null
    report_name?: StringFieldUpdateOperationsInput | string
    report_type?: StringFieldUpdateOperationsInput | string
    generated_by?: NullableIntFieldUpdateOperationsInput | number | null
    generation_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    date_range_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    date_range_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parameters?: NullableJsonNullValueInput | InputJsonValue
    file_path?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type safety_inspectionsCreateInput = {
    inspector_name?: string | null
    inspection_date: Date | string
    inspection_type: string
    odometer_reading?: Decimal | DecimalJsLike | number | string | null
    overall_score?: Decimal | DecimalJsLike | number | string | null
    passed: boolean
    defects_found?: number | null
    critical_defects?: number | null
    notes?: string | null
    next_inspection_due?: Date | string | null
    certificate_number?: string | null
    vehicles?: vehiclesCreateNestedOneWithoutSafety_inspectionsInput
  }

  export type safety_inspectionsUncheckedCreateInput = {
    inspection_id?: number
    vehicle_id?: number | null
    inspector_name?: string | null
    inspection_date: Date | string
    inspection_type: string
    odometer_reading?: Decimal | DecimalJsLike | number | string | null
    overall_score?: Decimal | DecimalJsLike | number | string | null
    passed: boolean
    defects_found?: number | null
    critical_defects?: number | null
    notes?: string | null
    next_inspection_due?: Date | string | null
    certificate_number?: string | null
  }

  export type safety_inspectionsUpdateInput = {
    inspector_name?: NullableStringFieldUpdateOperationsInput | string | null
    inspection_date?: DateTimeFieldUpdateOperationsInput | Date | string
    inspection_type?: StringFieldUpdateOperationsInput | string
    odometer_reading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    overall_score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    passed?: BoolFieldUpdateOperationsInput | boolean
    defects_found?: NullableIntFieldUpdateOperationsInput | number | null
    critical_defects?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    next_inspection_due?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    certificate_number?: NullableStringFieldUpdateOperationsInput | string | null
    vehicles?: vehiclesUpdateOneWithoutSafety_inspectionsNestedInput
  }

  export type safety_inspectionsUncheckedUpdateInput = {
    inspection_id?: IntFieldUpdateOperationsInput | number
    vehicle_id?: NullableIntFieldUpdateOperationsInput | number | null
    inspector_name?: NullableStringFieldUpdateOperationsInput | string | null
    inspection_date?: DateTimeFieldUpdateOperationsInput | Date | string
    inspection_type?: StringFieldUpdateOperationsInput | string
    odometer_reading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    overall_score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    passed?: BoolFieldUpdateOperationsInput | boolean
    defects_found?: NullableIntFieldUpdateOperationsInput | number | null
    critical_defects?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    next_inspection_due?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    certificate_number?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type safety_inspectionsCreateManyInput = {
    inspection_id?: number
    vehicle_id?: number | null
    inspector_name?: string | null
    inspection_date: Date | string
    inspection_type: string
    odometer_reading?: Decimal | DecimalJsLike | number | string | null
    overall_score?: Decimal | DecimalJsLike | number | string | null
    passed: boolean
    defects_found?: number | null
    critical_defects?: number | null
    notes?: string | null
    next_inspection_due?: Date | string | null
    certificate_number?: string | null
  }

  export type safety_inspectionsUpdateManyMutationInput = {
    inspector_name?: NullableStringFieldUpdateOperationsInput | string | null
    inspection_date?: DateTimeFieldUpdateOperationsInput | Date | string
    inspection_type?: StringFieldUpdateOperationsInput | string
    odometer_reading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    overall_score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    passed?: BoolFieldUpdateOperationsInput | boolean
    defects_found?: NullableIntFieldUpdateOperationsInput | number | null
    critical_defects?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    next_inspection_due?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    certificate_number?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type safety_inspectionsUncheckedUpdateManyInput = {
    inspection_id?: IntFieldUpdateOperationsInput | number
    vehicle_id?: NullableIntFieldUpdateOperationsInput | number | null
    inspector_name?: NullableStringFieldUpdateOperationsInput | string | null
    inspection_date?: DateTimeFieldUpdateOperationsInput | Date | string
    inspection_type?: StringFieldUpdateOperationsInput | string
    odometer_reading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    overall_score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    passed?: BoolFieldUpdateOperationsInput | boolean
    defects_found?: NullableIntFieldUpdateOperationsInput | number | null
    critical_defects?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    next_inspection_due?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    certificate_number?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type service_providersCreateInput = {
    provider_name: string
    service_type: string
    contact_person?: string | null
    phone?: string | null
    email?: string | null
    address?: string | null
    hourly_rate?: Decimal | DecimalJsLike | number | string | null
    rating?: Decimal | DecimalJsLike | number | string | null
    is_preferred?: boolean | null
    maintenance_records?: maintenance_recordsCreateNestedManyWithoutService_providersInput
    companies?: companiesCreateNestedOneWithoutService_providersInput
  }

  export type service_providersUncheckedCreateInput = {
    provider_id?: number
    company_id?: number | null
    provider_name: string
    service_type: string
    contact_person?: string | null
    phone?: string | null
    email?: string | null
    address?: string | null
    hourly_rate?: Decimal | DecimalJsLike | number | string | null
    rating?: Decimal | DecimalJsLike | number | string | null
    is_preferred?: boolean | null
    maintenance_records?: maintenance_recordsUncheckedCreateNestedManyWithoutService_providersInput
  }

  export type service_providersUpdateInput = {
    provider_name?: StringFieldUpdateOperationsInput | string
    service_type?: StringFieldUpdateOperationsInput | string
    contact_person?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    hourly_rate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    is_preferred?: NullableBoolFieldUpdateOperationsInput | boolean | null
    maintenance_records?: maintenance_recordsUpdateManyWithoutService_providersNestedInput
    companies?: companiesUpdateOneWithoutService_providersNestedInput
  }

  export type service_providersUncheckedUpdateInput = {
    provider_id?: IntFieldUpdateOperationsInput | number
    company_id?: NullableIntFieldUpdateOperationsInput | number | null
    provider_name?: StringFieldUpdateOperationsInput | string
    service_type?: StringFieldUpdateOperationsInput | string
    contact_person?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    hourly_rate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    is_preferred?: NullableBoolFieldUpdateOperationsInput | boolean | null
    maintenance_records?: maintenance_recordsUncheckedUpdateManyWithoutService_providersNestedInput
  }

  export type service_providersCreateManyInput = {
    provider_id?: number
    company_id?: number | null
    provider_name: string
    service_type: string
    contact_person?: string | null
    phone?: string | null
    email?: string | null
    address?: string | null
    hourly_rate?: Decimal | DecimalJsLike | number | string | null
    rating?: Decimal | DecimalJsLike | number | string | null
    is_preferred?: boolean | null
  }

  export type service_providersUpdateManyMutationInput = {
    provider_name?: StringFieldUpdateOperationsInput | string
    service_type?: StringFieldUpdateOperationsInput | string
    contact_person?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    hourly_rate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    is_preferred?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type service_providersUncheckedUpdateManyInput = {
    provider_id?: IntFieldUpdateOperationsInput | number
    company_id?: NullableIntFieldUpdateOperationsInput | number | null
    provider_name?: StringFieldUpdateOperationsInput | string
    service_type?: StringFieldUpdateOperationsInput | string
    contact_person?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    hourly_rate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    is_preferred?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type tripsCreateInput = {
    start_time?: Date | string | null
    end_time?: Date | string | null
    start_location?: string | null
    end_location?: string | null
    start_odometer?: Decimal | DecimalJsLike | number | string | null
    end_odometer?: Decimal | DecimalJsLike | number | string | null
    distance_traveled?: Decimal | DecimalJsLike | number | string | null
    purpose?: string | null
    trip_type?: string | null
    fuel_consumed?: Decimal | DecimalJsLike | number | string | null
    average_speed?: Decimal | DecimalJsLike | number | string | null
    max_speed?: Decimal | DecimalJsLike | number | string | null
    idle_time_minutes?: number | null
    harsh_braking_count?: number | null
    harsh_acceleration_count?: number | null
    speeding_violations?: number | null
    route_efficiency_score?: Decimal | DecimalJsLike | number | string | null
    cost?: Decimal | DecimalJsLike | number | string | null
    notes?: string | null
    created_at?: Date | string | null
    drivers?: driversCreateNestedOneWithoutTripsInput
    vehicles?: vehiclesCreateNestedOneWithoutTripsInput
  }

  export type tripsUncheckedCreateInput = {
    trip_id?: number
    vehicle_id?: number | null
    driver_id?: number | null
    start_time?: Date | string | null
    end_time?: Date | string | null
    start_location?: string | null
    end_location?: string | null
    start_odometer?: Decimal | DecimalJsLike | number | string | null
    end_odometer?: Decimal | DecimalJsLike | number | string | null
    distance_traveled?: Decimal | DecimalJsLike | number | string | null
    purpose?: string | null
    trip_type?: string | null
    fuel_consumed?: Decimal | DecimalJsLike | number | string | null
    average_speed?: Decimal | DecimalJsLike | number | string | null
    max_speed?: Decimal | DecimalJsLike | number | string | null
    idle_time_minutes?: number | null
    harsh_braking_count?: number | null
    harsh_acceleration_count?: number | null
    speeding_violations?: number | null
    route_efficiency_score?: Decimal | DecimalJsLike | number | string | null
    cost?: Decimal | DecimalJsLike | number | string | null
    notes?: string | null
    created_at?: Date | string | null
  }

  export type tripsUpdateInput = {
    start_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    start_location?: NullableStringFieldUpdateOperationsInput | string | null
    end_location?: NullableStringFieldUpdateOperationsInput | string | null
    start_odometer?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    end_odometer?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    distance_traveled?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    purpose?: NullableStringFieldUpdateOperationsInput | string | null
    trip_type?: NullableStringFieldUpdateOperationsInput | string | null
    fuel_consumed?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    average_speed?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    max_speed?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    idle_time_minutes?: NullableIntFieldUpdateOperationsInput | number | null
    harsh_braking_count?: NullableIntFieldUpdateOperationsInput | number | null
    harsh_acceleration_count?: NullableIntFieldUpdateOperationsInput | number | null
    speeding_violations?: NullableIntFieldUpdateOperationsInput | number | null
    route_efficiency_score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    drivers?: driversUpdateOneWithoutTripsNestedInput
    vehicles?: vehiclesUpdateOneWithoutTripsNestedInput
  }

  export type tripsUncheckedUpdateInput = {
    trip_id?: IntFieldUpdateOperationsInput | number
    vehicle_id?: NullableIntFieldUpdateOperationsInput | number | null
    driver_id?: NullableIntFieldUpdateOperationsInput | number | null
    start_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    start_location?: NullableStringFieldUpdateOperationsInput | string | null
    end_location?: NullableStringFieldUpdateOperationsInput | string | null
    start_odometer?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    end_odometer?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    distance_traveled?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    purpose?: NullableStringFieldUpdateOperationsInput | string | null
    trip_type?: NullableStringFieldUpdateOperationsInput | string | null
    fuel_consumed?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    average_speed?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    max_speed?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    idle_time_minutes?: NullableIntFieldUpdateOperationsInput | number | null
    harsh_braking_count?: NullableIntFieldUpdateOperationsInput | number | null
    harsh_acceleration_count?: NullableIntFieldUpdateOperationsInput | number | null
    speeding_violations?: NullableIntFieldUpdateOperationsInput | number | null
    route_efficiency_score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type tripsCreateManyInput = {
    trip_id?: number
    vehicle_id?: number | null
    driver_id?: number | null
    start_time?: Date | string | null
    end_time?: Date | string | null
    start_location?: string | null
    end_location?: string | null
    start_odometer?: Decimal | DecimalJsLike | number | string | null
    end_odometer?: Decimal | DecimalJsLike | number | string | null
    distance_traveled?: Decimal | DecimalJsLike | number | string | null
    purpose?: string | null
    trip_type?: string | null
    fuel_consumed?: Decimal | DecimalJsLike | number | string | null
    average_speed?: Decimal | DecimalJsLike | number | string | null
    max_speed?: Decimal | DecimalJsLike | number | string | null
    idle_time_minutes?: number | null
    harsh_braking_count?: number | null
    harsh_acceleration_count?: number | null
    speeding_violations?: number | null
    route_efficiency_score?: Decimal | DecimalJsLike | number | string | null
    cost?: Decimal | DecimalJsLike | number | string | null
    notes?: string | null
    created_at?: Date | string | null
  }

  export type tripsUpdateManyMutationInput = {
    start_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    start_location?: NullableStringFieldUpdateOperationsInput | string | null
    end_location?: NullableStringFieldUpdateOperationsInput | string | null
    start_odometer?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    end_odometer?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    distance_traveled?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    purpose?: NullableStringFieldUpdateOperationsInput | string | null
    trip_type?: NullableStringFieldUpdateOperationsInput | string | null
    fuel_consumed?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    average_speed?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    max_speed?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    idle_time_minutes?: NullableIntFieldUpdateOperationsInput | number | null
    harsh_braking_count?: NullableIntFieldUpdateOperationsInput | number | null
    harsh_acceleration_count?: NullableIntFieldUpdateOperationsInput | number | null
    speeding_violations?: NullableIntFieldUpdateOperationsInput | number | null
    route_efficiency_score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type tripsUncheckedUpdateManyInput = {
    trip_id?: IntFieldUpdateOperationsInput | number
    vehicle_id?: NullableIntFieldUpdateOperationsInput | number | null
    driver_id?: NullableIntFieldUpdateOperationsInput | number | null
    start_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    start_location?: NullableStringFieldUpdateOperationsInput | string | null
    end_location?: NullableStringFieldUpdateOperationsInput | string | null
    start_odometer?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    end_odometer?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    distance_traveled?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    purpose?: NullableStringFieldUpdateOperationsInput | string | null
    trip_type?: NullableStringFieldUpdateOperationsInput | string | null
    fuel_consumed?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    average_speed?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    max_speed?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    idle_time_minutes?: NullableIntFieldUpdateOperationsInput | number | null
    harsh_braking_count?: NullableIntFieldUpdateOperationsInput | number | null
    harsh_acceleration_count?: NullableIntFieldUpdateOperationsInput | number | null
    speeding_violations?: NullableIntFieldUpdateOperationsInput | number | null
    route_efficiency_score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type usersCreateInput = {
    username: string
    email: string
    password_hash: string
    first_name?: string | null
    last_name?: string | null
    role: string
    phone?: string | null
    is_active?: boolean | null
    last_login?: Date | string | null
    created_at?: Date | string | null
    reports?: reportsCreateNestedManyWithoutUsersInput
    companies?: companiesCreateNestedOneWithoutUsersInput
  }

  export type usersUncheckedCreateInput = {
    user_id?: number
    company_id?: number | null
    username: string
    email: string
    password_hash: string
    first_name?: string | null
    last_name?: string | null
    role: string
    phone?: string | null
    is_active?: boolean | null
    last_login?: Date | string | null
    created_at?: Date | string | null
    reports?: reportsUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersUpdateInput = {
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password_hash?: StringFieldUpdateOperationsInput | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reports?: reportsUpdateManyWithoutUsersNestedInput
    companies?: companiesUpdateOneWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateInput = {
    user_id?: IntFieldUpdateOperationsInput | number
    company_id?: NullableIntFieldUpdateOperationsInput | number | null
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password_hash?: StringFieldUpdateOperationsInput | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reports?: reportsUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type usersCreateManyInput = {
    user_id?: number
    company_id?: number | null
    username: string
    email: string
    password_hash: string
    first_name?: string | null
    last_name?: string | null
    role: string
    phone?: string | null
    is_active?: boolean | null
    last_login?: Date | string | null
    created_at?: Date | string | null
  }

  export type usersUpdateManyMutationInput = {
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password_hash?: StringFieldUpdateOperationsInput | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type usersUncheckedUpdateManyInput = {
    user_id?: IntFieldUpdateOperationsInput | number
    company_id?: NullableIntFieldUpdateOperationsInput | number | null
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password_hash?: StringFieldUpdateOperationsInput | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type vehicle_assignmentsCreateInput = {
    assigned_date: Date | string
    end_date?: Date | string | null
    assignment_type?: string | null
    notes?: string | null
    is_active?: boolean | null
    drivers?: driversCreateNestedOneWithoutVehicle_assignmentsInput
    vehicles?: vehiclesCreateNestedOneWithoutVehicle_assignmentsInput
  }

  export type vehicle_assignmentsUncheckedCreateInput = {
    assignment_id?: number
    vehicle_id?: number | null
    driver_id?: number | null
    assigned_date: Date | string
    end_date?: Date | string | null
    assignment_type?: string | null
    notes?: string | null
    is_active?: boolean | null
  }

  export type vehicle_assignmentsUpdateInput = {
    assigned_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignment_type?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    drivers?: driversUpdateOneWithoutVehicle_assignmentsNestedInput
    vehicles?: vehiclesUpdateOneWithoutVehicle_assignmentsNestedInput
  }

  export type vehicle_assignmentsUncheckedUpdateInput = {
    assignment_id?: IntFieldUpdateOperationsInput | number
    vehicle_id?: NullableIntFieldUpdateOperationsInput | number | null
    driver_id?: NullableIntFieldUpdateOperationsInput | number | null
    assigned_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignment_type?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type vehicle_assignmentsCreateManyInput = {
    assignment_id?: number
    vehicle_id?: number | null
    driver_id?: number | null
    assigned_date: Date | string
    end_date?: Date | string | null
    assignment_type?: string | null
    notes?: string | null
    is_active?: boolean | null
  }

  export type vehicle_assignmentsUpdateManyMutationInput = {
    assigned_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignment_type?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type vehicle_assignmentsUncheckedUpdateManyInput = {
    assignment_id?: IntFieldUpdateOperationsInput | number
    vehicle_id?: NullableIntFieldUpdateOperationsInput | number | null
    driver_id?: NullableIntFieldUpdateOperationsInput | number | null
    assigned_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignment_type?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type vehicle_typesCreateInput = {
    type_name: string
    description?: string | null
    fuel_efficiency_rating?: Decimal | DecimalJsLike | number | string | null
    capacity_passengers?: number | null
    capacity_cargo_cubic_feet?: Decimal | DecimalJsLike | number | string | null
    vehicles?: vehiclesCreateNestedManyWithoutVehicle_typesInput
  }

  export type vehicle_typesUncheckedCreateInput = {
    type_id?: number
    type_name: string
    description?: string | null
    fuel_efficiency_rating?: Decimal | DecimalJsLike | number | string | null
    capacity_passengers?: number | null
    capacity_cargo_cubic_feet?: Decimal | DecimalJsLike | number | string | null
    vehicles?: vehiclesUncheckedCreateNestedManyWithoutVehicle_typesInput
  }

  export type vehicle_typesUpdateInput = {
    type_name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    fuel_efficiency_rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    capacity_passengers?: NullableIntFieldUpdateOperationsInput | number | null
    capacity_cargo_cubic_feet?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    vehicles?: vehiclesUpdateManyWithoutVehicle_typesNestedInput
  }

  export type vehicle_typesUncheckedUpdateInput = {
    type_id?: IntFieldUpdateOperationsInput | number
    type_name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    fuel_efficiency_rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    capacity_passengers?: NullableIntFieldUpdateOperationsInput | number | null
    capacity_cargo_cubic_feet?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    vehicles?: vehiclesUncheckedUpdateManyWithoutVehicle_typesNestedInput
  }

  export type vehicle_typesCreateManyInput = {
    type_id?: number
    type_name: string
    description?: string | null
    fuel_efficiency_rating?: Decimal | DecimalJsLike | number | string | null
    capacity_passengers?: number | null
    capacity_cargo_cubic_feet?: Decimal | DecimalJsLike | number | string | null
  }

  export type vehicle_typesUpdateManyMutationInput = {
    type_name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    fuel_efficiency_rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    capacity_passengers?: NullableIntFieldUpdateOperationsInput | number | null
    capacity_cargo_cubic_feet?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type vehicle_typesUncheckedUpdateManyInput = {
    type_id?: IntFieldUpdateOperationsInput | number
    type_name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    fuel_efficiency_rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    capacity_passengers?: NullableIntFieldUpdateOperationsInput | number | null
    capacity_cargo_cubic_feet?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type vehiclesCreateInput = {
    vin: string
    license_plate: string
    make: string
    model: string
    year: number
    color?: string | null
    fuel_type: string
    engine_size?: string | null
    transmission?: string | null
    purchase_date?: Date | string | null
    purchase_price?: Decimal | DecimalJsLike | number | string | null
    current_value?: Decimal | DecimalJsLike | number | string | null
    odometer_reading?: Decimal | DecimalJsLike | number | string | null
    fuel_capacity?: Decimal | DecimalJsLike | number | string | null
    insurance_policy_number?: string | null
    insurance_expiry?: Date | string | null
    registration_expiry?: Date | string | null
    status?: string | null
    gps_device_id?: string | null
    notes?: string | null
    created_at?: Date | string | null
    expenses?: expensesCreateNestedManyWithoutVehiclesInput
    fuel_transactions?: fuel_transactionsCreateNestedManyWithoutVehiclesInput
    gps_tracking?: gps_trackingCreateNestedManyWithoutVehiclesInput
    incidents?: incidentsCreateNestedManyWithoutVehiclesInput
    maintenance_records?: maintenance_recordsCreateNestedManyWithoutVehiclesInput
    safety_inspections?: safety_inspectionsCreateNestedManyWithoutVehiclesInput
    trips?: tripsCreateNestedManyWithoutVehiclesInput
    vehicle_assignments?: vehicle_assignmentsCreateNestedManyWithoutVehiclesInput
    drivers?: driversCreateNestedOneWithoutVehiclesInput
    companies?: companiesCreateNestedOneWithoutVehiclesInput
    departments?: departmentsCreateNestedOneWithoutVehiclesInput
    vehicle_types?: vehicle_typesCreateNestedOneWithoutVehiclesInput
  }

  export type vehiclesUncheckedCreateInput = {
    vehicle_id?: number
    company_id?: number | null
    vehicle_type_id?: number | null
    vin: string
    license_plate: string
    make: string
    model: string
    year: number
    color?: string | null
    fuel_type: string
    engine_size?: string | null
    transmission?: string | null
    purchase_date?: Date | string | null
    purchase_price?: Decimal | DecimalJsLike | number | string | null
    current_value?: Decimal | DecimalJsLike | number | string | null
    odometer_reading?: Decimal | DecimalJsLike | number | string | null
    fuel_capacity?: Decimal | DecimalJsLike | number | string | null
    insurance_policy_number?: string | null
    insurance_expiry?: Date | string | null
    registration_expiry?: Date | string | null
    status?: string | null
    gps_device_id?: string | null
    assigned_driver_id?: number | null
    department_id?: number | null
    notes?: string | null
    created_at?: Date | string | null
    expenses?: expensesUncheckedCreateNestedManyWithoutVehiclesInput
    fuel_transactions?: fuel_transactionsUncheckedCreateNestedManyWithoutVehiclesInput
    gps_tracking?: gps_trackingUncheckedCreateNestedManyWithoutVehiclesInput
    incidents?: incidentsUncheckedCreateNestedManyWithoutVehiclesInput
    maintenance_records?: maintenance_recordsUncheckedCreateNestedManyWithoutVehiclesInput
    safety_inspections?: safety_inspectionsUncheckedCreateNestedManyWithoutVehiclesInput
    trips?: tripsUncheckedCreateNestedManyWithoutVehiclesInput
    vehicle_assignments?: vehicle_assignmentsUncheckedCreateNestedManyWithoutVehiclesInput
  }

  export type vehiclesUpdateInput = {
    vin?: StringFieldUpdateOperationsInput | string
    license_plate?: StringFieldUpdateOperationsInput | string
    make?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    color?: NullableStringFieldUpdateOperationsInput | string | null
    fuel_type?: StringFieldUpdateOperationsInput | string
    engine_size?: NullableStringFieldUpdateOperationsInput | string | null
    transmission?: NullableStringFieldUpdateOperationsInput | string | null
    purchase_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchase_price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    current_value?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    odometer_reading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fuel_capacity?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    insurance_policy_number?: NullableStringFieldUpdateOperationsInput | string | null
    insurance_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    registration_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    gps_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expenses?: expensesUpdateManyWithoutVehiclesNestedInput
    fuel_transactions?: fuel_transactionsUpdateManyWithoutVehiclesNestedInput
    gps_tracking?: gps_trackingUpdateManyWithoutVehiclesNestedInput
    incidents?: incidentsUpdateManyWithoutVehiclesNestedInput
    maintenance_records?: maintenance_recordsUpdateManyWithoutVehiclesNestedInput
    safety_inspections?: safety_inspectionsUpdateManyWithoutVehiclesNestedInput
    trips?: tripsUpdateManyWithoutVehiclesNestedInput
    vehicle_assignments?: vehicle_assignmentsUpdateManyWithoutVehiclesNestedInput
    drivers?: driversUpdateOneWithoutVehiclesNestedInput
    companies?: companiesUpdateOneWithoutVehiclesNestedInput
    departments?: departmentsUpdateOneWithoutVehiclesNestedInput
    vehicle_types?: vehicle_typesUpdateOneWithoutVehiclesNestedInput
  }

  export type vehiclesUncheckedUpdateInput = {
    vehicle_id?: IntFieldUpdateOperationsInput | number
    company_id?: NullableIntFieldUpdateOperationsInput | number | null
    vehicle_type_id?: NullableIntFieldUpdateOperationsInput | number | null
    vin?: StringFieldUpdateOperationsInput | string
    license_plate?: StringFieldUpdateOperationsInput | string
    make?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    color?: NullableStringFieldUpdateOperationsInput | string | null
    fuel_type?: StringFieldUpdateOperationsInput | string
    engine_size?: NullableStringFieldUpdateOperationsInput | string | null
    transmission?: NullableStringFieldUpdateOperationsInput | string | null
    purchase_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchase_price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    current_value?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    odometer_reading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fuel_capacity?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    insurance_policy_number?: NullableStringFieldUpdateOperationsInput | string | null
    insurance_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    registration_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    gps_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    assigned_driver_id?: NullableIntFieldUpdateOperationsInput | number | null
    department_id?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expenses?: expensesUncheckedUpdateManyWithoutVehiclesNestedInput
    fuel_transactions?: fuel_transactionsUncheckedUpdateManyWithoutVehiclesNestedInput
    gps_tracking?: gps_trackingUncheckedUpdateManyWithoutVehiclesNestedInput
    incidents?: incidentsUncheckedUpdateManyWithoutVehiclesNestedInput
    maintenance_records?: maintenance_recordsUncheckedUpdateManyWithoutVehiclesNestedInput
    safety_inspections?: safety_inspectionsUncheckedUpdateManyWithoutVehiclesNestedInput
    trips?: tripsUncheckedUpdateManyWithoutVehiclesNestedInput
    vehicle_assignments?: vehicle_assignmentsUncheckedUpdateManyWithoutVehiclesNestedInput
  }

  export type vehiclesCreateManyInput = {
    vehicle_id?: number
    company_id?: number | null
    vehicle_type_id?: number | null
    vin: string
    license_plate: string
    make: string
    model: string
    year: number
    color?: string | null
    fuel_type: string
    engine_size?: string | null
    transmission?: string | null
    purchase_date?: Date | string | null
    purchase_price?: Decimal | DecimalJsLike | number | string | null
    current_value?: Decimal | DecimalJsLike | number | string | null
    odometer_reading?: Decimal | DecimalJsLike | number | string | null
    fuel_capacity?: Decimal | DecimalJsLike | number | string | null
    insurance_policy_number?: string | null
    insurance_expiry?: Date | string | null
    registration_expiry?: Date | string | null
    status?: string | null
    gps_device_id?: string | null
    assigned_driver_id?: number | null
    department_id?: number | null
    notes?: string | null
    created_at?: Date | string | null
  }

  export type vehiclesUpdateManyMutationInput = {
    vin?: StringFieldUpdateOperationsInput | string
    license_plate?: StringFieldUpdateOperationsInput | string
    make?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    color?: NullableStringFieldUpdateOperationsInput | string | null
    fuel_type?: StringFieldUpdateOperationsInput | string
    engine_size?: NullableStringFieldUpdateOperationsInput | string | null
    transmission?: NullableStringFieldUpdateOperationsInput | string | null
    purchase_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchase_price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    current_value?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    odometer_reading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fuel_capacity?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    insurance_policy_number?: NullableStringFieldUpdateOperationsInput | string | null
    insurance_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    registration_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    gps_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type vehiclesUncheckedUpdateManyInput = {
    vehicle_id?: IntFieldUpdateOperationsInput | number
    company_id?: NullableIntFieldUpdateOperationsInput | number | null
    vehicle_type_id?: NullableIntFieldUpdateOperationsInput | number | null
    vin?: StringFieldUpdateOperationsInput | string
    license_plate?: StringFieldUpdateOperationsInput | string
    make?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    color?: NullableStringFieldUpdateOperationsInput | string | null
    fuel_type?: StringFieldUpdateOperationsInput | string
    engine_size?: NullableStringFieldUpdateOperationsInput | string | null
    transmission?: NullableStringFieldUpdateOperationsInput | string | null
    purchase_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchase_price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    current_value?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    odometer_reading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fuel_capacity?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    insurance_policy_number?: NullableStringFieldUpdateOperationsInput | string | null
    insurance_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    registration_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    gps_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    assigned_driver_id?: NullableIntFieldUpdateOperationsInput | number | null
    department_id?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type DepartmentsListRelationFilter = {
    every?: departmentsWhereInput
    some?: departmentsWhereInput
    none?: departmentsWhereInput
  }

  export type DriversListRelationFilter = {
    every?: driversWhereInput
    some?: driversWhereInput
    none?: driversWhereInput
  }

  export type ReportsListRelationFilter = {
    every?: reportsWhereInput
    some?: reportsWhereInput
    none?: reportsWhereInput
  }

  export type Service_providersListRelationFilter = {
    every?: service_providersWhereInput
    some?: service_providersWhereInput
    none?: service_providersWhereInput
  }

  export type UsersListRelationFilter = {
    every?: usersWhereInput
    some?: usersWhereInput
    none?: usersWhereInput
  }

  export type VehiclesListRelationFilter = {
    every?: vehiclesWhereInput
    some?: vehiclesWhereInput
    none?: vehiclesWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type departmentsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type driversOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type reportsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type service_providersOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type usersOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type vehiclesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type companiesCountOrderByAggregateInput = {
    company_id?: SortOrder
    company_name?: SortOrder
    address?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    contact_person?: SortOrder
    subscription_plan?: SortOrder
    created_at?: SortOrder
    is_active?: SortOrder
  }

  export type companiesAvgOrderByAggregateInput = {
    company_id?: SortOrder
  }

  export type companiesMaxOrderByAggregateInput = {
    company_id?: SortOrder
    company_name?: SortOrder
    address?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    contact_person?: SortOrder
    subscription_plan?: SortOrder
    created_at?: SortOrder
    is_active?: SortOrder
  }

  export type companiesMinOrderByAggregateInput = {
    company_id?: SortOrder
    company_name?: SortOrder
    address?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    contact_person?: SortOrder
    subscription_plan?: SortOrder
    created_at?: SortOrder
    is_active?: SortOrder
  }

  export type companiesSumOrderByAggregateInput = {
    company_id?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type ExpensesListRelationFilter = {
    every?: expensesWhereInput
    some?: expensesWhereInput
    none?: expensesWhereInput
  }

  export type expensesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type cost_categoriesCountOrderByAggregateInput = {
    category_id?: SortOrder
    category_name?: SortOrder
    description?: SortOrder
    is_active?: SortOrder
  }

  export type cost_categoriesAvgOrderByAggregateInput = {
    category_id?: SortOrder
  }

  export type cost_categoriesMaxOrderByAggregateInput = {
    category_id?: SortOrder
    category_name?: SortOrder
    description?: SortOrder
    is_active?: SortOrder
  }

  export type cost_categoriesMinOrderByAggregateInput = {
    category_id?: SortOrder
    category_name?: SortOrder
    description?: SortOrder
    is_active?: SortOrder
  }

  export type cost_categoriesSumOrderByAggregateInput = {
    category_id?: SortOrder
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type CompaniesNullableScalarRelationFilter = {
    is?: companiesWhereInput | null
    isNot?: companiesWhereInput | null
  }

  export type departmentsCountOrderByAggregateInput = {
    department_id?: SortOrder
    company_id?: SortOrder
    department_name?: SortOrder
    manager_name?: SortOrder
    budget?: SortOrder
  }

  export type departmentsAvgOrderByAggregateInput = {
    department_id?: SortOrder
    company_id?: SortOrder
    budget?: SortOrder
  }

  export type departmentsMaxOrderByAggregateInput = {
    department_id?: SortOrder
    company_id?: SortOrder
    department_name?: SortOrder
    manager_name?: SortOrder
    budget?: SortOrder
  }

  export type departmentsMinOrderByAggregateInput = {
    department_id?: SortOrder
    company_id?: SortOrder
    department_name?: SortOrder
    manager_name?: SortOrder
    budget?: SortOrder
  }

  export type departmentsSumOrderByAggregateInput = {
    department_id?: SortOrder
    company_id?: SortOrder
    budget?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type DriversNullableScalarRelationFilter = {
    is?: driversWhereInput | null
    isNot?: driversWhereInput | null
  }

  export type driver_certificationsCountOrderByAggregateInput = {
    certification_id?: SortOrder
    driver_id?: SortOrder
    certification_name?: SortOrder
    issuing_authority?: SortOrder
    issue_date?: SortOrder
    expiry_date?: SortOrder
    certification_number?: SortOrder
    is_active?: SortOrder
  }

  export type driver_certificationsAvgOrderByAggregateInput = {
    certification_id?: SortOrder
    driver_id?: SortOrder
  }

  export type driver_certificationsMaxOrderByAggregateInput = {
    certification_id?: SortOrder
    driver_id?: SortOrder
    certification_name?: SortOrder
    issuing_authority?: SortOrder
    issue_date?: SortOrder
    expiry_date?: SortOrder
    certification_number?: SortOrder
    is_active?: SortOrder
  }

  export type driver_certificationsMinOrderByAggregateInput = {
    certification_id?: SortOrder
    driver_id?: SortOrder
    certification_name?: SortOrder
    issuing_authority?: SortOrder
    issue_date?: SortOrder
    expiry_date?: SortOrder
    certification_number?: SortOrder
    is_active?: SortOrder
  }

  export type driver_certificationsSumOrderByAggregateInput = {
    certification_id?: SortOrder
    driver_id?: SortOrder
  }

  export type Driver_certificationsListRelationFilter = {
    every?: driver_certificationsWhereInput
    some?: driver_certificationsWhereInput
    none?: driver_certificationsWhereInput
  }

  export type Fuel_transactionsListRelationFilter = {
    every?: fuel_transactionsWhereInput
    some?: fuel_transactionsWhereInput
    none?: fuel_transactionsWhereInput
  }

  export type IncidentsListRelationFilter = {
    every?: incidentsWhereInput
    some?: incidentsWhereInput
    none?: incidentsWhereInput
  }

  export type TripsListRelationFilter = {
    every?: tripsWhereInput
    some?: tripsWhereInput
    none?: tripsWhereInput
  }

  export type Vehicle_assignmentsListRelationFilter = {
    every?: vehicle_assignmentsWhereInput
    some?: vehicle_assignmentsWhereInput
    none?: vehicle_assignmentsWhereInput
  }

  export type driver_certificationsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type fuel_transactionsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type incidentsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tripsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type vehicle_assignmentsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type driversCountOrderByAggregateInput = {
    driver_id?: SortOrder
    company_id?: SortOrder
    employee_id?: SortOrder
    first_name?: SortOrder
    last_name?: SortOrder
    license_number?: SortOrder
    license_class?: SortOrder
    license_expiry_date?: SortOrder
    date_of_birth?: SortOrder
    hire_date?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    address?: SortOrder
    emergency_contact_name?: SortOrder
    emergency_contact_phone?: SortOrder
    salary?: SortOrder
    status?: SortOrder
    safety_score?: SortOrder
    total_miles_driven?: SortOrder
    years_experience?: SortOrder
    created_at?: SortOrder
  }

  export type driversAvgOrderByAggregateInput = {
    driver_id?: SortOrder
    company_id?: SortOrder
    salary?: SortOrder
    safety_score?: SortOrder
    total_miles_driven?: SortOrder
    years_experience?: SortOrder
  }

  export type driversMaxOrderByAggregateInput = {
    driver_id?: SortOrder
    company_id?: SortOrder
    employee_id?: SortOrder
    first_name?: SortOrder
    last_name?: SortOrder
    license_number?: SortOrder
    license_class?: SortOrder
    license_expiry_date?: SortOrder
    date_of_birth?: SortOrder
    hire_date?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    address?: SortOrder
    emergency_contact_name?: SortOrder
    emergency_contact_phone?: SortOrder
    salary?: SortOrder
    status?: SortOrder
    safety_score?: SortOrder
    total_miles_driven?: SortOrder
    years_experience?: SortOrder
    created_at?: SortOrder
  }

  export type driversMinOrderByAggregateInput = {
    driver_id?: SortOrder
    company_id?: SortOrder
    employee_id?: SortOrder
    first_name?: SortOrder
    last_name?: SortOrder
    license_number?: SortOrder
    license_class?: SortOrder
    license_expiry_date?: SortOrder
    date_of_birth?: SortOrder
    hire_date?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    address?: SortOrder
    emergency_contact_name?: SortOrder
    emergency_contact_phone?: SortOrder
    salary?: SortOrder
    status?: SortOrder
    safety_score?: SortOrder
    total_miles_driven?: SortOrder
    years_experience?: SortOrder
    created_at?: SortOrder
  }

  export type driversSumOrderByAggregateInput = {
    driver_id?: SortOrder
    company_id?: SortOrder
    salary?: SortOrder
    safety_score?: SortOrder
    total_miles_driven?: SortOrder
    years_experience?: SortOrder
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type Cost_categoriesNullableScalarRelationFilter = {
    is?: cost_categoriesWhereInput | null
    isNot?: cost_categoriesWhereInput | null
  }

  export type VehiclesNullableScalarRelationFilter = {
    is?: vehiclesWhereInput | null
    isNot?: vehiclesWhereInput | null
  }

  export type expensesCountOrderByAggregateInput = {
    expense_id?: SortOrder
    vehicle_id?: SortOrder
    driver_id?: SortOrder
    category_id?: SortOrder
    expense_date?: SortOrder
    amount?: SortOrder
    description?: SortOrder
    vendor?: SortOrder
    invoice_number?: SortOrder
    receipt_available?: SortOrder
    approved_by?: SortOrder
    approval_date?: SortOrder
    reimbursable?: SortOrder
    notes?: SortOrder
    created_at?: SortOrder
  }

  export type expensesAvgOrderByAggregateInput = {
    expense_id?: SortOrder
    vehicle_id?: SortOrder
    driver_id?: SortOrder
    category_id?: SortOrder
    amount?: SortOrder
  }

  export type expensesMaxOrderByAggregateInput = {
    expense_id?: SortOrder
    vehicle_id?: SortOrder
    driver_id?: SortOrder
    category_id?: SortOrder
    expense_date?: SortOrder
    amount?: SortOrder
    description?: SortOrder
    vendor?: SortOrder
    invoice_number?: SortOrder
    receipt_available?: SortOrder
    approved_by?: SortOrder
    approval_date?: SortOrder
    reimbursable?: SortOrder
    notes?: SortOrder
    created_at?: SortOrder
  }

  export type expensesMinOrderByAggregateInput = {
    expense_id?: SortOrder
    vehicle_id?: SortOrder
    driver_id?: SortOrder
    category_id?: SortOrder
    expense_date?: SortOrder
    amount?: SortOrder
    description?: SortOrder
    vendor?: SortOrder
    invoice_number?: SortOrder
    receipt_available?: SortOrder
    approved_by?: SortOrder
    approval_date?: SortOrder
    reimbursable?: SortOrder
    notes?: SortOrder
    created_at?: SortOrder
  }

  export type expensesSumOrderByAggregateInput = {
    expense_id?: SortOrder
    vehicle_id?: SortOrder
    driver_id?: SortOrder
    category_id?: SortOrder
    amount?: SortOrder
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type fuel_stationsCountOrderByAggregateInput = {
    station_id?: SortOrder
    station_name?: SortOrder
    address?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    brand?: SortOrder
    has_fleet_card?: SortOrder
    avg_price_per_gallon?: SortOrder
  }

  export type fuel_stationsAvgOrderByAggregateInput = {
    station_id?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    avg_price_per_gallon?: SortOrder
  }

  export type fuel_stationsMaxOrderByAggregateInput = {
    station_id?: SortOrder
    station_name?: SortOrder
    address?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    brand?: SortOrder
    has_fleet_card?: SortOrder
    avg_price_per_gallon?: SortOrder
  }

  export type fuel_stationsMinOrderByAggregateInput = {
    station_id?: SortOrder
    station_name?: SortOrder
    address?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    brand?: SortOrder
    has_fleet_card?: SortOrder
    avg_price_per_gallon?: SortOrder
  }

  export type fuel_stationsSumOrderByAggregateInput = {
    station_id?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    avg_price_per_gallon?: SortOrder
  }

  export type Fuel_stationsNullableScalarRelationFilter = {
    is?: fuel_stationsWhereInput | null
    isNot?: fuel_stationsWhereInput | null
  }

  export type fuel_transactionsCountOrderByAggregateInput = {
    transaction_id?: SortOrder
    vehicle_id?: SortOrder
    driver_id?: SortOrder
    fuel_station_id?: SortOrder
    transaction_date?: SortOrder
    odometer_reading?: SortOrder
    gallons_purchased?: SortOrder
    price_per_gallon?: SortOrder
    total_amount?: SortOrder
    fuel_type?: SortOrder
    payment_method?: SortOrder
    card_number_last_four?: SortOrder
    receipt_number?: SortOrder
    mpg_calculated?: SortOrder
    notes?: SortOrder
  }

  export type fuel_transactionsAvgOrderByAggregateInput = {
    transaction_id?: SortOrder
    vehicle_id?: SortOrder
    driver_id?: SortOrder
    fuel_station_id?: SortOrder
    odometer_reading?: SortOrder
    gallons_purchased?: SortOrder
    price_per_gallon?: SortOrder
    total_amount?: SortOrder
    mpg_calculated?: SortOrder
  }

  export type fuel_transactionsMaxOrderByAggregateInput = {
    transaction_id?: SortOrder
    vehicle_id?: SortOrder
    driver_id?: SortOrder
    fuel_station_id?: SortOrder
    transaction_date?: SortOrder
    odometer_reading?: SortOrder
    gallons_purchased?: SortOrder
    price_per_gallon?: SortOrder
    total_amount?: SortOrder
    fuel_type?: SortOrder
    payment_method?: SortOrder
    card_number_last_four?: SortOrder
    receipt_number?: SortOrder
    mpg_calculated?: SortOrder
    notes?: SortOrder
  }

  export type fuel_transactionsMinOrderByAggregateInput = {
    transaction_id?: SortOrder
    vehicle_id?: SortOrder
    driver_id?: SortOrder
    fuel_station_id?: SortOrder
    transaction_date?: SortOrder
    odometer_reading?: SortOrder
    gallons_purchased?: SortOrder
    price_per_gallon?: SortOrder
    total_amount?: SortOrder
    fuel_type?: SortOrder
    payment_method?: SortOrder
    card_number_last_four?: SortOrder
    receipt_number?: SortOrder
    mpg_calculated?: SortOrder
    notes?: SortOrder
  }

  export type fuel_transactionsSumOrderByAggregateInput = {
    transaction_id?: SortOrder
    vehicle_id?: SortOrder
    driver_id?: SortOrder
    fuel_station_id?: SortOrder
    odometer_reading?: SortOrder
    gallons_purchased?: SortOrder
    price_per_gallon?: SortOrder
    total_amount?: SortOrder
    mpg_calculated?: SortOrder
  }

  export type gps_trackingCountOrderByAggregateInput = {
    tracking_id?: SortOrder
    vehicle_id?: SortOrder
    timestamp?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    speed?: SortOrder
    heading?: SortOrder
    altitude?: SortOrder
    gps_quality?: SortOrder
    engine_status?: SortOrder
    fuel_level_percent?: SortOrder
    odometer?: SortOrder
  }

  export type gps_trackingAvgOrderByAggregateInput = {
    tracking_id?: SortOrder
    vehicle_id?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    speed?: SortOrder
    heading?: SortOrder
    altitude?: SortOrder
    fuel_level_percent?: SortOrder
    odometer?: SortOrder
  }

  export type gps_trackingMaxOrderByAggregateInput = {
    tracking_id?: SortOrder
    vehicle_id?: SortOrder
    timestamp?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    speed?: SortOrder
    heading?: SortOrder
    altitude?: SortOrder
    gps_quality?: SortOrder
    engine_status?: SortOrder
    fuel_level_percent?: SortOrder
    odometer?: SortOrder
  }

  export type gps_trackingMinOrderByAggregateInput = {
    tracking_id?: SortOrder
    vehicle_id?: SortOrder
    timestamp?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    speed?: SortOrder
    heading?: SortOrder
    altitude?: SortOrder
    gps_quality?: SortOrder
    engine_status?: SortOrder
    fuel_level_percent?: SortOrder
    odometer?: SortOrder
  }

  export type gps_trackingSumOrderByAggregateInput = {
    tracking_id?: SortOrder
    vehicle_id?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    speed?: SortOrder
    heading?: SortOrder
    altitude?: SortOrder
    fuel_level_percent?: SortOrder
    odometer?: SortOrder
  }

  export type incidentsCountOrderByAggregateInput = {
    incident_id?: SortOrder
    vehicle_id?: SortOrder
    driver_id?: SortOrder
    incident_date?: SortOrder
    incident_type?: SortOrder
    severity?: SortOrder
    location?: SortOrder
    description?: SortOrder
    police_report_number?: SortOrder
    insurance_claim_number?: SortOrder
    estimated_damage_cost?: SortOrder
    actual_repair_cost?: SortOrder
    injuries_reported?: SortOrder
    fatalities?: SortOrder
    at_fault?: SortOrder
    weather_conditions?: SortOrder
    road_conditions?: SortOrder
    photos_available?: SortOrder
    status?: SortOrder
    resolution_date?: SortOrder
    lessons_learned?: SortOrder
    created_at?: SortOrder
  }

  export type incidentsAvgOrderByAggregateInput = {
    incident_id?: SortOrder
    vehicle_id?: SortOrder
    driver_id?: SortOrder
    estimated_damage_cost?: SortOrder
    actual_repair_cost?: SortOrder
  }

  export type incidentsMaxOrderByAggregateInput = {
    incident_id?: SortOrder
    vehicle_id?: SortOrder
    driver_id?: SortOrder
    incident_date?: SortOrder
    incident_type?: SortOrder
    severity?: SortOrder
    location?: SortOrder
    description?: SortOrder
    police_report_number?: SortOrder
    insurance_claim_number?: SortOrder
    estimated_damage_cost?: SortOrder
    actual_repair_cost?: SortOrder
    injuries_reported?: SortOrder
    fatalities?: SortOrder
    at_fault?: SortOrder
    weather_conditions?: SortOrder
    road_conditions?: SortOrder
    photos_available?: SortOrder
    status?: SortOrder
    resolution_date?: SortOrder
    lessons_learned?: SortOrder
    created_at?: SortOrder
  }

  export type incidentsMinOrderByAggregateInput = {
    incident_id?: SortOrder
    vehicle_id?: SortOrder
    driver_id?: SortOrder
    incident_date?: SortOrder
    incident_type?: SortOrder
    severity?: SortOrder
    location?: SortOrder
    description?: SortOrder
    police_report_number?: SortOrder
    insurance_claim_number?: SortOrder
    estimated_damage_cost?: SortOrder
    actual_repair_cost?: SortOrder
    injuries_reported?: SortOrder
    fatalities?: SortOrder
    at_fault?: SortOrder
    weather_conditions?: SortOrder
    road_conditions?: SortOrder
    photos_available?: SortOrder
    status?: SortOrder
    resolution_date?: SortOrder
    lessons_learned?: SortOrder
    created_at?: SortOrder
  }

  export type incidentsSumOrderByAggregateInput = {
    incident_id?: SortOrder
    vehicle_id?: SortOrder
    driver_id?: SortOrder
    estimated_damage_cost?: SortOrder
    actual_repair_cost?: SortOrder
  }

  export type Maintenance_typesNullableScalarRelationFilter = {
    is?: maintenance_typesWhereInput | null
    isNot?: maintenance_typesWhereInput | null
  }

  export type Service_providersNullableScalarRelationFilter = {
    is?: service_providersWhereInput | null
    isNot?: service_providersWhereInput | null
  }

  export type maintenance_recordsCountOrderByAggregateInput = {
    maintenance_id?: SortOrder
    vehicle_id?: SortOrder
    maintenance_type_id?: SortOrder
    service_provider_id?: SortOrder
    scheduled_date?: SortOrder
    completed_date?: SortOrder
    odometer_at_service?: SortOrder
    cost?: SortOrder
    labor_hours?: SortOrder
    description?: SortOrder
    parts_used?: SortOrder
    technician_name?: SortOrder
    status?: SortOrder
    next_service_due_date?: SortOrder
    next_service_due_miles?: SortOrder
    warranty_expiry_date?: SortOrder
    invoice_number?: SortOrder
    notes?: SortOrder
    created_at?: SortOrder
  }

  export type maintenance_recordsAvgOrderByAggregateInput = {
    maintenance_id?: SortOrder
    vehicle_id?: SortOrder
    maintenance_type_id?: SortOrder
    service_provider_id?: SortOrder
    odometer_at_service?: SortOrder
    cost?: SortOrder
    labor_hours?: SortOrder
    next_service_due_miles?: SortOrder
  }

  export type maintenance_recordsMaxOrderByAggregateInput = {
    maintenance_id?: SortOrder
    vehicle_id?: SortOrder
    maintenance_type_id?: SortOrder
    service_provider_id?: SortOrder
    scheduled_date?: SortOrder
    completed_date?: SortOrder
    odometer_at_service?: SortOrder
    cost?: SortOrder
    labor_hours?: SortOrder
    description?: SortOrder
    parts_used?: SortOrder
    technician_name?: SortOrder
    status?: SortOrder
    next_service_due_date?: SortOrder
    next_service_due_miles?: SortOrder
    warranty_expiry_date?: SortOrder
    invoice_number?: SortOrder
    notes?: SortOrder
    created_at?: SortOrder
  }

  export type maintenance_recordsMinOrderByAggregateInput = {
    maintenance_id?: SortOrder
    vehicle_id?: SortOrder
    maintenance_type_id?: SortOrder
    service_provider_id?: SortOrder
    scheduled_date?: SortOrder
    completed_date?: SortOrder
    odometer_at_service?: SortOrder
    cost?: SortOrder
    labor_hours?: SortOrder
    description?: SortOrder
    parts_used?: SortOrder
    technician_name?: SortOrder
    status?: SortOrder
    next_service_due_date?: SortOrder
    next_service_due_miles?: SortOrder
    warranty_expiry_date?: SortOrder
    invoice_number?: SortOrder
    notes?: SortOrder
    created_at?: SortOrder
  }

  export type maintenance_recordsSumOrderByAggregateInput = {
    maintenance_id?: SortOrder
    vehicle_id?: SortOrder
    maintenance_type_id?: SortOrder
    service_provider_id?: SortOrder
    odometer_at_service?: SortOrder
    cost?: SortOrder
    labor_hours?: SortOrder
    next_service_due_miles?: SortOrder
  }

  export type Maintenance_recordsListRelationFilter = {
    every?: maintenance_recordsWhereInput
    some?: maintenance_recordsWhereInput
    none?: maintenance_recordsWhereInput
  }

  export type maintenance_recordsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type maintenance_typesCountOrderByAggregateInput = {
    maintenance_type_id?: SortOrder
    type_name?: SortOrder
    description?: SortOrder
    recommended_interval_miles?: SortOrder
    recommended_interval_months?: SortOrder
    estimated_cost?: SortOrder
  }

  export type maintenance_typesAvgOrderByAggregateInput = {
    maintenance_type_id?: SortOrder
    recommended_interval_miles?: SortOrder
    recommended_interval_months?: SortOrder
    estimated_cost?: SortOrder
  }

  export type maintenance_typesMaxOrderByAggregateInput = {
    maintenance_type_id?: SortOrder
    type_name?: SortOrder
    description?: SortOrder
    recommended_interval_miles?: SortOrder
    recommended_interval_months?: SortOrder
    estimated_cost?: SortOrder
  }

  export type maintenance_typesMinOrderByAggregateInput = {
    maintenance_type_id?: SortOrder
    type_name?: SortOrder
    description?: SortOrder
    recommended_interval_miles?: SortOrder
    recommended_interval_months?: SortOrder
    estimated_cost?: SortOrder
  }

  export type maintenance_typesSumOrderByAggregateInput = {
    maintenance_type_id?: SortOrder
    recommended_interval_miles?: SortOrder
    recommended_interval_months?: SortOrder
    estimated_cost?: SortOrder
  }
  export type JsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type UsersNullableScalarRelationFilter = {
    is?: usersWhereInput | null
    isNot?: usersWhereInput | null
  }

  export type reportsCountOrderByAggregateInput = {
    report_id?: SortOrder
    company_id?: SortOrder
    report_name?: SortOrder
    report_type?: SortOrder
    generated_by?: SortOrder
    generation_date?: SortOrder
    date_range_start?: SortOrder
    date_range_end?: SortOrder
    parameters?: SortOrder
    file_path?: SortOrder
    status?: SortOrder
  }

  export type reportsAvgOrderByAggregateInput = {
    report_id?: SortOrder
    company_id?: SortOrder
    generated_by?: SortOrder
  }

  export type reportsMaxOrderByAggregateInput = {
    report_id?: SortOrder
    company_id?: SortOrder
    report_name?: SortOrder
    report_type?: SortOrder
    generated_by?: SortOrder
    generation_date?: SortOrder
    date_range_start?: SortOrder
    date_range_end?: SortOrder
    file_path?: SortOrder
    status?: SortOrder
  }

  export type reportsMinOrderByAggregateInput = {
    report_id?: SortOrder
    company_id?: SortOrder
    report_name?: SortOrder
    report_type?: SortOrder
    generated_by?: SortOrder
    generation_date?: SortOrder
    date_range_start?: SortOrder
    date_range_end?: SortOrder
    file_path?: SortOrder
    status?: SortOrder
  }

  export type reportsSumOrderByAggregateInput = {
    report_id?: SortOrder
    company_id?: SortOrder
    generated_by?: SortOrder
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type safety_inspectionsCountOrderByAggregateInput = {
    inspection_id?: SortOrder
    vehicle_id?: SortOrder
    inspector_name?: SortOrder
    inspection_date?: SortOrder
    inspection_type?: SortOrder
    odometer_reading?: SortOrder
    overall_score?: SortOrder
    passed?: SortOrder
    defects_found?: SortOrder
    critical_defects?: SortOrder
    notes?: SortOrder
    next_inspection_due?: SortOrder
    certificate_number?: SortOrder
  }

  export type safety_inspectionsAvgOrderByAggregateInput = {
    inspection_id?: SortOrder
    vehicle_id?: SortOrder
    odometer_reading?: SortOrder
    overall_score?: SortOrder
    defects_found?: SortOrder
    critical_defects?: SortOrder
  }

  export type safety_inspectionsMaxOrderByAggregateInput = {
    inspection_id?: SortOrder
    vehicle_id?: SortOrder
    inspector_name?: SortOrder
    inspection_date?: SortOrder
    inspection_type?: SortOrder
    odometer_reading?: SortOrder
    overall_score?: SortOrder
    passed?: SortOrder
    defects_found?: SortOrder
    critical_defects?: SortOrder
    notes?: SortOrder
    next_inspection_due?: SortOrder
    certificate_number?: SortOrder
  }

  export type safety_inspectionsMinOrderByAggregateInput = {
    inspection_id?: SortOrder
    vehicle_id?: SortOrder
    inspector_name?: SortOrder
    inspection_date?: SortOrder
    inspection_type?: SortOrder
    odometer_reading?: SortOrder
    overall_score?: SortOrder
    passed?: SortOrder
    defects_found?: SortOrder
    critical_defects?: SortOrder
    notes?: SortOrder
    next_inspection_due?: SortOrder
    certificate_number?: SortOrder
  }

  export type safety_inspectionsSumOrderByAggregateInput = {
    inspection_id?: SortOrder
    vehicle_id?: SortOrder
    odometer_reading?: SortOrder
    overall_score?: SortOrder
    defects_found?: SortOrder
    critical_defects?: SortOrder
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type service_providersCountOrderByAggregateInput = {
    provider_id?: SortOrder
    company_id?: SortOrder
    provider_name?: SortOrder
    service_type?: SortOrder
    contact_person?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    address?: SortOrder
    hourly_rate?: SortOrder
    rating?: SortOrder
    is_preferred?: SortOrder
  }

  export type service_providersAvgOrderByAggregateInput = {
    provider_id?: SortOrder
    company_id?: SortOrder
    hourly_rate?: SortOrder
    rating?: SortOrder
  }

  export type service_providersMaxOrderByAggregateInput = {
    provider_id?: SortOrder
    company_id?: SortOrder
    provider_name?: SortOrder
    service_type?: SortOrder
    contact_person?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    address?: SortOrder
    hourly_rate?: SortOrder
    rating?: SortOrder
    is_preferred?: SortOrder
  }

  export type service_providersMinOrderByAggregateInput = {
    provider_id?: SortOrder
    company_id?: SortOrder
    provider_name?: SortOrder
    service_type?: SortOrder
    contact_person?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    address?: SortOrder
    hourly_rate?: SortOrder
    rating?: SortOrder
    is_preferred?: SortOrder
  }

  export type service_providersSumOrderByAggregateInput = {
    provider_id?: SortOrder
    company_id?: SortOrder
    hourly_rate?: SortOrder
    rating?: SortOrder
  }

  export type tripsCountOrderByAggregateInput = {
    trip_id?: SortOrder
    vehicle_id?: SortOrder
    driver_id?: SortOrder
    start_time?: SortOrder
    end_time?: SortOrder
    start_location?: SortOrder
    end_location?: SortOrder
    start_odometer?: SortOrder
    end_odometer?: SortOrder
    distance_traveled?: SortOrder
    purpose?: SortOrder
    trip_type?: SortOrder
    fuel_consumed?: SortOrder
    average_speed?: SortOrder
    max_speed?: SortOrder
    idle_time_minutes?: SortOrder
    harsh_braking_count?: SortOrder
    harsh_acceleration_count?: SortOrder
    speeding_violations?: SortOrder
    route_efficiency_score?: SortOrder
    cost?: SortOrder
    notes?: SortOrder
    created_at?: SortOrder
  }

  export type tripsAvgOrderByAggregateInput = {
    trip_id?: SortOrder
    vehicle_id?: SortOrder
    driver_id?: SortOrder
    start_odometer?: SortOrder
    end_odometer?: SortOrder
    distance_traveled?: SortOrder
    fuel_consumed?: SortOrder
    average_speed?: SortOrder
    max_speed?: SortOrder
    idle_time_minutes?: SortOrder
    harsh_braking_count?: SortOrder
    harsh_acceleration_count?: SortOrder
    speeding_violations?: SortOrder
    route_efficiency_score?: SortOrder
    cost?: SortOrder
  }

  export type tripsMaxOrderByAggregateInput = {
    trip_id?: SortOrder
    vehicle_id?: SortOrder
    driver_id?: SortOrder
    start_time?: SortOrder
    end_time?: SortOrder
    start_location?: SortOrder
    end_location?: SortOrder
    start_odometer?: SortOrder
    end_odometer?: SortOrder
    distance_traveled?: SortOrder
    purpose?: SortOrder
    trip_type?: SortOrder
    fuel_consumed?: SortOrder
    average_speed?: SortOrder
    max_speed?: SortOrder
    idle_time_minutes?: SortOrder
    harsh_braking_count?: SortOrder
    harsh_acceleration_count?: SortOrder
    speeding_violations?: SortOrder
    route_efficiency_score?: SortOrder
    cost?: SortOrder
    notes?: SortOrder
    created_at?: SortOrder
  }

  export type tripsMinOrderByAggregateInput = {
    trip_id?: SortOrder
    vehicle_id?: SortOrder
    driver_id?: SortOrder
    start_time?: SortOrder
    end_time?: SortOrder
    start_location?: SortOrder
    end_location?: SortOrder
    start_odometer?: SortOrder
    end_odometer?: SortOrder
    distance_traveled?: SortOrder
    purpose?: SortOrder
    trip_type?: SortOrder
    fuel_consumed?: SortOrder
    average_speed?: SortOrder
    max_speed?: SortOrder
    idle_time_minutes?: SortOrder
    harsh_braking_count?: SortOrder
    harsh_acceleration_count?: SortOrder
    speeding_violations?: SortOrder
    route_efficiency_score?: SortOrder
    cost?: SortOrder
    notes?: SortOrder
    created_at?: SortOrder
  }

  export type tripsSumOrderByAggregateInput = {
    trip_id?: SortOrder
    vehicle_id?: SortOrder
    driver_id?: SortOrder
    start_odometer?: SortOrder
    end_odometer?: SortOrder
    distance_traveled?: SortOrder
    fuel_consumed?: SortOrder
    average_speed?: SortOrder
    max_speed?: SortOrder
    idle_time_minutes?: SortOrder
    harsh_braking_count?: SortOrder
    harsh_acceleration_count?: SortOrder
    speeding_violations?: SortOrder
    route_efficiency_score?: SortOrder
    cost?: SortOrder
  }

  export type usersCountOrderByAggregateInput = {
    user_id?: SortOrder
    company_id?: SortOrder
    username?: SortOrder
    email?: SortOrder
    password_hash?: SortOrder
    first_name?: SortOrder
    last_name?: SortOrder
    role?: SortOrder
    phone?: SortOrder
    is_active?: SortOrder
    last_login?: SortOrder
    created_at?: SortOrder
  }

  export type usersAvgOrderByAggregateInput = {
    user_id?: SortOrder
    company_id?: SortOrder
  }

  export type usersMaxOrderByAggregateInput = {
    user_id?: SortOrder
    company_id?: SortOrder
    username?: SortOrder
    email?: SortOrder
    password_hash?: SortOrder
    first_name?: SortOrder
    last_name?: SortOrder
    role?: SortOrder
    phone?: SortOrder
    is_active?: SortOrder
    last_login?: SortOrder
    created_at?: SortOrder
  }

  export type usersMinOrderByAggregateInput = {
    user_id?: SortOrder
    company_id?: SortOrder
    username?: SortOrder
    email?: SortOrder
    password_hash?: SortOrder
    first_name?: SortOrder
    last_name?: SortOrder
    role?: SortOrder
    phone?: SortOrder
    is_active?: SortOrder
    last_login?: SortOrder
    created_at?: SortOrder
  }

  export type usersSumOrderByAggregateInput = {
    user_id?: SortOrder
    company_id?: SortOrder
  }

  export type vehicle_assignmentsCountOrderByAggregateInput = {
    assignment_id?: SortOrder
    vehicle_id?: SortOrder
    driver_id?: SortOrder
    assigned_date?: SortOrder
    end_date?: SortOrder
    assignment_type?: SortOrder
    notes?: SortOrder
    is_active?: SortOrder
  }

  export type vehicle_assignmentsAvgOrderByAggregateInput = {
    assignment_id?: SortOrder
    vehicle_id?: SortOrder
    driver_id?: SortOrder
  }

  export type vehicle_assignmentsMaxOrderByAggregateInput = {
    assignment_id?: SortOrder
    vehicle_id?: SortOrder
    driver_id?: SortOrder
    assigned_date?: SortOrder
    end_date?: SortOrder
    assignment_type?: SortOrder
    notes?: SortOrder
    is_active?: SortOrder
  }

  export type vehicle_assignmentsMinOrderByAggregateInput = {
    assignment_id?: SortOrder
    vehicle_id?: SortOrder
    driver_id?: SortOrder
    assigned_date?: SortOrder
    end_date?: SortOrder
    assignment_type?: SortOrder
    notes?: SortOrder
    is_active?: SortOrder
  }

  export type vehicle_assignmentsSumOrderByAggregateInput = {
    assignment_id?: SortOrder
    vehicle_id?: SortOrder
    driver_id?: SortOrder
  }

  export type vehicle_typesCountOrderByAggregateInput = {
    type_id?: SortOrder
    type_name?: SortOrder
    description?: SortOrder
    fuel_efficiency_rating?: SortOrder
    capacity_passengers?: SortOrder
    capacity_cargo_cubic_feet?: SortOrder
  }

  export type vehicle_typesAvgOrderByAggregateInput = {
    type_id?: SortOrder
    fuel_efficiency_rating?: SortOrder
    capacity_passengers?: SortOrder
    capacity_cargo_cubic_feet?: SortOrder
  }

  export type vehicle_typesMaxOrderByAggregateInput = {
    type_id?: SortOrder
    type_name?: SortOrder
    description?: SortOrder
    fuel_efficiency_rating?: SortOrder
    capacity_passengers?: SortOrder
    capacity_cargo_cubic_feet?: SortOrder
  }

  export type vehicle_typesMinOrderByAggregateInput = {
    type_id?: SortOrder
    type_name?: SortOrder
    description?: SortOrder
    fuel_efficiency_rating?: SortOrder
    capacity_passengers?: SortOrder
    capacity_cargo_cubic_feet?: SortOrder
  }

  export type vehicle_typesSumOrderByAggregateInput = {
    type_id?: SortOrder
    fuel_efficiency_rating?: SortOrder
    capacity_passengers?: SortOrder
    capacity_cargo_cubic_feet?: SortOrder
  }

  export type Gps_trackingListRelationFilter = {
    every?: gps_trackingWhereInput
    some?: gps_trackingWhereInput
    none?: gps_trackingWhereInput
  }

  export type Safety_inspectionsListRelationFilter = {
    every?: safety_inspectionsWhereInput
    some?: safety_inspectionsWhereInput
    none?: safety_inspectionsWhereInput
  }

  export type DepartmentsNullableScalarRelationFilter = {
    is?: departmentsWhereInput | null
    isNot?: departmentsWhereInput | null
  }

  export type Vehicle_typesNullableScalarRelationFilter = {
    is?: vehicle_typesWhereInput | null
    isNot?: vehicle_typesWhereInput | null
  }

  export type gps_trackingOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type safety_inspectionsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type vehiclesCountOrderByAggregateInput = {
    vehicle_id?: SortOrder
    company_id?: SortOrder
    vehicle_type_id?: SortOrder
    vin?: SortOrder
    license_plate?: SortOrder
    make?: SortOrder
    model?: SortOrder
    year?: SortOrder
    color?: SortOrder
    fuel_type?: SortOrder
    engine_size?: SortOrder
    transmission?: SortOrder
    purchase_date?: SortOrder
    purchase_price?: SortOrder
    current_value?: SortOrder
    odometer_reading?: SortOrder
    fuel_capacity?: SortOrder
    insurance_policy_number?: SortOrder
    insurance_expiry?: SortOrder
    registration_expiry?: SortOrder
    status?: SortOrder
    gps_device_id?: SortOrder
    assigned_driver_id?: SortOrder
    department_id?: SortOrder
    notes?: SortOrder
    created_at?: SortOrder
  }

  export type vehiclesAvgOrderByAggregateInput = {
    vehicle_id?: SortOrder
    company_id?: SortOrder
    vehicle_type_id?: SortOrder
    year?: SortOrder
    purchase_price?: SortOrder
    current_value?: SortOrder
    odometer_reading?: SortOrder
    fuel_capacity?: SortOrder
    assigned_driver_id?: SortOrder
    department_id?: SortOrder
  }

  export type vehiclesMaxOrderByAggregateInput = {
    vehicle_id?: SortOrder
    company_id?: SortOrder
    vehicle_type_id?: SortOrder
    vin?: SortOrder
    license_plate?: SortOrder
    make?: SortOrder
    model?: SortOrder
    year?: SortOrder
    color?: SortOrder
    fuel_type?: SortOrder
    engine_size?: SortOrder
    transmission?: SortOrder
    purchase_date?: SortOrder
    purchase_price?: SortOrder
    current_value?: SortOrder
    odometer_reading?: SortOrder
    fuel_capacity?: SortOrder
    insurance_policy_number?: SortOrder
    insurance_expiry?: SortOrder
    registration_expiry?: SortOrder
    status?: SortOrder
    gps_device_id?: SortOrder
    assigned_driver_id?: SortOrder
    department_id?: SortOrder
    notes?: SortOrder
    created_at?: SortOrder
  }

  export type vehiclesMinOrderByAggregateInput = {
    vehicle_id?: SortOrder
    company_id?: SortOrder
    vehicle_type_id?: SortOrder
    vin?: SortOrder
    license_plate?: SortOrder
    make?: SortOrder
    model?: SortOrder
    year?: SortOrder
    color?: SortOrder
    fuel_type?: SortOrder
    engine_size?: SortOrder
    transmission?: SortOrder
    purchase_date?: SortOrder
    purchase_price?: SortOrder
    current_value?: SortOrder
    odometer_reading?: SortOrder
    fuel_capacity?: SortOrder
    insurance_policy_number?: SortOrder
    insurance_expiry?: SortOrder
    registration_expiry?: SortOrder
    status?: SortOrder
    gps_device_id?: SortOrder
    assigned_driver_id?: SortOrder
    department_id?: SortOrder
    notes?: SortOrder
    created_at?: SortOrder
  }

  export type vehiclesSumOrderByAggregateInput = {
    vehicle_id?: SortOrder
    company_id?: SortOrder
    vehicle_type_id?: SortOrder
    year?: SortOrder
    purchase_price?: SortOrder
    current_value?: SortOrder
    odometer_reading?: SortOrder
    fuel_capacity?: SortOrder
    assigned_driver_id?: SortOrder
    department_id?: SortOrder
  }

  export type departmentsCreateNestedManyWithoutCompaniesInput = {
    create?: XOR<departmentsCreateWithoutCompaniesInput, departmentsUncheckedCreateWithoutCompaniesInput> | departmentsCreateWithoutCompaniesInput[] | departmentsUncheckedCreateWithoutCompaniesInput[]
    connectOrCreate?: departmentsCreateOrConnectWithoutCompaniesInput | departmentsCreateOrConnectWithoutCompaniesInput[]
    createMany?: departmentsCreateManyCompaniesInputEnvelope
    connect?: departmentsWhereUniqueInput | departmentsWhereUniqueInput[]
  }

  export type driversCreateNestedManyWithoutCompaniesInput = {
    create?: XOR<driversCreateWithoutCompaniesInput, driversUncheckedCreateWithoutCompaniesInput> | driversCreateWithoutCompaniesInput[] | driversUncheckedCreateWithoutCompaniesInput[]
    connectOrCreate?: driversCreateOrConnectWithoutCompaniesInput | driversCreateOrConnectWithoutCompaniesInput[]
    createMany?: driversCreateManyCompaniesInputEnvelope
    connect?: driversWhereUniqueInput | driversWhereUniqueInput[]
  }

  export type reportsCreateNestedManyWithoutCompaniesInput = {
    create?: XOR<reportsCreateWithoutCompaniesInput, reportsUncheckedCreateWithoutCompaniesInput> | reportsCreateWithoutCompaniesInput[] | reportsUncheckedCreateWithoutCompaniesInput[]
    connectOrCreate?: reportsCreateOrConnectWithoutCompaniesInput | reportsCreateOrConnectWithoutCompaniesInput[]
    createMany?: reportsCreateManyCompaniesInputEnvelope
    connect?: reportsWhereUniqueInput | reportsWhereUniqueInput[]
  }

  export type service_providersCreateNestedManyWithoutCompaniesInput = {
    create?: XOR<service_providersCreateWithoutCompaniesInput, service_providersUncheckedCreateWithoutCompaniesInput> | service_providersCreateWithoutCompaniesInput[] | service_providersUncheckedCreateWithoutCompaniesInput[]
    connectOrCreate?: service_providersCreateOrConnectWithoutCompaniesInput | service_providersCreateOrConnectWithoutCompaniesInput[]
    createMany?: service_providersCreateManyCompaniesInputEnvelope
    connect?: service_providersWhereUniqueInput | service_providersWhereUniqueInput[]
  }

  export type usersCreateNestedManyWithoutCompaniesInput = {
    create?: XOR<usersCreateWithoutCompaniesInput, usersUncheckedCreateWithoutCompaniesInput> | usersCreateWithoutCompaniesInput[] | usersUncheckedCreateWithoutCompaniesInput[]
    connectOrCreate?: usersCreateOrConnectWithoutCompaniesInput | usersCreateOrConnectWithoutCompaniesInput[]
    createMany?: usersCreateManyCompaniesInputEnvelope
    connect?: usersWhereUniqueInput | usersWhereUniqueInput[]
  }

  export type vehiclesCreateNestedManyWithoutCompaniesInput = {
    create?: XOR<vehiclesCreateWithoutCompaniesInput, vehiclesUncheckedCreateWithoutCompaniesInput> | vehiclesCreateWithoutCompaniesInput[] | vehiclesUncheckedCreateWithoutCompaniesInput[]
    connectOrCreate?: vehiclesCreateOrConnectWithoutCompaniesInput | vehiclesCreateOrConnectWithoutCompaniesInput[]
    createMany?: vehiclesCreateManyCompaniesInputEnvelope
    connect?: vehiclesWhereUniqueInput | vehiclesWhereUniqueInput[]
  }

  export type departmentsUncheckedCreateNestedManyWithoutCompaniesInput = {
    create?: XOR<departmentsCreateWithoutCompaniesInput, departmentsUncheckedCreateWithoutCompaniesInput> | departmentsCreateWithoutCompaniesInput[] | departmentsUncheckedCreateWithoutCompaniesInput[]
    connectOrCreate?: departmentsCreateOrConnectWithoutCompaniesInput | departmentsCreateOrConnectWithoutCompaniesInput[]
    createMany?: departmentsCreateManyCompaniesInputEnvelope
    connect?: departmentsWhereUniqueInput | departmentsWhereUniqueInput[]
  }

  export type driversUncheckedCreateNestedManyWithoutCompaniesInput = {
    create?: XOR<driversCreateWithoutCompaniesInput, driversUncheckedCreateWithoutCompaniesInput> | driversCreateWithoutCompaniesInput[] | driversUncheckedCreateWithoutCompaniesInput[]
    connectOrCreate?: driversCreateOrConnectWithoutCompaniesInput | driversCreateOrConnectWithoutCompaniesInput[]
    createMany?: driversCreateManyCompaniesInputEnvelope
    connect?: driversWhereUniqueInput | driversWhereUniqueInput[]
  }

  export type reportsUncheckedCreateNestedManyWithoutCompaniesInput = {
    create?: XOR<reportsCreateWithoutCompaniesInput, reportsUncheckedCreateWithoutCompaniesInput> | reportsCreateWithoutCompaniesInput[] | reportsUncheckedCreateWithoutCompaniesInput[]
    connectOrCreate?: reportsCreateOrConnectWithoutCompaniesInput | reportsCreateOrConnectWithoutCompaniesInput[]
    createMany?: reportsCreateManyCompaniesInputEnvelope
    connect?: reportsWhereUniqueInput | reportsWhereUniqueInput[]
  }

  export type service_providersUncheckedCreateNestedManyWithoutCompaniesInput = {
    create?: XOR<service_providersCreateWithoutCompaniesInput, service_providersUncheckedCreateWithoutCompaniesInput> | service_providersCreateWithoutCompaniesInput[] | service_providersUncheckedCreateWithoutCompaniesInput[]
    connectOrCreate?: service_providersCreateOrConnectWithoutCompaniesInput | service_providersCreateOrConnectWithoutCompaniesInput[]
    createMany?: service_providersCreateManyCompaniesInputEnvelope
    connect?: service_providersWhereUniqueInput | service_providersWhereUniqueInput[]
  }

  export type usersUncheckedCreateNestedManyWithoutCompaniesInput = {
    create?: XOR<usersCreateWithoutCompaniesInput, usersUncheckedCreateWithoutCompaniesInput> | usersCreateWithoutCompaniesInput[] | usersUncheckedCreateWithoutCompaniesInput[]
    connectOrCreate?: usersCreateOrConnectWithoutCompaniesInput | usersCreateOrConnectWithoutCompaniesInput[]
    createMany?: usersCreateManyCompaniesInputEnvelope
    connect?: usersWhereUniqueInput | usersWhereUniqueInput[]
  }

  export type vehiclesUncheckedCreateNestedManyWithoutCompaniesInput = {
    create?: XOR<vehiclesCreateWithoutCompaniesInput, vehiclesUncheckedCreateWithoutCompaniesInput> | vehiclesCreateWithoutCompaniesInput[] | vehiclesUncheckedCreateWithoutCompaniesInput[]
    connectOrCreate?: vehiclesCreateOrConnectWithoutCompaniesInput | vehiclesCreateOrConnectWithoutCompaniesInput[]
    createMany?: vehiclesCreateManyCompaniesInputEnvelope
    connect?: vehiclesWhereUniqueInput | vehiclesWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type departmentsUpdateManyWithoutCompaniesNestedInput = {
    create?: XOR<departmentsCreateWithoutCompaniesInput, departmentsUncheckedCreateWithoutCompaniesInput> | departmentsCreateWithoutCompaniesInput[] | departmentsUncheckedCreateWithoutCompaniesInput[]
    connectOrCreate?: departmentsCreateOrConnectWithoutCompaniesInput | departmentsCreateOrConnectWithoutCompaniesInput[]
    upsert?: departmentsUpsertWithWhereUniqueWithoutCompaniesInput | departmentsUpsertWithWhereUniqueWithoutCompaniesInput[]
    createMany?: departmentsCreateManyCompaniesInputEnvelope
    set?: departmentsWhereUniqueInput | departmentsWhereUniqueInput[]
    disconnect?: departmentsWhereUniqueInput | departmentsWhereUniqueInput[]
    delete?: departmentsWhereUniqueInput | departmentsWhereUniqueInput[]
    connect?: departmentsWhereUniqueInput | departmentsWhereUniqueInput[]
    update?: departmentsUpdateWithWhereUniqueWithoutCompaniesInput | departmentsUpdateWithWhereUniqueWithoutCompaniesInput[]
    updateMany?: departmentsUpdateManyWithWhereWithoutCompaniesInput | departmentsUpdateManyWithWhereWithoutCompaniesInput[]
    deleteMany?: departmentsScalarWhereInput | departmentsScalarWhereInput[]
  }

  export type driversUpdateManyWithoutCompaniesNestedInput = {
    create?: XOR<driversCreateWithoutCompaniesInput, driversUncheckedCreateWithoutCompaniesInput> | driversCreateWithoutCompaniesInput[] | driversUncheckedCreateWithoutCompaniesInput[]
    connectOrCreate?: driversCreateOrConnectWithoutCompaniesInput | driversCreateOrConnectWithoutCompaniesInput[]
    upsert?: driversUpsertWithWhereUniqueWithoutCompaniesInput | driversUpsertWithWhereUniqueWithoutCompaniesInput[]
    createMany?: driversCreateManyCompaniesInputEnvelope
    set?: driversWhereUniqueInput | driversWhereUniqueInput[]
    disconnect?: driversWhereUniqueInput | driversWhereUniqueInput[]
    delete?: driversWhereUniqueInput | driversWhereUniqueInput[]
    connect?: driversWhereUniqueInput | driversWhereUniqueInput[]
    update?: driversUpdateWithWhereUniqueWithoutCompaniesInput | driversUpdateWithWhereUniqueWithoutCompaniesInput[]
    updateMany?: driversUpdateManyWithWhereWithoutCompaniesInput | driversUpdateManyWithWhereWithoutCompaniesInput[]
    deleteMany?: driversScalarWhereInput | driversScalarWhereInput[]
  }

  export type reportsUpdateManyWithoutCompaniesNestedInput = {
    create?: XOR<reportsCreateWithoutCompaniesInput, reportsUncheckedCreateWithoutCompaniesInput> | reportsCreateWithoutCompaniesInput[] | reportsUncheckedCreateWithoutCompaniesInput[]
    connectOrCreate?: reportsCreateOrConnectWithoutCompaniesInput | reportsCreateOrConnectWithoutCompaniesInput[]
    upsert?: reportsUpsertWithWhereUniqueWithoutCompaniesInput | reportsUpsertWithWhereUniqueWithoutCompaniesInput[]
    createMany?: reportsCreateManyCompaniesInputEnvelope
    set?: reportsWhereUniqueInput | reportsWhereUniqueInput[]
    disconnect?: reportsWhereUniqueInput | reportsWhereUniqueInput[]
    delete?: reportsWhereUniqueInput | reportsWhereUniqueInput[]
    connect?: reportsWhereUniqueInput | reportsWhereUniqueInput[]
    update?: reportsUpdateWithWhereUniqueWithoutCompaniesInput | reportsUpdateWithWhereUniqueWithoutCompaniesInput[]
    updateMany?: reportsUpdateManyWithWhereWithoutCompaniesInput | reportsUpdateManyWithWhereWithoutCompaniesInput[]
    deleteMany?: reportsScalarWhereInput | reportsScalarWhereInput[]
  }

  export type service_providersUpdateManyWithoutCompaniesNestedInput = {
    create?: XOR<service_providersCreateWithoutCompaniesInput, service_providersUncheckedCreateWithoutCompaniesInput> | service_providersCreateWithoutCompaniesInput[] | service_providersUncheckedCreateWithoutCompaniesInput[]
    connectOrCreate?: service_providersCreateOrConnectWithoutCompaniesInput | service_providersCreateOrConnectWithoutCompaniesInput[]
    upsert?: service_providersUpsertWithWhereUniqueWithoutCompaniesInput | service_providersUpsertWithWhereUniqueWithoutCompaniesInput[]
    createMany?: service_providersCreateManyCompaniesInputEnvelope
    set?: service_providersWhereUniqueInput | service_providersWhereUniqueInput[]
    disconnect?: service_providersWhereUniqueInput | service_providersWhereUniqueInput[]
    delete?: service_providersWhereUniqueInput | service_providersWhereUniqueInput[]
    connect?: service_providersWhereUniqueInput | service_providersWhereUniqueInput[]
    update?: service_providersUpdateWithWhereUniqueWithoutCompaniesInput | service_providersUpdateWithWhereUniqueWithoutCompaniesInput[]
    updateMany?: service_providersUpdateManyWithWhereWithoutCompaniesInput | service_providersUpdateManyWithWhereWithoutCompaniesInput[]
    deleteMany?: service_providersScalarWhereInput | service_providersScalarWhereInput[]
  }

  export type usersUpdateManyWithoutCompaniesNestedInput = {
    create?: XOR<usersCreateWithoutCompaniesInput, usersUncheckedCreateWithoutCompaniesInput> | usersCreateWithoutCompaniesInput[] | usersUncheckedCreateWithoutCompaniesInput[]
    connectOrCreate?: usersCreateOrConnectWithoutCompaniesInput | usersCreateOrConnectWithoutCompaniesInput[]
    upsert?: usersUpsertWithWhereUniqueWithoutCompaniesInput | usersUpsertWithWhereUniqueWithoutCompaniesInput[]
    createMany?: usersCreateManyCompaniesInputEnvelope
    set?: usersWhereUniqueInput | usersWhereUniqueInput[]
    disconnect?: usersWhereUniqueInput | usersWhereUniqueInput[]
    delete?: usersWhereUniqueInput | usersWhereUniqueInput[]
    connect?: usersWhereUniqueInput | usersWhereUniqueInput[]
    update?: usersUpdateWithWhereUniqueWithoutCompaniesInput | usersUpdateWithWhereUniqueWithoutCompaniesInput[]
    updateMany?: usersUpdateManyWithWhereWithoutCompaniesInput | usersUpdateManyWithWhereWithoutCompaniesInput[]
    deleteMany?: usersScalarWhereInput | usersScalarWhereInput[]
  }

  export type vehiclesUpdateManyWithoutCompaniesNestedInput = {
    create?: XOR<vehiclesCreateWithoutCompaniesInput, vehiclesUncheckedCreateWithoutCompaniesInput> | vehiclesCreateWithoutCompaniesInput[] | vehiclesUncheckedCreateWithoutCompaniesInput[]
    connectOrCreate?: vehiclesCreateOrConnectWithoutCompaniesInput | vehiclesCreateOrConnectWithoutCompaniesInput[]
    upsert?: vehiclesUpsertWithWhereUniqueWithoutCompaniesInput | vehiclesUpsertWithWhereUniqueWithoutCompaniesInput[]
    createMany?: vehiclesCreateManyCompaniesInputEnvelope
    set?: vehiclesWhereUniqueInput | vehiclesWhereUniqueInput[]
    disconnect?: vehiclesWhereUniqueInput | vehiclesWhereUniqueInput[]
    delete?: vehiclesWhereUniqueInput | vehiclesWhereUniqueInput[]
    connect?: vehiclesWhereUniqueInput | vehiclesWhereUniqueInput[]
    update?: vehiclesUpdateWithWhereUniqueWithoutCompaniesInput | vehiclesUpdateWithWhereUniqueWithoutCompaniesInput[]
    updateMany?: vehiclesUpdateManyWithWhereWithoutCompaniesInput | vehiclesUpdateManyWithWhereWithoutCompaniesInput[]
    deleteMany?: vehiclesScalarWhereInput | vehiclesScalarWhereInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type departmentsUncheckedUpdateManyWithoutCompaniesNestedInput = {
    create?: XOR<departmentsCreateWithoutCompaniesInput, departmentsUncheckedCreateWithoutCompaniesInput> | departmentsCreateWithoutCompaniesInput[] | departmentsUncheckedCreateWithoutCompaniesInput[]
    connectOrCreate?: departmentsCreateOrConnectWithoutCompaniesInput | departmentsCreateOrConnectWithoutCompaniesInput[]
    upsert?: departmentsUpsertWithWhereUniqueWithoutCompaniesInput | departmentsUpsertWithWhereUniqueWithoutCompaniesInput[]
    createMany?: departmentsCreateManyCompaniesInputEnvelope
    set?: departmentsWhereUniqueInput | departmentsWhereUniqueInput[]
    disconnect?: departmentsWhereUniqueInput | departmentsWhereUniqueInput[]
    delete?: departmentsWhereUniqueInput | departmentsWhereUniqueInput[]
    connect?: departmentsWhereUniqueInput | departmentsWhereUniqueInput[]
    update?: departmentsUpdateWithWhereUniqueWithoutCompaniesInput | departmentsUpdateWithWhereUniqueWithoutCompaniesInput[]
    updateMany?: departmentsUpdateManyWithWhereWithoutCompaniesInput | departmentsUpdateManyWithWhereWithoutCompaniesInput[]
    deleteMany?: departmentsScalarWhereInput | departmentsScalarWhereInput[]
  }

  export type driversUncheckedUpdateManyWithoutCompaniesNestedInput = {
    create?: XOR<driversCreateWithoutCompaniesInput, driversUncheckedCreateWithoutCompaniesInput> | driversCreateWithoutCompaniesInput[] | driversUncheckedCreateWithoutCompaniesInput[]
    connectOrCreate?: driversCreateOrConnectWithoutCompaniesInput | driversCreateOrConnectWithoutCompaniesInput[]
    upsert?: driversUpsertWithWhereUniqueWithoutCompaniesInput | driversUpsertWithWhereUniqueWithoutCompaniesInput[]
    createMany?: driversCreateManyCompaniesInputEnvelope
    set?: driversWhereUniqueInput | driversWhereUniqueInput[]
    disconnect?: driversWhereUniqueInput | driversWhereUniqueInput[]
    delete?: driversWhereUniqueInput | driversWhereUniqueInput[]
    connect?: driversWhereUniqueInput | driversWhereUniqueInput[]
    update?: driversUpdateWithWhereUniqueWithoutCompaniesInput | driversUpdateWithWhereUniqueWithoutCompaniesInput[]
    updateMany?: driversUpdateManyWithWhereWithoutCompaniesInput | driversUpdateManyWithWhereWithoutCompaniesInput[]
    deleteMany?: driversScalarWhereInput | driversScalarWhereInput[]
  }

  export type reportsUncheckedUpdateManyWithoutCompaniesNestedInput = {
    create?: XOR<reportsCreateWithoutCompaniesInput, reportsUncheckedCreateWithoutCompaniesInput> | reportsCreateWithoutCompaniesInput[] | reportsUncheckedCreateWithoutCompaniesInput[]
    connectOrCreate?: reportsCreateOrConnectWithoutCompaniesInput | reportsCreateOrConnectWithoutCompaniesInput[]
    upsert?: reportsUpsertWithWhereUniqueWithoutCompaniesInput | reportsUpsertWithWhereUniqueWithoutCompaniesInput[]
    createMany?: reportsCreateManyCompaniesInputEnvelope
    set?: reportsWhereUniqueInput | reportsWhereUniqueInput[]
    disconnect?: reportsWhereUniqueInput | reportsWhereUniqueInput[]
    delete?: reportsWhereUniqueInput | reportsWhereUniqueInput[]
    connect?: reportsWhereUniqueInput | reportsWhereUniqueInput[]
    update?: reportsUpdateWithWhereUniqueWithoutCompaniesInput | reportsUpdateWithWhereUniqueWithoutCompaniesInput[]
    updateMany?: reportsUpdateManyWithWhereWithoutCompaniesInput | reportsUpdateManyWithWhereWithoutCompaniesInput[]
    deleteMany?: reportsScalarWhereInput | reportsScalarWhereInput[]
  }

  export type service_providersUncheckedUpdateManyWithoutCompaniesNestedInput = {
    create?: XOR<service_providersCreateWithoutCompaniesInput, service_providersUncheckedCreateWithoutCompaniesInput> | service_providersCreateWithoutCompaniesInput[] | service_providersUncheckedCreateWithoutCompaniesInput[]
    connectOrCreate?: service_providersCreateOrConnectWithoutCompaniesInput | service_providersCreateOrConnectWithoutCompaniesInput[]
    upsert?: service_providersUpsertWithWhereUniqueWithoutCompaniesInput | service_providersUpsertWithWhereUniqueWithoutCompaniesInput[]
    createMany?: service_providersCreateManyCompaniesInputEnvelope
    set?: service_providersWhereUniqueInput | service_providersWhereUniqueInput[]
    disconnect?: service_providersWhereUniqueInput | service_providersWhereUniqueInput[]
    delete?: service_providersWhereUniqueInput | service_providersWhereUniqueInput[]
    connect?: service_providersWhereUniqueInput | service_providersWhereUniqueInput[]
    update?: service_providersUpdateWithWhereUniqueWithoutCompaniesInput | service_providersUpdateWithWhereUniqueWithoutCompaniesInput[]
    updateMany?: service_providersUpdateManyWithWhereWithoutCompaniesInput | service_providersUpdateManyWithWhereWithoutCompaniesInput[]
    deleteMany?: service_providersScalarWhereInput | service_providersScalarWhereInput[]
  }

  export type usersUncheckedUpdateManyWithoutCompaniesNestedInput = {
    create?: XOR<usersCreateWithoutCompaniesInput, usersUncheckedCreateWithoutCompaniesInput> | usersCreateWithoutCompaniesInput[] | usersUncheckedCreateWithoutCompaniesInput[]
    connectOrCreate?: usersCreateOrConnectWithoutCompaniesInput | usersCreateOrConnectWithoutCompaniesInput[]
    upsert?: usersUpsertWithWhereUniqueWithoutCompaniesInput | usersUpsertWithWhereUniqueWithoutCompaniesInput[]
    createMany?: usersCreateManyCompaniesInputEnvelope
    set?: usersWhereUniqueInput | usersWhereUniqueInput[]
    disconnect?: usersWhereUniqueInput | usersWhereUniqueInput[]
    delete?: usersWhereUniqueInput | usersWhereUniqueInput[]
    connect?: usersWhereUniqueInput | usersWhereUniqueInput[]
    update?: usersUpdateWithWhereUniqueWithoutCompaniesInput | usersUpdateWithWhereUniqueWithoutCompaniesInput[]
    updateMany?: usersUpdateManyWithWhereWithoutCompaniesInput | usersUpdateManyWithWhereWithoutCompaniesInput[]
    deleteMany?: usersScalarWhereInput | usersScalarWhereInput[]
  }

  export type vehiclesUncheckedUpdateManyWithoutCompaniesNestedInput = {
    create?: XOR<vehiclesCreateWithoutCompaniesInput, vehiclesUncheckedCreateWithoutCompaniesInput> | vehiclesCreateWithoutCompaniesInput[] | vehiclesUncheckedCreateWithoutCompaniesInput[]
    connectOrCreate?: vehiclesCreateOrConnectWithoutCompaniesInput | vehiclesCreateOrConnectWithoutCompaniesInput[]
    upsert?: vehiclesUpsertWithWhereUniqueWithoutCompaniesInput | vehiclesUpsertWithWhereUniqueWithoutCompaniesInput[]
    createMany?: vehiclesCreateManyCompaniesInputEnvelope
    set?: vehiclesWhereUniqueInput | vehiclesWhereUniqueInput[]
    disconnect?: vehiclesWhereUniqueInput | vehiclesWhereUniqueInput[]
    delete?: vehiclesWhereUniqueInput | vehiclesWhereUniqueInput[]
    connect?: vehiclesWhereUniqueInput | vehiclesWhereUniqueInput[]
    update?: vehiclesUpdateWithWhereUniqueWithoutCompaniesInput | vehiclesUpdateWithWhereUniqueWithoutCompaniesInput[]
    updateMany?: vehiclesUpdateManyWithWhereWithoutCompaniesInput | vehiclesUpdateManyWithWhereWithoutCompaniesInput[]
    deleteMany?: vehiclesScalarWhereInput | vehiclesScalarWhereInput[]
  }

  export type expensesCreateNestedManyWithoutCost_categoriesInput = {
    create?: XOR<expensesCreateWithoutCost_categoriesInput, expensesUncheckedCreateWithoutCost_categoriesInput> | expensesCreateWithoutCost_categoriesInput[] | expensesUncheckedCreateWithoutCost_categoriesInput[]
    connectOrCreate?: expensesCreateOrConnectWithoutCost_categoriesInput | expensesCreateOrConnectWithoutCost_categoriesInput[]
    createMany?: expensesCreateManyCost_categoriesInputEnvelope
    connect?: expensesWhereUniqueInput | expensesWhereUniqueInput[]
  }

  export type expensesUncheckedCreateNestedManyWithoutCost_categoriesInput = {
    create?: XOR<expensesCreateWithoutCost_categoriesInput, expensesUncheckedCreateWithoutCost_categoriesInput> | expensesCreateWithoutCost_categoriesInput[] | expensesUncheckedCreateWithoutCost_categoriesInput[]
    connectOrCreate?: expensesCreateOrConnectWithoutCost_categoriesInput | expensesCreateOrConnectWithoutCost_categoriesInput[]
    createMany?: expensesCreateManyCost_categoriesInputEnvelope
    connect?: expensesWhereUniqueInput | expensesWhereUniqueInput[]
  }

  export type expensesUpdateManyWithoutCost_categoriesNestedInput = {
    create?: XOR<expensesCreateWithoutCost_categoriesInput, expensesUncheckedCreateWithoutCost_categoriesInput> | expensesCreateWithoutCost_categoriesInput[] | expensesUncheckedCreateWithoutCost_categoriesInput[]
    connectOrCreate?: expensesCreateOrConnectWithoutCost_categoriesInput | expensesCreateOrConnectWithoutCost_categoriesInput[]
    upsert?: expensesUpsertWithWhereUniqueWithoutCost_categoriesInput | expensesUpsertWithWhereUniqueWithoutCost_categoriesInput[]
    createMany?: expensesCreateManyCost_categoriesInputEnvelope
    set?: expensesWhereUniqueInput | expensesWhereUniqueInput[]
    disconnect?: expensesWhereUniqueInput | expensesWhereUniqueInput[]
    delete?: expensesWhereUniqueInput | expensesWhereUniqueInput[]
    connect?: expensesWhereUniqueInput | expensesWhereUniqueInput[]
    update?: expensesUpdateWithWhereUniqueWithoutCost_categoriesInput | expensesUpdateWithWhereUniqueWithoutCost_categoriesInput[]
    updateMany?: expensesUpdateManyWithWhereWithoutCost_categoriesInput | expensesUpdateManyWithWhereWithoutCost_categoriesInput[]
    deleteMany?: expensesScalarWhereInput | expensesScalarWhereInput[]
  }

  export type expensesUncheckedUpdateManyWithoutCost_categoriesNestedInput = {
    create?: XOR<expensesCreateWithoutCost_categoriesInput, expensesUncheckedCreateWithoutCost_categoriesInput> | expensesCreateWithoutCost_categoriesInput[] | expensesUncheckedCreateWithoutCost_categoriesInput[]
    connectOrCreate?: expensesCreateOrConnectWithoutCost_categoriesInput | expensesCreateOrConnectWithoutCost_categoriesInput[]
    upsert?: expensesUpsertWithWhereUniqueWithoutCost_categoriesInput | expensesUpsertWithWhereUniqueWithoutCost_categoriesInput[]
    createMany?: expensesCreateManyCost_categoriesInputEnvelope
    set?: expensesWhereUniqueInput | expensesWhereUniqueInput[]
    disconnect?: expensesWhereUniqueInput | expensesWhereUniqueInput[]
    delete?: expensesWhereUniqueInput | expensesWhereUniqueInput[]
    connect?: expensesWhereUniqueInput | expensesWhereUniqueInput[]
    update?: expensesUpdateWithWhereUniqueWithoutCost_categoriesInput | expensesUpdateWithWhereUniqueWithoutCost_categoriesInput[]
    updateMany?: expensesUpdateManyWithWhereWithoutCost_categoriesInput | expensesUpdateManyWithWhereWithoutCost_categoriesInput[]
    deleteMany?: expensesScalarWhereInput | expensesScalarWhereInput[]
  }

  export type companiesCreateNestedOneWithoutDepartmentsInput = {
    create?: XOR<companiesCreateWithoutDepartmentsInput, companiesUncheckedCreateWithoutDepartmentsInput>
    connectOrCreate?: companiesCreateOrConnectWithoutDepartmentsInput
    connect?: companiesWhereUniqueInput
  }

  export type vehiclesCreateNestedManyWithoutDepartmentsInput = {
    create?: XOR<vehiclesCreateWithoutDepartmentsInput, vehiclesUncheckedCreateWithoutDepartmentsInput> | vehiclesCreateWithoutDepartmentsInput[] | vehiclesUncheckedCreateWithoutDepartmentsInput[]
    connectOrCreate?: vehiclesCreateOrConnectWithoutDepartmentsInput | vehiclesCreateOrConnectWithoutDepartmentsInput[]
    createMany?: vehiclesCreateManyDepartmentsInputEnvelope
    connect?: vehiclesWhereUniqueInput | vehiclesWhereUniqueInput[]
  }

  export type vehiclesUncheckedCreateNestedManyWithoutDepartmentsInput = {
    create?: XOR<vehiclesCreateWithoutDepartmentsInput, vehiclesUncheckedCreateWithoutDepartmentsInput> | vehiclesCreateWithoutDepartmentsInput[] | vehiclesUncheckedCreateWithoutDepartmentsInput[]
    connectOrCreate?: vehiclesCreateOrConnectWithoutDepartmentsInput | vehiclesCreateOrConnectWithoutDepartmentsInput[]
    createMany?: vehiclesCreateManyDepartmentsInputEnvelope
    connect?: vehiclesWhereUniqueInput | vehiclesWhereUniqueInput[]
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type companiesUpdateOneWithoutDepartmentsNestedInput = {
    create?: XOR<companiesCreateWithoutDepartmentsInput, companiesUncheckedCreateWithoutDepartmentsInput>
    connectOrCreate?: companiesCreateOrConnectWithoutDepartmentsInput
    upsert?: companiesUpsertWithoutDepartmentsInput
    disconnect?: companiesWhereInput | boolean
    delete?: companiesWhereInput | boolean
    connect?: companiesWhereUniqueInput
    update?: XOR<XOR<companiesUpdateToOneWithWhereWithoutDepartmentsInput, companiesUpdateWithoutDepartmentsInput>, companiesUncheckedUpdateWithoutDepartmentsInput>
  }

  export type vehiclesUpdateManyWithoutDepartmentsNestedInput = {
    create?: XOR<vehiclesCreateWithoutDepartmentsInput, vehiclesUncheckedCreateWithoutDepartmentsInput> | vehiclesCreateWithoutDepartmentsInput[] | vehiclesUncheckedCreateWithoutDepartmentsInput[]
    connectOrCreate?: vehiclesCreateOrConnectWithoutDepartmentsInput | vehiclesCreateOrConnectWithoutDepartmentsInput[]
    upsert?: vehiclesUpsertWithWhereUniqueWithoutDepartmentsInput | vehiclesUpsertWithWhereUniqueWithoutDepartmentsInput[]
    createMany?: vehiclesCreateManyDepartmentsInputEnvelope
    set?: vehiclesWhereUniqueInput | vehiclesWhereUniqueInput[]
    disconnect?: vehiclesWhereUniqueInput | vehiclesWhereUniqueInput[]
    delete?: vehiclesWhereUniqueInput | vehiclesWhereUniqueInput[]
    connect?: vehiclesWhereUniqueInput | vehiclesWhereUniqueInput[]
    update?: vehiclesUpdateWithWhereUniqueWithoutDepartmentsInput | vehiclesUpdateWithWhereUniqueWithoutDepartmentsInput[]
    updateMany?: vehiclesUpdateManyWithWhereWithoutDepartmentsInput | vehiclesUpdateManyWithWhereWithoutDepartmentsInput[]
    deleteMany?: vehiclesScalarWhereInput | vehiclesScalarWhereInput[]
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type vehiclesUncheckedUpdateManyWithoutDepartmentsNestedInput = {
    create?: XOR<vehiclesCreateWithoutDepartmentsInput, vehiclesUncheckedCreateWithoutDepartmentsInput> | vehiclesCreateWithoutDepartmentsInput[] | vehiclesUncheckedCreateWithoutDepartmentsInput[]
    connectOrCreate?: vehiclesCreateOrConnectWithoutDepartmentsInput | vehiclesCreateOrConnectWithoutDepartmentsInput[]
    upsert?: vehiclesUpsertWithWhereUniqueWithoutDepartmentsInput | vehiclesUpsertWithWhereUniqueWithoutDepartmentsInput[]
    createMany?: vehiclesCreateManyDepartmentsInputEnvelope
    set?: vehiclesWhereUniqueInput | vehiclesWhereUniqueInput[]
    disconnect?: vehiclesWhereUniqueInput | vehiclesWhereUniqueInput[]
    delete?: vehiclesWhereUniqueInput | vehiclesWhereUniqueInput[]
    connect?: vehiclesWhereUniqueInput | vehiclesWhereUniqueInput[]
    update?: vehiclesUpdateWithWhereUniqueWithoutDepartmentsInput | vehiclesUpdateWithWhereUniqueWithoutDepartmentsInput[]
    updateMany?: vehiclesUpdateManyWithWhereWithoutDepartmentsInput | vehiclesUpdateManyWithWhereWithoutDepartmentsInput[]
    deleteMany?: vehiclesScalarWhereInput | vehiclesScalarWhereInput[]
  }

  export type driversCreateNestedOneWithoutDriver_certificationsInput = {
    create?: XOR<driversCreateWithoutDriver_certificationsInput, driversUncheckedCreateWithoutDriver_certificationsInput>
    connectOrCreate?: driversCreateOrConnectWithoutDriver_certificationsInput
    connect?: driversWhereUniqueInput
  }

  export type driversUpdateOneWithoutDriver_certificationsNestedInput = {
    create?: XOR<driversCreateWithoutDriver_certificationsInput, driversUncheckedCreateWithoutDriver_certificationsInput>
    connectOrCreate?: driversCreateOrConnectWithoutDriver_certificationsInput
    upsert?: driversUpsertWithoutDriver_certificationsInput
    disconnect?: driversWhereInput | boolean
    delete?: driversWhereInput | boolean
    connect?: driversWhereUniqueInput
    update?: XOR<XOR<driversUpdateToOneWithWhereWithoutDriver_certificationsInput, driversUpdateWithoutDriver_certificationsInput>, driversUncheckedUpdateWithoutDriver_certificationsInput>
  }

  export type driver_certificationsCreateNestedManyWithoutDriversInput = {
    create?: XOR<driver_certificationsCreateWithoutDriversInput, driver_certificationsUncheckedCreateWithoutDriversInput> | driver_certificationsCreateWithoutDriversInput[] | driver_certificationsUncheckedCreateWithoutDriversInput[]
    connectOrCreate?: driver_certificationsCreateOrConnectWithoutDriversInput | driver_certificationsCreateOrConnectWithoutDriversInput[]
    createMany?: driver_certificationsCreateManyDriversInputEnvelope
    connect?: driver_certificationsWhereUniqueInput | driver_certificationsWhereUniqueInput[]
  }

  export type companiesCreateNestedOneWithoutDriversInput = {
    create?: XOR<companiesCreateWithoutDriversInput, companiesUncheckedCreateWithoutDriversInput>
    connectOrCreate?: companiesCreateOrConnectWithoutDriversInput
    connect?: companiesWhereUniqueInput
  }

  export type expensesCreateNestedManyWithoutDriversInput = {
    create?: XOR<expensesCreateWithoutDriversInput, expensesUncheckedCreateWithoutDriversInput> | expensesCreateWithoutDriversInput[] | expensesUncheckedCreateWithoutDriversInput[]
    connectOrCreate?: expensesCreateOrConnectWithoutDriversInput | expensesCreateOrConnectWithoutDriversInput[]
    createMany?: expensesCreateManyDriversInputEnvelope
    connect?: expensesWhereUniqueInput | expensesWhereUniqueInput[]
  }

  export type fuel_transactionsCreateNestedManyWithoutDriversInput = {
    create?: XOR<fuel_transactionsCreateWithoutDriversInput, fuel_transactionsUncheckedCreateWithoutDriversInput> | fuel_transactionsCreateWithoutDriversInput[] | fuel_transactionsUncheckedCreateWithoutDriversInput[]
    connectOrCreate?: fuel_transactionsCreateOrConnectWithoutDriversInput | fuel_transactionsCreateOrConnectWithoutDriversInput[]
    createMany?: fuel_transactionsCreateManyDriversInputEnvelope
    connect?: fuel_transactionsWhereUniqueInput | fuel_transactionsWhereUniqueInput[]
  }

  export type incidentsCreateNestedManyWithoutDriversInput = {
    create?: XOR<incidentsCreateWithoutDriversInput, incidentsUncheckedCreateWithoutDriversInput> | incidentsCreateWithoutDriversInput[] | incidentsUncheckedCreateWithoutDriversInput[]
    connectOrCreate?: incidentsCreateOrConnectWithoutDriversInput | incidentsCreateOrConnectWithoutDriversInput[]
    createMany?: incidentsCreateManyDriversInputEnvelope
    connect?: incidentsWhereUniqueInput | incidentsWhereUniqueInput[]
  }

  export type tripsCreateNestedManyWithoutDriversInput = {
    create?: XOR<tripsCreateWithoutDriversInput, tripsUncheckedCreateWithoutDriversInput> | tripsCreateWithoutDriversInput[] | tripsUncheckedCreateWithoutDriversInput[]
    connectOrCreate?: tripsCreateOrConnectWithoutDriversInput | tripsCreateOrConnectWithoutDriversInput[]
    createMany?: tripsCreateManyDriversInputEnvelope
    connect?: tripsWhereUniqueInput | tripsWhereUniqueInput[]
  }

  export type vehicle_assignmentsCreateNestedManyWithoutDriversInput = {
    create?: XOR<vehicle_assignmentsCreateWithoutDriversInput, vehicle_assignmentsUncheckedCreateWithoutDriversInput> | vehicle_assignmentsCreateWithoutDriversInput[] | vehicle_assignmentsUncheckedCreateWithoutDriversInput[]
    connectOrCreate?: vehicle_assignmentsCreateOrConnectWithoutDriversInput | vehicle_assignmentsCreateOrConnectWithoutDriversInput[]
    createMany?: vehicle_assignmentsCreateManyDriversInputEnvelope
    connect?: vehicle_assignmentsWhereUniqueInput | vehicle_assignmentsWhereUniqueInput[]
  }

  export type vehiclesCreateNestedManyWithoutDriversInput = {
    create?: XOR<vehiclesCreateWithoutDriversInput, vehiclesUncheckedCreateWithoutDriversInput> | vehiclesCreateWithoutDriversInput[] | vehiclesUncheckedCreateWithoutDriversInput[]
    connectOrCreate?: vehiclesCreateOrConnectWithoutDriversInput | vehiclesCreateOrConnectWithoutDriversInput[]
    createMany?: vehiclesCreateManyDriversInputEnvelope
    connect?: vehiclesWhereUniqueInput | vehiclesWhereUniqueInput[]
  }

  export type driver_certificationsUncheckedCreateNestedManyWithoutDriversInput = {
    create?: XOR<driver_certificationsCreateWithoutDriversInput, driver_certificationsUncheckedCreateWithoutDriversInput> | driver_certificationsCreateWithoutDriversInput[] | driver_certificationsUncheckedCreateWithoutDriversInput[]
    connectOrCreate?: driver_certificationsCreateOrConnectWithoutDriversInput | driver_certificationsCreateOrConnectWithoutDriversInput[]
    createMany?: driver_certificationsCreateManyDriversInputEnvelope
    connect?: driver_certificationsWhereUniqueInput | driver_certificationsWhereUniqueInput[]
  }

  export type expensesUncheckedCreateNestedManyWithoutDriversInput = {
    create?: XOR<expensesCreateWithoutDriversInput, expensesUncheckedCreateWithoutDriversInput> | expensesCreateWithoutDriversInput[] | expensesUncheckedCreateWithoutDriversInput[]
    connectOrCreate?: expensesCreateOrConnectWithoutDriversInput | expensesCreateOrConnectWithoutDriversInput[]
    createMany?: expensesCreateManyDriversInputEnvelope
    connect?: expensesWhereUniqueInput | expensesWhereUniqueInput[]
  }

  export type fuel_transactionsUncheckedCreateNestedManyWithoutDriversInput = {
    create?: XOR<fuel_transactionsCreateWithoutDriversInput, fuel_transactionsUncheckedCreateWithoutDriversInput> | fuel_transactionsCreateWithoutDriversInput[] | fuel_transactionsUncheckedCreateWithoutDriversInput[]
    connectOrCreate?: fuel_transactionsCreateOrConnectWithoutDriversInput | fuel_transactionsCreateOrConnectWithoutDriversInput[]
    createMany?: fuel_transactionsCreateManyDriversInputEnvelope
    connect?: fuel_transactionsWhereUniqueInput | fuel_transactionsWhereUniqueInput[]
  }

  export type incidentsUncheckedCreateNestedManyWithoutDriversInput = {
    create?: XOR<incidentsCreateWithoutDriversInput, incidentsUncheckedCreateWithoutDriversInput> | incidentsCreateWithoutDriversInput[] | incidentsUncheckedCreateWithoutDriversInput[]
    connectOrCreate?: incidentsCreateOrConnectWithoutDriversInput | incidentsCreateOrConnectWithoutDriversInput[]
    createMany?: incidentsCreateManyDriversInputEnvelope
    connect?: incidentsWhereUniqueInput | incidentsWhereUniqueInput[]
  }

  export type tripsUncheckedCreateNestedManyWithoutDriversInput = {
    create?: XOR<tripsCreateWithoutDriversInput, tripsUncheckedCreateWithoutDriversInput> | tripsCreateWithoutDriversInput[] | tripsUncheckedCreateWithoutDriversInput[]
    connectOrCreate?: tripsCreateOrConnectWithoutDriversInput | tripsCreateOrConnectWithoutDriversInput[]
    createMany?: tripsCreateManyDriversInputEnvelope
    connect?: tripsWhereUniqueInput | tripsWhereUniqueInput[]
  }

  export type vehicle_assignmentsUncheckedCreateNestedManyWithoutDriversInput = {
    create?: XOR<vehicle_assignmentsCreateWithoutDriversInput, vehicle_assignmentsUncheckedCreateWithoutDriversInput> | vehicle_assignmentsCreateWithoutDriversInput[] | vehicle_assignmentsUncheckedCreateWithoutDriversInput[]
    connectOrCreate?: vehicle_assignmentsCreateOrConnectWithoutDriversInput | vehicle_assignmentsCreateOrConnectWithoutDriversInput[]
    createMany?: vehicle_assignmentsCreateManyDriversInputEnvelope
    connect?: vehicle_assignmentsWhereUniqueInput | vehicle_assignmentsWhereUniqueInput[]
  }

  export type vehiclesUncheckedCreateNestedManyWithoutDriversInput = {
    create?: XOR<vehiclesCreateWithoutDriversInput, vehiclesUncheckedCreateWithoutDriversInput> | vehiclesCreateWithoutDriversInput[] | vehiclesUncheckedCreateWithoutDriversInput[]
    connectOrCreate?: vehiclesCreateOrConnectWithoutDriversInput | vehiclesCreateOrConnectWithoutDriversInput[]
    createMany?: vehiclesCreateManyDriversInputEnvelope
    connect?: vehiclesWhereUniqueInput | vehiclesWhereUniqueInput[]
  }

  export type driver_certificationsUpdateManyWithoutDriversNestedInput = {
    create?: XOR<driver_certificationsCreateWithoutDriversInput, driver_certificationsUncheckedCreateWithoutDriversInput> | driver_certificationsCreateWithoutDriversInput[] | driver_certificationsUncheckedCreateWithoutDriversInput[]
    connectOrCreate?: driver_certificationsCreateOrConnectWithoutDriversInput | driver_certificationsCreateOrConnectWithoutDriversInput[]
    upsert?: driver_certificationsUpsertWithWhereUniqueWithoutDriversInput | driver_certificationsUpsertWithWhereUniqueWithoutDriversInput[]
    createMany?: driver_certificationsCreateManyDriversInputEnvelope
    set?: driver_certificationsWhereUniqueInput | driver_certificationsWhereUniqueInput[]
    disconnect?: driver_certificationsWhereUniqueInput | driver_certificationsWhereUniqueInput[]
    delete?: driver_certificationsWhereUniqueInput | driver_certificationsWhereUniqueInput[]
    connect?: driver_certificationsWhereUniqueInput | driver_certificationsWhereUniqueInput[]
    update?: driver_certificationsUpdateWithWhereUniqueWithoutDriversInput | driver_certificationsUpdateWithWhereUniqueWithoutDriversInput[]
    updateMany?: driver_certificationsUpdateManyWithWhereWithoutDriversInput | driver_certificationsUpdateManyWithWhereWithoutDriversInput[]
    deleteMany?: driver_certificationsScalarWhereInput | driver_certificationsScalarWhereInput[]
  }

  export type companiesUpdateOneWithoutDriversNestedInput = {
    create?: XOR<companiesCreateWithoutDriversInput, companiesUncheckedCreateWithoutDriversInput>
    connectOrCreate?: companiesCreateOrConnectWithoutDriversInput
    upsert?: companiesUpsertWithoutDriversInput
    disconnect?: companiesWhereInput | boolean
    delete?: companiesWhereInput | boolean
    connect?: companiesWhereUniqueInput
    update?: XOR<XOR<companiesUpdateToOneWithWhereWithoutDriversInput, companiesUpdateWithoutDriversInput>, companiesUncheckedUpdateWithoutDriversInput>
  }

  export type expensesUpdateManyWithoutDriversNestedInput = {
    create?: XOR<expensesCreateWithoutDriversInput, expensesUncheckedCreateWithoutDriversInput> | expensesCreateWithoutDriversInput[] | expensesUncheckedCreateWithoutDriversInput[]
    connectOrCreate?: expensesCreateOrConnectWithoutDriversInput | expensesCreateOrConnectWithoutDriversInput[]
    upsert?: expensesUpsertWithWhereUniqueWithoutDriversInput | expensesUpsertWithWhereUniqueWithoutDriversInput[]
    createMany?: expensesCreateManyDriversInputEnvelope
    set?: expensesWhereUniqueInput | expensesWhereUniqueInput[]
    disconnect?: expensesWhereUniqueInput | expensesWhereUniqueInput[]
    delete?: expensesWhereUniqueInput | expensesWhereUniqueInput[]
    connect?: expensesWhereUniqueInput | expensesWhereUniqueInput[]
    update?: expensesUpdateWithWhereUniqueWithoutDriversInput | expensesUpdateWithWhereUniqueWithoutDriversInput[]
    updateMany?: expensesUpdateManyWithWhereWithoutDriversInput | expensesUpdateManyWithWhereWithoutDriversInput[]
    deleteMany?: expensesScalarWhereInput | expensesScalarWhereInput[]
  }

  export type fuel_transactionsUpdateManyWithoutDriversNestedInput = {
    create?: XOR<fuel_transactionsCreateWithoutDriversInput, fuel_transactionsUncheckedCreateWithoutDriversInput> | fuel_transactionsCreateWithoutDriversInput[] | fuel_transactionsUncheckedCreateWithoutDriversInput[]
    connectOrCreate?: fuel_transactionsCreateOrConnectWithoutDriversInput | fuel_transactionsCreateOrConnectWithoutDriversInput[]
    upsert?: fuel_transactionsUpsertWithWhereUniqueWithoutDriversInput | fuel_transactionsUpsertWithWhereUniqueWithoutDriversInput[]
    createMany?: fuel_transactionsCreateManyDriversInputEnvelope
    set?: fuel_transactionsWhereUniqueInput | fuel_transactionsWhereUniqueInput[]
    disconnect?: fuel_transactionsWhereUniqueInput | fuel_transactionsWhereUniqueInput[]
    delete?: fuel_transactionsWhereUniqueInput | fuel_transactionsWhereUniqueInput[]
    connect?: fuel_transactionsWhereUniqueInput | fuel_transactionsWhereUniqueInput[]
    update?: fuel_transactionsUpdateWithWhereUniqueWithoutDriversInput | fuel_transactionsUpdateWithWhereUniqueWithoutDriversInput[]
    updateMany?: fuel_transactionsUpdateManyWithWhereWithoutDriversInput | fuel_transactionsUpdateManyWithWhereWithoutDriversInput[]
    deleteMany?: fuel_transactionsScalarWhereInput | fuel_transactionsScalarWhereInput[]
  }

  export type incidentsUpdateManyWithoutDriversNestedInput = {
    create?: XOR<incidentsCreateWithoutDriversInput, incidentsUncheckedCreateWithoutDriversInput> | incidentsCreateWithoutDriversInput[] | incidentsUncheckedCreateWithoutDriversInput[]
    connectOrCreate?: incidentsCreateOrConnectWithoutDriversInput | incidentsCreateOrConnectWithoutDriversInput[]
    upsert?: incidentsUpsertWithWhereUniqueWithoutDriversInput | incidentsUpsertWithWhereUniqueWithoutDriversInput[]
    createMany?: incidentsCreateManyDriversInputEnvelope
    set?: incidentsWhereUniqueInput | incidentsWhereUniqueInput[]
    disconnect?: incidentsWhereUniqueInput | incidentsWhereUniqueInput[]
    delete?: incidentsWhereUniqueInput | incidentsWhereUniqueInput[]
    connect?: incidentsWhereUniqueInput | incidentsWhereUniqueInput[]
    update?: incidentsUpdateWithWhereUniqueWithoutDriversInput | incidentsUpdateWithWhereUniqueWithoutDriversInput[]
    updateMany?: incidentsUpdateManyWithWhereWithoutDriversInput | incidentsUpdateManyWithWhereWithoutDriversInput[]
    deleteMany?: incidentsScalarWhereInput | incidentsScalarWhereInput[]
  }

  export type tripsUpdateManyWithoutDriversNestedInput = {
    create?: XOR<tripsCreateWithoutDriversInput, tripsUncheckedCreateWithoutDriversInput> | tripsCreateWithoutDriversInput[] | tripsUncheckedCreateWithoutDriversInput[]
    connectOrCreate?: tripsCreateOrConnectWithoutDriversInput | tripsCreateOrConnectWithoutDriversInput[]
    upsert?: tripsUpsertWithWhereUniqueWithoutDriversInput | tripsUpsertWithWhereUniqueWithoutDriversInput[]
    createMany?: tripsCreateManyDriversInputEnvelope
    set?: tripsWhereUniqueInput | tripsWhereUniqueInput[]
    disconnect?: tripsWhereUniqueInput | tripsWhereUniqueInput[]
    delete?: tripsWhereUniqueInput | tripsWhereUniqueInput[]
    connect?: tripsWhereUniqueInput | tripsWhereUniqueInput[]
    update?: tripsUpdateWithWhereUniqueWithoutDriversInput | tripsUpdateWithWhereUniqueWithoutDriversInput[]
    updateMany?: tripsUpdateManyWithWhereWithoutDriversInput | tripsUpdateManyWithWhereWithoutDriversInput[]
    deleteMany?: tripsScalarWhereInput | tripsScalarWhereInput[]
  }

  export type vehicle_assignmentsUpdateManyWithoutDriversNestedInput = {
    create?: XOR<vehicle_assignmentsCreateWithoutDriversInput, vehicle_assignmentsUncheckedCreateWithoutDriversInput> | vehicle_assignmentsCreateWithoutDriversInput[] | vehicle_assignmentsUncheckedCreateWithoutDriversInput[]
    connectOrCreate?: vehicle_assignmentsCreateOrConnectWithoutDriversInput | vehicle_assignmentsCreateOrConnectWithoutDriversInput[]
    upsert?: vehicle_assignmentsUpsertWithWhereUniqueWithoutDriversInput | vehicle_assignmentsUpsertWithWhereUniqueWithoutDriversInput[]
    createMany?: vehicle_assignmentsCreateManyDriversInputEnvelope
    set?: vehicle_assignmentsWhereUniqueInput | vehicle_assignmentsWhereUniqueInput[]
    disconnect?: vehicle_assignmentsWhereUniqueInput | vehicle_assignmentsWhereUniqueInput[]
    delete?: vehicle_assignmentsWhereUniqueInput | vehicle_assignmentsWhereUniqueInput[]
    connect?: vehicle_assignmentsWhereUniqueInput | vehicle_assignmentsWhereUniqueInput[]
    update?: vehicle_assignmentsUpdateWithWhereUniqueWithoutDriversInput | vehicle_assignmentsUpdateWithWhereUniqueWithoutDriversInput[]
    updateMany?: vehicle_assignmentsUpdateManyWithWhereWithoutDriversInput | vehicle_assignmentsUpdateManyWithWhereWithoutDriversInput[]
    deleteMany?: vehicle_assignmentsScalarWhereInput | vehicle_assignmentsScalarWhereInput[]
  }

  export type vehiclesUpdateManyWithoutDriversNestedInput = {
    create?: XOR<vehiclesCreateWithoutDriversInput, vehiclesUncheckedCreateWithoutDriversInput> | vehiclesCreateWithoutDriversInput[] | vehiclesUncheckedCreateWithoutDriversInput[]
    connectOrCreate?: vehiclesCreateOrConnectWithoutDriversInput | vehiclesCreateOrConnectWithoutDriversInput[]
    upsert?: vehiclesUpsertWithWhereUniqueWithoutDriversInput | vehiclesUpsertWithWhereUniqueWithoutDriversInput[]
    createMany?: vehiclesCreateManyDriversInputEnvelope
    set?: vehiclesWhereUniqueInput | vehiclesWhereUniqueInput[]
    disconnect?: vehiclesWhereUniqueInput | vehiclesWhereUniqueInput[]
    delete?: vehiclesWhereUniqueInput | vehiclesWhereUniqueInput[]
    connect?: vehiclesWhereUniqueInput | vehiclesWhereUniqueInput[]
    update?: vehiclesUpdateWithWhereUniqueWithoutDriversInput | vehiclesUpdateWithWhereUniqueWithoutDriversInput[]
    updateMany?: vehiclesUpdateManyWithWhereWithoutDriversInput | vehiclesUpdateManyWithWhereWithoutDriversInput[]
    deleteMany?: vehiclesScalarWhereInput | vehiclesScalarWhereInput[]
  }

  export type driver_certificationsUncheckedUpdateManyWithoutDriversNestedInput = {
    create?: XOR<driver_certificationsCreateWithoutDriversInput, driver_certificationsUncheckedCreateWithoutDriversInput> | driver_certificationsCreateWithoutDriversInput[] | driver_certificationsUncheckedCreateWithoutDriversInput[]
    connectOrCreate?: driver_certificationsCreateOrConnectWithoutDriversInput | driver_certificationsCreateOrConnectWithoutDriversInput[]
    upsert?: driver_certificationsUpsertWithWhereUniqueWithoutDriversInput | driver_certificationsUpsertWithWhereUniqueWithoutDriversInput[]
    createMany?: driver_certificationsCreateManyDriversInputEnvelope
    set?: driver_certificationsWhereUniqueInput | driver_certificationsWhereUniqueInput[]
    disconnect?: driver_certificationsWhereUniqueInput | driver_certificationsWhereUniqueInput[]
    delete?: driver_certificationsWhereUniqueInput | driver_certificationsWhereUniqueInput[]
    connect?: driver_certificationsWhereUniqueInput | driver_certificationsWhereUniqueInput[]
    update?: driver_certificationsUpdateWithWhereUniqueWithoutDriversInput | driver_certificationsUpdateWithWhereUniqueWithoutDriversInput[]
    updateMany?: driver_certificationsUpdateManyWithWhereWithoutDriversInput | driver_certificationsUpdateManyWithWhereWithoutDriversInput[]
    deleteMany?: driver_certificationsScalarWhereInput | driver_certificationsScalarWhereInput[]
  }

  export type expensesUncheckedUpdateManyWithoutDriversNestedInput = {
    create?: XOR<expensesCreateWithoutDriversInput, expensesUncheckedCreateWithoutDriversInput> | expensesCreateWithoutDriversInput[] | expensesUncheckedCreateWithoutDriversInput[]
    connectOrCreate?: expensesCreateOrConnectWithoutDriversInput | expensesCreateOrConnectWithoutDriversInput[]
    upsert?: expensesUpsertWithWhereUniqueWithoutDriversInput | expensesUpsertWithWhereUniqueWithoutDriversInput[]
    createMany?: expensesCreateManyDriversInputEnvelope
    set?: expensesWhereUniqueInput | expensesWhereUniqueInput[]
    disconnect?: expensesWhereUniqueInput | expensesWhereUniqueInput[]
    delete?: expensesWhereUniqueInput | expensesWhereUniqueInput[]
    connect?: expensesWhereUniqueInput | expensesWhereUniqueInput[]
    update?: expensesUpdateWithWhereUniqueWithoutDriversInput | expensesUpdateWithWhereUniqueWithoutDriversInput[]
    updateMany?: expensesUpdateManyWithWhereWithoutDriversInput | expensesUpdateManyWithWhereWithoutDriversInput[]
    deleteMany?: expensesScalarWhereInput | expensesScalarWhereInput[]
  }

  export type fuel_transactionsUncheckedUpdateManyWithoutDriversNestedInput = {
    create?: XOR<fuel_transactionsCreateWithoutDriversInput, fuel_transactionsUncheckedCreateWithoutDriversInput> | fuel_transactionsCreateWithoutDriversInput[] | fuel_transactionsUncheckedCreateWithoutDriversInput[]
    connectOrCreate?: fuel_transactionsCreateOrConnectWithoutDriversInput | fuel_transactionsCreateOrConnectWithoutDriversInput[]
    upsert?: fuel_transactionsUpsertWithWhereUniqueWithoutDriversInput | fuel_transactionsUpsertWithWhereUniqueWithoutDriversInput[]
    createMany?: fuel_transactionsCreateManyDriversInputEnvelope
    set?: fuel_transactionsWhereUniqueInput | fuel_transactionsWhereUniqueInput[]
    disconnect?: fuel_transactionsWhereUniqueInput | fuel_transactionsWhereUniqueInput[]
    delete?: fuel_transactionsWhereUniqueInput | fuel_transactionsWhereUniqueInput[]
    connect?: fuel_transactionsWhereUniqueInput | fuel_transactionsWhereUniqueInput[]
    update?: fuel_transactionsUpdateWithWhereUniqueWithoutDriversInput | fuel_transactionsUpdateWithWhereUniqueWithoutDriversInput[]
    updateMany?: fuel_transactionsUpdateManyWithWhereWithoutDriversInput | fuel_transactionsUpdateManyWithWhereWithoutDriversInput[]
    deleteMany?: fuel_transactionsScalarWhereInput | fuel_transactionsScalarWhereInput[]
  }

  export type incidentsUncheckedUpdateManyWithoutDriversNestedInput = {
    create?: XOR<incidentsCreateWithoutDriversInput, incidentsUncheckedCreateWithoutDriversInput> | incidentsCreateWithoutDriversInput[] | incidentsUncheckedCreateWithoutDriversInput[]
    connectOrCreate?: incidentsCreateOrConnectWithoutDriversInput | incidentsCreateOrConnectWithoutDriversInput[]
    upsert?: incidentsUpsertWithWhereUniqueWithoutDriversInput | incidentsUpsertWithWhereUniqueWithoutDriversInput[]
    createMany?: incidentsCreateManyDriversInputEnvelope
    set?: incidentsWhereUniqueInput | incidentsWhereUniqueInput[]
    disconnect?: incidentsWhereUniqueInput | incidentsWhereUniqueInput[]
    delete?: incidentsWhereUniqueInput | incidentsWhereUniqueInput[]
    connect?: incidentsWhereUniqueInput | incidentsWhereUniqueInput[]
    update?: incidentsUpdateWithWhereUniqueWithoutDriversInput | incidentsUpdateWithWhereUniqueWithoutDriversInput[]
    updateMany?: incidentsUpdateManyWithWhereWithoutDriversInput | incidentsUpdateManyWithWhereWithoutDriversInput[]
    deleteMany?: incidentsScalarWhereInput | incidentsScalarWhereInput[]
  }

  export type tripsUncheckedUpdateManyWithoutDriversNestedInput = {
    create?: XOR<tripsCreateWithoutDriversInput, tripsUncheckedCreateWithoutDriversInput> | tripsCreateWithoutDriversInput[] | tripsUncheckedCreateWithoutDriversInput[]
    connectOrCreate?: tripsCreateOrConnectWithoutDriversInput | tripsCreateOrConnectWithoutDriversInput[]
    upsert?: tripsUpsertWithWhereUniqueWithoutDriversInput | tripsUpsertWithWhereUniqueWithoutDriversInput[]
    createMany?: tripsCreateManyDriversInputEnvelope
    set?: tripsWhereUniqueInput | tripsWhereUniqueInput[]
    disconnect?: tripsWhereUniqueInput | tripsWhereUniqueInput[]
    delete?: tripsWhereUniqueInput | tripsWhereUniqueInput[]
    connect?: tripsWhereUniqueInput | tripsWhereUniqueInput[]
    update?: tripsUpdateWithWhereUniqueWithoutDriversInput | tripsUpdateWithWhereUniqueWithoutDriversInput[]
    updateMany?: tripsUpdateManyWithWhereWithoutDriversInput | tripsUpdateManyWithWhereWithoutDriversInput[]
    deleteMany?: tripsScalarWhereInput | tripsScalarWhereInput[]
  }

  export type vehicle_assignmentsUncheckedUpdateManyWithoutDriversNestedInput = {
    create?: XOR<vehicle_assignmentsCreateWithoutDriversInput, vehicle_assignmentsUncheckedCreateWithoutDriversInput> | vehicle_assignmentsCreateWithoutDriversInput[] | vehicle_assignmentsUncheckedCreateWithoutDriversInput[]
    connectOrCreate?: vehicle_assignmentsCreateOrConnectWithoutDriversInput | vehicle_assignmentsCreateOrConnectWithoutDriversInput[]
    upsert?: vehicle_assignmentsUpsertWithWhereUniqueWithoutDriversInput | vehicle_assignmentsUpsertWithWhereUniqueWithoutDriversInput[]
    createMany?: vehicle_assignmentsCreateManyDriversInputEnvelope
    set?: vehicle_assignmentsWhereUniqueInput | vehicle_assignmentsWhereUniqueInput[]
    disconnect?: vehicle_assignmentsWhereUniqueInput | vehicle_assignmentsWhereUniqueInput[]
    delete?: vehicle_assignmentsWhereUniqueInput | vehicle_assignmentsWhereUniqueInput[]
    connect?: vehicle_assignmentsWhereUniqueInput | vehicle_assignmentsWhereUniqueInput[]
    update?: vehicle_assignmentsUpdateWithWhereUniqueWithoutDriversInput | vehicle_assignmentsUpdateWithWhereUniqueWithoutDriversInput[]
    updateMany?: vehicle_assignmentsUpdateManyWithWhereWithoutDriversInput | vehicle_assignmentsUpdateManyWithWhereWithoutDriversInput[]
    deleteMany?: vehicle_assignmentsScalarWhereInput | vehicle_assignmentsScalarWhereInput[]
  }

  export type vehiclesUncheckedUpdateManyWithoutDriversNestedInput = {
    create?: XOR<vehiclesCreateWithoutDriversInput, vehiclesUncheckedCreateWithoutDriversInput> | vehiclesCreateWithoutDriversInput[] | vehiclesUncheckedCreateWithoutDriversInput[]
    connectOrCreate?: vehiclesCreateOrConnectWithoutDriversInput | vehiclesCreateOrConnectWithoutDriversInput[]
    upsert?: vehiclesUpsertWithWhereUniqueWithoutDriversInput | vehiclesUpsertWithWhereUniqueWithoutDriversInput[]
    createMany?: vehiclesCreateManyDriversInputEnvelope
    set?: vehiclesWhereUniqueInput | vehiclesWhereUniqueInput[]
    disconnect?: vehiclesWhereUniqueInput | vehiclesWhereUniqueInput[]
    delete?: vehiclesWhereUniqueInput | vehiclesWhereUniqueInput[]
    connect?: vehiclesWhereUniqueInput | vehiclesWhereUniqueInput[]
    update?: vehiclesUpdateWithWhereUniqueWithoutDriversInput | vehiclesUpdateWithWhereUniqueWithoutDriversInput[]
    updateMany?: vehiclesUpdateManyWithWhereWithoutDriversInput | vehiclesUpdateManyWithWhereWithoutDriversInput[]
    deleteMany?: vehiclesScalarWhereInput | vehiclesScalarWhereInput[]
  }

  export type cost_categoriesCreateNestedOneWithoutExpensesInput = {
    create?: XOR<cost_categoriesCreateWithoutExpensesInput, cost_categoriesUncheckedCreateWithoutExpensesInput>
    connectOrCreate?: cost_categoriesCreateOrConnectWithoutExpensesInput
    connect?: cost_categoriesWhereUniqueInput
  }

  export type driversCreateNestedOneWithoutExpensesInput = {
    create?: XOR<driversCreateWithoutExpensesInput, driversUncheckedCreateWithoutExpensesInput>
    connectOrCreate?: driversCreateOrConnectWithoutExpensesInput
    connect?: driversWhereUniqueInput
  }

  export type vehiclesCreateNestedOneWithoutExpensesInput = {
    create?: XOR<vehiclesCreateWithoutExpensesInput, vehiclesUncheckedCreateWithoutExpensesInput>
    connectOrCreate?: vehiclesCreateOrConnectWithoutExpensesInput
    connect?: vehiclesWhereUniqueInput
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type cost_categoriesUpdateOneWithoutExpensesNestedInput = {
    create?: XOR<cost_categoriesCreateWithoutExpensesInput, cost_categoriesUncheckedCreateWithoutExpensesInput>
    connectOrCreate?: cost_categoriesCreateOrConnectWithoutExpensesInput
    upsert?: cost_categoriesUpsertWithoutExpensesInput
    disconnect?: cost_categoriesWhereInput | boolean
    delete?: cost_categoriesWhereInput | boolean
    connect?: cost_categoriesWhereUniqueInput
    update?: XOR<XOR<cost_categoriesUpdateToOneWithWhereWithoutExpensesInput, cost_categoriesUpdateWithoutExpensesInput>, cost_categoriesUncheckedUpdateWithoutExpensesInput>
  }

  export type driversUpdateOneWithoutExpensesNestedInput = {
    create?: XOR<driversCreateWithoutExpensesInput, driversUncheckedCreateWithoutExpensesInput>
    connectOrCreate?: driversCreateOrConnectWithoutExpensesInput
    upsert?: driversUpsertWithoutExpensesInput
    disconnect?: driversWhereInput | boolean
    delete?: driversWhereInput | boolean
    connect?: driversWhereUniqueInput
    update?: XOR<XOR<driversUpdateToOneWithWhereWithoutExpensesInput, driversUpdateWithoutExpensesInput>, driversUncheckedUpdateWithoutExpensesInput>
  }

  export type vehiclesUpdateOneWithoutExpensesNestedInput = {
    create?: XOR<vehiclesCreateWithoutExpensesInput, vehiclesUncheckedCreateWithoutExpensesInput>
    connectOrCreate?: vehiclesCreateOrConnectWithoutExpensesInput
    upsert?: vehiclesUpsertWithoutExpensesInput
    disconnect?: vehiclesWhereInput | boolean
    delete?: vehiclesWhereInput | boolean
    connect?: vehiclesWhereUniqueInput
    update?: XOR<XOR<vehiclesUpdateToOneWithWhereWithoutExpensesInput, vehiclesUpdateWithoutExpensesInput>, vehiclesUncheckedUpdateWithoutExpensesInput>
  }

  export type fuel_transactionsCreateNestedManyWithoutFuel_stationsInput = {
    create?: XOR<fuel_transactionsCreateWithoutFuel_stationsInput, fuel_transactionsUncheckedCreateWithoutFuel_stationsInput> | fuel_transactionsCreateWithoutFuel_stationsInput[] | fuel_transactionsUncheckedCreateWithoutFuel_stationsInput[]
    connectOrCreate?: fuel_transactionsCreateOrConnectWithoutFuel_stationsInput | fuel_transactionsCreateOrConnectWithoutFuel_stationsInput[]
    createMany?: fuel_transactionsCreateManyFuel_stationsInputEnvelope
    connect?: fuel_transactionsWhereUniqueInput | fuel_transactionsWhereUniqueInput[]
  }

  export type fuel_transactionsUncheckedCreateNestedManyWithoutFuel_stationsInput = {
    create?: XOR<fuel_transactionsCreateWithoutFuel_stationsInput, fuel_transactionsUncheckedCreateWithoutFuel_stationsInput> | fuel_transactionsCreateWithoutFuel_stationsInput[] | fuel_transactionsUncheckedCreateWithoutFuel_stationsInput[]
    connectOrCreate?: fuel_transactionsCreateOrConnectWithoutFuel_stationsInput | fuel_transactionsCreateOrConnectWithoutFuel_stationsInput[]
    createMany?: fuel_transactionsCreateManyFuel_stationsInputEnvelope
    connect?: fuel_transactionsWhereUniqueInput | fuel_transactionsWhereUniqueInput[]
  }

  export type fuel_transactionsUpdateManyWithoutFuel_stationsNestedInput = {
    create?: XOR<fuel_transactionsCreateWithoutFuel_stationsInput, fuel_transactionsUncheckedCreateWithoutFuel_stationsInput> | fuel_transactionsCreateWithoutFuel_stationsInput[] | fuel_transactionsUncheckedCreateWithoutFuel_stationsInput[]
    connectOrCreate?: fuel_transactionsCreateOrConnectWithoutFuel_stationsInput | fuel_transactionsCreateOrConnectWithoutFuel_stationsInput[]
    upsert?: fuel_transactionsUpsertWithWhereUniqueWithoutFuel_stationsInput | fuel_transactionsUpsertWithWhereUniqueWithoutFuel_stationsInput[]
    createMany?: fuel_transactionsCreateManyFuel_stationsInputEnvelope
    set?: fuel_transactionsWhereUniqueInput | fuel_transactionsWhereUniqueInput[]
    disconnect?: fuel_transactionsWhereUniqueInput | fuel_transactionsWhereUniqueInput[]
    delete?: fuel_transactionsWhereUniqueInput | fuel_transactionsWhereUniqueInput[]
    connect?: fuel_transactionsWhereUniqueInput | fuel_transactionsWhereUniqueInput[]
    update?: fuel_transactionsUpdateWithWhereUniqueWithoutFuel_stationsInput | fuel_transactionsUpdateWithWhereUniqueWithoutFuel_stationsInput[]
    updateMany?: fuel_transactionsUpdateManyWithWhereWithoutFuel_stationsInput | fuel_transactionsUpdateManyWithWhereWithoutFuel_stationsInput[]
    deleteMany?: fuel_transactionsScalarWhereInput | fuel_transactionsScalarWhereInput[]
  }

  export type fuel_transactionsUncheckedUpdateManyWithoutFuel_stationsNestedInput = {
    create?: XOR<fuel_transactionsCreateWithoutFuel_stationsInput, fuel_transactionsUncheckedCreateWithoutFuel_stationsInput> | fuel_transactionsCreateWithoutFuel_stationsInput[] | fuel_transactionsUncheckedCreateWithoutFuel_stationsInput[]
    connectOrCreate?: fuel_transactionsCreateOrConnectWithoutFuel_stationsInput | fuel_transactionsCreateOrConnectWithoutFuel_stationsInput[]
    upsert?: fuel_transactionsUpsertWithWhereUniqueWithoutFuel_stationsInput | fuel_transactionsUpsertWithWhereUniqueWithoutFuel_stationsInput[]
    createMany?: fuel_transactionsCreateManyFuel_stationsInputEnvelope
    set?: fuel_transactionsWhereUniqueInput | fuel_transactionsWhereUniqueInput[]
    disconnect?: fuel_transactionsWhereUniqueInput | fuel_transactionsWhereUniqueInput[]
    delete?: fuel_transactionsWhereUniqueInput | fuel_transactionsWhereUniqueInput[]
    connect?: fuel_transactionsWhereUniqueInput | fuel_transactionsWhereUniqueInput[]
    update?: fuel_transactionsUpdateWithWhereUniqueWithoutFuel_stationsInput | fuel_transactionsUpdateWithWhereUniqueWithoutFuel_stationsInput[]
    updateMany?: fuel_transactionsUpdateManyWithWhereWithoutFuel_stationsInput | fuel_transactionsUpdateManyWithWhereWithoutFuel_stationsInput[]
    deleteMany?: fuel_transactionsScalarWhereInput | fuel_transactionsScalarWhereInput[]
  }

  export type driversCreateNestedOneWithoutFuel_transactionsInput = {
    create?: XOR<driversCreateWithoutFuel_transactionsInput, driversUncheckedCreateWithoutFuel_transactionsInput>
    connectOrCreate?: driversCreateOrConnectWithoutFuel_transactionsInput
    connect?: driversWhereUniqueInput
  }

  export type fuel_stationsCreateNestedOneWithoutFuel_transactionsInput = {
    create?: XOR<fuel_stationsCreateWithoutFuel_transactionsInput, fuel_stationsUncheckedCreateWithoutFuel_transactionsInput>
    connectOrCreate?: fuel_stationsCreateOrConnectWithoutFuel_transactionsInput
    connect?: fuel_stationsWhereUniqueInput
  }

  export type vehiclesCreateNestedOneWithoutFuel_transactionsInput = {
    create?: XOR<vehiclesCreateWithoutFuel_transactionsInput, vehiclesUncheckedCreateWithoutFuel_transactionsInput>
    connectOrCreate?: vehiclesCreateOrConnectWithoutFuel_transactionsInput
    connect?: vehiclesWhereUniqueInput
  }

  export type driversUpdateOneWithoutFuel_transactionsNestedInput = {
    create?: XOR<driversCreateWithoutFuel_transactionsInput, driversUncheckedCreateWithoutFuel_transactionsInput>
    connectOrCreate?: driversCreateOrConnectWithoutFuel_transactionsInput
    upsert?: driversUpsertWithoutFuel_transactionsInput
    disconnect?: driversWhereInput | boolean
    delete?: driversWhereInput | boolean
    connect?: driversWhereUniqueInput
    update?: XOR<XOR<driversUpdateToOneWithWhereWithoutFuel_transactionsInput, driversUpdateWithoutFuel_transactionsInput>, driversUncheckedUpdateWithoutFuel_transactionsInput>
  }

  export type fuel_stationsUpdateOneWithoutFuel_transactionsNestedInput = {
    create?: XOR<fuel_stationsCreateWithoutFuel_transactionsInput, fuel_stationsUncheckedCreateWithoutFuel_transactionsInput>
    connectOrCreate?: fuel_stationsCreateOrConnectWithoutFuel_transactionsInput
    upsert?: fuel_stationsUpsertWithoutFuel_transactionsInput
    disconnect?: fuel_stationsWhereInput | boolean
    delete?: fuel_stationsWhereInput | boolean
    connect?: fuel_stationsWhereUniqueInput
    update?: XOR<XOR<fuel_stationsUpdateToOneWithWhereWithoutFuel_transactionsInput, fuel_stationsUpdateWithoutFuel_transactionsInput>, fuel_stationsUncheckedUpdateWithoutFuel_transactionsInput>
  }

  export type vehiclesUpdateOneWithoutFuel_transactionsNestedInput = {
    create?: XOR<vehiclesCreateWithoutFuel_transactionsInput, vehiclesUncheckedCreateWithoutFuel_transactionsInput>
    connectOrCreate?: vehiclesCreateOrConnectWithoutFuel_transactionsInput
    upsert?: vehiclesUpsertWithoutFuel_transactionsInput
    disconnect?: vehiclesWhereInput | boolean
    delete?: vehiclesWhereInput | boolean
    connect?: vehiclesWhereUniqueInput
    update?: XOR<XOR<vehiclesUpdateToOneWithWhereWithoutFuel_transactionsInput, vehiclesUpdateWithoutFuel_transactionsInput>, vehiclesUncheckedUpdateWithoutFuel_transactionsInput>
  }

  export type vehiclesCreateNestedOneWithoutGps_trackingInput = {
    create?: XOR<vehiclesCreateWithoutGps_trackingInput, vehiclesUncheckedCreateWithoutGps_trackingInput>
    connectOrCreate?: vehiclesCreateOrConnectWithoutGps_trackingInput
    connect?: vehiclesWhereUniqueInput
  }

  export type vehiclesUpdateOneWithoutGps_trackingNestedInput = {
    create?: XOR<vehiclesCreateWithoutGps_trackingInput, vehiclesUncheckedCreateWithoutGps_trackingInput>
    connectOrCreate?: vehiclesCreateOrConnectWithoutGps_trackingInput
    upsert?: vehiclesUpsertWithoutGps_trackingInput
    disconnect?: vehiclesWhereInput | boolean
    delete?: vehiclesWhereInput | boolean
    connect?: vehiclesWhereUniqueInput
    update?: XOR<XOR<vehiclesUpdateToOneWithWhereWithoutGps_trackingInput, vehiclesUpdateWithoutGps_trackingInput>, vehiclesUncheckedUpdateWithoutGps_trackingInput>
  }

  export type driversCreateNestedOneWithoutIncidentsInput = {
    create?: XOR<driversCreateWithoutIncidentsInput, driversUncheckedCreateWithoutIncidentsInput>
    connectOrCreate?: driversCreateOrConnectWithoutIncidentsInput
    connect?: driversWhereUniqueInput
  }

  export type vehiclesCreateNestedOneWithoutIncidentsInput = {
    create?: XOR<vehiclesCreateWithoutIncidentsInput, vehiclesUncheckedCreateWithoutIncidentsInput>
    connectOrCreate?: vehiclesCreateOrConnectWithoutIncidentsInput
    connect?: vehiclesWhereUniqueInput
  }

  export type driversUpdateOneWithoutIncidentsNestedInput = {
    create?: XOR<driversCreateWithoutIncidentsInput, driversUncheckedCreateWithoutIncidentsInput>
    connectOrCreate?: driversCreateOrConnectWithoutIncidentsInput
    upsert?: driversUpsertWithoutIncidentsInput
    disconnect?: driversWhereInput | boolean
    delete?: driversWhereInput | boolean
    connect?: driversWhereUniqueInput
    update?: XOR<XOR<driversUpdateToOneWithWhereWithoutIncidentsInput, driversUpdateWithoutIncidentsInput>, driversUncheckedUpdateWithoutIncidentsInput>
  }

  export type vehiclesUpdateOneWithoutIncidentsNestedInput = {
    create?: XOR<vehiclesCreateWithoutIncidentsInput, vehiclesUncheckedCreateWithoutIncidentsInput>
    connectOrCreate?: vehiclesCreateOrConnectWithoutIncidentsInput
    upsert?: vehiclesUpsertWithoutIncidentsInput
    disconnect?: vehiclesWhereInput | boolean
    delete?: vehiclesWhereInput | boolean
    connect?: vehiclesWhereUniqueInput
    update?: XOR<XOR<vehiclesUpdateToOneWithWhereWithoutIncidentsInput, vehiclesUpdateWithoutIncidentsInput>, vehiclesUncheckedUpdateWithoutIncidentsInput>
  }

  export type maintenance_typesCreateNestedOneWithoutMaintenance_recordsInput = {
    create?: XOR<maintenance_typesCreateWithoutMaintenance_recordsInput, maintenance_typesUncheckedCreateWithoutMaintenance_recordsInput>
    connectOrCreate?: maintenance_typesCreateOrConnectWithoutMaintenance_recordsInput
    connect?: maintenance_typesWhereUniqueInput
  }

  export type service_providersCreateNestedOneWithoutMaintenance_recordsInput = {
    create?: XOR<service_providersCreateWithoutMaintenance_recordsInput, service_providersUncheckedCreateWithoutMaintenance_recordsInput>
    connectOrCreate?: service_providersCreateOrConnectWithoutMaintenance_recordsInput
    connect?: service_providersWhereUniqueInput
  }

  export type vehiclesCreateNestedOneWithoutMaintenance_recordsInput = {
    create?: XOR<vehiclesCreateWithoutMaintenance_recordsInput, vehiclesUncheckedCreateWithoutMaintenance_recordsInput>
    connectOrCreate?: vehiclesCreateOrConnectWithoutMaintenance_recordsInput
    connect?: vehiclesWhereUniqueInput
  }

  export type maintenance_typesUpdateOneWithoutMaintenance_recordsNestedInput = {
    create?: XOR<maintenance_typesCreateWithoutMaintenance_recordsInput, maintenance_typesUncheckedCreateWithoutMaintenance_recordsInput>
    connectOrCreate?: maintenance_typesCreateOrConnectWithoutMaintenance_recordsInput
    upsert?: maintenance_typesUpsertWithoutMaintenance_recordsInput
    disconnect?: maintenance_typesWhereInput | boolean
    delete?: maintenance_typesWhereInput | boolean
    connect?: maintenance_typesWhereUniqueInput
    update?: XOR<XOR<maintenance_typesUpdateToOneWithWhereWithoutMaintenance_recordsInput, maintenance_typesUpdateWithoutMaintenance_recordsInput>, maintenance_typesUncheckedUpdateWithoutMaintenance_recordsInput>
  }

  export type service_providersUpdateOneWithoutMaintenance_recordsNestedInput = {
    create?: XOR<service_providersCreateWithoutMaintenance_recordsInput, service_providersUncheckedCreateWithoutMaintenance_recordsInput>
    connectOrCreate?: service_providersCreateOrConnectWithoutMaintenance_recordsInput
    upsert?: service_providersUpsertWithoutMaintenance_recordsInput
    disconnect?: service_providersWhereInput | boolean
    delete?: service_providersWhereInput | boolean
    connect?: service_providersWhereUniqueInput
    update?: XOR<XOR<service_providersUpdateToOneWithWhereWithoutMaintenance_recordsInput, service_providersUpdateWithoutMaintenance_recordsInput>, service_providersUncheckedUpdateWithoutMaintenance_recordsInput>
  }

  export type vehiclesUpdateOneWithoutMaintenance_recordsNestedInput = {
    create?: XOR<vehiclesCreateWithoutMaintenance_recordsInput, vehiclesUncheckedCreateWithoutMaintenance_recordsInput>
    connectOrCreate?: vehiclesCreateOrConnectWithoutMaintenance_recordsInput
    upsert?: vehiclesUpsertWithoutMaintenance_recordsInput
    disconnect?: vehiclesWhereInput | boolean
    delete?: vehiclesWhereInput | boolean
    connect?: vehiclesWhereUniqueInput
    update?: XOR<XOR<vehiclesUpdateToOneWithWhereWithoutMaintenance_recordsInput, vehiclesUpdateWithoutMaintenance_recordsInput>, vehiclesUncheckedUpdateWithoutMaintenance_recordsInput>
  }

  export type maintenance_recordsCreateNestedManyWithoutMaintenance_typesInput = {
    create?: XOR<maintenance_recordsCreateWithoutMaintenance_typesInput, maintenance_recordsUncheckedCreateWithoutMaintenance_typesInput> | maintenance_recordsCreateWithoutMaintenance_typesInput[] | maintenance_recordsUncheckedCreateWithoutMaintenance_typesInput[]
    connectOrCreate?: maintenance_recordsCreateOrConnectWithoutMaintenance_typesInput | maintenance_recordsCreateOrConnectWithoutMaintenance_typesInput[]
    createMany?: maintenance_recordsCreateManyMaintenance_typesInputEnvelope
    connect?: maintenance_recordsWhereUniqueInput | maintenance_recordsWhereUniqueInput[]
  }

  export type maintenance_recordsUncheckedCreateNestedManyWithoutMaintenance_typesInput = {
    create?: XOR<maintenance_recordsCreateWithoutMaintenance_typesInput, maintenance_recordsUncheckedCreateWithoutMaintenance_typesInput> | maintenance_recordsCreateWithoutMaintenance_typesInput[] | maintenance_recordsUncheckedCreateWithoutMaintenance_typesInput[]
    connectOrCreate?: maintenance_recordsCreateOrConnectWithoutMaintenance_typesInput | maintenance_recordsCreateOrConnectWithoutMaintenance_typesInput[]
    createMany?: maintenance_recordsCreateManyMaintenance_typesInputEnvelope
    connect?: maintenance_recordsWhereUniqueInput | maintenance_recordsWhereUniqueInput[]
  }

  export type maintenance_recordsUpdateManyWithoutMaintenance_typesNestedInput = {
    create?: XOR<maintenance_recordsCreateWithoutMaintenance_typesInput, maintenance_recordsUncheckedCreateWithoutMaintenance_typesInput> | maintenance_recordsCreateWithoutMaintenance_typesInput[] | maintenance_recordsUncheckedCreateWithoutMaintenance_typesInput[]
    connectOrCreate?: maintenance_recordsCreateOrConnectWithoutMaintenance_typesInput | maintenance_recordsCreateOrConnectWithoutMaintenance_typesInput[]
    upsert?: maintenance_recordsUpsertWithWhereUniqueWithoutMaintenance_typesInput | maintenance_recordsUpsertWithWhereUniqueWithoutMaintenance_typesInput[]
    createMany?: maintenance_recordsCreateManyMaintenance_typesInputEnvelope
    set?: maintenance_recordsWhereUniqueInput | maintenance_recordsWhereUniqueInput[]
    disconnect?: maintenance_recordsWhereUniqueInput | maintenance_recordsWhereUniqueInput[]
    delete?: maintenance_recordsWhereUniqueInput | maintenance_recordsWhereUniqueInput[]
    connect?: maintenance_recordsWhereUniqueInput | maintenance_recordsWhereUniqueInput[]
    update?: maintenance_recordsUpdateWithWhereUniqueWithoutMaintenance_typesInput | maintenance_recordsUpdateWithWhereUniqueWithoutMaintenance_typesInput[]
    updateMany?: maintenance_recordsUpdateManyWithWhereWithoutMaintenance_typesInput | maintenance_recordsUpdateManyWithWhereWithoutMaintenance_typesInput[]
    deleteMany?: maintenance_recordsScalarWhereInput | maintenance_recordsScalarWhereInput[]
  }

  export type maintenance_recordsUncheckedUpdateManyWithoutMaintenance_typesNestedInput = {
    create?: XOR<maintenance_recordsCreateWithoutMaintenance_typesInput, maintenance_recordsUncheckedCreateWithoutMaintenance_typesInput> | maintenance_recordsCreateWithoutMaintenance_typesInput[] | maintenance_recordsUncheckedCreateWithoutMaintenance_typesInput[]
    connectOrCreate?: maintenance_recordsCreateOrConnectWithoutMaintenance_typesInput | maintenance_recordsCreateOrConnectWithoutMaintenance_typesInput[]
    upsert?: maintenance_recordsUpsertWithWhereUniqueWithoutMaintenance_typesInput | maintenance_recordsUpsertWithWhereUniqueWithoutMaintenance_typesInput[]
    createMany?: maintenance_recordsCreateManyMaintenance_typesInputEnvelope
    set?: maintenance_recordsWhereUniqueInput | maintenance_recordsWhereUniqueInput[]
    disconnect?: maintenance_recordsWhereUniqueInput | maintenance_recordsWhereUniqueInput[]
    delete?: maintenance_recordsWhereUniqueInput | maintenance_recordsWhereUniqueInput[]
    connect?: maintenance_recordsWhereUniqueInput | maintenance_recordsWhereUniqueInput[]
    update?: maintenance_recordsUpdateWithWhereUniqueWithoutMaintenance_typesInput | maintenance_recordsUpdateWithWhereUniqueWithoutMaintenance_typesInput[]
    updateMany?: maintenance_recordsUpdateManyWithWhereWithoutMaintenance_typesInput | maintenance_recordsUpdateManyWithWhereWithoutMaintenance_typesInput[]
    deleteMany?: maintenance_recordsScalarWhereInput | maintenance_recordsScalarWhereInput[]
  }

  export type companiesCreateNestedOneWithoutReportsInput = {
    create?: XOR<companiesCreateWithoutReportsInput, companiesUncheckedCreateWithoutReportsInput>
    connectOrCreate?: companiesCreateOrConnectWithoutReportsInput
    connect?: companiesWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutReportsInput = {
    create?: XOR<usersCreateWithoutReportsInput, usersUncheckedCreateWithoutReportsInput>
    connectOrCreate?: usersCreateOrConnectWithoutReportsInput
    connect?: usersWhereUniqueInput
  }

  export type companiesUpdateOneWithoutReportsNestedInput = {
    create?: XOR<companiesCreateWithoutReportsInput, companiesUncheckedCreateWithoutReportsInput>
    connectOrCreate?: companiesCreateOrConnectWithoutReportsInput
    upsert?: companiesUpsertWithoutReportsInput
    disconnect?: companiesWhereInput | boolean
    delete?: companiesWhereInput | boolean
    connect?: companiesWhereUniqueInput
    update?: XOR<XOR<companiesUpdateToOneWithWhereWithoutReportsInput, companiesUpdateWithoutReportsInput>, companiesUncheckedUpdateWithoutReportsInput>
  }

  export type usersUpdateOneWithoutReportsNestedInput = {
    create?: XOR<usersCreateWithoutReportsInput, usersUncheckedCreateWithoutReportsInput>
    connectOrCreate?: usersCreateOrConnectWithoutReportsInput
    upsert?: usersUpsertWithoutReportsInput
    disconnect?: usersWhereInput | boolean
    delete?: usersWhereInput | boolean
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutReportsInput, usersUpdateWithoutReportsInput>, usersUncheckedUpdateWithoutReportsInput>
  }

  export type vehiclesCreateNestedOneWithoutSafety_inspectionsInput = {
    create?: XOR<vehiclesCreateWithoutSafety_inspectionsInput, vehiclesUncheckedCreateWithoutSafety_inspectionsInput>
    connectOrCreate?: vehiclesCreateOrConnectWithoutSafety_inspectionsInput
    connect?: vehiclesWhereUniqueInput
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type vehiclesUpdateOneWithoutSafety_inspectionsNestedInput = {
    create?: XOR<vehiclesCreateWithoutSafety_inspectionsInput, vehiclesUncheckedCreateWithoutSafety_inspectionsInput>
    connectOrCreate?: vehiclesCreateOrConnectWithoutSafety_inspectionsInput
    upsert?: vehiclesUpsertWithoutSafety_inspectionsInput
    disconnect?: vehiclesWhereInput | boolean
    delete?: vehiclesWhereInput | boolean
    connect?: vehiclesWhereUniqueInput
    update?: XOR<XOR<vehiclesUpdateToOneWithWhereWithoutSafety_inspectionsInput, vehiclesUpdateWithoutSafety_inspectionsInput>, vehiclesUncheckedUpdateWithoutSafety_inspectionsInput>
  }

  export type maintenance_recordsCreateNestedManyWithoutService_providersInput = {
    create?: XOR<maintenance_recordsCreateWithoutService_providersInput, maintenance_recordsUncheckedCreateWithoutService_providersInput> | maintenance_recordsCreateWithoutService_providersInput[] | maintenance_recordsUncheckedCreateWithoutService_providersInput[]
    connectOrCreate?: maintenance_recordsCreateOrConnectWithoutService_providersInput | maintenance_recordsCreateOrConnectWithoutService_providersInput[]
    createMany?: maintenance_recordsCreateManyService_providersInputEnvelope
    connect?: maintenance_recordsWhereUniqueInput | maintenance_recordsWhereUniqueInput[]
  }

  export type companiesCreateNestedOneWithoutService_providersInput = {
    create?: XOR<companiesCreateWithoutService_providersInput, companiesUncheckedCreateWithoutService_providersInput>
    connectOrCreate?: companiesCreateOrConnectWithoutService_providersInput
    connect?: companiesWhereUniqueInput
  }

  export type maintenance_recordsUncheckedCreateNestedManyWithoutService_providersInput = {
    create?: XOR<maintenance_recordsCreateWithoutService_providersInput, maintenance_recordsUncheckedCreateWithoutService_providersInput> | maintenance_recordsCreateWithoutService_providersInput[] | maintenance_recordsUncheckedCreateWithoutService_providersInput[]
    connectOrCreate?: maintenance_recordsCreateOrConnectWithoutService_providersInput | maintenance_recordsCreateOrConnectWithoutService_providersInput[]
    createMany?: maintenance_recordsCreateManyService_providersInputEnvelope
    connect?: maintenance_recordsWhereUniqueInput | maintenance_recordsWhereUniqueInput[]
  }

  export type maintenance_recordsUpdateManyWithoutService_providersNestedInput = {
    create?: XOR<maintenance_recordsCreateWithoutService_providersInput, maintenance_recordsUncheckedCreateWithoutService_providersInput> | maintenance_recordsCreateWithoutService_providersInput[] | maintenance_recordsUncheckedCreateWithoutService_providersInput[]
    connectOrCreate?: maintenance_recordsCreateOrConnectWithoutService_providersInput | maintenance_recordsCreateOrConnectWithoutService_providersInput[]
    upsert?: maintenance_recordsUpsertWithWhereUniqueWithoutService_providersInput | maintenance_recordsUpsertWithWhereUniqueWithoutService_providersInput[]
    createMany?: maintenance_recordsCreateManyService_providersInputEnvelope
    set?: maintenance_recordsWhereUniqueInput | maintenance_recordsWhereUniqueInput[]
    disconnect?: maintenance_recordsWhereUniqueInput | maintenance_recordsWhereUniqueInput[]
    delete?: maintenance_recordsWhereUniqueInput | maintenance_recordsWhereUniqueInput[]
    connect?: maintenance_recordsWhereUniqueInput | maintenance_recordsWhereUniqueInput[]
    update?: maintenance_recordsUpdateWithWhereUniqueWithoutService_providersInput | maintenance_recordsUpdateWithWhereUniqueWithoutService_providersInput[]
    updateMany?: maintenance_recordsUpdateManyWithWhereWithoutService_providersInput | maintenance_recordsUpdateManyWithWhereWithoutService_providersInput[]
    deleteMany?: maintenance_recordsScalarWhereInput | maintenance_recordsScalarWhereInput[]
  }

  export type companiesUpdateOneWithoutService_providersNestedInput = {
    create?: XOR<companiesCreateWithoutService_providersInput, companiesUncheckedCreateWithoutService_providersInput>
    connectOrCreate?: companiesCreateOrConnectWithoutService_providersInput
    upsert?: companiesUpsertWithoutService_providersInput
    disconnect?: companiesWhereInput | boolean
    delete?: companiesWhereInput | boolean
    connect?: companiesWhereUniqueInput
    update?: XOR<XOR<companiesUpdateToOneWithWhereWithoutService_providersInput, companiesUpdateWithoutService_providersInput>, companiesUncheckedUpdateWithoutService_providersInput>
  }

  export type maintenance_recordsUncheckedUpdateManyWithoutService_providersNestedInput = {
    create?: XOR<maintenance_recordsCreateWithoutService_providersInput, maintenance_recordsUncheckedCreateWithoutService_providersInput> | maintenance_recordsCreateWithoutService_providersInput[] | maintenance_recordsUncheckedCreateWithoutService_providersInput[]
    connectOrCreate?: maintenance_recordsCreateOrConnectWithoutService_providersInput | maintenance_recordsCreateOrConnectWithoutService_providersInput[]
    upsert?: maintenance_recordsUpsertWithWhereUniqueWithoutService_providersInput | maintenance_recordsUpsertWithWhereUniqueWithoutService_providersInput[]
    createMany?: maintenance_recordsCreateManyService_providersInputEnvelope
    set?: maintenance_recordsWhereUniqueInput | maintenance_recordsWhereUniqueInput[]
    disconnect?: maintenance_recordsWhereUniqueInput | maintenance_recordsWhereUniqueInput[]
    delete?: maintenance_recordsWhereUniqueInput | maintenance_recordsWhereUniqueInput[]
    connect?: maintenance_recordsWhereUniqueInput | maintenance_recordsWhereUniqueInput[]
    update?: maintenance_recordsUpdateWithWhereUniqueWithoutService_providersInput | maintenance_recordsUpdateWithWhereUniqueWithoutService_providersInput[]
    updateMany?: maintenance_recordsUpdateManyWithWhereWithoutService_providersInput | maintenance_recordsUpdateManyWithWhereWithoutService_providersInput[]
    deleteMany?: maintenance_recordsScalarWhereInput | maintenance_recordsScalarWhereInput[]
  }

  export type driversCreateNestedOneWithoutTripsInput = {
    create?: XOR<driversCreateWithoutTripsInput, driversUncheckedCreateWithoutTripsInput>
    connectOrCreate?: driversCreateOrConnectWithoutTripsInput
    connect?: driversWhereUniqueInput
  }

  export type vehiclesCreateNestedOneWithoutTripsInput = {
    create?: XOR<vehiclesCreateWithoutTripsInput, vehiclesUncheckedCreateWithoutTripsInput>
    connectOrCreate?: vehiclesCreateOrConnectWithoutTripsInput
    connect?: vehiclesWhereUniqueInput
  }

  export type driversUpdateOneWithoutTripsNestedInput = {
    create?: XOR<driversCreateWithoutTripsInput, driversUncheckedCreateWithoutTripsInput>
    connectOrCreate?: driversCreateOrConnectWithoutTripsInput
    upsert?: driversUpsertWithoutTripsInput
    disconnect?: driversWhereInput | boolean
    delete?: driversWhereInput | boolean
    connect?: driversWhereUniqueInput
    update?: XOR<XOR<driversUpdateToOneWithWhereWithoutTripsInput, driversUpdateWithoutTripsInput>, driversUncheckedUpdateWithoutTripsInput>
  }

  export type vehiclesUpdateOneWithoutTripsNestedInput = {
    create?: XOR<vehiclesCreateWithoutTripsInput, vehiclesUncheckedCreateWithoutTripsInput>
    connectOrCreate?: vehiclesCreateOrConnectWithoutTripsInput
    upsert?: vehiclesUpsertWithoutTripsInput
    disconnect?: vehiclesWhereInput | boolean
    delete?: vehiclesWhereInput | boolean
    connect?: vehiclesWhereUniqueInput
    update?: XOR<XOR<vehiclesUpdateToOneWithWhereWithoutTripsInput, vehiclesUpdateWithoutTripsInput>, vehiclesUncheckedUpdateWithoutTripsInput>
  }

  export type reportsCreateNestedManyWithoutUsersInput = {
    create?: XOR<reportsCreateWithoutUsersInput, reportsUncheckedCreateWithoutUsersInput> | reportsCreateWithoutUsersInput[] | reportsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: reportsCreateOrConnectWithoutUsersInput | reportsCreateOrConnectWithoutUsersInput[]
    createMany?: reportsCreateManyUsersInputEnvelope
    connect?: reportsWhereUniqueInput | reportsWhereUniqueInput[]
  }

  export type companiesCreateNestedOneWithoutUsersInput = {
    create?: XOR<companiesCreateWithoutUsersInput, companiesUncheckedCreateWithoutUsersInput>
    connectOrCreate?: companiesCreateOrConnectWithoutUsersInput
    connect?: companiesWhereUniqueInput
  }

  export type reportsUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<reportsCreateWithoutUsersInput, reportsUncheckedCreateWithoutUsersInput> | reportsCreateWithoutUsersInput[] | reportsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: reportsCreateOrConnectWithoutUsersInput | reportsCreateOrConnectWithoutUsersInput[]
    createMany?: reportsCreateManyUsersInputEnvelope
    connect?: reportsWhereUniqueInput | reportsWhereUniqueInput[]
  }

  export type reportsUpdateManyWithoutUsersNestedInput = {
    create?: XOR<reportsCreateWithoutUsersInput, reportsUncheckedCreateWithoutUsersInput> | reportsCreateWithoutUsersInput[] | reportsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: reportsCreateOrConnectWithoutUsersInput | reportsCreateOrConnectWithoutUsersInput[]
    upsert?: reportsUpsertWithWhereUniqueWithoutUsersInput | reportsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: reportsCreateManyUsersInputEnvelope
    set?: reportsWhereUniqueInput | reportsWhereUniqueInput[]
    disconnect?: reportsWhereUniqueInput | reportsWhereUniqueInput[]
    delete?: reportsWhereUniqueInput | reportsWhereUniqueInput[]
    connect?: reportsWhereUniqueInput | reportsWhereUniqueInput[]
    update?: reportsUpdateWithWhereUniqueWithoutUsersInput | reportsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: reportsUpdateManyWithWhereWithoutUsersInput | reportsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: reportsScalarWhereInput | reportsScalarWhereInput[]
  }

  export type companiesUpdateOneWithoutUsersNestedInput = {
    create?: XOR<companiesCreateWithoutUsersInput, companiesUncheckedCreateWithoutUsersInput>
    connectOrCreate?: companiesCreateOrConnectWithoutUsersInput
    upsert?: companiesUpsertWithoutUsersInput
    disconnect?: companiesWhereInput | boolean
    delete?: companiesWhereInput | boolean
    connect?: companiesWhereUniqueInput
    update?: XOR<XOR<companiesUpdateToOneWithWhereWithoutUsersInput, companiesUpdateWithoutUsersInput>, companiesUncheckedUpdateWithoutUsersInput>
  }

  export type reportsUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<reportsCreateWithoutUsersInput, reportsUncheckedCreateWithoutUsersInput> | reportsCreateWithoutUsersInput[] | reportsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: reportsCreateOrConnectWithoutUsersInput | reportsCreateOrConnectWithoutUsersInput[]
    upsert?: reportsUpsertWithWhereUniqueWithoutUsersInput | reportsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: reportsCreateManyUsersInputEnvelope
    set?: reportsWhereUniqueInput | reportsWhereUniqueInput[]
    disconnect?: reportsWhereUniqueInput | reportsWhereUniqueInput[]
    delete?: reportsWhereUniqueInput | reportsWhereUniqueInput[]
    connect?: reportsWhereUniqueInput | reportsWhereUniqueInput[]
    update?: reportsUpdateWithWhereUniqueWithoutUsersInput | reportsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: reportsUpdateManyWithWhereWithoutUsersInput | reportsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: reportsScalarWhereInput | reportsScalarWhereInput[]
  }

  export type driversCreateNestedOneWithoutVehicle_assignmentsInput = {
    create?: XOR<driversCreateWithoutVehicle_assignmentsInput, driversUncheckedCreateWithoutVehicle_assignmentsInput>
    connectOrCreate?: driversCreateOrConnectWithoutVehicle_assignmentsInput
    connect?: driversWhereUniqueInput
  }

  export type vehiclesCreateNestedOneWithoutVehicle_assignmentsInput = {
    create?: XOR<vehiclesCreateWithoutVehicle_assignmentsInput, vehiclesUncheckedCreateWithoutVehicle_assignmentsInput>
    connectOrCreate?: vehiclesCreateOrConnectWithoutVehicle_assignmentsInput
    connect?: vehiclesWhereUniqueInput
  }

  export type driversUpdateOneWithoutVehicle_assignmentsNestedInput = {
    create?: XOR<driversCreateWithoutVehicle_assignmentsInput, driversUncheckedCreateWithoutVehicle_assignmentsInput>
    connectOrCreate?: driversCreateOrConnectWithoutVehicle_assignmentsInput
    upsert?: driversUpsertWithoutVehicle_assignmentsInput
    disconnect?: driversWhereInput | boolean
    delete?: driversWhereInput | boolean
    connect?: driversWhereUniqueInput
    update?: XOR<XOR<driversUpdateToOneWithWhereWithoutVehicle_assignmentsInput, driversUpdateWithoutVehicle_assignmentsInput>, driversUncheckedUpdateWithoutVehicle_assignmentsInput>
  }

  export type vehiclesUpdateOneWithoutVehicle_assignmentsNestedInput = {
    create?: XOR<vehiclesCreateWithoutVehicle_assignmentsInput, vehiclesUncheckedCreateWithoutVehicle_assignmentsInput>
    connectOrCreate?: vehiclesCreateOrConnectWithoutVehicle_assignmentsInput
    upsert?: vehiclesUpsertWithoutVehicle_assignmentsInput
    disconnect?: vehiclesWhereInput | boolean
    delete?: vehiclesWhereInput | boolean
    connect?: vehiclesWhereUniqueInput
    update?: XOR<XOR<vehiclesUpdateToOneWithWhereWithoutVehicle_assignmentsInput, vehiclesUpdateWithoutVehicle_assignmentsInput>, vehiclesUncheckedUpdateWithoutVehicle_assignmentsInput>
  }

  export type vehiclesCreateNestedManyWithoutVehicle_typesInput = {
    create?: XOR<vehiclesCreateWithoutVehicle_typesInput, vehiclesUncheckedCreateWithoutVehicle_typesInput> | vehiclesCreateWithoutVehicle_typesInput[] | vehiclesUncheckedCreateWithoutVehicle_typesInput[]
    connectOrCreate?: vehiclesCreateOrConnectWithoutVehicle_typesInput | vehiclesCreateOrConnectWithoutVehicle_typesInput[]
    createMany?: vehiclesCreateManyVehicle_typesInputEnvelope
    connect?: vehiclesWhereUniqueInput | vehiclesWhereUniqueInput[]
  }

  export type vehiclesUncheckedCreateNestedManyWithoutVehicle_typesInput = {
    create?: XOR<vehiclesCreateWithoutVehicle_typesInput, vehiclesUncheckedCreateWithoutVehicle_typesInput> | vehiclesCreateWithoutVehicle_typesInput[] | vehiclesUncheckedCreateWithoutVehicle_typesInput[]
    connectOrCreate?: vehiclesCreateOrConnectWithoutVehicle_typesInput | vehiclesCreateOrConnectWithoutVehicle_typesInput[]
    createMany?: vehiclesCreateManyVehicle_typesInputEnvelope
    connect?: vehiclesWhereUniqueInput | vehiclesWhereUniqueInput[]
  }

  export type vehiclesUpdateManyWithoutVehicle_typesNestedInput = {
    create?: XOR<vehiclesCreateWithoutVehicle_typesInput, vehiclesUncheckedCreateWithoutVehicle_typesInput> | vehiclesCreateWithoutVehicle_typesInput[] | vehiclesUncheckedCreateWithoutVehicle_typesInput[]
    connectOrCreate?: vehiclesCreateOrConnectWithoutVehicle_typesInput | vehiclesCreateOrConnectWithoutVehicle_typesInput[]
    upsert?: vehiclesUpsertWithWhereUniqueWithoutVehicle_typesInput | vehiclesUpsertWithWhereUniqueWithoutVehicle_typesInput[]
    createMany?: vehiclesCreateManyVehicle_typesInputEnvelope
    set?: vehiclesWhereUniqueInput | vehiclesWhereUniqueInput[]
    disconnect?: vehiclesWhereUniqueInput | vehiclesWhereUniqueInput[]
    delete?: vehiclesWhereUniqueInput | vehiclesWhereUniqueInput[]
    connect?: vehiclesWhereUniqueInput | vehiclesWhereUniqueInput[]
    update?: vehiclesUpdateWithWhereUniqueWithoutVehicle_typesInput | vehiclesUpdateWithWhereUniqueWithoutVehicle_typesInput[]
    updateMany?: vehiclesUpdateManyWithWhereWithoutVehicle_typesInput | vehiclesUpdateManyWithWhereWithoutVehicle_typesInput[]
    deleteMany?: vehiclesScalarWhereInput | vehiclesScalarWhereInput[]
  }

  export type vehiclesUncheckedUpdateManyWithoutVehicle_typesNestedInput = {
    create?: XOR<vehiclesCreateWithoutVehicle_typesInput, vehiclesUncheckedCreateWithoutVehicle_typesInput> | vehiclesCreateWithoutVehicle_typesInput[] | vehiclesUncheckedCreateWithoutVehicle_typesInput[]
    connectOrCreate?: vehiclesCreateOrConnectWithoutVehicle_typesInput | vehiclesCreateOrConnectWithoutVehicle_typesInput[]
    upsert?: vehiclesUpsertWithWhereUniqueWithoutVehicle_typesInput | vehiclesUpsertWithWhereUniqueWithoutVehicle_typesInput[]
    createMany?: vehiclesCreateManyVehicle_typesInputEnvelope
    set?: vehiclesWhereUniqueInput | vehiclesWhereUniqueInput[]
    disconnect?: vehiclesWhereUniqueInput | vehiclesWhereUniqueInput[]
    delete?: vehiclesWhereUniqueInput | vehiclesWhereUniqueInput[]
    connect?: vehiclesWhereUniqueInput | vehiclesWhereUniqueInput[]
    update?: vehiclesUpdateWithWhereUniqueWithoutVehicle_typesInput | vehiclesUpdateWithWhereUniqueWithoutVehicle_typesInput[]
    updateMany?: vehiclesUpdateManyWithWhereWithoutVehicle_typesInput | vehiclesUpdateManyWithWhereWithoutVehicle_typesInput[]
    deleteMany?: vehiclesScalarWhereInput | vehiclesScalarWhereInput[]
  }

  export type expensesCreateNestedManyWithoutVehiclesInput = {
    create?: XOR<expensesCreateWithoutVehiclesInput, expensesUncheckedCreateWithoutVehiclesInput> | expensesCreateWithoutVehiclesInput[] | expensesUncheckedCreateWithoutVehiclesInput[]
    connectOrCreate?: expensesCreateOrConnectWithoutVehiclesInput | expensesCreateOrConnectWithoutVehiclesInput[]
    createMany?: expensesCreateManyVehiclesInputEnvelope
    connect?: expensesWhereUniqueInput | expensesWhereUniqueInput[]
  }

  export type fuel_transactionsCreateNestedManyWithoutVehiclesInput = {
    create?: XOR<fuel_transactionsCreateWithoutVehiclesInput, fuel_transactionsUncheckedCreateWithoutVehiclesInput> | fuel_transactionsCreateWithoutVehiclesInput[] | fuel_transactionsUncheckedCreateWithoutVehiclesInput[]
    connectOrCreate?: fuel_transactionsCreateOrConnectWithoutVehiclesInput | fuel_transactionsCreateOrConnectWithoutVehiclesInput[]
    createMany?: fuel_transactionsCreateManyVehiclesInputEnvelope
    connect?: fuel_transactionsWhereUniqueInput | fuel_transactionsWhereUniqueInput[]
  }

  export type gps_trackingCreateNestedManyWithoutVehiclesInput = {
    create?: XOR<gps_trackingCreateWithoutVehiclesInput, gps_trackingUncheckedCreateWithoutVehiclesInput> | gps_trackingCreateWithoutVehiclesInput[] | gps_trackingUncheckedCreateWithoutVehiclesInput[]
    connectOrCreate?: gps_trackingCreateOrConnectWithoutVehiclesInput | gps_trackingCreateOrConnectWithoutVehiclesInput[]
    createMany?: gps_trackingCreateManyVehiclesInputEnvelope
    connect?: gps_trackingWhereUniqueInput | gps_trackingWhereUniqueInput[]
  }

  export type incidentsCreateNestedManyWithoutVehiclesInput = {
    create?: XOR<incidentsCreateWithoutVehiclesInput, incidentsUncheckedCreateWithoutVehiclesInput> | incidentsCreateWithoutVehiclesInput[] | incidentsUncheckedCreateWithoutVehiclesInput[]
    connectOrCreate?: incidentsCreateOrConnectWithoutVehiclesInput | incidentsCreateOrConnectWithoutVehiclesInput[]
    createMany?: incidentsCreateManyVehiclesInputEnvelope
    connect?: incidentsWhereUniqueInput | incidentsWhereUniqueInput[]
  }

  export type maintenance_recordsCreateNestedManyWithoutVehiclesInput = {
    create?: XOR<maintenance_recordsCreateWithoutVehiclesInput, maintenance_recordsUncheckedCreateWithoutVehiclesInput> | maintenance_recordsCreateWithoutVehiclesInput[] | maintenance_recordsUncheckedCreateWithoutVehiclesInput[]
    connectOrCreate?: maintenance_recordsCreateOrConnectWithoutVehiclesInput | maintenance_recordsCreateOrConnectWithoutVehiclesInput[]
    createMany?: maintenance_recordsCreateManyVehiclesInputEnvelope
    connect?: maintenance_recordsWhereUniqueInput | maintenance_recordsWhereUniqueInput[]
  }

  export type safety_inspectionsCreateNestedManyWithoutVehiclesInput = {
    create?: XOR<safety_inspectionsCreateWithoutVehiclesInput, safety_inspectionsUncheckedCreateWithoutVehiclesInput> | safety_inspectionsCreateWithoutVehiclesInput[] | safety_inspectionsUncheckedCreateWithoutVehiclesInput[]
    connectOrCreate?: safety_inspectionsCreateOrConnectWithoutVehiclesInput | safety_inspectionsCreateOrConnectWithoutVehiclesInput[]
    createMany?: safety_inspectionsCreateManyVehiclesInputEnvelope
    connect?: safety_inspectionsWhereUniqueInput | safety_inspectionsWhereUniqueInput[]
  }

  export type tripsCreateNestedManyWithoutVehiclesInput = {
    create?: XOR<tripsCreateWithoutVehiclesInput, tripsUncheckedCreateWithoutVehiclesInput> | tripsCreateWithoutVehiclesInput[] | tripsUncheckedCreateWithoutVehiclesInput[]
    connectOrCreate?: tripsCreateOrConnectWithoutVehiclesInput | tripsCreateOrConnectWithoutVehiclesInput[]
    createMany?: tripsCreateManyVehiclesInputEnvelope
    connect?: tripsWhereUniqueInput | tripsWhereUniqueInput[]
  }

  export type vehicle_assignmentsCreateNestedManyWithoutVehiclesInput = {
    create?: XOR<vehicle_assignmentsCreateWithoutVehiclesInput, vehicle_assignmentsUncheckedCreateWithoutVehiclesInput> | vehicle_assignmentsCreateWithoutVehiclesInput[] | vehicle_assignmentsUncheckedCreateWithoutVehiclesInput[]
    connectOrCreate?: vehicle_assignmentsCreateOrConnectWithoutVehiclesInput | vehicle_assignmentsCreateOrConnectWithoutVehiclesInput[]
    createMany?: vehicle_assignmentsCreateManyVehiclesInputEnvelope
    connect?: vehicle_assignmentsWhereUniqueInput | vehicle_assignmentsWhereUniqueInput[]
  }

  export type driversCreateNestedOneWithoutVehiclesInput = {
    create?: XOR<driversCreateWithoutVehiclesInput, driversUncheckedCreateWithoutVehiclesInput>
    connectOrCreate?: driversCreateOrConnectWithoutVehiclesInput
    connect?: driversWhereUniqueInput
  }

  export type companiesCreateNestedOneWithoutVehiclesInput = {
    create?: XOR<companiesCreateWithoutVehiclesInput, companiesUncheckedCreateWithoutVehiclesInput>
    connectOrCreate?: companiesCreateOrConnectWithoutVehiclesInput
    connect?: companiesWhereUniqueInput
  }

  export type departmentsCreateNestedOneWithoutVehiclesInput = {
    create?: XOR<departmentsCreateWithoutVehiclesInput, departmentsUncheckedCreateWithoutVehiclesInput>
    connectOrCreate?: departmentsCreateOrConnectWithoutVehiclesInput
    connect?: departmentsWhereUniqueInput
  }

  export type vehicle_typesCreateNestedOneWithoutVehiclesInput = {
    create?: XOR<vehicle_typesCreateWithoutVehiclesInput, vehicle_typesUncheckedCreateWithoutVehiclesInput>
    connectOrCreate?: vehicle_typesCreateOrConnectWithoutVehiclesInput
    connect?: vehicle_typesWhereUniqueInput
  }

  export type expensesUncheckedCreateNestedManyWithoutVehiclesInput = {
    create?: XOR<expensesCreateWithoutVehiclesInput, expensesUncheckedCreateWithoutVehiclesInput> | expensesCreateWithoutVehiclesInput[] | expensesUncheckedCreateWithoutVehiclesInput[]
    connectOrCreate?: expensesCreateOrConnectWithoutVehiclesInput | expensesCreateOrConnectWithoutVehiclesInput[]
    createMany?: expensesCreateManyVehiclesInputEnvelope
    connect?: expensesWhereUniqueInput | expensesWhereUniqueInput[]
  }

  export type fuel_transactionsUncheckedCreateNestedManyWithoutVehiclesInput = {
    create?: XOR<fuel_transactionsCreateWithoutVehiclesInput, fuel_transactionsUncheckedCreateWithoutVehiclesInput> | fuel_transactionsCreateWithoutVehiclesInput[] | fuel_transactionsUncheckedCreateWithoutVehiclesInput[]
    connectOrCreate?: fuel_transactionsCreateOrConnectWithoutVehiclesInput | fuel_transactionsCreateOrConnectWithoutVehiclesInput[]
    createMany?: fuel_transactionsCreateManyVehiclesInputEnvelope
    connect?: fuel_transactionsWhereUniqueInput | fuel_transactionsWhereUniqueInput[]
  }

  export type gps_trackingUncheckedCreateNestedManyWithoutVehiclesInput = {
    create?: XOR<gps_trackingCreateWithoutVehiclesInput, gps_trackingUncheckedCreateWithoutVehiclesInput> | gps_trackingCreateWithoutVehiclesInput[] | gps_trackingUncheckedCreateWithoutVehiclesInput[]
    connectOrCreate?: gps_trackingCreateOrConnectWithoutVehiclesInput | gps_trackingCreateOrConnectWithoutVehiclesInput[]
    createMany?: gps_trackingCreateManyVehiclesInputEnvelope
    connect?: gps_trackingWhereUniqueInput | gps_trackingWhereUniqueInput[]
  }

  export type incidentsUncheckedCreateNestedManyWithoutVehiclesInput = {
    create?: XOR<incidentsCreateWithoutVehiclesInput, incidentsUncheckedCreateWithoutVehiclesInput> | incidentsCreateWithoutVehiclesInput[] | incidentsUncheckedCreateWithoutVehiclesInput[]
    connectOrCreate?: incidentsCreateOrConnectWithoutVehiclesInput | incidentsCreateOrConnectWithoutVehiclesInput[]
    createMany?: incidentsCreateManyVehiclesInputEnvelope
    connect?: incidentsWhereUniqueInput | incidentsWhereUniqueInput[]
  }

  export type maintenance_recordsUncheckedCreateNestedManyWithoutVehiclesInput = {
    create?: XOR<maintenance_recordsCreateWithoutVehiclesInput, maintenance_recordsUncheckedCreateWithoutVehiclesInput> | maintenance_recordsCreateWithoutVehiclesInput[] | maintenance_recordsUncheckedCreateWithoutVehiclesInput[]
    connectOrCreate?: maintenance_recordsCreateOrConnectWithoutVehiclesInput | maintenance_recordsCreateOrConnectWithoutVehiclesInput[]
    createMany?: maintenance_recordsCreateManyVehiclesInputEnvelope
    connect?: maintenance_recordsWhereUniqueInput | maintenance_recordsWhereUniqueInput[]
  }

  export type safety_inspectionsUncheckedCreateNestedManyWithoutVehiclesInput = {
    create?: XOR<safety_inspectionsCreateWithoutVehiclesInput, safety_inspectionsUncheckedCreateWithoutVehiclesInput> | safety_inspectionsCreateWithoutVehiclesInput[] | safety_inspectionsUncheckedCreateWithoutVehiclesInput[]
    connectOrCreate?: safety_inspectionsCreateOrConnectWithoutVehiclesInput | safety_inspectionsCreateOrConnectWithoutVehiclesInput[]
    createMany?: safety_inspectionsCreateManyVehiclesInputEnvelope
    connect?: safety_inspectionsWhereUniqueInput | safety_inspectionsWhereUniqueInput[]
  }

  export type tripsUncheckedCreateNestedManyWithoutVehiclesInput = {
    create?: XOR<tripsCreateWithoutVehiclesInput, tripsUncheckedCreateWithoutVehiclesInput> | tripsCreateWithoutVehiclesInput[] | tripsUncheckedCreateWithoutVehiclesInput[]
    connectOrCreate?: tripsCreateOrConnectWithoutVehiclesInput | tripsCreateOrConnectWithoutVehiclesInput[]
    createMany?: tripsCreateManyVehiclesInputEnvelope
    connect?: tripsWhereUniqueInput | tripsWhereUniqueInput[]
  }

  export type vehicle_assignmentsUncheckedCreateNestedManyWithoutVehiclesInput = {
    create?: XOR<vehicle_assignmentsCreateWithoutVehiclesInput, vehicle_assignmentsUncheckedCreateWithoutVehiclesInput> | vehicle_assignmentsCreateWithoutVehiclesInput[] | vehicle_assignmentsUncheckedCreateWithoutVehiclesInput[]
    connectOrCreate?: vehicle_assignmentsCreateOrConnectWithoutVehiclesInput | vehicle_assignmentsCreateOrConnectWithoutVehiclesInput[]
    createMany?: vehicle_assignmentsCreateManyVehiclesInputEnvelope
    connect?: vehicle_assignmentsWhereUniqueInput | vehicle_assignmentsWhereUniqueInput[]
  }

  export type expensesUpdateManyWithoutVehiclesNestedInput = {
    create?: XOR<expensesCreateWithoutVehiclesInput, expensesUncheckedCreateWithoutVehiclesInput> | expensesCreateWithoutVehiclesInput[] | expensesUncheckedCreateWithoutVehiclesInput[]
    connectOrCreate?: expensesCreateOrConnectWithoutVehiclesInput | expensesCreateOrConnectWithoutVehiclesInput[]
    upsert?: expensesUpsertWithWhereUniqueWithoutVehiclesInput | expensesUpsertWithWhereUniqueWithoutVehiclesInput[]
    createMany?: expensesCreateManyVehiclesInputEnvelope
    set?: expensesWhereUniqueInput | expensesWhereUniqueInput[]
    disconnect?: expensesWhereUniqueInput | expensesWhereUniqueInput[]
    delete?: expensesWhereUniqueInput | expensesWhereUniqueInput[]
    connect?: expensesWhereUniqueInput | expensesWhereUniqueInput[]
    update?: expensesUpdateWithWhereUniqueWithoutVehiclesInput | expensesUpdateWithWhereUniqueWithoutVehiclesInput[]
    updateMany?: expensesUpdateManyWithWhereWithoutVehiclesInput | expensesUpdateManyWithWhereWithoutVehiclesInput[]
    deleteMany?: expensesScalarWhereInput | expensesScalarWhereInput[]
  }

  export type fuel_transactionsUpdateManyWithoutVehiclesNestedInput = {
    create?: XOR<fuel_transactionsCreateWithoutVehiclesInput, fuel_transactionsUncheckedCreateWithoutVehiclesInput> | fuel_transactionsCreateWithoutVehiclesInput[] | fuel_transactionsUncheckedCreateWithoutVehiclesInput[]
    connectOrCreate?: fuel_transactionsCreateOrConnectWithoutVehiclesInput | fuel_transactionsCreateOrConnectWithoutVehiclesInput[]
    upsert?: fuel_transactionsUpsertWithWhereUniqueWithoutVehiclesInput | fuel_transactionsUpsertWithWhereUniqueWithoutVehiclesInput[]
    createMany?: fuel_transactionsCreateManyVehiclesInputEnvelope
    set?: fuel_transactionsWhereUniqueInput | fuel_transactionsWhereUniqueInput[]
    disconnect?: fuel_transactionsWhereUniqueInput | fuel_transactionsWhereUniqueInput[]
    delete?: fuel_transactionsWhereUniqueInput | fuel_transactionsWhereUniqueInput[]
    connect?: fuel_transactionsWhereUniqueInput | fuel_transactionsWhereUniqueInput[]
    update?: fuel_transactionsUpdateWithWhereUniqueWithoutVehiclesInput | fuel_transactionsUpdateWithWhereUniqueWithoutVehiclesInput[]
    updateMany?: fuel_transactionsUpdateManyWithWhereWithoutVehiclesInput | fuel_transactionsUpdateManyWithWhereWithoutVehiclesInput[]
    deleteMany?: fuel_transactionsScalarWhereInput | fuel_transactionsScalarWhereInput[]
  }

  export type gps_trackingUpdateManyWithoutVehiclesNestedInput = {
    create?: XOR<gps_trackingCreateWithoutVehiclesInput, gps_trackingUncheckedCreateWithoutVehiclesInput> | gps_trackingCreateWithoutVehiclesInput[] | gps_trackingUncheckedCreateWithoutVehiclesInput[]
    connectOrCreate?: gps_trackingCreateOrConnectWithoutVehiclesInput | gps_trackingCreateOrConnectWithoutVehiclesInput[]
    upsert?: gps_trackingUpsertWithWhereUniqueWithoutVehiclesInput | gps_trackingUpsertWithWhereUniqueWithoutVehiclesInput[]
    createMany?: gps_trackingCreateManyVehiclesInputEnvelope
    set?: gps_trackingWhereUniqueInput | gps_trackingWhereUniqueInput[]
    disconnect?: gps_trackingWhereUniqueInput | gps_trackingWhereUniqueInput[]
    delete?: gps_trackingWhereUniqueInput | gps_trackingWhereUniqueInput[]
    connect?: gps_trackingWhereUniqueInput | gps_trackingWhereUniqueInput[]
    update?: gps_trackingUpdateWithWhereUniqueWithoutVehiclesInput | gps_trackingUpdateWithWhereUniqueWithoutVehiclesInput[]
    updateMany?: gps_trackingUpdateManyWithWhereWithoutVehiclesInput | gps_trackingUpdateManyWithWhereWithoutVehiclesInput[]
    deleteMany?: gps_trackingScalarWhereInput | gps_trackingScalarWhereInput[]
  }

  export type incidentsUpdateManyWithoutVehiclesNestedInput = {
    create?: XOR<incidentsCreateWithoutVehiclesInput, incidentsUncheckedCreateWithoutVehiclesInput> | incidentsCreateWithoutVehiclesInput[] | incidentsUncheckedCreateWithoutVehiclesInput[]
    connectOrCreate?: incidentsCreateOrConnectWithoutVehiclesInput | incidentsCreateOrConnectWithoutVehiclesInput[]
    upsert?: incidentsUpsertWithWhereUniqueWithoutVehiclesInput | incidentsUpsertWithWhereUniqueWithoutVehiclesInput[]
    createMany?: incidentsCreateManyVehiclesInputEnvelope
    set?: incidentsWhereUniqueInput | incidentsWhereUniqueInput[]
    disconnect?: incidentsWhereUniqueInput | incidentsWhereUniqueInput[]
    delete?: incidentsWhereUniqueInput | incidentsWhereUniqueInput[]
    connect?: incidentsWhereUniqueInput | incidentsWhereUniqueInput[]
    update?: incidentsUpdateWithWhereUniqueWithoutVehiclesInput | incidentsUpdateWithWhereUniqueWithoutVehiclesInput[]
    updateMany?: incidentsUpdateManyWithWhereWithoutVehiclesInput | incidentsUpdateManyWithWhereWithoutVehiclesInput[]
    deleteMany?: incidentsScalarWhereInput | incidentsScalarWhereInput[]
  }

  export type maintenance_recordsUpdateManyWithoutVehiclesNestedInput = {
    create?: XOR<maintenance_recordsCreateWithoutVehiclesInput, maintenance_recordsUncheckedCreateWithoutVehiclesInput> | maintenance_recordsCreateWithoutVehiclesInput[] | maintenance_recordsUncheckedCreateWithoutVehiclesInput[]
    connectOrCreate?: maintenance_recordsCreateOrConnectWithoutVehiclesInput | maintenance_recordsCreateOrConnectWithoutVehiclesInput[]
    upsert?: maintenance_recordsUpsertWithWhereUniqueWithoutVehiclesInput | maintenance_recordsUpsertWithWhereUniqueWithoutVehiclesInput[]
    createMany?: maintenance_recordsCreateManyVehiclesInputEnvelope
    set?: maintenance_recordsWhereUniqueInput | maintenance_recordsWhereUniqueInput[]
    disconnect?: maintenance_recordsWhereUniqueInput | maintenance_recordsWhereUniqueInput[]
    delete?: maintenance_recordsWhereUniqueInput | maintenance_recordsWhereUniqueInput[]
    connect?: maintenance_recordsWhereUniqueInput | maintenance_recordsWhereUniqueInput[]
    update?: maintenance_recordsUpdateWithWhereUniqueWithoutVehiclesInput | maintenance_recordsUpdateWithWhereUniqueWithoutVehiclesInput[]
    updateMany?: maintenance_recordsUpdateManyWithWhereWithoutVehiclesInput | maintenance_recordsUpdateManyWithWhereWithoutVehiclesInput[]
    deleteMany?: maintenance_recordsScalarWhereInput | maintenance_recordsScalarWhereInput[]
  }

  export type safety_inspectionsUpdateManyWithoutVehiclesNestedInput = {
    create?: XOR<safety_inspectionsCreateWithoutVehiclesInput, safety_inspectionsUncheckedCreateWithoutVehiclesInput> | safety_inspectionsCreateWithoutVehiclesInput[] | safety_inspectionsUncheckedCreateWithoutVehiclesInput[]
    connectOrCreate?: safety_inspectionsCreateOrConnectWithoutVehiclesInput | safety_inspectionsCreateOrConnectWithoutVehiclesInput[]
    upsert?: safety_inspectionsUpsertWithWhereUniqueWithoutVehiclesInput | safety_inspectionsUpsertWithWhereUniqueWithoutVehiclesInput[]
    createMany?: safety_inspectionsCreateManyVehiclesInputEnvelope
    set?: safety_inspectionsWhereUniqueInput | safety_inspectionsWhereUniqueInput[]
    disconnect?: safety_inspectionsWhereUniqueInput | safety_inspectionsWhereUniqueInput[]
    delete?: safety_inspectionsWhereUniqueInput | safety_inspectionsWhereUniqueInput[]
    connect?: safety_inspectionsWhereUniqueInput | safety_inspectionsWhereUniqueInput[]
    update?: safety_inspectionsUpdateWithWhereUniqueWithoutVehiclesInput | safety_inspectionsUpdateWithWhereUniqueWithoutVehiclesInput[]
    updateMany?: safety_inspectionsUpdateManyWithWhereWithoutVehiclesInput | safety_inspectionsUpdateManyWithWhereWithoutVehiclesInput[]
    deleteMany?: safety_inspectionsScalarWhereInput | safety_inspectionsScalarWhereInput[]
  }

  export type tripsUpdateManyWithoutVehiclesNestedInput = {
    create?: XOR<tripsCreateWithoutVehiclesInput, tripsUncheckedCreateWithoutVehiclesInput> | tripsCreateWithoutVehiclesInput[] | tripsUncheckedCreateWithoutVehiclesInput[]
    connectOrCreate?: tripsCreateOrConnectWithoutVehiclesInput | tripsCreateOrConnectWithoutVehiclesInput[]
    upsert?: tripsUpsertWithWhereUniqueWithoutVehiclesInput | tripsUpsertWithWhereUniqueWithoutVehiclesInput[]
    createMany?: tripsCreateManyVehiclesInputEnvelope
    set?: tripsWhereUniqueInput | tripsWhereUniqueInput[]
    disconnect?: tripsWhereUniqueInput | tripsWhereUniqueInput[]
    delete?: tripsWhereUniqueInput | tripsWhereUniqueInput[]
    connect?: tripsWhereUniqueInput | tripsWhereUniqueInput[]
    update?: tripsUpdateWithWhereUniqueWithoutVehiclesInput | tripsUpdateWithWhereUniqueWithoutVehiclesInput[]
    updateMany?: tripsUpdateManyWithWhereWithoutVehiclesInput | tripsUpdateManyWithWhereWithoutVehiclesInput[]
    deleteMany?: tripsScalarWhereInput | tripsScalarWhereInput[]
  }

  export type vehicle_assignmentsUpdateManyWithoutVehiclesNestedInput = {
    create?: XOR<vehicle_assignmentsCreateWithoutVehiclesInput, vehicle_assignmentsUncheckedCreateWithoutVehiclesInput> | vehicle_assignmentsCreateWithoutVehiclesInput[] | vehicle_assignmentsUncheckedCreateWithoutVehiclesInput[]
    connectOrCreate?: vehicle_assignmentsCreateOrConnectWithoutVehiclesInput | vehicle_assignmentsCreateOrConnectWithoutVehiclesInput[]
    upsert?: vehicle_assignmentsUpsertWithWhereUniqueWithoutVehiclesInput | vehicle_assignmentsUpsertWithWhereUniqueWithoutVehiclesInput[]
    createMany?: vehicle_assignmentsCreateManyVehiclesInputEnvelope
    set?: vehicle_assignmentsWhereUniqueInput | vehicle_assignmentsWhereUniqueInput[]
    disconnect?: vehicle_assignmentsWhereUniqueInput | vehicle_assignmentsWhereUniqueInput[]
    delete?: vehicle_assignmentsWhereUniqueInput | vehicle_assignmentsWhereUniqueInput[]
    connect?: vehicle_assignmentsWhereUniqueInput | vehicle_assignmentsWhereUniqueInput[]
    update?: vehicle_assignmentsUpdateWithWhereUniqueWithoutVehiclesInput | vehicle_assignmentsUpdateWithWhereUniqueWithoutVehiclesInput[]
    updateMany?: vehicle_assignmentsUpdateManyWithWhereWithoutVehiclesInput | vehicle_assignmentsUpdateManyWithWhereWithoutVehiclesInput[]
    deleteMany?: vehicle_assignmentsScalarWhereInput | vehicle_assignmentsScalarWhereInput[]
  }

  export type driversUpdateOneWithoutVehiclesNestedInput = {
    create?: XOR<driversCreateWithoutVehiclesInput, driversUncheckedCreateWithoutVehiclesInput>
    connectOrCreate?: driversCreateOrConnectWithoutVehiclesInput
    upsert?: driversUpsertWithoutVehiclesInput
    disconnect?: driversWhereInput | boolean
    delete?: driversWhereInput | boolean
    connect?: driversWhereUniqueInput
    update?: XOR<XOR<driversUpdateToOneWithWhereWithoutVehiclesInput, driversUpdateWithoutVehiclesInput>, driversUncheckedUpdateWithoutVehiclesInput>
  }

  export type companiesUpdateOneWithoutVehiclesNestedInput = {
    create?: XOR<companiesCreateWithoutVehiclesInput, companiesUncheckedCreateWithoutVehiclesInput>
    connectOrCreate?: companiesCreateOrConnectWithoutVehiclesInput
    upsert?: companiesUpsertWithoutVehiclesInput
    disconnect?: companiesWhereInput | boolean
    delete?: companiesWhereInput | boolean
    connect?: companiesWhereUniqueInput
    update?: XOR<XOR<companiesUpdateToOneWithWhereWithoutVehiclesInput, companiesUpdateWithoutVehiclesInput>, companiesUncheckedUpdateWithoutVehiclesInput>
  }

  export type departmentsUpdateOneWithoutVehiclesNestedInput = {
    create?: XOR<departmentsCreateWithoutVehiclesInput, departmentsUncheckedCreateWithoutVehiclesInput>
    connectOrCreate?: departmentsCreateOrConnectWithoutVehiclesInput
    upsert?: departmentsUpsertWithoutVehiclesInput
    disconnect?: departmentsWhereInput | boolean
    delete?: departmentsWhereInput | boolean
    connect?: departmentsWhereUniqueInput
    update?: XOR<XOR<departmentsUpdateToOneWithWhereWithoutVehiclesInput, departmentsUpdateWithoutVehiclesInput>, departmentsUncheckedUpdateWithoutVehiclesInput>
  }

  export type vehicle_typesUpdateOneWithoutVehiclesNestedInput = {
    create?: XOR<vehicle_typesCreateWithoutVehiclesInput, vehicle_typesUncheckedCreateWithoutVehiclesInput>
    connectOrCreate?: vehicle_typesCreateOrConnectWithoutVehiclesInput
    upsert?: vehicle_typesUpsertWithoutVehiclesInput
    disconnect?: vehicle_typesWhereInput | boolean
    delete?: vehicle_typesWhereInput | boolean
    connect?: vehicle_typesWhereUniqueInput
    update?: XOR<XOR<vehicle_typesUpdateToOneWithWhereWithoutVehiclesInput, vehicle_typesUpdateWithoutVehiclesInput>, vehicle_typesUncheckedUpdateWithoutVehiclesInput>
  }

  export type expensesUncheckedUpdateManyWithoutVehiclesNestedInput = {
    create?: XOR<expensesCreateWithoutVehiclesInput, expensesUncheckedCreateWithoutVehiclesInput> | expensesCreateWithoutVehiclesInput[] | expensesUncheckedCreateWithoutVehiclesInput[]
    connectOrCreate?: expensesCreateOrConnectWithoutVehiclesInput | expensesCreateOrConnectWithoutVehiclesInput[]
    upsert?: expensesUpsertWithWhereUniqueWithoutVehiclesInput | expensesUpsertWithWhereUniqueWithoutVehiclesInput[]
    createMany?: expensesCreateManyVehiclesInputEnvelope
    set?: expensesWhereUniqueInput | expensesWhereUniqueInput[]
    disconnect?: expensesWhereUniqueInput | expensesWhereUniqueInput[]
    delete?: expensesWhereUniqueInput | expensesWhereUniqueInput[]
    connect?: expensesWhereUniqueInput | expensesWhereUniqueInput[]
    update?: expensesUpdateWithWhereUniqueWithoutVehiclesInput | expensesUpdateWithWhereUniqueWithoutVehiclesInput[]
    updateMany?: expensesUpdateManyWithWhereWithoutVehiclesInput | expensesUpdateManyWithWhereWithoutVehiclesInput[]
    deleteMany?: expensesScalarWhereInput | expensesScalarWhereInput[]
  }

  export type fuel_transactionsUncheckedUpdateManyWithoutVehiclesNestedInput = {
    create?: XOR<fuel_transactionsCreateWithoutVehiclesInput, fuel_transactionsUncheckedCreateWithoutVehiclesInput> | fuel_transactionsCreateWithoutVehiclesInput[] | fuel_transactionsUncheckedCreateWithoutVehiclesInput[]
    connectOrCreate?: fuel_transactionsCreateOrConnectWithoutVehiclesInput | fuel_transactionsCreateOrConnectWithoutVehiclesInput[]
    upsert?: fuel_transactionsUpsertWithWhereUniqueWithoutVehiclesInput | fuel_transactionsUpsertWithWhereUniqueWithoutVehiclesInput[]
    createMany?: fuel_transactionsCreateManyVehiclesInputEnvelope
    set?: fuel_transactionsWhereUniqueInput | fuel_transactionsWhereUniqueInput[]
    disconnect?: fuel_transactionsWhereUniqueInput | fuel_transactionsWhereUniqueInput[]
    delete?: fuel_transactionsWhereUniqueInput | fuel_transactionsWhereUniqueInput[]
    connect?: fuel_transactionsWhereUniqueInput | fuel_transactionsWhereUniqueInput[]
    update?: fuel_transactionsUpdateWithWhereUniqueWithoutVehiclesInput | fuel_transactionsUpdateWithWhereUniqueWithoutVehiclesInput[]
    updateMany?: fuel_transactionsUpdateManyWithWhereWithoutVehiclesInput | fuel_transactionsUpdateManyWithWhereWithoutVehiclesInput[]
    deleteMany?: fuel_transactionsScalarWhereInput | fuel_transactionsScalarWhereInput[]
  }

  export type gps_trackingUncheckedUpdateManyWithoutVehiclesNestedInput = {
    create?: XOR<gps_trackingCreateWithoutVehiclesInput, gps_trackingUncheckedCreateWithoutVehiclesInput> | gps_trackingCreateWithoutVehiclesInput[] | gps_trackingUncheckedCreateWithoutVehiclesInput[]
    connectOrCreate?: gps_trackingCreateOrConnectWithoutVehiclesInput | gps_trackingCreateOrConnectWithoutVehiclesInput[]
    upsert?: gps_trackingUpsertWithWhereUniqueWithoutVehiclesInput | gps_trackingUpsertWithWhereUniqueWithoutVehiclesInput[]
    createMany?: gps_trackingCreateManyVehiclesInputEnvelope
    set?: gps_trackingWhereUniqueInput | gps_trackingWhereUniqueInput[]
    disconnect?: gps_trackingWhereUniqueInput | gps_trackingWhereUniqueInput[]
    delete?: gps_trackingWhereUniqueInput | gps_trackingWhereUniqueInput[]
    connect?: gps_trackingWhereUniqueInput | gps_trackingWhereUniqueInput[]
    update?: gps_trackingUpdateWithWhereUniqueWithoutVehiclesInput | gps_trackingUpdateWithWhereUniqueWithoutVehiclesInput[]
    updateMany?: gps_trackingUpdateManyWithWhereWithoutVehiclesInput | gps_trackingUpdateManyWithWhereWithoutVehiclesInput[]
    deleteMany?: gps_trackingScalarWhereInput | gps_trackingScalarWhereInput[]
  }

  export type incidentsUncheckedUpdateManyWithoutVehiclesNestedInput = {
    create?: XOR<incidentsCreateWithoutVehiclesInput, incidentsUncheckedCreateWithoutVehiclesInput> | incidentsCreateWithoutVehiclesInput[] | incidentsUncheckedCreateWithoutVehiclesInput[]
    connectOrCreate?: incidentsCreateOrConnectWithoutVehiclesInput | incidentsCreateOrConnectWithoutVehiclesInput[]
    upsert?: incidentsUpsertWithWhereUniqueWithoutVehiclesInput | incidentsUpsertWithWhereUniqueWithoutVehiclesInput[]
    createMany?: incidentsCreateManyVehiclesInputEnvelope
    set?: incidentsWhereUniqueInput | incidentsWhereUniqueInput[]
    disconnect?: incidentsWhereUniqueInput | incidentsWhereUniqueInput[]
    delete?: incidentsWhereUniqueInput | incidentsWhereUniqueInput[]
    connect?: incidentsWhereUniqueInput | incidentsWhereUniqueInput[]
    update?: incidentsUpdateWithWhereUniqueWithoutVehiclesInput | incidentsUpdateWithWhereUniqueWithoutVehiclesInput[]
    updateMany?: incidentsUpdateManyWithWhereWithoutVehiclesInput | incidentsUpdateManyWithWhereWithoutVehiclesInput[]
    deleteMany?: incidentsScalarWhereInput | incidentsScalarWhereInput[]
  }

  export type maintenance_recordsUncheckedUpdateManyWithoutVehiclesNestedInput = {
    create?: XOR<maintenance_recordsCreateWithoutVehiclesInput, maintenance_recordsUncheckedCreateWithoutVehiclesInput> | maintenance_recordsCreateWithoutVehiclesInput[] | maintenance_recordsUncheckedCreateWithoutVehiclesInput[]
    connectOrCreate?: maintenance_recordsCreateOrConnectWithoutVehiclesInput | maintenance_recordsCreateOrConnectWithoutVehiclesInput[]
    upsert?: maintenance_recordsUpsertWithWhereUniqueWithoutVehiclesInput | maintenance_recordsUpsertWithWhereUniqueWithoutVehiclesInput[]
    createMany?: maintenance_recordsCreateManyVehiclesInputEnvelope
    set?: maintenance_recordsWhereUniqueInput | maintenance_recordsWhereUniqueInput[]
    disconnect?: maintenance_recordsWhereUniqueInput | maintenance_recordsWhereUniqueInput[]
    delete?: maintenance_recordsWhereUniqueInput | maintenance_recordsWhereUniqueInput[]
    connect?: maintenance_recordsWhereUniqueInput | maintenance_recordsWhereUniqueInput[]
    update?: maintenance_recordsUpdateWithWhereUniqueWithoutVehiclesInput | maintenance_recordsUpdateWithWhereUniqueWithoutVehiclesInput[]
    updateMany?: maintenance_recordsUpdateManyWithWhereWithoutVehiclesInput | maintenance_recordsUpdateManyWithWhereWithoutVehiclesInput[]
    deleteMany?: maintenance_recordsScalarWhereInput | maintenance_recordsScalarWhereInput[]
  }

  export type safety_inspectionsUncheckedUpdateManyWithoutVehiclesNestedInput = {
    create?: XOR<safety_inspectionsCreateWithoutVehiclesInput, safety_inspectionsUncheckedCreateWithoutVehiclesInput> | safety_inspectionsCreateWithoutVehiclesInput[] | safety_inspectionsUncheckedCreateWithoutVehiclesInput[]
    connectOrCreate?: safety_inspectionsCreateOrConnectWithoutVehiclesInput | safety_inspectionsCreateOrConnectWithoutVehiclesInput[]
    upsert?: safety_inspectionsUpsertWithWhereUniqueWithoutVehiclesInput | safety_inspectionsUpsertWithWhereUniqueWithoutVehiclesInput[]
    createMany?: safety_inspectionsCreateManyVehiclesInputEnvelope
    set?: safety_inspectionsWhereUniqueInput | safety_inspectionsWhereUniqueInput[]
    disconnect?: safety_inspectionsWhereUniqueInput | safety_inspectionsWhereUniqueInput[]
    delete?: safety_inspectionsWhereUniqueInput | safety_inspectionsWhereUniqueInput[]
    connect?: safety_inspectionsWhereUniqueInput | safety_inspectionsWhereUniqueInput[]
    update?: safety_inspectionsUpdateWithWhereUniqueWithoutVehiclesInput | safety_inspectionsUpdateWithWhereUniqueWithoutVehiclesInput[]
    updateMany?: safety_inspectionsUpdateManyWithWhereWithoutVehiclesInput | safety_inspectionsUpdateManyWithWhereWithoutVehiclesInput[]
    deleteMany?: safety_inspectionsScalarWhereInput | safety_inspectionsScalarWhereInput[]
  }

  export type tripsUncheckedUpdateManyWithoutVehiclesNestedInput = {
    create?: XOR<tripsCreateWithoutVehiclesInput, tripsUncheckedCreateWithoutVehiclesInput> | tripsCreateWithoutVehiclesInput[] | tripsUncheckedCreateWithoutVehiclesInput[]
    connectOrCreate?: tripsCreateOrConnectWithoutVehiclesInput | tripsCreateOrConnectWithoutVehiclesInput[]
    upsert?: tripsUpsertWithWhereUniqueWithoutVehiclesInput | tripsUpsertWithWhereUniqueWithoutVehiclesInput[]
    createMany?: tripsCreateManyVehiclesInputEnvelope
    set?: tripsWhereUniqueInput | tripsWhereUniqueInput[]
    disconnect?: tripsWhereUniqueInput | tripsWhereUniqueInput[]
    delete?: tripsWhereUniqueInput | tripsWhereUniqueInput[]
    connect?: tripsWhereUniqueInput | tripsWhereUniqueInput[]
    update?: tripsUpdateWithWhereUniqueWithoutVehiclesInput | tripsUpdateWithWhereUniqueWithoutVehiclesInput[]
    updateMany?: tripsUpdateManyWithWhereWithoutVehiclesInput | tripsUpdateManyWithWhereWithoutVehiclesInput[]
    deleteMany?: tripsScalarWhereInput | tripsScalarWhereInput[]
  }

  export type vehicle_assignmentsUncheckedUpdateManyWithoutVehiclesNestedInput = {
    create?: XOR<vehicle_assignmentsCreateWithoutVehiclesInput, vehicle_assignmentsUncheckedCreateWithoutVehiclesInput> | vehicle_assignmentsCreateWithoutVehiclesInput[] | vehicle_assignmentsUncheckedCreateWithoutVehiclesInput[]
    connectOrCreate?: vehicle_assignmentsCreateOrConnectWithoutVehiclesInput | vehicle_assignmentsCreateOrConnectWithoutVehiclesInput[]
    upsert?: vehicle_assignmentsUpsertWithWhereUniqueWithoutVehiclesInput | vehicle_assignmentsUpsertWithWhereUniqueWithoutVehiclesInput[]
    createMany?: vehicle_assignmentsCreateManyVehiclesInputEnvelope
    set?: vehicle_assignmentsWhereUniqueInput | vehicle_assignmentsWhereUniqueInput[]
    disconnect?: vehicle_assignmentsWhereUniqueInput | vehicle_assignmentsWhereUniqueInput[]
    delete?: vehicle_assignmentsWhereUniqueInput | vehicle_assignmentsWhereUniqueInput[]
    connect?: vehicle_assignmentsWhereUniqueInput | vehicle_assignmentsWhereUniqueInput[]
    update?: vehicle_assignmentsUpdateWithWhereUniqueWithoutVehiclesInput | vehicle_assignmentsUpdateWithWhereUniqueWithoutVehiclesInput[]
    updateMany?: vehicle_assignmentsUpdateManyWithWhereWithoutVehiclesInput | vehicle_assignmentsUpdateManyWithWhereWithoutVehiclesInput[]
    deleteMany?: vehicle_assignmentsScalarWhereInput | vehicle_assignmentsScalarWhereInput[]
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type departmentsCreateWithoutCompaniesInput = {
    department_name: string
    manager_name?: string | null
    budget?: Decimal | DecimalJsLike | number | string | null
    vehicles?: vehiclesCreateNestedManyWithoutDepartmentsInput
  }

  export type departmentsUncheckedCreateWithoutCompaniesInput = {
    department_id?: number
    department_name: string
    manager_name?: string | null
    budget?: Decimal | DecimalJsLike | number | string | null
    vehicles?: vehiclesUncheckedCreateNestedManyWithoutDepartmentsInput
  }

  export type departmentsCreateOrConnectWithoutCompaniesInput = {
    where: departmentsWhereUniqueInput
    create: XOR<departmentsCreateWithoutCompaniesInput, departmentsUncheckedCreateWithoutCompaniesInput>
  }

  export type departmentsCreateManyCompaniesInputEnvelope = {
    data: departmentsCreateManyCompaniesInput | departmentsCreateManyCompaniesInput[]
    skipDuplicates?: boolean
  }

  export type driversCreateWithoutCompaniesInput = {
    employee_id?: string | null
    first_name: string
    last_name: string
    license_number: string
    license_class?: string | null
    license_expiry_date?: Date | string | null
    date_of_birth?: Date | string | null
    hire_date?: Date | string | null
    phone?: string | null
    email?: string | null
    address?: string | null
    emergency_contact_name?: string | null
    emergency_contact_phone?: string | null
    salary?: Decimal | DecimalJsLike | number | string | null
    status?: string | null
    safety_score?: Decimal | DecimalJsLike | number | string | null
    total_miles_driven?: Decimal | DecimalJsLike | number | string | null
    years_experience?: number | null
    created_at?: Date | string | null
    driver_certifications?: driver_certificationsCreateNestedManyWithoutDriversInput
    expenses?: expensesCreateNestedManyWithoutDriversInput
    fuel_transactions?: fuel_transactionsCreateNestedManyWithoutDriversInput
    incidents?: incidentsCreateNestedManyWithoutDriversInput
    trips?: tripsCreateNestedManyWithoutDriversInput
    vehicle_assignments?: vehicle_assignmentsCreateNestedManyWithoutDriversInput
    vehicles?: vehiclesCreateNestedManyWithoutDriversInput
  }

  export type driversUncheckedCreateWithoutCompaniesInput = {
    driver_id?: number
    employee_id?: string | null
    first_name: string
    last_name: string
    license_number: string
    license_class?: string | null
    license_expiry_date?: Date | string | null
    date_of_birth?: Date | string | null
    hire_date?: Date | string | null
    phone?: string | null
    email?: string | null
    address?: string | null
    emergency_contact_name?: string | null
    emergency_contact_phone?: string | null
    salary?: Decimal | DecimalJsLike | number | string | null
    status?: string | null
    safety_score?: Decimal | DecimalJsLike | number | string | null
    total_miles_driven?: Decimal | DecimalJsLike | number | string | null
    years_experience?: number | null
    created_at?: Date | string | null
    driver_certifications?: driver_certificationsUncheckedCreateNestedManyWithoutDriversInput
    expenses?: expensesUncheckedCreateNestedManyWithoutDriversInput
    fuel_transactions?: fuel_transactionsUncheckedCreateNestedManyWithoutDriversInput
    incidents?: incidentsUncheckedCreateNestedManyWithoutDriversInput
    trips?: tripsUncheckedCreateNestedManyWithoutDriversInput
    vehicle_assignments?: vehicle_assignmentsUncheckedCreateNestedManyWithoutDriversInput
    vehicles?: vehiclesUncheckedCreateNestedManyWithoutDriversInput
  }

  export type driversCreateOrConnectWithoutCompaniesInput = {
    where: driversWhereUniqueInput
    create: XOR<driversCreateWithoutCompaniesInput, driversUncheckedCreateWithoutCompaniesInput>
  }

  export type driversCreateManyCompaniesInputEnvelope = {
    data: driversCreateManyCompaniesInput | driversCreateManyCompaniesInput[]
    skipDuplicates?: boolean
  }

  export type reportsCreateWithoutCompaniesInput = {
    report_name: string
    report_type: string
    generation_date?: Date | string | null
    date_range_start?: Date | string | null
    date_range_end?: Date | string | null
    parameters?: NullableJsonNullValueInput | InputJsonValue
    file_path?: string | null
    status?: string | null
    users?: usersCreateNestedOneWithoutReportsInput
  }

  export type reportsUncheckedCreateWithoutCompaniesInput = {
    report_id?: number
    report_name: string
    report_type: string
    generated_by?: number | null
    generation_date?: Date | string | null
    date_range_start?: Date | string | null
    date_range_end?: Date | string | null
    parameters?: NullableJsonNullValueInput | InputJsonValue
    file_path?: string | null
    status?: string | null
  }

  export type reportsCreateOrConnectWithoutCompaniesInput = {
    where: reportsWhereUniqueInput
    create: XOR<reportsCreateWithoutCompaniesInput, reportsUncheckedCreateWithoutCompaniesInput>
  }

  export type reportsCreateManyCompaniesInputEnvelope = {
    data: reportsCreateManyCompaniesInput | reportsCreateManyCompaniesInput[]
    skipDuplicates?: boolean
  }

  export type service_providersCreateWithoutCompaniesInput = {
    provider_name: string
    service_type: string
    contact_person?: string | null
    phone?: string | null
    email?: string | null
    address?: string | null
    hourly_rate?: Decimal | DecimalJsLike | number | string | null
    rating?: Decimal | DecimalJsLike | number | string | null
    is_preferred?: boolean | null
    maintenance_records?: maintenance_recordsCreateNestedManyWithoutService_providersInput
  }

  export type service_providersUncheckedCreateWithoutCompaniesInput = {
    provider_id?: number
    provider_name: string
    service_type: string
    contact_person?: string | null
    phone?: string | null
    email?: string | null
    address?: string | null
    hourly_rate?: Decimal | DecimalJsLike | number | string | null
    rating?: Decimal | DecimalJsLike | number | string | null
    is_preferred?: boolean | null
    maintenance_records?: maintenance_recordsUncheckedCreateNestedManyWithoutService_providersInput
  }

  export type service_providersCreateOrConnectWithoutCompaniesInput = {
    where: service_providersWhereUniqueInput
    create: XOR<service_providersCreateWithoutCompaniesInput, service_providersUncheckedCreateWithoutCompaniesInput>
  }

  export type service_providersCreateManyCompaniesInputEnvelope = {
    data: service_providersCreateManyCompaniesInput | service_providersCreateManyCompaniesInput[]
    skipDuplicates?: boolean
  }

  export type usersCreateWithoutCompaniesInput = {
    username: string
    email: string
    password_hash: string
    first_name?: string | null
    last_name?: string | null
    role: string
    phone?: string | null
    is_active?: boolean | null
    last_login?: Date | string | null
    created_at?: Date | string | null
    reports?: reportsCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutCompaniesInput = {
    user_id?: number
    username: string
    email: string
    password_hash: string
    first_name?: string | null
    last_name?: string | null
    role: string
    phone?: string | null
    is_active?: boolean | null
    last_login?: Date | string | null
    created_at?: Date | string | null
    reports?: reportsUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutCompaniesInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutCompaniesInput, usersUncheckedCreateWithoutCompaniesInput>
  }

  export type usersCreateManyCompaniesInputEnvelope = {
    data: usersCreateManyCompaniesInput | usersCreateManyCompaniesInput[]
    skipDuplicates?: boolean
  }

  export type vehiclesCreateWithoutCompaniesInput = {
    vin: string
    license_plate: string
    make: string
    model: string
    year: number
    color?: string | null
    fuel_type: string
    engine_size?: string | null
    transmission?: string | null
    purchase_date?: Date | string | null
    purchase_price?: Decimal | DecimalJsLike | number | string | null
    current_value?: Decimal | DecimalJsLike | number | string | null
    odometer_reading?: Decimal | DecimalJsLike | number | string | null
    fuel_capacity?: Decimal | DecimalJsLike | number | string | null
    insurance_policy_number?: string | null
    insurance_expiry?: Date | string | null
    registration_expiry?: Date | string | null
    status?: string | null
    gps_device_id?: string | null
    notes?: string | null
    created_at?: Date | string | null
    expenses?: expensesCreateNestedManyWithoutVehiclesInput
    fuel_transactions?: fuel_transactionsCreateNestedManyWithoutVehiclesInput
    gps_tracking?: gps_trackingCreateNestedManyWithoutVehiclesInput
    incidents?: incidentsCreateNestedManyWithoutVehiclesInput
    maintenance_records?: maintenance_recordsCreateNestedManyWithoutVehiclesInput
    safety_inspections?: safety_inspectionsCreateNestedManyWithoutVehiclesInput
    trips?: tripsCreateNestedManyWithoutVehiclesInput
    vehicle_assignments?: vehicle_assignmentsCreateNestedManyWithoutVehiclesInput
    drivers?: driversCreateNestedOneWithoutVehiclesInput
    departments?: departmentsCreateNestedOneWithoutVehiclesInput
    vehicle_types?: vehicle_typesCreateNestedOneWithoutVehiclesInput
  }

  export type vehiclesUncheckedCreateWithoutCompaniesInput = {
    vehicle_id?: number
    vehicle_type_id?: number | null
    vin: string
    license_plate: string
    make: string
    model: string
    year: number
    color?: string | null
    fuel_type: string
    engine_size?: string | null
    transmission?: string | null
    purchase_date?: Date | string | null
    purchase_price?: Decimal | DecimalJsLike | number | string | null
    current_value?: Decimal | DecimalJsLike | number | string | null
    odometer_reading?: Decimal | DecimalJsLike | number | string | null
    fuel_capacity?: Decimal | DecimalJsLike | number | string | null
    insurance_policy_number?: string | null
    insurance_expiry?: Date | string | null
    registration_expiry?: Date | string | null
    status?: string | null
    gps_device_id?: string | null
    assigned_driver_id?: number | null
    department_id?: number | null
    notes?: string | null
    created_at?: Date | string | null
    expenses?: expensesUncheckedCreateNestedManyWithoutVehiclesInput
    fuel_transactions?: fuel_transactionsUncheckedCreateNestedManyWithoutVehiclesInput
    gps_tracking?: gps_trackingUncheckedCreateNestedManyWithoutVehiclesInput
    incidents?: incidentsUncheckedCreateNestedManyWithoutVehiclesInput
    maintenance_records?: maintenance_recordsUncheckedCreateNestedManyWithoutVehiclesInput
    safety_inspections?: safety_inspectionsUncheckedCreateNestedManyWithoutVehiclesInput
    trips?: tripsUncheckedCreateNestedManyWithoutVehiclesInput
    vehicle_assignments?: vehicle_assignmentsUncheckedCreateNestedManyWithoutVehiclesInput
  }

  export type vehiclesCreateOrConnectWithoutCompaniesInput = {
    where: vehiclesWhereUniqueInput
    create: XOR<vehiclesCreateWithoutCompaniesInput, vehiclesUncheckedCreateWithoutCompaniesInput>
  }

  export type vehiclesCreateManyCompaniesInputEnvelope = {
    data: vehiclesCreateManyCompaniesInput | vehiclesCreateManyCompaniesInput[]
    skipDuplicates?: boolean
  }

  export type departmentsUpsertWithWhereUniqueWithoutCompaniesInput = {
    where: departmentsWhereUniqueInput
    update: XOR<departmentsUpdateWithoutCompaniesInput, departmentsUncheckedUpdateWithoutCompaniesInput>
    create: XOR<departmentsCreateWithoutCompaniesInput, departmentsUncheckedCreateWithoutCompaniesInput>
  }

  export type departmentsUpdateWithWhereUniqueWithoutCompaniesInput = {
    where: departmentsWhereUniqueInput
    data: XOR<departmentsUpdateWithoutCompaniesInput, departmentsUncheckedUpdateWithoutCompaniesInput>
  }

  export type departmentsUpdateManyWithWhereWithoutCompaniesInput = {
    where: departmentsScalarWhereInput
    data: XOR<departmentsUpdateManyMutationInput, departmentsUncheckedUpdateManyWithoutCompaniesInput>
  }

  export type departmentsScalarWhereInput = {
    AND?: departmentsScalarWhereInput | departmentsScalarWhereInput[]
    OR?: departmentsScalarWhereInput[]
    NOT?: departmentsScalarWhereInput | departmentsScalarWhereInput[]
    department_id?: IntFilter<"departments"> | number
    company_id?: IntNullableFilter<"departments"> | number | null
    department_name?: StringFilter<"departments"> | string
    manager_name?: StringNullableFilter<"departments"> | string | null
    budget?: DecimalNullableFilter<"departments"> | Decimal | DecimalJsLike | number | string | null
  }

  export type driversUpsertWithWhereUniqueWithoutCompaniesInput = {
    where: driversWhereUniqueInput
    update: XOR<driversUpdateWithoutCompaniesInput, driversUncheckedUpdateWithoutCompaniesInput>
    create: XOR<driversCreateWithoutCompaniesInput, driversUncheckedCreateWithoutCompaniesInput>
  }

  export type driversUpdateWithWhereUniqueWithoutCompaniesInput = {
    where: driversWhereUniqueInput
    data: XOR<driversUpdateWithoutCompaniesInput, driversUncheckedUpdateWithoutCompaniesInput>
  }

  export type driversUpdateManyWithWhereWithoutCompaniesInput = {
    where: driversScalarWhereInput
    data: XOR<driversUpdateManyMutationInput, driversUncheckedUpdateManyWithoutCompaniesInput>
  }

  export type driversScalarWhereInput = {
    AND?: driversScalarWhereInput | driversScalarWhereInput[]
    OR?: driversScalarWhereInput[]
    NOT?: driversScalarWhereInput | driversScalarWhereInput[]
    driver_id?: IntFilter<"drivers"> | number
    company_id?: IntNullableFilter<"drivers"> | number | null
    employee_id?: StringNullableFilter<"drivers"> | string | null
    first_name?: StringFilter<"drivers"> | string
    last_name?: StringFilter<"drivers"> | string
    license_number?: StringFilter<"drivers"> | string
    license_class?: StringNullableFilter<"drivers"> | string | null
    license_expiry_date?: DateTimeNullableFilter<"drivers"> | Date | string | null
    date_of_birth?: DateTimeNullableFilter<"drivers"> | Date | string | null
    hire_date?: DateTimeNullableFilter<"drivers"> | Date | string | null
    phone?: StringNullableFilter<"drivers"> | string | null
    email?: StringNullableFilter<"drivers"> | string | null
    address?: StringNullableFilter<"drivers"> | string | null
    emergency_contact_name?: StringNullableFilter<"drivers"> | string | null
    emergency_contact_phone?: StringNullableFilter<"drivers"> | string | null
    salary?: DecimalNullableFilter<"drivers"> | Decimal | DecimalJsLike | number | string | null
    status?: StringNullableFilter<"drivers"> | string | null
    safety_score?: DecimalNullableFilter<"drivers"> | Decimal | DecimalJsLike | number | string | null
    total_miles_driven?: DecimalNullableFilter<"drivers"> | Decimal | DecimalJsLike | number | string | null
    years_experience?: IntNullableFilter<"drivers"> | number | null
    created_at?: DateTimeNullableFilter<"drivers"> | Date | string | null
  }

  export type reportsUpsertWithWhereUniqueWithoutCompaniesInput = {
    where: reportsWhereUniqueInput
    update: XOR<reportsUpdateWithoutCompaniesInput, reportsUncheckedUpdateWithoutCompaniesInput>
    create: XOR<reportsCreateWithoutCompaniesInput, reportsUncheckedCreateWithoutCompaniesInput>
  }

  export type reportsUpdateWithWhereUniqueWithoutCompaniesInput = {
    where: reportsWhereUniqueInput
    data: XOR<reportsUpdateWithoutCompaniesInput, reportsUncheckedUpdateWithoutCompaniesInput>
  }

  export type reportsUpdateManyWithWhereWithoutCompaniesInput = {
    where: reportsScalarWhereInput
    data: XOR<reportsUpdateManyMutationInput, reportsUncheckedUpdateManyWithoutCompaniesInput>
  }

  export type reportsScalarWhereInput = {
    AND?: reportsScalarWhereInput | reportsScalarWhereInput[]
    OR?: reportsScalarWhereInput[]
    NOT?: reportsScalarWhereInput | reportsScalarWhereInput[]
    report_id?: IntFilter<"reports"> | number
    company_id?: IntNullableFilter<"reports"> | number | null
    report_name?: StringFilter<"reports"> | string
    report_type?: StringFilter<"reports"> | string
    generated_by?: IntNullableFilter<"reports"> | number | null
    generation_date?: DateTimeNullableFilter<"reports"> | Date | string | null
    date_range_start?: DateTimeNullableFilter<"reports"> | Date | string | null
    date_range_end?: DateTimeNullableFilter<"reports"> | Date | string | null
    parameters?: JsonNullableFilter<"reports">
    file_path?: StringNullableFilter<"reports"> | string | null
    status?: StringNullableFilter<"reports"> | string | null
  }

  export type service_providersUpsertWithWhereUniqueWithoutCompaniesInput = {
    where: service_providersWhereUniqueInput
    update: XOR<service_providersUpdateWithoutCompaniesInput, service_providersUncheckedUpdateWithoutCompaniesInput>
    create: XOR<service_providersCreateWithoutCompaniesInput, service_providersUncheckedCreateWithoutCompaniesInput>
  }

  export type service_providersUpdateWithWhereUniqueWithoutCompaniesInput = {
    where: service_providersWhereUniqueInput
    data: XOR<service_providersUpdateWithoutCompaniesInput, service_providersUncheckedUpdateWithoutCompaniesInput>
  }

  export type service_providersUpdateManyWithWhereWithoutCompaniesInput = {
    where: service_providersScalarWhereInput
    data: XOR<service_providersUpdateManyMutationInput, service_providersUncheckedUpdateManyWithoutCompaniesInput>
  }

  export type service_providersScalarWhereInput = {
    AND?: service_providersScalarWhereInput | service_providersScalarWhereInput[]
    OR?: service_providersScalarWhereInput[]
    NOT?: service_providersScalarWhereInput | service_providersScalarWhereInput[]
    provider_id?: IntFilter<"service_providers"> | number
    company_id?: IntNullableFilter<"service_providers"> | number | null
    provider_name?: StringFilter<"service_providers"> | string
    service_type?: StringFilter<"service_providers"> | string
    contact_person?: StringNullableFilter<"service_providers"> | string | null
    phone?: StringNullableFilter<"service_providers"> | string | null
    email?: StringNullableFilter<"service_providers"> | string | null
    address?: StringNullableFilter<"service_providers"> | string | null
    hourly_rate?: DecimalNullableFilter<"service_providers"> | Decimal | DecimalJsLike | number | string | null
    rating?: DecimalNullableFilter<"service_providers"> | Decimal | DecimalJsLike | number | string | null
    is_preferred?: BoolNullableFilter<"service_providers"> | boolean | null
  }

  export type usersUpsertWithWhereUniqueWithoutCompaniesInput = {
    where: usersWhereUniqueInput
    update: XOR<usersUpdateWithoutCompaniesInput, usersUncheckedUpdateWithoutCompaniesInput>
    create: XOR<usersCreateWithoutCompaniesInput, usersUncheckedCreateWithoutCompaniesInput>
  }

  export type usersUpdateWithWhereUniqueWithoutCompaniesInput = {
    where: usersWhereUniqueInput
    data: XOR<usersUpdateWithoutCompaniesInput, usersUncheckedUpdateWithoutCompaniesInput>
  }

  export type usersUpdateManyWithWhereWithoutCompaniesInput = {
    where: usersScalarWhereInput
    data: XOR<usersUpdateManyMutationInput, usersUncheckedUpdateManyWithoutCompaniesInput>
  }

  export type usersScalarWhereInput = {
    AND?: usersScalarWhereInput | usersScalarWhereInput[]
    OR?: usersScalarWhereInput[]
    NOT?: usersScalarWhereInput | usersScalarWhereInput[]
    user_id?: IntFilter<"users"> | number
    company_id?: IntNullableFilter<"users"> | number | null
    username?: StringFilter<"users"> | string
    email?: StringFilter<"users"> | string
    password_hash?: StringFilter<"users"> | string
    first_name?: StringNullableFilter<"users"> | string | null
    last_name?: StringNullableFilter<"users"> | string | null
    role?: StringFilter<"users"> | string
    phone?: StringNullableFilter<"users"> | string | null
    is_active?: BoolNullableFilter<"users"> | boolean | null
    last_login?: DateTimeNullableFilter<"users"> | Date | string | null
    created_at?: DateTimeNullableFilter<"users"> | Date | string | null
  }

  export type vehiclesUpsertWithWhereUniqueWithoutCompaniesInput = {
    where: vehiclesWhereUniqueInput
    update: XOR<vehiclesUpdateWithoutCompaniesInput, vehiclesUncheckedUpdateWithoutCompaniesInput>
    create: XOR<vehiclesCreateWithoutCompaniesInput, vehiclesUncheckedCreateWithoutCompaniesInput>
  }

  export type vehiclesUpdateWithWhereUniqueWithoutCompaniesInput = {
    where: vehiclesWhereUniqueInput
    data: XOR<vehiclesUpdateWithoutCompaniesInput, vehiclesUncheckedUpdateWithoutCompaniesInput>
  }

  export type vehiclesUpdateManyWithWhereWithoutCompaniesInput = {
    where: vehiclesScalarWhereInput
    data: XOR<vehiclesUpdateManyMutationInput, vehiclesUncheckedUpdateManyWithoutCompaniesInput>
  }

  export type vehiclesScalarWhereInput = {
    AND?: vehiclesScalarWhereInput | vehiclesScalarWhereInput[]
    OR?: vehiclesScalarWhereInput[]
    NOT?: vehiclesScalarWhereInput | vehiclesScalarWhereInput[]
    vehicle_id?: IntFilter<"vehicles"> | number
    company_id?: IntNullableFilter<"vehicles"> | number | null
    vehicle_type_id?: IntNullableFilter<"vehicles"> | number | null
    vin?: StringFilter<"vehicles"> | string
    license_plate?: StringFilter<"vehicles"> | string
    make?: StringFilter<"vehicles"> | string
    model?: StringFilter<"vehicles"> | string
    year?: IntFilter<"vehicles"> | number
    color?: StringNullableFilter<"vehicles"> | string | null
    fuel_type?: StringFilter<"vehicles"> | string
    engine_size?: StringNullableFilter<"vehicles"> | string | null
    transmission?: StringNullableFilter<"vehicles"> | string | null
    purchase_date?: DateTimeNullableFilter<"vehicles"> | Date | string | null
    purchase_price?: DecimalNullableFilter<"vehicles"> | Decimal | DecimalJsLike | number | string | null
    current_value?: DecimalNullableFilter<"vehicles"> | Decimal | DecimalJsLike | number | string | null
    odometer_reading?: DecimalNullableFilter<"vehicles"> | Decimal | DecimalJsLike | number | string | null
    fuel_capacity?: DecimalNullableFilter<"vehicles"> | Decimal | DecimalJsLike | number | string | null
    insurance_policy_number?: StringNullableFilter<"vehicles"> | string | null
    insurance_expiry?: DateTimeNullableFilter<"vehicles"> | Date | string | null
    registration_expiry?: DateTimeNullableFilter<"vehicles"> | Date | string | null
    status?: StringNullableFilter<"vehicles"> | string | null
    gps_device_id?: StringNullableFilter<"vehicles"> | string | null
    assigned_driver_id?: IntNullableFilter<"vehicles"> | number | null
    department_id?: IntNullableFilter<"vehicles"> | number | null
    notes?: StringNullableFilter<"vehicles"> | string | null
    created_at?: DateTimeNullableFilter<"vehicles"> | Date | string | null
  }

  export type expensesCreateWithoutCost_categoriesInput = {
    expense_date: Date | string
    amount: Decimal | DecimalJsLike | number | string
    description?: string | null
    vendor?: string | null
    invoice_number?: string | null
    receipt_available?: boolean | null
    approved_by?: string | null
    approval_date?: Date | string | null
    reimbursable?: boolean | null
    notes?: string | null
    created_at?: Date | string | null
    drivers?: driversCreateNestedOneWithoutExpensesInput
    vehicles?: vehiclesCreateNestedOneWithoutExpensesInput
  }

  export type expensesUncheckedCreateWithoutCost_categoriesInput = {
    expense_id?: number
    vehicle_id?: number | null
    driver_id?: number | null
    expense_date: Date | string
    amount: Decimal | DecimalJsLike | number | string
    description?: string | null
    vendor?: string | null
    invoice_number?: string | null
    receipt_available?: boolean | null
    approved_by?: string | null
    approval_date?: Date | string | null
    reimbursable?: boolean | null
    notes?: string | null
    created_at?: Date | string | null
  }

  export type expensesCreateOrConnectWithoutCost_categoriesInput = {
    where: expensesWhereUniqueInput
    create: XOR<expensesCreateWithoutCost_categoriesInput, expensesUncheckedCreateWithoutCost_categoriesInput>
  }

  export type expensesCreateManyCost_categoriesInputEnvelope = {
    data: expensesCreateManyCost_categoriesInput | expensesCreateManyCost_categoriesInput[]
    skipDuplicates?: boolean
  }

  export type expensesUpsertWithWhereUniqueWithoutCost_categoriesInput = {
    where: expensesWhereUniqueInput
    update: XOR<expensesUpdateWithoutCost_categoriesInput, expensesUncheckedUpdateWithoutCost_categoriesInput>
    create: XOR<expensesCreateWithoutCost_categoriesInput, expensesUncheckedCreateWithoutCost_categoriesInput>
  }

  export type expensesUpdateWithWhereUniqueWithoutCost_categoriesInput = {
    where: expensesWhereUniqueInput
    data: XOR<expensesUpdateWithoutCost_categoriesInput, expensesUncheckedUpdateWithoutCost_categoriesInput>
  }

  export type expensesUpdateManyWithWhereWithoutCost_categoriesInput = {
    where: expensesScalarWhereInput
    data: XOR<expensesUpdateManyMutationInput, expensesUncheckedUpdateManyWithoutCost_categoriesInput>
  }

  export type expensesScalarWhereInput = {
    AND?: expensesScalarWhereInput | expensesScalarWhereInput[]
    OR?: expensesScalarWhereInput[]
    NOT?: expensesScalarWhereInput | expensesScalarWhereInput[]
    expense_id?: IntFilter<"expenses"> | number
    vehicle_id?: IntNullableFilter<"expenses"> | number | null
    driver_id?: IntNullableFilter<"expenses"> | number | null
    category_id?: IntNullableFilter<"expenses"> | number | null
    expense_date?: DateTimeFilter<"expenses"> | Date | string
    amount?: DecimalFilter<"expenses"> | Decimal | DecimalJsLike | number | string
    description?: StringNullableFilter<"expenses"> | string | null
    vendor?: StringNullableFilter<"expenses"> | string | null
    invoice_number?: StringNullableFilter<"expenses"> | string | null
    receipt_available?: BoolNullableFilter<"expenses"> | boolean | null
    approved_by?: StringNullableFilter<"expenses"> | string | null
    approval_date?: DateTimeNullableFilter<"expenses"> | Date | string | null
    reimbursable?: BoolNullableFilter<"expenses"> | boolean | null
    notes?: StringNullableFilter<"expenses"> | string | null
    created_at?: DateTimeNullableFilter<"expenses"> | Date | string | null
  }

  export type companiesCreateWithoutDepartmentsInput = {
    company_name: string
    address?: string | null
    phone?: string | null
    email?: string | null
    contact_person?: string | null
    subscription_plan?: string | null
    created_at?: Date | string | null
    is_active?: boolean | null
    drivers?: driversCreateNestedManyWithoutCompaniesInput
    reports?: reportsCreateNestedManyWithoutCompaniesInput
    service_providers?: service_providersCreateNestedManyWithoutCompaniesInput
    users?: usersCreateNestedManyWithoutCompaniesInput
    vehicles?: vehiclesCreateNestedManyWithoutCompaniesInput
  }

  export type companiesUncheckedCreateWithoutDepartmentsInput = {
    company_id?: number
    company_name: string
    address?: string | null
    phone?: string | null
    email?: string | null
    contact_person?: string | null
    subscription_plan?: string | null
    created_at?: Date | string | null
    is_active?: boolean | null
    drivers?: driversUncheckedCreateNestedManyWithoutCompaniesInput
    reports?: reportsUncheckedCreateNestedManyWithoutCompaniesInput
    service_providers?: service_providersUncheckedCreateNestedManyWithoutCompaniesInput
    users?: usersUncheckedCreateNestedManyWithoutCompaniesInput
    vehicles?: vehiclesUncheckedCreateNestedManyWithoutCompaniesInput
  }

  export type companiesCreateOrConnectWithoutDepartmentsInput = {
    where: companiesWhereUniqueInput
    create: XOR<companiesCreateWithoutDepartmentsInput, companiesUncheckedCreateWithoutDepartmentsInput>
  }

  export type vehiclesCreateWithoutDepartmentsInput = {
    vin: string
    license_plate: string
    make: string
    model: string
    year: number
    color?: string | null
    fuel_type: string
    engine_size?: string | null
    transmission?: string | null
    purchase_date?: Date | string | null
    purchase_price?: Decimal | DecimalJsLike | number | string | null
    current_value?: Decimal | DecimalJsLike | number | string | null
    odometer_reading?: Decimal | DecimalJsLike | number | string | null
    fuel_capacity?: Decimal | DecimalJsLike | number | string | null
    insurance_policy_number?: string | null
    insurance_expiry?: Date | string | null
    registration_expiry?: Date | string | null
    status?: string | null
    gps_device_id?: string | null
    notes?: string | null
    created_at?: Date | string | null
    expenses?: expensesCreateNestedManyWithoutVehiclesInput
    fuel_transactions?: fuel_transactionsCreateNestedManyWithoutVehiclesInput
    gps_tracking?: gps_trackingCreateNestedManyWithoutVehiclesInput
    incidents?: incidentsCreateNestedManyWithoutVehiclesInput
    maintenance_records?: maintenance_recordsCreateNestedManyWithoutVehiclesInput
    safety_inspections?: safety_inspectionsCreateNestedManyWithoutVehiclesInput
    trips?: tripsCreateNestedManyWithoutVehiclesInput
    vehicle_assignments?: vehicle_assignmentsCreateNestedManyWithoutVehiclesInput
    drivers?: driversCreateNestedOneWithoutVehiclesInput
    companies?: companiesCreateNestedOneWithoutVehiclesInput
    vehicle_types?: vehicle_typesCreateNestedOneWithoutVehiclesInput
  }

  export type vehiclesUncheckedCreateWithoutDepartmentsInput = {
    vehicle_id?: number
    company_id?: number | null
    vehicle_type_id?: number | null
    vin: string
    license_plate: string
    make: string
    model: string
    year: number
    color?: string | null
    fuel_type: string
    engine_size?: string | null
    transmission?: string | null
    purchase_date?: Date | string | null
    purchase_price?: Decimal | DecimalJsLike | number | string | null
    current_value?: Decimal | DecimalJsLike | number | string | null
    odometer_reading?: Decimal | DecimalJsLike | number | string | null
    fuel_capacity?: Decimal | DecimalJsLike | number | string | null
    insurance_policy_number?: string | null
    insurance_expiry?: Date | string | null
    registration_expiry?: Date | string | null
    status?: string | null
    gps_device_id?: string | null
    assigned_driver_id?: number | null
    notes?: string | null
    created_at?: Date | string | null
    expenses?: expensesUncheckedCreateNestedManyWithoutVehiclesInput
    fuel_transactions?: fuel_transactionsUncheckedCreateNestedManyWithoutVehiclesInput
    gps_tracking?: gps_trackingUncheckedCreateNestedManyWithoutVehiclesInput
    incidents?: incidentsUncheckedCreateNestedManyWithoutVehiclesInput
    maintenance_records?: maintenance_recordsUncheckedCreateNestedManyWithoutVehiclesInput
    safety_inspections?: safety_inspectionsUncheckedCreateNestedManyWithoutVehiclesInput
    trips?: tripsUncheckedCreateNestedManyWithoutVehiclesInput
    vehicle_assignments?: vehicle_assignmentsUncheckedCreateNestedManyWithoutVehiclesInput
  }

  export type vehiclesCreateOrConnectWithoutDepartmentsInput = {
    where: vehiclesWhereUniqueInput
    create: XOR<vehiclesCreateWithoutDepartmentsInput, vehiclesUncheckedCreateWithoutDepartmentsInput>
  }

  export type vehiclesCreateManyDepartmentsInputEnvelope = {
    data: vehiclesCreateManyDepartmentsInput | vehiclesCreateManyDepartmentsInput[]
    skipDuplicates?: boolean
  }

  export type companiesUpsertWithoutDepartmentsInput = {
    update: XOR<companiesUpdateWithoutDepartmentsInput, companiesUncheckedUpdateWithoutDepartmentsInput>
    create: XOR<companiesCreateWithoutDepartmentsInput, companiesUncheckedCreateWithoutDepartmentsInput>
    where?: companiesWhereInput
  }

  export type companiesUpdateToOneWithWhereWithoutDepartmentsInput = {
    where?: companiesWhereInput
    data: XOR<companiesUpdateWithoutDepartmentsInput, companiesUncheckedUpdateWithoutDepartmentsInput>
  }

  export type companiesUpdateWithoutDepartmentsInput = {
    company_name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    contact_person?: NullableStringFieldUpdateOperationsInput | string | null
    subscription_plan?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    drivers?: driversUpdateManyWithoutCompaniesNestedInput
    reports?: reportsUpdateManyWithoutCompaniesNestedInput
    service_providers?: service_providersUpdateManyWithoutCompaniesNestedInput
    users?: usersUpdateManyWithoutCompaniesNestedInput
    vehicles?: vehiclesUpdateManyWithoutCompaniesNestedInput
  }

  export type companiesUncheckedUpdateWithoutDepartmentsInput = {
    company_id?: IntFieldUpdateOperationsInput | number
    company_name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    contact_person?: NullableStringFieldUpdateOperationsInput | string | null
    subscription_plan?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    drivers?: driversUncheckedUpdateManyWithoutCompaniesNestedInput
    reports?: reportsUncheckedUpdateManyWithoutCompaniesNestedInput
    service_providers?: service_providersUncheckedUpdateManyWithoutCompaniesNestedInput
    users?: usersUncheckedUpdateManyWithoutCompaniesNestedInput
    vehicles?: vehiclesUncheckedUpdateManyWithoutCompaniesNestedInput
  }

  export type vehiclesUpsertWithWhereUniqueWithoutDepartmentsInput = {
    where: vehiclesWhereUniqueInput
    update: XOR<vehiclesUpdateWithoutDepartmentsInput, vehiclesUncheckedUpdateWithoutDepartmentsInput>
    create: XOR<vehiclesCreateWithoutDepartmentsInput, vehiclesUncheckedCreateWithoutDepartmentsInput>
  }

  export type vehiclesUpdateWithWhereUniqueWithoutDepartmentsInput = {
    where: vehiclesWhereUniqueInput
    data: XOR<vehiclesUpdateWithoutDepartmentsInput, vehiclesUncheckedUpdateWithoutDepartmentsInput>
  }

  export type vehiclesUpdateManyWithWhereWithoutDepartmentsInput = {
    where: vehiclesScalarWhereInput
    data: XOR<vehiclesUpdateManyMutationInput, vehiclesUncheckedUpdateManyWithoutDepartmentsInput>
  }

  export type driversCreateWithoutDriver_certificationsInput = {
    employee_id?: string | null
    first_name: string
    last_name: string
    license_number: string
    license_class?: string | null
    license_expiry_date?: Date | string | null
    date_of_birth?: Date | string | null
    hire_date?: Date | string | null
    phone?: string | null
    email?: string | null
    address?: string | null
    emergency_contact_name?: string | null
    emergency_contact_phone?: string | null
    salary?: Decimal | DecimalJsLike | number | string | null
    status?: string | null
    safety_score?: Decimal | DecimalJsLike | number | string | null
    total_miles_driven?: Decimal | DecimalJsLike | number | string | null
    years_experience?: number | null
    created_at?: Date | string | null
    companies?: companiesCreateNestedOneWithoutDriversInput
    expenses?: expensesCreateNestedManyWithoutDriversInput
    fuel_transactions?: fuel_transactionsCreateNestedManyWithoutDriversInput
    incidents?: incidentsCreateNestedManyWithoutDriversInput
    trips?: tripsCreateNestedManyWithoutDriversInput
    vehicle_assignments?: vehicle_assignmentsCreateNestedManyWithoutDriversInput
    vehicles?: vehiclesCreateNestedManyWithoutDriversInput
  }

  export type driversUncheckedCreateWithoutDriver_certificationsInput = {
    driver_id?: number
    company_id?: number | null
    employee_id?: string | null
    first_name: string
    last_name: string
    license_number: string
    license_class?: string | null
    license_expiry_date?: Date | string | null
    date_of_birth?: Date | string | null
    hire_date?: Date | string | null
    phone?: string | null
    email?: string | null
    address?: string | null
    emergency_contact_name?: string | null
    emergency_contact_phone?: string | null
    salary?: Decimal | DecimalJsLike | number | string | null
    status?: string | null
    safety_score?: Decimal | DecimalJsLike | number | string | null
    total_miles_driven?: Decimal | DecimalJsLike | number | string | null
    years_experience?: number | null
    created_at?: Date | string | null
    expenses?: expensesUncheckedCreateNestedManyWithoutDriversInput
    fuel_transactions?: fuel_transactionsUncheckedCreateNestedManyWithoutDriversInput
    incidents?: incidentsUncheckedCreateNestedManyWithoutDriversInput
    trips?: tripsUncheckedCreateNestedManyWithoutDriversInput
    vehicle_assignments?: vehicle_assignmentsUncheckedCreateNestedManyWithoutDriversInput
    vehicles?: vehiclesUncheckedCreateNestedManyWithoutDriversInput
  }

  export type driversCreateOrConnectWithoutDriver_certificationsInput = {
    where: driversWhereUniqueInput
    create: XOR<driversCreateWithoutDriver_certificationsInput, driversUncheckedCreateWithoutDriver_certificationsInput>
  }

  export type driversUpsertWithoutDriver_certificationsInput = {
    update: XOR<driversUpdateWithoutDriver_certificationsInput, driversUncheckedUpdateWithoutDriver_certificationsInput>
    create: XOR<driversCreateWithoutDriver_certificationsInput, driversUncheckedCreateWithoutDriver_certificationsInput>
    where?: driversWhereInput
  }

  export type driversUpdateToOneWithWhereWithoutDriver_certificationsInput = {
    where?: driversWhereInput
    data: XOR<driversUpdateWithoutDriver_certificationsInput, driversUncheckedUpdateWithoutDriver_certificationsInput>
  }

  export type driversUpdateWithoutDriver_certificationsInput = {
    employee_id?: NullableStringFieldUpdateOperationsInput | string | null
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: StringFieldUpdateOperationsInput | string
    license_number?: StringFieldUpdateOperationsInput | string
    license_class?: NullableStringFieldUpdateOperationsInput | string | null
    license_expiry_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    date_of_birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hire_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    emergency_contact_name?: NullableStringFieldUpdateOperationsInput | string | null
    emergency_contact_phone?: NullableStringFieldUpdateOperationsInput | string | null
    salary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    safety_score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    total_miles_driven?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    years_experience?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    companies?: companiesUpdateOneWithoutDriversNestedInput
    expenses?: expensesUpdateManyWithoutDriversNestedInput
    fuel_transactions?: fuel_transactionsUpdateManyWithoutDriversNestedInput
    incidents?: incidentsUpdateManyWithoutDriversNestedInput
    trips?: tripsUpdateManyWithoutDriversNestedInput
    vehicle_assignments?: vehicle_assignmentsUpdateManyWithoutDriversNestedInput
    vehicles?: vehiclesUpdateManyWithoutDriversNestedInput
  }

  export type driversUncheckedUpdateWithoutDriver_certificationsInput = {
    driver_id?: IntFieldUpdateOperationsInput | number
    company_id?: NullableIntFieldUpdateOperationsInput | number | null
    employee_id?: NullableStringFieldUpdateOperationsInput | string | null
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: StringFieldUpdateOperationsInput | string
    license_number?: StringFieldUpdateOperationsInput | string
    license_class?: NullableStringFieldUpdateOperationsInput | string | null
    license_expiry_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    date_of_birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hire_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    emergency_contact_name?: NullableStringFieldUpdateOperationsInput | string | null
    emergency_contact_phone?: NullableStringFieldUpdateOperationsInput | string | null
    salary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    safety_score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    total_miles_driven?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    years_experience?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expenses?: expensesUncheckedUpdateManyWithoutDriversNestedInput
    fuel_transactions?: fuel_transactionsUncheckedUpdateManyWithoutDriversNestedInput
    incidents?: incidentsUncheckedUpdateManyWithoutDriversNestedInput
    trips?: tripsUncheckedUpdateManyWithoutDriversNestedInput
    vehicle_assignments?: vehicle_assignmentsUncheckedUpdateManyWithoutDriversNestedInput
    vehicles?: vehiclesUncheckedUpdateManyWithoutDriversNestedInput
  }

  export type driver_certificationsCreateWithoutDriversInput = {
    certification_name?: string | null
    issuing_authority?: string | null
    issue_date?: Date | string | null
    expiry_date?: Date | string | null
    certification_number?: string | null
    is_active?: boolean | null
  }

  export type driver_certificationsUncheckedCreateWithoutDriversInput = {
    certification_id?: number
    certification_name?: string | null
    issuing_authority?: string | null
    issue_date?: Date | string | null
    expiry_date?: Date | string | null
    certification_number?: string | null
    is_active?: boolean | null
  }

  export type driver_certificationsCreateOrConnectWithoutDriversInput = {
    where: driver_certificationsWhereUniqueInput
    create: XOR<driver_certificationsCreateWithoutDriversInput, driver_certificationsUncheckedCreateWithoutDriversInput>
  }

  export type driver_certificationsCreateManyDriversInputEnvelope = {
    data: driver_certificationsCreateManyDriversInput | driver_certificationsCreateManyDriversInput[]
    skipDuplicates?: boolean
  }

  export type companiesCreateWithoutDriversInput = {
    company_name: string
    address?: string | null
    phone?: string | null
    email?: string | null
    contact_person?: string | null
    subscription_plan?: string | null
    created_at?: Date | string | null
    is_active?: boolean | null
    departments?: departmentsCreateNestedManyWithoutCompaniesInput
    reports?: reportsCreateNestedManyWithoutCompaniesInput
    service_providers?: service_providersCreateNestedManyWithoutCompaniesInput
    users?: usersCreateNestedManyWithoutCompaniesInput
    vehicles?: vehiclesCreateNestedManyWithoutCompaniesInput
  }

  export type companiesUncheckedCreateWithoutDriversInput = {
    company_id?: number
    company_name: string
    address?: string | null
    phone?: string | null
    email?: string | null
    contact_person?: string | null
    subscription_plan?: string | null
    created_at?: Date | string | null
    is_active?: boolean | null
    departments?: departmentsUncheckedCreateNestedManyWithoutCompaniesInput
    reports?: reportsUncheckedCreateNestedManyWithoutCompaniesInput
    service_providers?: service_providersUncheckedCreateNestedManyWithoutCompaniesInput
    users?: usersUncheckedCreateNestedManyWithoutCompaniesInput
    vehicles?: vehiclesUncheckedCreateNestedManyWithoutCompaniesInput
  }

  export type companiesCreateOrConnectWithoutDriversInput = {
    where: companiesWhereUniqueInput
    create: XOR<companiesCreateWithoutDriversInput, companiesUncheckedCreateWithoutDriversInput>
  }

  export type expensesCreateWithoutDriversInput = {
    expense_date: Date | string
    amount: Decimal | DecimalJsLike | number | string
    description?: string | null
    vendor?: string | null
    invoice_number?: string | null
    receipt_available?: boolean | null
    approved_by?: string | null
    approval_date?: Date | string | null
    reimbursable?: boolean | null
    notes?: string | null
    created_at?: Date | string | null
    cost_categories?: cost_categoriesCreateNestedOneWithoutExpensesInput
    vehicles?: vehiclesCreateNestedOneWithoutExpensesInput
  }

  export type expensesUncheckedCreateWithoutDriversInput = {
    expense_id?: number
    vehicle_id?: number | null
    category_id?: number | null
    expense_date: Date | string
    amount: Decimal | DecimalJsLike | number | string
    description?: string | null
    vendor?: string | null
    invoice_number?: string | null
    receipt_available?: boolean | null
    approved_by?: string | null
    approval_date?: Date | string | null
    reimbursable?: boolean | null
    notes?: string | null
    created_at?: Date | string | null
  }

  export type expensesCreateOrConnectWithoutDriversInput = {
    where: expensesWhereUniqueInput
    create: XOR<expensesCreateWithoutDriversInput, expensesUncheckedCreateWithoutDriversInput>
  }

  export type expensesCreateManyDriversInputEnvelope = {
    data: expensesCreateManyDriversInput | expensesCreateManyDriversInput[]
    skipDuplicates?: boolean
  }

  export type fuel_transactionsCreateWithoutDriversInput = {
    transaction_date: Date | string
    odometer_reading?: Decimal | DecimalJsLike | number | string | null
    gallons_purchased?: Decimal | DecimalJsLike | number | string | null
    price_per_gallon?: Decimal | DecimalJsLike | number | string | null
    total_amount?: Decimal | DecimalJsLike | number | string | null
    fuel_type?: string | null
    payment_method?: string | null
    card_number_last_four?: string | null
    receipt_number?: string | null
    mpg_calculated?: Decimal | DecimalJsLike | number | string | null
    notes?: string | null
    fuel_stations?: fuel_stationsCreateNestedOneWithoutFuel_transactionsInput
    vehicles?: vehiclesCreateNestedOneWithoutFuel_transactionsInput
  }

  export type fuel_transactionsUncheckedCreateWithoutDriversInput = {
    transaction_id?: number
    vehicle_id?: number | null
    fuel_station_id?: number | null
    transaction_date: Date | string
    odometer_reading?: Decimal | DecimalJsLike | number | string | null
    gallons_purchased?: Decimal | DecimalJsLike | number | string | null
    price_per_gallon?: Decimal | DecimalJsLike | number | string | null
    total_amount?: Decimal | DecimalJsLike | number | string | null
    fuel_type?: string | null
    payment_method?: string | null
    card_number_last_four?: string | null
    receipt_number?: string | null
    mpg_calculated?: Decimal | DecimalJsLike | number | string | null
    notes?: string | null
  }

  export type fuel_transactionsCreateOrConnectWithoutDriversInput = {
    where: fuel_transactionsWhereUniqueInput
    create: XOR<fuel_transactionsCreateWithoutDriversInput, fuel_transactionsUncheckedCreateWithoutDriversInput>
  }

  export type fuel_transactionsCreateManyDriversInputEnvelope = {
    data: fuel_transactionsCreateManyDriversInput | fuel_transactionsCreateManyDriversInput[]
    skipDuplicates?: boolean
  }

  export type incidentsCreateWithoutDriversInput = {
    incident_date: Date | string
    incident_type: string
    severity: string
    location?: string | null
    description: string
    police_report_number?: string | null
    insurance_claim_number?: string | null
    estimated_damage_cost?: Decimal | DecimalJsLike | number | string | null
    actual_repair_cost?: Decimal | DecimalJsLike | number | string | null
    injuries_reported?: boolean | null
    fatalities?: boolean | null
    at_fault?: boolean | null
    weather_conditions?: string | null
    road_conditions?: string | null
    photos_available?: boolean | null
    status?: string | null
    resolution_date?: Date | string | null
    lessons_learned?: string | null
    created_at?: Date | string | null
    vehicles?: vehiclesCreateNestedOneWithoutIncidentsInput
  }

  export type incidentsUncheckedCreateWithoutDriversInput = {
    incident_id?: number
    vehicle_id?: number | null
    incident_date: Date | string
    incident_type: string
    severity: string
    location?: string | null
    description: string
    police_report_number?: string | null
    insurance_claim_number?: string | null
    estimated_damage_cost?: Decimal | DecimalJsLike | number | string | null
    actual_repair_cost?: Decimal | DecimalJsLike | number | string | null
    injuries_reported?: boolean | null
    fatalities?: boolean | null
    at_fault?: boolean | null
    weather_conditions?: string | null
    road_conditions?: string | null
    photos_available?: boolean | null
    status?: string | null
    resolution_date?: Date | string | null
    lessons_learned?: string | null
    created_at?: Date | string | null
  }

  export type incidentsCreateOrConnectWithoutDriversInput = {
    where: incidentsWhereUniqueInput
    create: XOR<incidentsCreateWithoutDriversInput, incidentsUncheckedCreateWithoutDriversInput>
  }

  export type incidentsCreateManyDriversInputEnvelope = {
    data: incidentsCreateManyDriversInput | incidentsCreateManyDriversInput[]
    skipDuplicates?: boolean
  }

  export type tripsCreateWithoutDriversInput = {
    start_time?: Date | string | null
    end_time?: Date | string | null
    start_location?: string | null
    end_location?: string | null
    start_odometer?: Decimal | DecimalJsLike | number | string | null
    end_odometer?: Decimal | DecimalJsLike | number | string | null
    distance_traveled?: Decimal | DecimalJsLike | number | string | null
    purpose?: string | null
    trip_type?: string | null
    fuel_consumed?: Decimal | DecimalJsLike | number | string | null
    average_speed?: Decimal | DecimalJsLike | number | string | null
    max_speed?: Decimal | DecimalJsLike | number | string | null
    idle_time_minutes?: number | null
    harsh_braking_count?: number | null
    harsh_acceleration_count?: number | null
    speeding_violations?: number | null
    route_efficiency_score?: Decimal | DecimalJsLike | number | string | null
    cost?: Decimal | DecimalJsLike | number | string | null
    notes?: string | null
    created_at?: Date | string | null
    vehicles?: vehiclesCreateNestedOneWithoutTripsInput
  }

  export type tripsUncheckedCreateWithoutDriversInput = {
    trip_id?: number
    vehicle_id?: number | null
    start_time?: Date | string | null
    end_time?: Date | string | null
    start_location?: string | null
    end_location?: string | null
    start_odometer?: Decimal | DecimalJsLike | number | string | null
    end_odometer?: Decimal | DecimalJsLike | number | string | null
    distance_traveled?: Decimal | DecimalJsLike | number | string | null
    purpose?: string | null
    trip_type?: string | null
    fuel_consumed?: Decimal | DecimalJsLike | number | string | null
    average_speed?: Decimal | DecimalJsLike | number | string | null
    max_speed?: Decimal | DecimalJsLike | number | string | null
    idle_time_minutes?: number | null
    harsh_braking_count?: number | null
    harsh_acceleration_count?: number | null
    speeding_violations?: number | null
    route_efficiency_score?: Decimal | DecimalJsLike | number | string | null
    cost?: Decimal | DecimalJsLike | number | string | null
    notes?: string | null
    created_at?: Date | string | null
  }

  export type tripsCreateOrConnectWithoutDriversInput = {
    where: tripsWhereUniqueInput
    create: XOR<tripsCreateWithoutDriversInput, tripsUncheckedCreateWithoutDriversInput>
  }

  export type tripsCreateManyDriversInputEnvelope = {
    data: tripsCreateManyDriversInput | tripsCreateManyDriversInput[]
    skipDuplicates?: boolean
  }

  export type vehicle_assignmentsCreateWithoutDriversInput = {
    assigned_date: Date | string
    end_date?: Date | string | null
    assignment_type?: string | null
    notes?: string | null
    is_active?: boolean | null
    vehicles?: vehiclesCreateNestedOneWithoutVehicle_assignmentsInput
  }

  export type vehicle_assignmentsUncheckedCreateWithoutDriversInput = {
    assignment_id?: number
    vehicle_id?: number | null
    assigned_date: Date | string
    end_date?: Date | string | null
    assignment_type?: string | null
    notes?: string | null
    is_active?: boolean | null
  }

  export type vehicle_assignmentsCreateOrConnectWithoutDriversInput = {
    where: vehicle_assignmentsWhereUniqueInput
    create: XOR<vehicle_assignmentsCreateWithoutDriversInput, vehicle_assignmentsUncheckedCreateWithoutDriversInput>
  }

  export type vehicle_assignmentsCreateManyDriversInputEnvelope = {
    data: vehicle_assignmentsCreateManyDriversInput | vehicle_assignmentsCreateManyDriversInput[]
    skipDuplicates?: boolean
  }

  export type vehiclesCreateWithoutDriversInput = {
    vin: string
    license_plate: string
    make: string
    model: string
    year: number
    color?: string | null
    fuel_type: string
    engine_size?: string | null
    transmission?: string | null
    purchase_date?: Date | string | null
    purchase_price?: Decimal | DecimalJsLike | number | string | null
    current_value?: Decimal | DecimalJsLike | number | string | null
    odometer_reading?: Decimal | DecimalJsLike | number | string | null
    fuel_capacity?: Decimal | DecimalJsLike | number | string | null
    insurance_policy_number?: string | null
    insurance_expiry?: Date | string | null
    registration_expiry?: Date | string | null
    status?: string | null
    gps_device_id?: string | null
    notes?: string | null
    created_at?: Date | string | null
    expenses?: expensesCreateNestedManyWithoutVehiclesInput
    fuel_transactions?: fuel_transactionsCreateNestedManyWithoutVehiclesInput
    gps_tracking?: gps_trackingCreateNestedManyWithoutVehiclesInput
    incidents?: incidentsCreateNestedManyWithoutVehiclesInput
    maintenance_records?: maintenance_recordsCreateNestedManyWithoutVehiclesInput
    safety_inspections?: safety_inspectionsCreateNestedManyWithoutVehiclesInput
    trips?: tripsCreateNestedManyWithoutVehiclesInput
    vehicle_assignments?: vehicle_assignmentsCreateNestedManyWithoutVehiclesInput
    companies?: companiesCreateNestedOneWithoutVehiclesInput
    departments?: departmentsCreateNestedOneWithoutVehiclesInput
    vehicle_types?: vehicle_typesCreateNestedOneWithoutVehiclesInput
  }

  export type vehiclesUncheckedCreateWithoutDriversInput = {
    vehicle_id?: number
    company_id?: number | null
    vehicle_type_id?: number | null
    vin: string
    license_plate: string
    make: string
    model: string
    year: number
    color?: string | null
    fuel_type: string
    engine_size?: string | null
    transmission?: string | null
    purchase_date?: Date | string | null
    purchase_price?: Decimal | DecimalJsLike | number | string | null
    current_value?: Decimal | DecimalJsLike | number | string | null
    odometer_reading?: Decimal | DecimalJsLike | number | string | null
    fuel_capacity?: Decimal | DecimalJsLike | number | string | null
    insurance_policy_number?: string | null
    insurance_expiry?: Date | string | null
    registration_expiry?: Date | string | null
    status?: string | null
    gps_device_id?: string | null
    department_id?: number | null
    notes?: string | null
    created_at?: Date | string | null
    expenses?: expensesUncheckedCreateNestedManyWithoutVehiclesInput
    fuel_transactions?: fuel_transactionsUncheckedCreateNestedManyWithoutVehiclesInput
    gps_tracking?: gps_trackingUncheckedCreateNestedManyWithoutVehiclesInput
    incidents?: incidentsUncheckedCreateNestedManyWithoutVehiclesInput
    maintenance_records?: maintenance_recordsUncheckedCreateNestedManyWithoutVehiclesInput
    safety_inspections?: safety_inspectionsUncheckedCreateNestedManyWithoutVehiclesInput
    trips?: tripsUncheckedCreateNestedManyWithoutVehiclesInput
    vehicle_assignments?: vehicle_assignmentsUncheckedCreateNestedManyWithoutVehiclesInput
  }

  export type vehiclesCreateOrConnectWithoutDriversInput = {
    where: vehiclesWhereUniqueInput
    create: XOR<vehiclesCreateWithoutDriversInput, vehiclesUncheckedCreateWithoutDriversInput>
  }

  export type vehiclesCreateManyDriversInputEnvelope = {
    data: vehiclesCreateManyDriversInput | vehiclesCreateManyDriversInput[]
    skipDuplicates?: boolean
  }

  export type driver_certificationsUpsertWithWhereUniqueWithoutDriversInput = {
    where: driver_certificationsWhereUniqueInput
    update: XOR<driver_certificationsUpdateWithoutDriversInput, driver_certificationsUncheckedUpdateWithoutDriversInput>
    create: XOR<driver_certificationsCreateWithoutDriversInput, driver_certificationsUncheckedCreateWithoutDriversInput>
  }

  export type driver_certificationsUpdateWithWhereUniqueWithoutDriversInput = {
    where: driver_certificationsWhereUniqueInput
    data: XOR<driver_certificationsUpdateWithoutDriversInput, driver_certificationsUncheckedUpdateWithoutDriversInput>
  }

  export type driver_certificationsUpdateManyWithWhereWithoutDriversInput = {
    where: driver_certificationsScalarWhereInput
    data: XOR<driver_certificationsUpdateManyMutationInput, driver_certificationsUncheckedUpdateManyWithoutDriversInput>
  }

  export type driver_certificationsScalarWhereInput = {
    AND?: driver_certificationsScalarWhereInput | driver_certificationsScalarWhereInput[]
    OR?: driver_certificationsScalarWhereInput[]
    NOT?: driver_certificationsScalarWhereInput | driver_certificationsScalarWhereInput[]
    certification_id?: IntFilter<"driver_certifications"> | number
    driver_id?: IntNullableFilter<"driver_certifications"> | number | null
    certification_name?: StringNullableFilter<"driver_certifications"> | string | null
    issuing_authority?: StringNullableFilter<"driver_certifications"> | string | null
    issue_date?: DateTimeNullableFilter<"driver_certifications"> | Date | string | null
    expiry_date?: DateTimeNullableFilter<"driver_certifications"> | Date | string | null
    certification_number?: StringNullableFilter<"driver_certifications"> | string | null
    is_active?: BoolNullableFilter<"driver_certifications"> | boolean | null
  }

  export type companiesUpsertWithoutDriversInput = {
    update: XOR<companiesUpdateWithoutDriversInput, companiesUncheckedUpdateWithoutDriversInput>
    create: XOR<companiesCreateWithoutDriversInput, companiesUncheckedCreateWithoutDriversInput>
    where?: companiesWhereInput
  }

  export type companiesUpdateToOneWithWhereWithoutDriversInput = {
    where?: companiesWhereInput
    data: XOR<companiesUpdateWithoutDriversInput, companiesUncheckedUpdateWithoutDriversInput>
  }

  export type companiesUpdateWithoutDriversInput = {
    company_name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    contact_person?: NullableStringFieldUpdateOperationsInput | string | null
    subscription_plan?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    departments?: departmentsUpdateManyWithoutCompaniesNestedInput
    reports?: reportsUpdateManyWithoutCompaniesNestedInput
    service_providers?: service_providersUpdateManyWithoutCompaniesNestedInput
    users?: usersUpdateManyWithoutCompaniesNestedInput
    vehicles?: vehiclesUpdateManyWithoutCompaniesNestedInput
  }

  export type companiesUncheckedUpdateWithoutDriversInput = {
    company_id?: IntFieldUpdateOperationsInput | number
    company_name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    contact_person?: NullableStringFieldUpdateOperationsInput | string | null
    subscription_plan?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    departments?: departmentsUncheckedUpdateManyWithoutCompaniesNestedInput
    reports?: reportsUncheckedUpdateManyWithoutCompaniesNestedInput
    service_providers?: service_providersUncheckedUpdateManyWithoutCompaniesNestedInput
    users?: usersUncheckedUpdateManyWithoutCompaniesNestedInput
    vehicles?: vehiclesUncheckedUpdateManyWithoutCompaniesNestedInput
  }

  export type expensesUpsertWithWhereUniqueWithoutDriversInput = {
    where: expensesWhereUniqueInput
    update: XOR<expensesUpdateWithoutDriversInput, expensesUncheckedUpdateWithoutDriversInput>
    create: XOR<expensesCreateWithoutDriversInput, expensesUncheckedCreateWithoutDriversInput>
  }

  export type expensesUpdateWithWhereUniqueWithoutDriversInput = {
    where: expensesWhereUniqueInput
    data: XOR<expensesUpdateWithoutDriversInput, expensesUncheckedUpdateWithoutDriversInput>
  }

  export type expensesUpdateManyWithWhereWithoutDriversInput = {
    where: expensesScalarWhereInput
    data: XOR<expensesUpdateManyMutationInput, expensesUncheckedUpdateManyWithoutDriversInput>
  }

  export type fuel_transactionsUpsertWithWhereUniqueWithoutDriversInput = {
    where: fuel_transactionsWhereUniqueInput
    update: XOR<fuel_transactionsUpdateWithoutDriversInput, fuel_transactionsUncheckedUpdateWithoutDriversInput>
    create: XOR<fuel_transactionsCreateWithoutDriversInput, fuel_transactionsUncheckedCreateWithoutDriversInput>
  }

  export type fuel_transactionsUpdateWithWhereUniqueWithoutDriversInput = {
    where: fuel_transactionsWhereUniqueInput
    data: XOR<fuel_transactionsUpdateWithoutDriversInput, fuel_transactionsUncheckedUpdateWithoutDriversInput>
  }

  export type fuel_transactionsUpdateManyWithWhereWithoutDriversInput = {
    where: fuel_transactionsScalarWhereInput
    data: XOR<fuel_transactionsUpdateManyMutationInput, fuel_transactionsUncheckedUpdateManyWithoutDriversInput>
  }

  export type fuel_transactionsScalarWhereInput = {
    AND?: fuel_transactionsScalarWhereInput | fuel_transactionsScalarWhereInput[]
    OR?: fuel_transactionsScalarWhereInput[]
    NOT?: fuel_transactionsScalarWhereInput | fuel_transactionsScalarWhereInput[]
    transaction_id?: IntFilter<"fuel_transactions"> | number
    vehicle_id?: IntNullableFilter<"fuel_transactions"> | number | null
    driver_id?: IntNullableFilter<"fuel_transactions"> | number | null
    fuel_station_id?: IntNullableFilter<"fuel_transactions"> | number | null
    transaction_date?: DateTimeFilter<"fuel_transactions"> | Date | string
    odometer_reading?: DecimalNullableFilter<"fuel_transactions"> | Decimal | DecimalJsLike | number | string | null
    gallons_purchased?: DecimalNullableFilter<"fuel_transactions"> | Decimal | DecimalJsLike | number | string | null
    price_per_gallon?: DecimalNullableFilter<"fuel_transactions"> | Decimal | DecimalJsLike | number | string | null
    total_amount?: DecimalNullableFilter<"fuel_transactions"> | Decimal | DecimalJsLike | number | string | null
    fuel_type?: StringNullableFilter<"fuel_transactions"> | string | null
    payment_method?: StringNullableFilter<"fuel_transactions"> | string | null
    card_number_last_four?: StringNullableFilter<"fuel_transactions"> | string | null
    receipt_number?: StringNullableFilter<"fuel_transactions"> | string | null
    mpg_calculated?: DecimalNullableFilter<"fuel_transactions"> | Decimal | DecimalJsLike | number | string | null
    notes?: StringNullableFilter<"fuel_transactions"> | string | null
  }

  export type incidentsUpsertWithWhereUniqueWithoutDriversInput = {
    where: incidentsWhereUniqueInput
    update: XOR<incidentsUpdateWithoutDriversInput, incidentsUncheckedUpdateWithoutDriversInput>
    create: XOR<incidentsCreateWithoutDriversInput, incidentsUncheckedCreateWithoutDriversInput>
  }

  export type incidentsUpdateWithWhereUniqueWithoutDriversInput = {
    where: incidentsWhereUniqueInput
    data: XOR<incidentsUpdateWithoutDriversInput, incidentsUncheckedUpdateWithoutDriversInput>
  }

  export type incidentsUpdateManyWithWhereWithoutDriversInput = {
    where: incidentsScalarWhereInput
    data: XOR<incidentsUpdateManyMutationInput, incidentsUncheckedUpdateManyWithoutDriversInput>
  }

  export type incidentsScalarWhereInput = {
    AND?: incidentsScalarWhereInput | incidentsScalarWhereInput[]
    OR?: incidentsScalarWhereInput[]
    NOT?: incidentsScalarWhereInput | incidentsScalarWhereInput[]
    incident_id?: IntFilter<"incidents"> | number
    vehicle_id?: IntNullableFilter<"incidents"> | number | null
    driver_id?: IntNullableFilter<"incidents"> | number | null
    incident_date?: DateTimeFilter<"incidents"> | Date | string
    incident_type?: StringFilter<"incidents"> | string
    severity?: StringFilter<"incidents"> | string
    location?: StringNullableFilter<"incidents"> | string | null
    description?: StringFilter<"incidents"> | string
    police_report_number?: StringNullableFilter<"incidents"> | string | null
    insurance_claim_number?: StringNullableFilter<"incidents"> | string | null
    estimated_damage_cost?: DecimalNullableFilter<"incidents"> | Decimal | DecimalJsLike | number | string | null
    actual_repair_cost?: DecimalNullableFilter<"incidents"> | Decimal | DecimalJsLike | number | string | null
    injuries_reported?: BoolNullableFilter<"incidents"> | boolean | null
    fatalities?: BoolNullableFilter<"incidents"> | boolean | null
    at_fault?: BoolNullableFilter<"incidents"> | boolean | null
    weather_conditions?: StringNullableFilter<"incidents"> | string | null
    road_conditions?: StringNullableFilter<"incidents"> | string | null
    photos_available?: BoolNullableFilter<"incidents"> | boolean | null
    status?: StringNullableFilter<"incidents"> | string | null
    resolution_date?: DateTimeNullableFilter<"incidents"> | Date | string | null
    lessons_learned?: StringNullableFilter<"incidents"> | string | null
    created_at?: DateTimeNullableFilter<"incidents"> | Date | string | null
  }

  export type tripsUpsertWithWhereUniqueWithoutDriversInput = {
    where: tripsWhereUniqueInput
    update: XOR<tripsUpdateWithoutDriversInput, tripsUncheckedUpdateWithoutDriversInput>
    create: XOR<tripsCreateWithoutDriversInput, tripsUncheckedCreateWithoutDriversInput>
  }

  export type tripsUpdateWithWhereUniqueWithoutDriversInput = {
    where: tripsWhereUniqueInput
    data: XOR<tripsUpdateWithoutDriversInput, tripsUncheckedUpdateWithoutDriversInput>
  }

  export type tripsUpdateManyWithWhereWithoutDriversInput = {
    where: tripsScalarWhereInput
    data: XOR<tripsUpdateManyMutationInput, tripsUncheckedUpdateManyWithoutDriversInput>
  }

  export type tripsScalarWhereInput = {
    AND?: tripsScalarWhereInput | tripsScalarWhereInput[]
    OR?: tripsScalarWhereInput[]
    NOT?: tripsScalarWhereInput | tripsScalarWhereInput[]
    trip_id?: IntFilter<"trips"> | number
    vehicle_id?: IntNullableFilter<"trips"> | number | null
    driver_id?: IntNullableFilter<"trips"> | number | null
    start_time?: DateTimeNullableFilter<"trips"> | Date | string | null
    end_time?: DateTimeNullableFilter<"trips"> | Date | string | null
    start_location?: StringNullableFilter<"trips"> | string | null
    end_location?: StringNullableFilter<"trips"> | string | null
    start_odometer?: DecimalNullableFilter<"trips"> | Decimal | DecimalJsLike | number | string | null
    end_odometer?: DecimalNullableFilter<"trips"> | Decimal | DecimalJsLike | number | string | null
    distance_traveled?: DecimalNullableFilter<"trips"> | Decimal | DecimalJsLike | number | string | null
    purpose?: StringNullableFilter<"trips"> | string | null
    trip_type?: StringNullableFilter<"trips"> | string | null
    fuel_consumed?: DecimalNullableFilter<"trips"> | Decimal | DecimalJsLike | number | string | null
    average_speed?: DecimalNullableFilter<"trips"> | Decimal | DecimalJsLike | number | string | null
    max_speed?: DecimalNullableFilter<"trips"> | Decimal | DecimalJsLike | number | string | null
    idle_time_minutes?: IntNullableFilter<"trips"> | number | null
    harsh_braking_count?: IntNullableFilter<"trips"> | number | null
    harsh_acceleration_count?: IntNullableFilter<"trips"> | number | null
    speeding_violations?: IntNullableFilter<"trips"> | number | null
    route_efficiency_score?: DecimalNullableFilter<"trips"> | Decimal | DecimalJsLike | number | string | null
    cost?: DecimalNullableFilter<"trips"> | Decimal | DecimalJsLike | number | string | null
    notes?: StringNullableFilter<"trips"> | string | null
    created_at?: DateTimeNullableFilter<"trips"> | Date | string | null
  }

  export type vehicle_assignmentsUpsertWithWhereUniqueWithoutDriversInput = {
    where: vehicle_assignmentsWhereUniqueInput
    update: XOR<vehicle_assignmentsUpdateWithoutDriversInput, vehicle_assignmentsUncheckedUpdateWithoutDriversInput>
    create: XOR<vehicle_assignmentsCreateWithoutDriversInput, vehicle_assignmentsUncheckedCreateWithoutDriversInput>
  }

  export type vehicle_assignmentsUpdateWithWhereUniqueWithoutDriversInput = {
    where: vehicle_assignmentsWhereUniqueInput
    data: XOR<vehicle_assignmentsUpdateWithoutDriversInput, vehicle_assignmentsUncheckedUpdateWithoutDriversInput>
  }

  export type vehicle_assignmentsUpdateManyWithWhereWithoutDriversInput = {
    where: vehicle_assignmentsScalarWhereInput
    data: XOR<vehicle_assignmentsUpdateManyMutationInput, vehicle_assignmentsUncheckedUpdateManyWithoutDriversInput>
  }

  export type vehicle_assignmentsScalarWhereInput = {
    AND?: vehicle_assignmentsScalarWhereInput | vehicle_assignmentsScalarWhereInput[]
    OR?: vehicle_assignmentsScalarWhereInput[]
    NOT?: vehicle_assignmentsScalarWhereInput | vehicle_assignmentsScalarWhereInput[]
    assignment_id?: IntFilter<"vehicle_assignments"> | number
    vehicle_id?: IntNullableFilter<"vehicle_assignments"> | number | null
    driver_id?: IntNullableFilter<"vehicle_assignments"> | number | null
    assigned_date?: DateTimeFilter<"vehicle_assignments"> | Date | string
    end_date?: DateTimeNullableFilter<"vehicle_assignments"> | Date | string | null
    assignment_type?: StringNullableFilter<"vehicle_assignments"> | string | null
    notes?: StringNullableFilter<"vehicle_assignments"> | string | null
    is_active?: BoolNullableFilter<"vehicle_assignments"> | boolean | null
  }

  export type vehiclesUpsertWithWhereUniqueWithoutDriversInput = {
    where: vehiclesWhereUniqueInput
    update: XOR<vehiclesUpdateWithoutDriversInput, vehiclesUncheckedUpdateWithoutDriversInput>
    create: XOR<vehiclesCreateWithoutDriversInput, vehiclesUncheckedCreateWithoutDriversInput>
  }

  export type vehiclesUpdateWithWhereUniqueWithoutDriversInput = {
    where: vehiclesWhereUniqueInput
    data: XOR<vehiclesUpdateWithoutDriversInput, vehiclesUncheckedUpdateWithoutDriversInput>
  }

  export type vehiclesUpdateManyWithWhereWithoutDriversInput = {
    where: vehiclesScalarWhereInput
    data: XOR<vehiclesUpdateManyMutationInput, vehiclesUncheckedUpdateManyWithoutDriversInput>
  }

  export type cost_categoriesCreateWithoutExpensesInput = {
    category_name: string
    description?: string | null
    is_active?: boolean | null
  }

  export type cost_categoriesUncheckedCreateWithoutExpensesInput = {
    category_id?: number
    category_name: string
    description?: string | null
    is_active?: boolean | null
  }

  export type cost_categoriesCreateOrConnectWithoutExpensesInput = {
    where: cost_categoriesWhereUniqueInput
    create: XOR<cost_categoriesCreateWithoutExpensesInput, cost_categoriesUncheckedCreateWithoutExpensesInput>
  }

  export type driversCreateWithoutExpensesInput = {
    employee_id?: string | null
    first_name: string
    last_name: string
    license_number: string
    license_class?: string | null
    license_expiry_date?: Date | string | null
    date_of_birth?: Date | string | null
    hire_date?: Date | string | null
    phone?: string | null
    email?: string | null
    address?: string | null
    emergency_contact_name?: string | null
    emergency_contact_phone?: string | null
    salary?: Decimal | DecimalJsLike | number | string | null
    status?: string | null
    safety_score?: Decimal | DecimalJsLike | number | string | null
    total_miles_driven?: Decimal | DecimalJsLike | number | string | null
    years_experience?: number | null
    created_at?: Date | string | null
    driver_certifications?: driver_certificationsCreateNestedManyWithoutDriversInput
    companies?: companiesCreateNestedOneWithoutDriversInput
    fuel_transactions?: fuel_transactionsCreateNestedManyWithoutDriversInput
    incidents?: incidentsCreateNestedManyWithoutDriversInput
    trips?: tripsCreateNestedManyWithoutDriversInput
    vehicle_assignments?: vehicle_assignmentsCreateNestedManyWithoutDriversInput
    vehicles?: vehiclesCreateNestedManyWithoutDriversInput
  }

  export type driversUncheckedCreateWithoutExpensesInput = {
    driver_id?: number
    company_id?: number | null
    employee_id?: string | null
    first_name: string
    last_name: string
    license_number: string
    license_class?: string | null
    license_expiry_date?: Date | string | null
    date_of_birth?: Date | string | null
    hire_date?: Date | string | null
    phone?: string | null
    email?: string | null
    address?: string | null
    emergency_contact_name?: string | null
    emergency_contact_phone?: string | null
    salary?: Decimal | DecimalJsLike | number | string | null
    status?: string | null
    safety_score?: Decimal | DecimalJsLike | number | string | null
    total_miles_driven?: Decimal | DecimalJsLike | number | string | null
    years_experience?: number | null
    created_at?: Date | string | null
    driver_certifications?: driver_certificationsUncheckedCreateNestedManyWithoutDriversInput
    fuel_transactions?: fuel_transactionsUncheckedCreateNestedManyWithoutDriversInput
    incidents?: incidentsUncheckedCreateNestedManyWithoutDriversInput
    trips?: tripsUncheckedCreateNestedManyWithoutDriversInput
    vehicle_assignments?: vehicle_assignmentsUncheckedCreateNestedManyWithoutDriversInput
    vehicles?: vehiclesUncheckedCreateNestedManyWithoutDriversInput
  }

  export type driversCreateOrConnectWithoutExpensesInput = {
    where: driversWhereUniqueInput
    create: XOR<driversCreateWithoutExpensesInput, driversUncheckedCreateWithoutExpensesInput>
  }

  export type vehiclesCreateWithoutExpensesInput = {
    vin: string
    license_plate: string
    make: string
    model: string
    year: number
    color?: string | null
    fuel_type: string
    engine_size?: string | null
    transmission?: string | null
    purchase_date?: Date | string | null
    purchase_price?: Decimal | DecimalJsLike | number | string | null
    current_value?: Decimal | DecimalJsLike | number | string | null
    odometer_reading?: Decimal | DecimalJsLike | number | string | null
    fuel_capacity?: Decimal | DecimalJsLike | number | string | null
    insurance_policy_number?: string | null
    insurance_expiry?: Date | string | null
    registration_expiry?: Date | string | null
    status?: string | null
    gps_device_id?: string | null
    notes?: string | null
    created_at?: Date | string | null
    fuel_transactions?: fuel_transactionsCreateNestedManyWithoutVehiclesInput
    gps_tracking?: gps_trackingCreateNestedManyWithoutVehiclesInput
    incidents?: incidentsCreateNestedManyWithoutVehiclesInput
    maintenance_records?: maintenance_recordsCreateNestedManyWithoutVehiclesInput
    safety_inspections?: safety_inspectionsCreateNestedManyWithoutVehiclesInput
    trips?: tripsCreateNestedManyWithoutVehiclesInput
    vehicle_assignments?: vehicle_assignmentsCreateNestedManyWithoutVehiclesInput
    drivers?: driversCreateNestedOneWithoutVehiclesInput
    companies?: companiesCreateNestedOneWithoutVehiclesInput
    departments?: departmentsCreateNestedOneWithoutVehiclesInput
    vehicle_types?: vehicle_typesCreateNestedOneWithoutVehiclesInput
  }

  export type vehiclesUncheckedCreateWithoutExpensesInput = {
    vehicle_id?: number
    company_id?: number | null
    vehicle_type_id?: number | null
    vin: string
    license_plate: string
    make: string
    model: string
    year: number
    color?: string | null
    fuel_type: string
    engine_size?: string | null
    transmission?: string | null
    purchase_date?: Date | string | null
    purchase_price?: Decimal | DecimalJsLike | number | string | null
    current_value?: Decimal | DecimalJsLike | number | string | null
    odometer_reading?: Decimal | DecimalJsLike | number | string | null
    fuel_capacity?: Decimal | DecimalJsLike | number | string | null
    insurance_policy_number?: string | null
    insurance_expiry?: Date | string | null
    registration_expiry?: Date | string | null
    status?: string | null
    gps_device_id?: string | null
    assigned_driver_id?: number | null
    department_id?: number | null
    notes?: string | null
    created_at?: Date | string | null
    fuel_transactions?: fuel_transactionsUncheckedCreateNestedManyWithoutVehiclesInput
    gps_tracking?: gps_trackingUncheckedCreateNestedManyWithoutVehiclesInput
    incidents?: incidentsUncheckedCreateNestedManyWithoutVehiclesInput
    maintenance_records?: maintenance_recordsUncheckedCreateNestedManyWithoutVehiclesInput
    safety_inspections?: safety_inspectionsUncheckedCreateNestedManyWithoutVehiclesInput
    trips?: tripsUncheckedCreateNestedManyWithoutVehiclesInput
    vehicle_assignments?: vehicle_assignmentsUncheckedCreateNestedManyWithoutVehiclesInput
  }

  export type vehiclesCreateOrConnectWithoutExpensesInput = {
    where: vehiclesWhereUniqueInput
    create: XOR<vehiclesCreateWithoutExpensesInput, vehiclesUncheckedCreateWithoutExpensesInput>
  }

  export type cost_categoriesUpsertWithoutExpensesInput = {
    update: XOR<cost_categoriesUpdateWithoutExpensesInput, cost_categoriesUncheckedUpdateWithoutExpensesInput>
    create: XOR<cost_categoriesCreateWithoutExpensesInput, cost_categoriesUncheckedCreateWithoutExpensesInput>
    where?: cost_categoriesWhereInput
  }

  export type cost_categoriesUpdateToOneWithWhereWithoutExpensesInput = {
    where?: cost_categoriesWhereInput
    data: XOR<cost_categoriesUpdateWithoutExpensesInput, cost_categoriesUncheckedUpdateWithoutExpensesInput>
  }

  export type cost_categoriesUpdateWithoutExpensesInput = {
    category_name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type cost_categoriesUncheckedUpdateWithoutExpensesInput = {
    category_id?: IntFieldUpdateOperationsInput | number
    category_name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type driversUpsertWithoutExpensesInput = {
    update: XOR<driversUpdateWithoutExpensesInput, driversUncheckedUpdateWithoutExpensesInput>
    create: XOR<driversCreateWithoutExpensesInput, driversUncheckedCreateWithoutExpensesInput>
    where?: driversWhereInput
  }

  export type driversUpdateToOneWithWhereWithoutExpensesInput = {
    where?: driversWhereInput
    data: XOR<driversUpdateWithoutExpensesInput, driversUncheckedUpdateWithoutExpensesInput>
  }

  export type driversUpdateWithoutExpensesInput = {
    employee_id?: NullableStringFieldUpdateOperationsInput | string | null
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: StringFieldUpdateOperationsInput | string
    license_number?: StringFieldUpdateOperationsInput | string
    license_class?: NullableStringFieldUpdateOperationsInput | string | null
    license_expiry_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    date_of_birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hire_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    emergency_contact_name?: NullableStringFieldUpdateOperationsInput | string | null
    emergency_contact_phone?: NullableStringFieldUpdateOperationsInput | string | null
    salary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    safety_score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    total_miles_driven?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    years_experience?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    driver_certifications?: driver_certificationsUpdateManyWithoutDriversNestedInput
    companies?: companiesUpdateOneWithoutDriversNestedInput
    fuel_transactions?: fuel_transactionsUpdateManyWithoutDriversNestedInput
    incidents?: incidentsUpdateManyWithoutDriversNestedInput
    trips?: tripsUpdateManyWithoutDriversNestedInput
    vehicle_assignments?: vehicle_assignmentsUpdateManyWithoutDriversNestedInput
    vehicles?: vehiclesUpdateManyWithoutDriversNestedInput
  }

  export type driversUncheckedUpdateWithoutExpensesInput = {
    driver_id?: IntFieldUpdateOperationsInput | number
    company_id?: NullableIntFieldUpdateOperationsInput | number | null
    employee_id?: NullableStringFieldUpdateOperationsInput | string | null
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: StringFieldUpdateOperationsInput | string
    license_number?: StringFieldUpdateOperationsInput | string
    license_class?: NullableStringFieldUpdateOperationsInput | string | null
    license_expiry_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    date_of_birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hire_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    emergency_contact_name?: NullableStringFieldUpdateOperationsInput | string | null
    emergency_contact_phone?: NullableStringFieldUpdateOperationsInput | string | null
    salary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    safety_score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    total_miles_driven?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    years_experience?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    driver_certifications?: driver_certificationsUncheckedUpdateManyWithoutDriversNestedInput
    fuel_transactions?: fuel_transactionsUncheckedUpdateManyWithoutDriversNestedInput
    incidents?: incidentsUncheckedUpdateManyWithoutDriversNestedInput
    trips?: tripsUncheckedUpdateManyWithoutDriversNestedInput
    vehicle_assignments?: vehicle_assignmentsUncheckedUpdateManyWithoutDriversNestedInput
    vehicles?: vehiclesUncheckedUpdateManyWithoutDriversNestedInput
  }

  export type vehiclesUpsertWithoutExpensesInput = {
    update: XOR<vehiclesUpdateWithoutExpensesInput, vehiclesUncheckedUpdateWithoutExpensesInput>
    create: XOR<vehiclesCreateWithoutExpensesInput, vehiclesUncheckedCreateWithoutExpensesInput>
    where?: vehiclesWhereInput
  }

  export type vehiclesUpdateToOneWithWhereWithoutExpensesInput = {
    where?: vehiclesWhereInput
    data: XOR<vehiclesUpdateWithoutExpensesInput, vehiclesUncheckedUpdateWithoutExpensesInput>
  }

  export type vehiclesUpdateWithoutExpensesInput = {
    vin?: StringFieldUpdateOperationsInput | string
    license_plate?: StringFieldUpdateOperationsInput | string
    make?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    color?: NullableStringFieldUpdateOperationsInput | string | null
    fuel_type?: StringFieldUpdateOperationsInput | string
    engine_size?: NullableStringFieldUpdateOperationsInput | string | null
    transmission?: NullableStringFieldUpdateOperationsInput | string | null
    purchase_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchase_price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    current_value?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    odometer_reading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fuel_capacity?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    insurance_policy_number?: NullableStringFieldUpdateOperationsInput | string | null
    insurance_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    registration_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    gps_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fuel_transactions?: fuel_transactionsUpdateManyWithoutVehiclesNestedInput
    gps_tracking?: gps_trackingUpdateManyWithoutVehiclesNestedInput
    incidents?: incidentsUpdateManyWithoutVehiclesNestedInput
    maintenance_records?: maintenance_recordsUpdateManyWithoutVehiclesNestedInput
    safety_inspections?: safety_inspectionsUpdateManyWithoutVehiclesNestedInput
    trips?: tripsUpdateManyWithoutVehiclesNestedInput
    vehicle_assignments?: vehicle_assignmentsUpdateManyWithoutVehiclesNestedInput
    drivers?: driversUpdateOneWithoutVehiclesNestedInput
    companies?: companiesUpdateOneWithoutVehiclesNestedInput
    departments?: departmentsUpdateOneWithoutVehiclesNestedInput
    vehicle_types?: vehicle_typesUpdateOneWithoutVehiclesNestedInput
  }

  export type vehiclesUncheckedUpdateWithoutExpensesInput = {
    vehicle_id?: IntFieldUpdateOperationsInput | number
    company_id?: NullableIntFieldUpdateOperationsInput | number | null
    vehicle_type_id?: NullableIntFieldUpdateOperationsInput | number | null
    vin?: StringFieldUpdateOperationsInput | string
    license_plate?: StringFieldUpdateOperationsInput | string
    make?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    color?: NullableStringFieldUpdateOperationsInput | string | null
    fuel_type?: StringFieldUpdateOperationsInput | string
    engine_size?: NullableStringFieldUpdateOperationsInput | string | null
    transmission?: NullableStringFieldUpdateOperationsInput | string | null
    purchase_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchase_price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    current_value?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    odometer_reading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fuel_capacity?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    insurance_policy_number?: NullableStringFieldUpdateOperationsInput | string | null
    insurance_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    registration_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    gps_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    assigned_driver_id?: NullableIntFieldUpdateOperationsInput | number | null
    department_id?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fuel_transactions?: fuel_transactionsUncheckedUpdateManyWithoutVehiclesNestedInput
    gps_tracking?: gps_trackingUncheckedUpdateManyWithoutVehiclesNestedInput
    incidents?: incidentsUncheckedUpdateManyWithoutVehiclesNestedInput
    maintenance_records?: maintenance_recordsUncheckedUpdateManyWithoutVehiclesNestedInput
    safety_inspections?: safety_inspectionsUncheckedUpdateManyWithoutVehiclesNestedInput
    trips?: tripsUncheckedUpdateManyWithoutVehiclesNestedInput
    vehicle_assignments?: vehicle_assignmentsUncheckedUpdateManyWithoutVehiclesNestedInput
  }

  export type fuel_transactionsCreateWithoutFuel_stationsInput = {
    transaction_date: Date | string
    odometer_reading?: Decimal | DecimalJsLike | number | string | null
    gallons_purchased?: Decimal | DecimalJsLike | number | string | null
    price_per_gallon?: Decimal | DecimalJsLike | number | string | null
    total_amount?: Decimal | DecimalJsLike | number | string | null
    fuel_type?: string | null
    payment_method?: string | null
    card_number_last_four?: string | null
    receipt_number?: string | null
    mpg_calculated?: Decimal | DecimalJsLike | number | string | null
    notes?: string | null
    drivers?: driversCreateNestedOneWithoutFuel_transactionsInput
    vehicles?: vehiclesCreateNestedOneWithoutFuel_transactionsInput
  }

  export type fuel_transactionsUncheckedCreateWithoutFuel_stationsInput = {
    transaction_id?: number
    vehicle_id?: number | null
    driver_id?: number | null
    transaction_date: Date | string
    odometer_reading?: Decimal | DecimalJsLike | number | string | null
    gallons_purchased?: Decimal | DecimalJsLike | number | string | null
    price_per_gallon?: Decimal | DecimalJsLike | number | string | null
    total_amount?: Decimal | DecimalJsLike | number | string | null
    fuel_type?: string | null
    payment_method?: string | null
    card_number_last_four?: string | null
    receipt_number?: string | null
    mpg_calculated?: Decimal | DecimalJsLike | number | string | null
    notes?: string | null
  }

  export type fuel_transactionsCreateOrConnectWithoutFuel_stationsInput = {
    where: fuel_transactionsWhereUniqueInput
    create: XOR<fuel_transactionsCreateWithoutFuel_stationsInput, fuel_transactionsUncheckedCreateWithoutFuel_stationsInput>
  }

  export type fuel_transactionsCreateManyFuel_stationsInputEnvelope = {
    data: fuel_transactionsCreateManyFuel_stationsInput | fuel_transactionsCreateManyFuel_stationsInput[]
    skipDuplicates?: boolean
  }

  export type fuel_transactionsUpsertWithWhereUniqueWithoutFuel_stationsInput = {
    where: fuel_transactionsWhereUniqueInput
    update: XOR<fuel_transactionsUpdateWithoutFuel_stationsInput, fuel_transactionsUncheckedUpdateWithoutFuel_stationsInput>
    create: XOR<fuel_transactionsCreateWithoutFuel_stationsInput, fuel_transactionsUncheckedCreateWithoutFuel_stationsInput>
  }

  export type fuel_transactionsUpdateWithWhereUniqueWithoutFuel_stationsInput = {
    where: fuel_transactionsWhereUniqueInput
    data: XOR<fuel_transactionsUpdateWithoutFuel_stationsInput, fuel_transactionsUncheckedUpdateWithoutFuel_stationsInput>
  }

  export type fuel_transactionsUpdateManyWithWhereWithoutFuel_stationsInput = {
    where: fuel_transactionsScalarWhereInput
    data: XOR<fuel_transactionsUpdateManyMutationInput, fuel_transactionsUncheckedUpdateManyWithoutFuel_stationsInput>
  }

  export type driversCreateWithoutFuel_transactionsInput = {
    employee_id?: string | null
    first_name: string
    last_name: string
    license_number: string
    license_class?: string | null
    license_expiry_date?: Date | string | null
    date_of_birth?: Date | string | null
    hire_date?: Date | string | null
    phone?: string | null
    email?: string | null
    address?: string | null
    emergency_contact_name?: string | null
    emergency_contact_phone?: string | null
    salary?: Decimal | DecimalJsLike | number | string | null
    status?: string | null
    safety_score?: Decimal | DecimalJsLike | number | string | null
    total_miles_driven?: Decimal | DecimalJsLike | number | string | null
    years_experience?: number | null
    created_at?: Date | string | null
    driver_certifications?: driver_certificationsCreateNestedManyWithoutDriversInput
    companies?: companiesCreateNestedOneWithoutDriversInput
    expenses?: expensesCreateNestedManyWithoutDriversInput
    incidents?: incidentsCreateNestedManyWithoutDriversInput
    trips?: tripsCreateNestedManyWithoutDriversInput
    vehicle_assignments?: vehicle_assignmentsCreateNestedManyWithoutDriversInput
    vehicles?: vehiclesCreateNestedManyWithoutDriversInput
  }

  export type driversUncheckedCreateWithoutFuel_transactionsInput = {
    driver_id?: number
    company_id?: number | null
    employee_id?: string | null
    first_name: string
    last_name: string
    license_number: string
    license_class?: string | null
    license_expiry_date?: Date | string | null
    date_of_birth?: Date | string | null
    hire_date?: Date | string | null
    phone?: string | null
    email?: string | null
    address?: string | null
    emergency_contact_name?: string | null
    emergency_contact_phone?: string | null
    salary?: Decimal | DecimalJsLike | number | string | null
    status?: string | null
    safety_score?: Decimal | DecimalJsLike | number | string | null
    total_miles_driven?: Decimal | DecimalJsLike | number | string | null
    years_experience?: number | null
    created_at?: Date | string | null
    driver_certifications?: driver_certificationsUncheckedCreateNestedManyWithoutDriversInput
    expenses?: expensesUncheckedCreateNestedManyWithoutDriversInput
    incidents?: incidentsUncheckedCreateNestedManyWithoutDriversInput
    trips?: tripsUncheckedCreateNestedManyWithoutDriversInput
    vehicle_assignments?: vehicle_assignmentsUncheckedCreateNestedManyWithoutDriversInput
    vehicles?: vehiclesUncheckedCreateNestedManyWithoutDriversInput
  }

  export type driversCreateOrConnectWithoutFuel_transactionsInput = {
    where: driversWhereUniqueInput
    create: XOR<driversCreateWithoutFuel_transactionsInput, driversUncheckedCreateWithoutFuel_transactionsInput>
  }

  export type fuel_stationsCreateWithoutFuel_transactionsInput = {
    station_name?: string | null
    address?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    brand?: string | null
    has_fleet_card?: boolean | null
    avg_price_per_gallon?: Decimal | DecimalJsLike | number | string | null
  }

  export type fuel_stationsUncheckedCreateWithoutFuel_transactionsInput = {
    station_id?: number
    station_name?: string | null
    address?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    brand?: string | null
    has_fleet_card?: boolean | null
    avg_price_per_gallon?: Decimal | DecimalJsLike | number | string | null
  }

  export type fuel_stationsCreateOrConnectWithoutFuel_transactionsInput = {
    where: fuel_stationsWhereUniqueInput
    create: XOR<fuel_stationsCreateWithoutFuel_transactionsInput, fuel_stationsUncheckedCreateWithoutFuel_transactionsInput>
  }

  export type vehiclesCreateWithoutFuel_transactionsInput = {
    vin: string
    license_plate: string
    make: string
    model: string
    year: number
    color?: string | null
    fuel_type: string
    engine_size?: string | null
    transmission?: string | null
    purchase_date?: Date | string | null
    purchase_price?: Decimal | DecimalJsLike | number | string | null
    current_value?: Decimal | DecimalJsLike | number | string | null
    odometer_reading?: Decimal | DecimalJsLike | number | string | null
    fuel_capacity?: Decimal | DecimalJsLike | number | string | null
    insurance_policy_number?: string | null
    insurance_expiry?: Date | string | null
    registration_expiry?: Date | string | null
    status?: string | null
    gps_device_id?: string | null
    notes?: string | null
    created_at?: Date | string | null
    expenses?: expensesCreateNestedManyWithoutVehiclesInput
    gps_tracking?: gps_trackingCreateNestedManyWithoutVehiclesInput
    incidents?: incidentsCreateNestedManyWithoutVehiclesInput
    maintenance_records?: maintenance_recordsCreateNestedManyWithoutVehiclesInput
    safety_inspections?: safety_inspectionsCreateNestedManyWithoutVehiclesInput
    trips?: tripsCreateNestedManyWithoutVehiclesInput
    vehicle_assignments?: vehicle_assignmentsCreateNestedManyWithoutVehiclesInput
    drivers?: driversCreateNestedOneWithoutVehiclesInput
    companies?: companiesCreateNestedOneWithoutVehiclesInput
    departments?: departmentsCreateNestedOneWithoutVehiclesInput
    vehicle_types?: vehicle_typesCreateNestedOneWithoutVehiclesInput
  }

  export type vehiclesUncheckedCreateWithoutFuel_transactionsInput = {
    vehicle_id?: number
    company_id?: number | null
    vehicle_type_id?: number | null
    vin: string
    license_plate: string
    make: string
    model: string
    year: number
    color?: string | null
    fuel_type: string
    engine_size?: string | null
    transmission?: string | null
    purchase_date?: Date | string | null
    purchase_price?: Decimal | DecimalJsLike | number | string | null
    current_value?: Decimal | DecimalJsLike | number | string | null
    odometer_reading?: Decimal | DecimalJsLike | number | string | null
    fuel_capacity?: Decimal | DecimalJsLike | number | string | null
    insurance_policy_number?: string | null
    insurance_expiry?: Date | string | null
    registration_expiry?: Date | string | null
    status?: string | null
    gps_device_id?: string | null
    assigned_driver_id?: number | null
    department_id?: number | null
    notes?: string | null
    created_at?: Date | string | null
    expenses?: expensesUncheckedCreateNestedManyWithoutVehiclesInput
    gps_tracking?: gps_trackingUncheckedCreateNestedManyWithoutVehiclesInput
    incidents?: incidentsUncheckedCreateNestedManyWithoutVehiclesInput
    maintenance_records?: maintenance_recordsUncheckedCreateNestedManyWithoutVehiclesInput
    safety_inspections?: safety_inspectionsUncheckedCreateNestedManyWithoutVehiclesInput
    trips?: tripsUncheckedCreateNestedManyWithoutVehiclesInput
    vehicle_assignments?: vehicle_assignmentsUncheckedCreateNestedManyWithoutVehiclesInput
  }

  export type vehiclesCreateOrConnectWithoutFuel_transactionsInput = {
    where: vehiclesWhereUniqueInput
    create: XOR<vehiclesCreateWithoutFuel_transactionsInput, vehiclesUncheckedCreateWithoutFuel_transactionsInput>
  }

  export type driversUpsertWithoutFuel_transactionsInput = {
    update: XOR<driversUpdateWithoutFuel_transactionsInput, driversUncheckedUpdateWithoutFuel_transactionsInput>
    create: XOR<driversCreateWithoutFuel_transactionsInput, driversUncheckedCreateWithoutFuel_transactionsInput>
    where?: driversWhereInput
  }

  export type driversUpdateToOneWithWhereWithoutFuel_transactionsInput = {
    where?: driversWhereInput
    data: XOR<driversUpdateWithoutFuel_transactionsInput, driversUncheckedUpdateWithoutFuel_transactionsInput>
  }

  export type driversUpdateWithoutFuel_transactionsInput = {
    employee_id?: NullableStringFieldUpdateOperationsInput | string | null
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: StringFieldUpdateOperationsInput | string
    license_number?: StringFieldUpdateOperationsInput | string
    license_class?: NullableStringFieldUpdateOperationsInput | string | null
    license_expiry_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    date_of_birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hire_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    emergency_contact_name?: NullableStringFieldUpdateOperationsInput | string | null
    emergency_contact_phone?: NullableStringFieldUpdateOperationsInput | string | null
    salary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    safety_score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    total_miles_driven?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    years_experience?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    driver_certifications?: driver_certificationsUpdateManyWithoutDriversNestedInput
    companies?: companiesUpdateOneWithoutDriversNestedInput
    expenses?: expensesUpdateManyWithoutDriversNestedInput
    incidents?: incidentsUpdateManyWithoutDriversNestedInput
    trips?: tripsUpdateManyWithoutDriversNestedInput
    vehicle_assignments?: vehicle_assignmentsUpdateManyWithoutDriversNestedInput
    vehicles?: vehiclesUpdateManyWithoutDriversNestedInput
  }

  export type driversUncheckedUpdateWithoutFuel_transactionsInput = {
    driver_id?: IntFieldUpdateOperationsInput | number
    company_id?: NullableIntFieldUpdateOperationsInput | number | null
    employee_id?: NullableStringFieldUpdateOperationsInput | string | null
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: StringFieldUpdateOperationsInput | string
    license_number?: StringFieldUpdateOperationsInput | string
    license_class?: NullableStringFieldUpdateOperationsInput | string | null
    license_expiry_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    date_of_birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hire_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    emergency_contact_name?: NullableStringFieldUpdateOperationsInput | string | null
    emergency_contact_phone?: NullableStringFieldUpdateOperationsInput | string | null
    salary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    safety_score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    total_miles_driven?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    years_experience?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    driver_certifications?: driver_certificationsUncheckedUpdateManyWithoutDriversNestedInput
    expenses?: expensesUncheckedUpdateManyWithoutDriversNestedInput
    incidents?: incidentsUncheckedUpdateManyWithoutDriversNestedInput
    trips?: tripsUncheckedUpdateManyWithoutDriversNestedInput
    vehicle_assignments?: vehicle_assignmentsUncheckedUpdateManyWithoutDriversNestedInput
    vehicles?: vehiclesUncheckedUpdateManyWithoutDriversNestedInput
  }

  export type fuel_stationsUpsertWithoutFuel_transactionsInput = {
    update: XOR<fuel_stationsUpdateWithoutFuel_transactionsInput, fuel_stationsUncheckedUpdateWithoutFuel_transactionsInput>
    create: XOR<fuel_stationsCreateWithoutFuel_transactionsInput, fuel_stationsUncheckedCreateWithoutFuel_transactionsInput>
    where?: fuel_stationsWhereInput
  }

  export type fuel_stationsUpdateToOneWithWhereWithoutFuel_transactionsInput = {
    where?: fuel_stationsWhereInput
    data: XOR<fuel_stationsUpdateWithoutFuel_transactionsInput, fuel_stationsUncheckedUpdateWithoutFuel_transactionsInput>
  }

  export type fuel_stationsUpdateWithoutFuel_transactionsInput = {
    station_name?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    brand?: NullableStringFieldUpdateOperationsInput | string | null
    has_fleet_card?: NullableBoolFieldUpdateOperationsInput | boolean | null
    avg_price_per_gallon?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type fuel_stationsUncheckedUpdateWithoutFuel_transactionsInput = {
    station_id?: IntFieldUpdateOperationsInput | number
    station_name?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    brand?: NullableStringFieldUpdateOperationsInput | string | null
    has_fleet_card?: NullableBoolFieldUpdateOperationsInput | boolean | null
    avg_price_per_gallon?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type vehiclesUpsertWithoutFuel_transactionsInput = {
    update: XOR<vehiclesUpdateWithoutFuel_transactionsInput, vehiclesUncheckedUpdateWithoutFuel_transactionsInput>
    create: XOR<vehiclesCreateWithoutFuel_transactionsInput, vehiclesUncheckedCreateWithoutFuel_transactionsInput>
    where?: vehiclesWhereInput
  }

  export type vehiclesUpdateToOneWithWhereWithoutFuel_transactionsInput = {
    where?: vehiclesWhereInput
    data: XOR<vehiclesUpdateWithoutFuel_transactionsInput, vehiclesUncheckedUpdateWithoutFuel_transactionsInput>
  }

  export type vehiclesUpdateWithoutFuel_transactionsInput = {
    vin?: StringFieldUpdateOperationsInput | string
    license_plate?: StringFieldUpdateOperationsInput | string
    make?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    color?: NullableStringFieldUpdateOperationsInput | string | null
    fuel_type?: StringFieldUpdateOperationsInput | string
    engine_size?: NullableStringFieldUpdateOperationsInput | string | null
    transmission?: NullableStringFieldUpdateOperationsInput | string | null
    purchase_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchase_price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    current_value?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    odometer_reading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fuel_capacity?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    insurance_policy_number?: NullableStringFieldUpdateOperationsInput | string | null
    insurance_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    registration_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    gps_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expenses?: expensesUpdateManyWithoutVehiclesNestedInput
    gps_tracking?: gps_trackingUpdateManyWithoutVehiclesNestedInput
    incidents?: incidentsUpdateManyWithoutVehiclesNestedInput
    maintenance_records?: maintenance_recordsUpdateManyWithoutVehiclesNestedInput
    safety_inspections?: safety_inspectionsUpdateManyWithoutVehiclesNestedInput
    trips?: tripsUpdateManyWithoutVehiclesNestedInput
    vehicle_assignments?: vehicle_assignmentsUpdateManyWithoutVehiclesNestedInput
    drivers?: driversUpdateOneWithoutVehiclesNestedInput
    companies?: companiesUpdateOneWithoutVehiclesNestedInput
    departments?: departmentsUpdateOneWithoutVehiclesNestedInput
    vehicle_types?: vehicle_typesUpdateOneWithoutVehiclesNestedInput
  }

  export type vehiclesUncheckedUpdateWithoutFuel_transactionsInput = {
    vehicle_id?: IntFieldUpdateOperationsInput | number
    company_id?: NullableIntFieldUpdateOperationsInput | number | null
    vehicle_type_id?: NullableIntFieldUpdateOperationsInput | number | null
    vin?: StringFieldUpdateOperationsInput | string
    license_plate?: StringFieldUpdateOperationsInput | string
    make?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    color?: NullableStringFieldUpdateOperationsInput | string | null
    fuel_type?: StringFieldUpdateOperationsInput | string
    engine_size?: NullableStringFieldUpdateOperationsInput | string | null
    transmission?: NullableStringFieldUpdateOperationsInput | string | null
    purchase_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchase_price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    current_value?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    odometer_reading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fuel_capacity?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    insurance_policy_number?: NullableStringFieldUpdateOperationsInput | string | null
    insurance_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    registration_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    gps_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    assigned_driver_id?: NullableIntFieldUpdateOperationsInput | number | null
    department_id?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expenses?: expensesUncheckedUpdateManyWithoutVehiclesNestedInput
    gps_tracking?: gps_trackingUncheckedUpdateManyWithoutVehiclesNestedInput
    incidents?: incidentsUncheckedUpdateManyWithoutVehiclesNestedInput
    maintenance_records?: maintenance_recordsUncheckedUpdateManyWithoutVehiclesNestedInput
    safety_inspections?: safety_inspectionsUncheckedUpdateManyWithoutVehiclesNestedInput
    trips?: tripsUncheckedUpdateManyWithoutVehiclesNestedInput
    vehicle_assignments?: vehicle_assignmentsUncheckedUpdateManyWithoutVehiclesNestedInput
  }

  export type vehiclesCreateWithoutGps_trackingInput = {
    vin: string
    license_plate: string
    make: string
    model: string
    year: number
    color?: string | null
    fuel_type: string
    engine_size?: string | null
    transmission?: string | null
    purchase_date?: Date | string | null
    purchase_price?: Decimal | DecimalJsLike | number | string | null
    current_value?: Decimal | DecimalJsLike | number | string | null
    odometer_reading?: Decimal | DecimalJsLike | number | string | null
    fuel_capacity?: Decimal | DecimalJsLike | number | string | null
    insurance_policy_number?: string | null
    insurance_expiry?: Date | string | null
    registration_expiry?: Date | string | null
    status?: string | null
    gps_device_id?: string | null
    notes?: string | null
    created_at?: Date | string | null
    expenses?: expensesCreateNestedManyWithoutVehiclesInput
    fuel_transactions?: fuel_transactionsCreateNestedManyWithoutVehiclesInput
    incidents?: incidentsCreateNestedManyWithoutVehiclesInput
    maintenance_records?: maintenance_recordsCreateNestedManyWithoutVehiclesInput
    safety_inspections?: safety_inspectionsCreateNestedManyWithoutVehiclesInput
    trips?: tripsCreateNestedManyWithoutVehiclesInput
    vehicle_assignments?: vehicle_assignmentsCreateNestedManyWithoutVehiclesInput
    drivers?: driversCreateNestedOneWithoutVehiclesInput
    companies?: companiesCreateNestedOneWithoutVehiclesInput
    departments?: departmentsCreateNestedOneWithoutVehiclesInput
    vehicle_types?: vehicle_typesCreateNestedOneWithoutVehiclesInput
  }

  export type vehiclesUncheckedCreateWithoutGps_trackingInput = {
    vehicle_id?: number
    company_id?: number | null
    vehicle_type_id?: number | null
    vin: string
    license_plate: string
    make: string
    model: string
    year: number
    color?: string | null
    fuel_type: string
    engine_size?: string | null
    transmission?: string | null
    purchase_date?: Date | string | null
    purchase_price?: Decimal | DecimalJsLike | number | string | null
    current_value?: Decimal | DecimalJsLike | number | string | null
    odometer_reading?: Decimal | DecimalJsLike | number | string | null
    fuel_capacity?: Decimal | DecimalJsLike | number | string | null
    insurance_policy_number?: string | null
    insurance_expiry?: Date | string | null
    registration_expiry?: Date | string | null
    status?: string | null
    gps_device_id?: string | null
    assigned_driver_id?: number | null
    department_id?: number | null
    notes?: string | null
    created_at?: Date | string | null
    expenses?: expensesUncheckedCreateNestedManyWithoutVehiclesInput
    fuel_transactions?: fuel_transactionsUncheckedCreateNestedManyWithoutVehiclesInput
    incidents?: incidentsUncheckedCreateNestedManyWithoutVehiclesInput
    maintenance_records?: maintenance_recordsUncheckedCreateNestedManyWithoutVehiclesInput
    safety_inspections?: safety_inspectionsUncheckedCreateNestedManyWithoutVehiclesInput
    trips?: tripsUncheckedCreateNestedManyWithoutVehiclesInput
    vehicle_assignments?: vehicle_assignmentsUncheckedCreateNestedManyWithoutVehiclesInput
  }

  export type vehiclesCreateOrConnectWithoutGps_trackingInput = {
    where: vehiclesWhereUniqueInput
    create: XOR<vehiclesCreateWithoutGps_trackingInput, vehiclesUncheckedCreateWithoutGps_trackingInput>
  }

  export type vehiclesUpsertWithoutGps_trackingInput = {
    update: XOR<vehiclesUpdateWithoutGps_trackingInput, vehiclesUncheckedUpdateWithoutGps_trackingInput>
    create: XOR<vehiclesCreateWithoutGps_trackingInput, vehiclesUncheckedCreateWithoutGps_trackingInput>
    where?: vehiclesWhereInput
  }

  export type vehiclesUpdateToOneWithWhereWithoutGps_trackingInput = {
    where?: vehiclesWhereInput
    data: XOR<vehiclesUpdateWithoutGps_trackingInput, vehiclesUncheckedUpdateWithoutGps_trackingInput>
  }

  export type vehiclesUpdateWithoutGps_trackingInput = {
    vin?: StringFieldUpdateOperationsInput | string
    license_plate?: StringFieldUpdateOperationsInput | string
    make?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    color?: NullableStringFieldUpdateOperationsInput | string | null
    fuel_type?: StringFieldUpdateOperationsInput | string
    engine_size?: NullableStringFieldUpdateOperationsInput | string | null
    transmission?: NullableStringFieldUpdateOperationsInput | string | null
    purchase_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchase_price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    current_value?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    odometer_reading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fuel_capacity?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    insurance_policy_number?: NullableStringFieldUpdateOperationsInput | string | null
    insurance_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    registration_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    gps_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expenses?: expensesUpdateManyWithoutVehiclesNestedInput
    fuel_transactions?: fuel_transactionsUpdateManyWithoutVehiclesNestedInput
    incidents?: incidentsUpdateManyWithoutVehiclesNestedInput
    maintenance_records?: maintenance_recordsUpdateManyWithoutVehiclesNestedInput
    safety_inspections?: safety_inspectionsUpdateManyWithoutVehiclesNestedInput
    trips?: tripsUpdateManyWithoutVehiclesNestedInput
    vehicle_assignments?: vehicle_assignmentsUpdateManyWithoutVehiclesNestedInput
    drivers?: driversUpdateOneWithoutVehiclesNestedInput
    companies?: companiesUpdateOneWithoutVehiclesNestedInput
    departments?: departmentsUpdateOneWithoutVehiclesNestedInput
    vehicle_types?: vehicle_typesUpdateOneWithoutVehiclesNestedInput
  }

  export type vehiclesUncheckedUpdateWithoutGps_trackingInput = {
    vehicle_id?: IntFieldUpdateOperationsInput | number
    company_id?: NullableIntFieldUpdateOperationsInput | number | null
    vehicle_type_id?: NullableIntFieldUpdateOperationsInput | number | null
    vin?: StringFieldUpdateOperationsInput | string
    license_plate?: StringFieldUpdateOperationsInput | string
    make?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    color?: NullableStringFieldUpdateOperationsInput | string | null
    fuel_type?: StringFieldUpdateOperationsInput | string
    engine_size?: NullableStringFieldUpdateOperationsInput | string | null
    transmission?: NullableStringFieldUpdateOperationsInput | string | null
    purchase_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchase_price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    current_value?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    odometer_reading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fuel_capacity?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    insurance_policy_number?: NullableStringFieldUpdateOperationsInput | string | null
    insurance_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    registration_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    gps_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    assigned_driver_id?: NullableIntFieldUpdateOperationsInput | number | null
    department_id?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expenses?: expensesUncheckedUpdateManyWithoutVehiclesNestedInput
    fuel_transactions?: fuel_transactionsUncheckedUpdateManyWithoutVehiclesNestedInput
    incidents?: incidentsUncheckedUpdateManyWithoutVehiclesNestedInput
    maintenance_records?: maintenance_recordsUncheckedUpdateManyWithoutVehiclesNestedInput
    safety_inspections?: safety_inspectionsUncheckedUpdateManyWithoutVehiclesNestedInput
    trips?: tripsUncheckedUpdateManyWithoutVehiclesNestedInput
    vehicle_assignments?: vehicle_assignmentsUncheckedUpdateManyWithoutVehiclesNestedInput
  }

  export type driversCreateWithoutIncidentsInput = {
    employee_id?: string | null
    first_name: string
    last_name: string
    license_number: string
    license_class?: string | null
    license_expiry_date?: Date | string | null
    date_of_birth?: Date | string | null
    hire_date?: Date | string | null
    phone?: string | null
    email?: string | null
    address?: string | null
    emergency_contact_name?: string | null
    emergency_contact_phone?: string | null
    salary?: Decimal | DecimalJsLike | number | string | null
    status?: string | null
    safety_score?: Decimal | DecimalJsLike | number | string | null
    total_miles_driven?: Decimal | DecimalJsLike | number | string | null
    years_experience?: number | null
    created_at?: Date | string | null
    driver_certifications?: driver_certificationsCreateNestedManyWithoutDriversInput
    companies?: companiesCreateNestedOneWithoutDriversInput
    expenses?: expensesCreateNestedManyWithoutDriversInput
    fuel_transactions?: fuel_transactionsCreateNestedManyWithoutDriversInput
    trips?: tripsCreateNestedManyWithoutDriversInput
    vehicle_assignments?: vehicle_assignmentsCreateNestedManyWithoutDriversInput
    vehicles?: vehiclesCreateNestedManyWithoutDriversInput
  }

  export type driversUncheckedCreateWithoutIncidentsInput = {
    driver_id?: number
    company_id?: number | null
    employee_id?: string | null
    first_name: string
    last_name: string
    license_number: string
    license_class?: string | null
    license_expiry_date?: Date | string | null
    date_of_birth?: Date | string | null
    hire_date?: Date | string | null
    phone?: string | null
    email?: string | null
    address?: string | null
    emergency_contact_name?: string | null
    emergency_contact_phone?: string | null
    salary?: Decimal | DecimalJsLike | number | string | null
    status?: string | null
    safety_score?: Decimal | DecimalJsLike | number | string | null
    total_miles_driven?: Decimal | DecimalJsLike | number | string | null
    years_experience?: number | null
    created_at?: Date | string | null
    driver_certifications?: driver_certificationsUncheckedCreateNestedManyWithoutDriversInput
    expenses?: expensesUncheckedCreateNestedManyWithoutDriversInput
    fuel_transactions?: fuel_transactionsUncheckedCreateNestedManyWithoutDriversInput
    trips?: tripsUncheckedCreateNestedManyWithoutDriversInput
    vehicle_assignments?: vehicle_assignmentsUncheckedCreateNestedManyWithoutDriversInput
    vehicles?: vehiclesUncheckedCreateNestedManyWithoutDriversInput
  }

  export type driversCreateOrConnectWithoutIncidentsInput = {
    where: driversWhereUniqueInput
    create: XOR<driversCreateWithoutIncidentsInput, driversUncheckedCreateWithoutIncidentsInput>
  }

  export type vehiclesCreateWithoutIncidentsInput = {
    vin: string
    license_plate: string
    make: string
    model: string
    year: number
    color?: string | null
    fuel_type: string
    engine_size?: string | null
    transmission?: string | null
    purchase_date?: Date | string | null
    purchase_price?: Decimal | DecimalJsLike | number | string | null
    current_value?: Decimal | DecimalJsLike | number | string | null
    odometer_reading?: Decimal | DecimalJsLike | number | string | null
    fuel_capacity?: Decimal | DecimalJsLike | number | string | null
    insurance_policy_number?: string | null
    insurance_expiry?: Date | string | null
    registration_expiry?: Date | string | null
    status?: string | null
    gps_device_id?: string | null
    notes?: string | null
    created_at?: Date | string | null
    expenses?: expensesCreateNestedManyWithoutVehiclesInput
    fuel_transactions?: fuel_transactionsCreateNestedManyWithoutVehiclesInput
    gps_tracking?: gps_trackingCreateNestedManyWithoutVehiclesInput
    maintenance_records?: maintenance_recordsCreateNestedManyWithoutVehiclesInput
    safety_inspections?: safety_inspectionsCreateNestedManyWithoutVehiclesInput
    trips?: tripsCreateNestedManyWithoutVehiclesInput
    vehicle_assignments?: vehicle_assignmentsCreateNestedManyWithoutVehiclesInput
    drivers?: driversCreateNestedOneWithoutVehiclesInput
    companies?: companiesCreateNestedOneWithoutVehiclesInput
    departments?: departmentsCreateNestedOneWithoutVehiclesInput
    vehicle_types?: vehicle_typesCreateNestedOneWithoutVehiclesInput
  }

  export type vehiclesUncheckedCreateWithoutIncidentsInput = {
    vehicle_id?: number
    company_id?: number | null
    vehicle_type_id?: number | null
    vin: string
    license_plate: string
    make: string
    model: string
    year: number
    color?: string | null
    fuel_type: string
    engine_size?: string | null
    transmission?: string | null
    purchase_date?: Date | string | null
    purchase_price?: Decimal | DecimalJsLike | number | string | null
    current_value?: Decimal | DecimalJsLike | number | string | null
    odometer_reading?: Decimal | DecimalJsLike | number | string | null
    fuel_capacity?: Decimal | DecimalJsLike | number | string | null
    insurance_policy_number?: string | null
    insurance_expiry?: Date | string | null
    registration_expiry?: Date | string | null
    status?: string | null
    gps_device_id?: string | null
    assigned_driver_id?: number | null
    department_id?: number | null
    notes?: string | null
    created_at?: Date | string | null
    expenses?: expensesUncheckedCreateNestedManyWithoutVehiclesInput
    fuel_transactions?: fuel_transactionsUncheckedCreateNestedManyWithoutVehiclesInput
    gps_tracking?: gps_trackingUncheckedCreateNestedManyWithoutVehiclesInput
    maintenance_records?: maintenance_recordsUncheckedCreateNestedManyWithoutVehiclesInput
    safety_inspections?: safety_inspectionsUncheckedCreateNestedManyWithoutVehiclesInput
    trips?: tripsUncheckedCreateNestedManyWithoutVehiclesInput
    vehicle_assignments?: vehicle_assignmentsUncheckedCreateNestedManyWithoutVehiclesInput
  }

  export type vehiclesCreateOrConnectWithoutIncidentsInput = {
    where: vehiclesWhereUniqueInput
    create: XOR<vehiclesCreateWithoutIncidentsInput, vehiclesUncheckedCreateWithoutIncidentsInput>
  }

  export type driversUpsertWithoutIncidentsInput = {
    update: XOR<driversUpdateWithoutIncidentsInput, driversUncheckedUpdateWithoutIncidentsInput>
    create: XOR<driversCreateWithoutIncidentsInput, driversUncheckedCreateWithoutIncidentsInput>
    where?: driversWhereInput
  }

  export type driversUpdateToOneWithWhereWithoutIncidentsInput = {
    where?: driversWhereInput
    data: XOR<driversUpdateWithoutIncidentsInput, driversUncheckedUpdateWithoutIncidentsInput>
  }

  export type driversUpdateWithoutIncidentsInput = {
    employee_id?: NullableStringFieldUpdateOperationsInput | string | null
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: StringFieldUpdateOperationsInput | string
    license_number?: StringFieldUpdateOperationsInput | string
    license_class?: NullableStringFieldUpdateOperationsInput | string | null
    license_expiry_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    date_of_birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hire_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    emergency_contact_name?: NullableStringFieldUpdateOperationsInput | string | null
    emergency_contact_phone?: NullableStringFieldUpdateOperationsInput | string | null
    salary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    safety_score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    total_miles_driven?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    years_experience?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    driver_certifications?: driver_certificationsUpdateManyWithoutDriversNestedInput
    companies?: companiesUpdateOneWithoutDriversNestedInput
    expenses?: expensesUpdateManyWithoutDriversNestedInput
    fuel_transactions?: fuel_transactionsUpdateManyWithoutDriversNestedInput
    trips?: tripsUpdateManyWithoutDriversNestedInput
    vehicle_assignments?: vehicle_assignmentsUpdateManyWithoutDriversNestedInput
    vehicles?: vehiclesUpdateManyWithoutDriversNestedInput
  }

  export type driversUncheckedUpdateWithoutIncidentsInput = {
    driver_id?: IntFieldUpdateOperationsInput | number
    company_id?: NullableIntFieldUpdateOperationsInput | number | null
    employee_id?: NullableStringFieldUpdateOperationsInput | string | null
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: StringFieldUpdateOperationsInput | string
    license_number?: StringFieldUpdateOperationsInput | string
    license_class?: NullableStringFieldUpdateOperationsInput | string | null
    license_expiry_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    date_of_birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hire_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    emergency_contact_name?: NullableStringFieldUpdateOperationsInput | string | null
    emergency_contact_phone?: NullableStringFieldUpdateOperationsInput | string | null
    salary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    safety_score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    total_miles_driven?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    years_experience?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    driver_certifications?: driver_certificationsUncheckedUpdateManyWithoutDriversNestedInput
    expenses?: expensesUncheckedUpdateManyWithoutDriversNestedInput
    fuel_transactions?: fuel_transactionsUncheckedUpdateManyWithoutDriversNestedInput
    trips?: tripsUncheckedUpdateManyWithoutDriversNestedInput
    vehicle_assignments?: vehicle_assignmentsUncheckedUpdateManyWithoutDriversNestedInput
    vehicles?: vehiclesUncheckedUpdateManyWithoutDriversNestedInput
  }

  export type vehiclesUpsertWithoutIncidentsInput = {
    update: XOR<vehiclesUpdateWithoutIncidentsInput, vehiclesUncheckedUpdateWithoutIncidentsInput>
    create: XOR<vehiclesCreateWithoutIncidentsInput, vehiclesUncheckedCreateWithoutIncidentsInput>
    where?: vehiclesWhereInput
  }

  export type vehiclesUpdateToOneWithWhereWithoutIncidentsInput = {
    where?: vehiclesWhereInput
    data: XOR<vehiclesUpdateWithoutIncidentsInput, vehiclesUncheckedUpdateWithoutIncidentsInput>
  }

  export type vehiclesUpdateWithoutIncidentsInput = {
    vin?: StringFieldUpdateOperationsInput | string
    license_plate?: StringFieldUpdateOperationsInput | string
    make?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    color?: NullableStringFieldUpdateOperationsInput | string | null
    fuel_type?: StringFieldUpdateOperationsInput | string
    engine_size?: NullableStringFieldUpdateOperationsInput | string | null
    transmission?: NullableStringFieldUpdateOperationsInput | string | null
    purchase_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchase_price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    current_value?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    odometer_reading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fuel_capacity?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    insurance_policy_number?: NullableStringFieldUpdateOperationsInput | string | null
    insurance_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    registration_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    gps_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expenses?: expensesUpdateManyWithoutVehiclesNestedInput
    fuel_transactions?: fuel_transactionsUpdateManyWithoutVehiclesNestedInput
    gps_tracking?: gps_trackingUpdateManyWithoutVehiclesNestedInput
    maintenance_records?: maintenance_recordsUpdateManyWithoutVehiclesNestedInput
    safety_inspections?: safety_inspectionsUpdateManyWithoutVehiclesNestedInput
    trips?: tripsUpdateManyWithoutVehiclesNestedInput
    vehicle_assignments?: vehicle_assignmentsUpdateManyWithoutVehiclesNestedInput
    drivers?: driversUpdateOneWithoutVehiclesNestedInput
    companies?: companiesUpdateOneWithoutVehiclesNestedInput
    departments?: departmentsUpdateOneWithoutVehiclesNestedInput
    vehicle_types?: vehicle_typesUpdateOneWithoutVehiclesNestedInput
  }

  export type vehiclesUncheckedUpdateWithoutIncidentsInput = {
    vehicle_id?: IntFieldUpdateOperationsInput | number
    company_id?: NullableIntFieldUpdateOperationsInput | number | null
    vehicle_type_id?: NullableIntFieldUpdateOperationsInput | number | null
    vin?: StringFieldUpdateOperationsInput | string
    license_plate?: StringFieldUpdateOperationsInput | string
    make?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    color?: NullableStringFieldUpdateOperationsInput | string | null
    fuel_type?: StringFieldUpdateOperationsInput | string
    engine_size?: NullableStringFieldUpdateOperationsInput | string | null
    transmission?: NullableStringFieldUpdateOperationsInput | string | null
    purchase_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchase_price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    current_value?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    odometer_reading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fuel_capacity?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    insurance_policy_number?: NullableStringFieldUpdateOperationsInput | string | null
    insurance_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    registration_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    gps_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    assigned_driver_id?: NullableIntFieldUpdateOperationsInput | number | null
    department_id?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expenses?: expensesUncheckedUpdateManyWithoutVehiclesNestedInput
    fuel_transactions?: fuel_transactionsUncheckedUpdateManyWithoutVehiclesNestedInput
    gps_tracking?: gps_trackingUncheckedUpdateManyWithoutVehiclesNestedInput
    maintenance_records?: maintenance_recordsUncheckedUpdateManyWithoutVehiclesNestedInput
    safety_inspections?: safety_inspectionsUncheckedUpdateManyWithoutVehiclesNestedInput
    trips?: tripsUncheckedUpdateManyWithoutVehiclesNestedInput
    vehicle_assignments?: vehicle_assignmentsUncheckedUpdateManyWithoutVehiclesNestedInput
  }

  export type maintenance_typesCreateWithoutMaintenance_recordsInput = {
    type_name: string
    description?: string | null
    recommended_interval_miles?: number | null
    recommended_interval_months?: number | null
    estimated_cost?: Decimal | DecimalJsLike | number | string | null
  }

  export type maintenance_typesUncheckedCreateWithoutMaintenance_recordsInput = {
    maintenance_type_id?: number
    type_name: string
    description?: string | null
    recommended_interval_miles?: number | null
    recommended_interval_months?: number | null
    estimated_cost?: Decimal | DecimalJsLike | number | string | null
  }

  export type maintenance_typesCreateOrConnectWithoutMaintenance_recordsInput = {
    where: maintenance_typesWhereUniqueInput
    create: XOR<maintenance_typesCreateWithoutMaintenance_recordsInput, maintenance_typesUncheckedCreateWithoutMaintenance_recordsInput>
  }

  export type service_providersCreateWithoutMaintenance_recordsInput = {
    provider_name: string
    service_type: string
    contact_person?: string | null
    phone?: string | null
    email?: string | null
    address?: string | null
    hourly_rate?: Decimal | DecimalJsLike | number | string | null
    rating?: Decimal | DecimalJsLike | number | string | null
    is_preferred?: boolean | null
    companies?: companiesCreateNestedOneWithoutService_providersInput
  }

  export type service_providersUncheckedCreateWithoutMaintenance_recordsInput = {
    provider_id?: number
    company_id?: number | null
    provider_name: string
    service_type: string
    contact_person?: string | null
    phone?: string | null
    email?: string | null
    address?: string | null
    hourly_rate?: Decimal | DecimalJsLike | number | string | null
    rating?: Decimal | DecimalJsLike | number | string | null
    is_preferred?: boolean | null
  }

  export type service_providersCreateOrConnectWithoutMaintenance_recordsInput = {
    where: service_providersWhereUniqueInput
    create: XOR<service_providersCreateWithoutMaintenance_recordsInput, service_providersUncheckedCreateWithoutMaintenance_recordsInput>
  }

  export type vehiclesCreateWithoutMaintenance_recordsInput = {
    vin: string
    license_plate: string
    make: string
    model: string
    year: number
    color?: string | null
    fuel_type: string
    engine_size?: string | null
    transmission?: string | null
    purchase_date?: Date | string | null
    purchase_price?: Decimal | DecimalJsLike | number | string | null
    current_value?: Decimal | DecimalJsLike | number | string | null
    odometer_reading?: Decimal | DecimalJsLike | number | string | null
    fuel_capacity?: Decimal | DecimalJsLike | number | string | null
    insurance_policy_number?: string | null
    insurance_expiry?: Date | string | null
    registration_expiry?: Date | string | null
    status?: string | null
    gps_device_id?: string | null
    notes?: string | null
    created_at?: Date | string | null
    expenses?: expensesCreateNestedManyWithoutVehiclesInput
    fuel_transactions?: fuel_transactionsCreateNestedManyWithoutVehiclesInput
    gps_tracking?: gps_trackingCreateNestedManyWithoutVehiclesInput
    incidents?: incidentsCreateNestedManyWithoutVehiclesInput
    safety_inspections?: safety_inspectionsCreateNestedManyWithoutVehiclesInput
    trips?: tripsCreateNestedManyWithoutVehiclesInput
    vehicle_assignments?: vehicle_assignmentsCreateNestedManyWithoutVehiclesInput
    drivers?: driversCreateNestedOneWithoutVehiclesInput
    companies?: companiesCreateNestedOneWithoutVehiclesInput
    departments?: departmentsCreateNestedOneWithoutVehiclesInput
    vehicle_types?: vehicle_typesCreateNestedOneWithoutVehiclesInput
  }

  export type vehiclesUncheckedCreateWithoutMaintenance_recordsInput = {
    vehicle_id?: number
    company_id?: number | null
    vehicle_type_id?: number | null
    vin: string
    license_plate: string
    make: string
    model: string
    year: number
    color?: string | null
    fuel_type: string
    engine_size?: string | null
    transmission?: string | null
    purchase_date?: Date | string | null
    purchase_price?: Decimal | DecimalJsLike | number | string | null
    current_value?: Decimal | DecimalJsLike | number | string | null
    odometer_reading?: Decimal | DecimalJsLike | number | string | null
    fuel_capacity?: Decimal | DecimalJsLike | number | string | null
    insurance_policy_number?: string | null
    insurance_expiry?: Date | string | null
    registration_expiry?: Date | string | null
    status?: string | null
    gps_device_id?: string | null
    assigned_driver_id?: number | null
    department_id?: number | null
    notes?: string | null
    created_at?: Date | string | null
    expenses?: expensesUncheckedCreateNestedManyWithoutVehiclesInput
    fuel_transactions?: fuel_transactionsUncheckedCreateNestedManyWithoutVehiclesInput
    gps_tracking?: gps_trackingUncheckedCreateNestedManyWithoutVehiclesInput
    incidents?: incidentsUncheckedCreateNestedManyWithoutVehiclesInput
    safety_inspections?: safety_inspectionsUncheckedCreateNestedManyWithoutVehiclesInput
    trips?: tripsUncheckedCreateNestedManyWithoutVehiclesInput
    vehicle_assignments?: vehicle_assignmentsUncheckedCreateNestedManyWithoutVehiclesInput
  }

  export type vehiclesCreateOrConnectWithoutMaintenance_recordsInput = {
    where: vehiclesWhereUniqueInput
    create: XOR<vehiclesCreateWithoutMaintenance_recordsInput, vehiclesUncheckedCreateWithoutMaintenance_recordsInput>
  }

  export type maintenance_typesUpsertWithoutMaintenance_recordsInput = {
    update: XOR<maintenance_typesUpdateWithoutMaintenance_recordsInput, maintenance_typesUncheckedUpdateWithoutMaintenance_recordsInput>
    create: XOR<maintenance_typesCreateWithoutMaintenance_recordsInput, maintenance_typesUncheckedCreateWithoutMaintenance_recordsInput>
    where?: maintenance_typesWhereInput
  }

  export type maintenance_typesUpdateToOneWithWhereWithoutMaintenance_recordsInput = {
    where?: maintenance_typesWhereInput
    data: XOR<maintenance_typesUpdateWithoutMaintenance_recordsInput, maintenance_typesUncheckedUpdateWithoutMaintenance_recordsInput>
  }

  export type maintenance_typesUpdateWithoutMaintenance_recordsInput = {
    type_name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    recommended_interval_miles?: NullableIntFieldUpdateOperationsInput | number | null
    recommended_interval_months?: NullableIntFieldUpdateOperationsInput | number | null
    estimated_cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type maintenance_typesUncheckedUpdateWithoutMaintenance_recordsInput = {
    maintenance_type_id?: IntFieldUpdateOperationsInput | number
    type_name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    recommended_interval_miles?: NullableIntFieldUpdateOperationsInput | number | null
    recommended_interval_months?: NullableIntFieldUpdateOperationsInput | number | null
    estimated_cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type service_providersUpsertWithoutMaintenance_recordsInput = {
    update: XOR<service_providersUpdateWithoutMaintenance_recordsInput, service_providersUncheckedUpdateWithoutMaintenance_recordsInput>
    create: XOR<service_providersCreateWithoutMaintenance_recordsInput, service_providersUncheckedCreateWithoutMaintenance_recordsInput>
    where?: service_providersWhereInput
  }

  export type service_providersUpdateToOneWithWhereWithoutMaintenance_recordsInput = {
    where?: service_providersWhereInput
    data: XOR<service_providersUpdateWithoutMaintenance_recordsInput, service_providersUncheckedUpdateWithoutMaintenance_recordsInput>
  }

  export type service_providersUpdateWithoutMaintenance_recordsInput = {
    provider_name?: StringFieldUpdateOperationsInput | string
    service_type?: StringFieldUpdateOperationsInput | string
    contact_person?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    hourly_rate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    is_preferred?: NullableBoolFieldUpdateOperationsInput | boolean | null
    companies?: companiesUpdateOneWithoutService_providersNestedInput
  }

  export type service_providersUncheckedUpdateWithoutMaintenance_recordsInput = {
    provider_id?: IntFieldUpdateOperationsInput | number
    company_id?: NullableIntFieldUpdateOperationsInput | number | null
    provider_name?: StringFieldUpdateOperationsInput | string
    service_type?: StringFieldUpdateOperationsInput | string
    contact_person?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    hourly_rate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    is_preferred?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type vehiclesUpsertWithoutMaintenance_recordsInput = {
    update: XOR<vehiclesUpdateWithoutMaintenance_recordsInput, vehiclesUncheckedUpdateWithoutMaintenance_recordsInput>
    create: XOR<vehiclesCreateWithoutMaintenance_recordsInput, vehiclesUncheckedCreateWithoutMaintenance_recordsInput>
    where?: vehiclesWhereInput
  }

  export type vehiclesUpdateToOneWithWhereWithoutMaintenance_recordsInput = {
    where?: vehiclesWhereInput
    data: XOR<vehiclesUpdateWithoutMaintenance_recordsInput, vehiclesUncheckedUpdateWithoutMaintenance_recordsInput>
  }

  export type vehiclesUpdateWithoutMaintenance_recordsInput = {
    vin?: StringFieldUpdateOperationsInput | string
    license_plate?: StringFieldUpdateOperationsInput | string
    make?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    color?: NullableStringFieldUpdateOperationsInput | string | null
    fuel_type?: StringFieldUpdateOperationsInput | string
    engine_size?: NullableStringFieldUpdateOperationsInput | string | null
    transmission?: NullableStringFieldUpdateOperationsInput | string | null
    purchase_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchase_price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    current_value?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    odometer_reading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fuel_capacity?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    insurance_policy_number?: NullableStringFieldUpdateOperationsInput | string | null
    insurance_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    registration_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    gps_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expenses?: expensesUpdateManyWithoutVehiclesNestedInput
    fuel_transactions?: fuel_transactionsUpdateManyWithoutVehiclesNestedInput
    gps_tracking?: gps_trackingUpdateManyWithoutVehiclesNestedInput
    incidents?: incidentsUpdateManyWithoutVehiclesNestedInput
    safety_inspections?: safety_inspectionsUpdateManyWithoutVehiclesNestedInput
    trips?: tripsUpdateManyWithoutVehiclesNestedInput
    vehicle_assignments?: vehicle_assignmentsUpdateManyWithoutVehiclesNestedInput
    drivers?: driversUpdateOneWithoutVehiclesNestedInput
    companies?: companiesUpdateOneWithoutVehiclesNestedInput
    departments?: departmentsUpdateOneWithoutVehiclesNestedInput
    vehicle_types?: vehicle_typesUpdateOneWithoutVehiclesNestedInput
  }

  export type vehiclesUncheckedUpdateWithoutMaintenance_recordsInput = {
    vehicle_id?: IntFieldUpdateOperationsInput | number
    company_id?: NullableIntFieldUpdateOperationsInput | number | null
    vehicle_type_id?: NullableIntFieldUpdateOperationsInput | number | null
    vin?: StringFieldUpdateOperationsInput | string
    license_plate?: StringFieldUpdateOperationsInput | string
    make?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    color?: NullableStringFieldUpdateOperationsInput | string | null
    fuel_type?: StringFieldUpdateOperationsInput | string
    engine_size?: NullableStringFieldUpdateOperationsInput | string | null
    transmission?: NullableStringFieldUpdateOperationsInput | string | null
    purchase_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchase_price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    current_value?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    odometer_reading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fuel_capacity?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    insurance_policy_number?: NullableStringFieldUpdateOperationsInput | string | null
    insurance_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    registration_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    gps_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    assigned_driver_id?: NullableIntFieldUpdateOperationsInput | number | null
    department_id?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expenses?: expensesUncheckedUpdateManyWithoutVehiclesNestedInput
    fuel_transactions?: fuel_transactionsUncheckedUpdateManyWithoutVehiclesNestedInput
    gps_tracking?: gps_trackingUncheckedUpdateManyWithoutVehiclesNestedInput
    incidents?: incidentsUncheckedUpdateManyWithoutVehiclesNestedInput
    safety_inspections?: safety_inspectionsUncheckedUpdateManyWithoutVehiclesNestedInput
    trips?: tripsUncheckedUpdateManyWithoutVehiclesNestedInput
    vehicle_assignments?: vehicle_assignmentsUncheckedUpdateManyWithoutVehiclesNestedInput
  }

  export type maintenance_recordsCreateWithoutMaintenance_typesInput = {
    scheduled_date?: Date | string | null
    completed_date?: Date | string | null
    odometer_at_service?: Decimal | DecimalJsLike | number | string | null
    cost?: Decimal | DecimalJsLike | number | string | null
    labor_hours?: Decimal | DecimalJsLike | number | string | null
    description?: string | null
    parts_used?: string | null
    technician_name?: string | null
    status?: string | null
    next_service_due_date?: Date | string | null
    next_service_due_miles?: Decimal | DecimalJsLike | number | string | null
    warranty_expiry_date?: Date | string | null
    invoice_number?: string | null
    notes?: string | null
    created_at?: Date | string | null
    service_providers?: service_providersCreateNestedOneWithoutMaintenance_recordsInput
    vehicles?: vehiclesCreateNestedOneWithoutMaintenance_recordsInput
  }

  export type maintenance_recordsUncheckedCreateWithoutMaintenance_typesInput = {
    maintenance_id?: number
    vehicle_id?: number | null
    service_provider_id?: number | null
    scheduled_date?: Date | string | null
    completed_date?: Date | string | null
    odometer_at_service?: Decimal | DecimalJsLike | number | string | null
    cost?: Decimal | DecimalJsLike | number | string | null
    labor_hours?: Decimal | DecimalJsLike | number | string | null
    description?: string | null
    parts_used?: string | null
    technician_name?: string | null
    status?: string | null
    next_service_due_date?: Date | string | null
    next_service_due_miles?: Decimal | DecimalJsLike | number | string | null
    warranty_expiry_date?: Date | string | null
    invoice_number?: string | null
    notes?: string | null
    created_at?: Date | string | null
  }

  export type maintenance_recordsCreateOrConnectWithoutMaintenance_typesInput = {
    where: maintenance_recordsWhereUniqueInput
    create: XOR<maintenance_recordsCreateWithoutMaintenance_typesInput, maintenance_recordsUncheckedCreateWithoutMaintenance_typesInput>
  }

  export type maintenance_recordsCreateManyMaintenance_typesInputEnvelope = {
    data: maintenance_recordsCreateManyMaintenance_typesInput | maintenance_recordsCreateManyMaintenance_typesInput[]
    skipDuplicates?: boolean
  }

  export type maintenance_recordsUpsertWithWhereUniqueWithoutMaintenance_typesInput = {
    where: maintenance_recordsWhereUniqueInput
    update: XOR<maintenance_recordsUpdateWithoutMaintenance_typesInput, maintenance_recordsUncheckedUpdateWithoutMaintenance_typesInput>
    create: XOR<maintenance_recordsCreateWithoutMaintenance_typesInput, maintenance_recordsUncheckedCreateWithoutMaintenance_typesInput>
  }

  export type maintenance_recordsUpdateWithWhereUniqueWithoutMaintenance_typesInput = {
    where: maintenance_recordsWhereUniqueInput
    data: XOR<maintenance_recordsUpdateWithoutMaintenance_typesInput, maintenance_recordsUncheckedUpdateWithoutMaintenance_typesInput>
  }

  export type maintenance_recordsUpdateManyWithWhereWithoutMaintenance_typesInput = {
    where: maintenance_recordsScalarWhereInput
    data: XOR<maintenance_recordsUpdateManyMutationInput, maintenance_recordsUncheckedUpdateManyWithoutMaintenance_typesInput>
  }

  export type maintenance_recordsScalarWhereInput = {
    AND?: maintenance_recordsScalarWhereInput | maintenance_recordsScalarWhereInput[]
    OR?: maintenance_recordsScalarWhereInput[]
    NOT?: maintenance_recordsScalarWhereInput | maintenance_recordsScalarWhereInput[]
    maintenance_id?: IntFilter<"maintenance_records"> | number
    vehicle_id?: IntNullableFilter<"maintenance_records"> | number | null
    maintenance_type_id?: IntNullableFilter<"maintenance_records"> | number | null
    service_provider_id?: IntNullableFilter<"maintenance_records"> | number | null
    scheduled_date?: DateTimeNullableFilter<"maintenance_records"> | Date | string | null
    completed_date?: DateTimeNullableFilter<"maintenance_records"> | Date | string | null
    odometer_at_service?: DecimalNullableFilter<"maintenance_records"> | Decimal | DecimalJsLike | number | string | null
    cost?: DecimalNullableFilter<"maintenance_records"> | Decimal | DecimalJsLike | number | string | null
    labor_hours?: DecimalNullableFilter<"maintenance_records"> | Decimal | DecimalJsLike | number | string | null
    description?: StringNullableFilter<"maintenance_records"> | string | null
    parts_used?: StringNullableFilter<"maintenance_records"> | string | null
    technician_name?: StringNullableFilter<"maintenance_records"> | string | null
    status?: StringNullableFilter<"maintenance_records"> | string | null
    next_service_due_date?: DateTimeNullableFilter<"maintenance_records"> | Date | string | null
    next_service_due_miles?: DecimalNullableFilter<"maintenance_records"> | Decimal | DecimalJsLike | number | string | null
    warranty_expiry_date?: DateTimeNullableFilter<"maintenance_records"> | Date | string | null
    invoice_number?: StringNullableFilter<"maintenance_records"> | string | null
    notes?: StringNullableFilter<"maintenance_records"> | string | null
    created_at?: DateTimeNullableFilter<"maintenance_records"> | Date | string | null
  }

  export type companiesCreateWithoutReportsInput = {
    company_name: string
    address?: string | null
    phone?: string | null
    email?: string | null
    contact_person?: string | null
    subscription_plan?: string | null
    created_at?: Date | string | null
    is_active?: boolean | null
    departments?: departmentsCreateNestedManyWithoutCompaniesInput
    drivers?: driversCreateNestedManyWithoutCompaniesInput
    service_providers?: service_providersCreateNestedManyWithoutCompaniesInput
    users?: usersCreateNestedManyWithoutCompaniesInput
    vehicles?: vehiclesCreateNestedManyWithoutCompaniesInput
  }

  export type companiesUncheckedCreateWithoutReportsInput = {
    company_id?: number
    company_name: string
    address?: string | null
    phone?: string | null
    email?: string | null
    contact_person?: string | null
    subscription_plan?: string | null
    created_at?: Date | string | null
    is_active?: boolean | null
    departments?: departmentsUncheckedCreateNestedManyWithoutCompaniesInput
    drivers?: driversUncheckedCreateNestedManyWithoutCompaniesInput
    service_providers?: service_providersUncheckedCreateNestedManyWithoutCompaniesInput
    users?: usersUncheckedCreateNestedManyWithoutCompaniesInput
    vehicles?: vehiclesUncheckedCreateNestedManyWithoutCompaniesInput
  }

  export type companiesCreateOrConnectWithoutReportsInput = {
    where: companiesWhereUniqueInput
    create: XOR<companiesCreateWithoutReportsInput, companiesUncheckedCreateWithoutReportsInput>
  }

  export type usersCreateWithoutReportsInput = {
    username: string
    email: string
    password_hash: string
    first_name?: string | null
    last_name?: string | null
    role: string
    phone?: string | null
    is_active?: boolean | null
    last_login?: Date | string | null
    created_at?: Date | string | null
    companies?: companiesCreateNestedOneWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutReportsInput = {
    user_id?: number
    company_id?: number | null
    username: string
    email: string
    password_hash: string
    first_name?: string | null
    last_name?: string | null
    role: string
    phone?: string | null
    is_active?: boolean | null
    last_login?: Date | string | null
    created_at?: Date | string | null
  }

  export type usersCreateOrConnectWithoutReportsInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutReportsInput, usersUncheckedCreateWithoutReportsInput>
  }

  export type companiesUpsertWithoutReportsInput = {
    update: XOR<companiesUpdateWithoutReportsInput, companiesUncheckedUpdateWithoutReportsInput>
    create: XOR<companiesCreateWithoutReportsInput, companiesUncheckedCreateWithoutReportsInput>
    where?: companiesWhereInput
  }

  export type companiesUpdateToOneWithWhereWithoutReportsInput = {
    where?: companiesWhereInput
    data: XOR<companiesUpdateWithoutReportsInput, companiesUncheckedUpdateWithoutReportsInput>
  }

  export type companiesUpdateWithoutReportsInput = {
    company_name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    contact_person?: NullableStringFieldUpdateOperationsInput | string | null
    subscription_plan?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    departments?: departmentsUpdateManyWithoutCompaniesNestedInput
    drivers?: driversUpdateManyWithoutCompaniesNestedInput
    service_providers?: service_providersUpdateManyWithoutCompaniesNestedInput
    users?: usersUpdateManyWithoutCompaniesNestedInput
    vehicles?: vehiclesUpdateManyWithoutCompaniesNestedInput
  }

  export type companiesUncheckedUpdateWithoutReportsInput = {
    company_id?: IntFieldUpdateOperationsInput | number
    company_name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    contact_person?: NullableStringFieldUpdateOperationsInput | string | null
    subscription_plan?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    departments?: departmentsUncheckedUpdateManyWithoutCompaniesNestedInput
    drivers?: driversUncheckedUpdateManyWithoutCompaniesNestedInput
    service_providers?: service_providersUncheckedUpdateManyWithoutCompaniesNestedInput
    users?: usersUncheckedUpdateManyWithoutCompaniesNestedInput
    vehicles?: vehiclesUncheckedUpdateManyWithoutCompaniesNestedInput
  }

  export type usersUpsertWithoutReportsInput = {
    update: XOR<usersUpdateWithoutReportsInput, usersUncheckedUpdateWithoutReportsInput>
    create: XOR<usersCreateWithoutReportsInput, usersUncheckedCreateWithoutReportsInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutReportsInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutReportsInput, usersUncheckedUpdateWithoutReportsInput>
  }

  export type usersUpdateWithoutReportsInput = {
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password_hash?: StringFieldUpdateOperationsInput | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    companies?: companiesUpdateOneWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutReportsInput = {
    user_id?: IntFieldUpdateOperationsInput | number
    company_id?: NullableIntFieldUpdateOperationsInput | number | null
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password_hash?: StringFieldUpdateOperationsInput | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type vehiclesCreateWithoutSafety_inspectionsInput = {
    vin: string
    license_plate: string
    make: string
    model: string
    year: number
    color?: string | null
    fuel_type: string
    engine_size?: string | null
    transmission?: string | null
    purchase_date?: Date | string | null
    purchase_price?: Decimal | DecimalJsLike | number | string | null
    current_value?: Decimal | DecimalJsLike | number | string | null
    odometer_reading?: Decimal | DecimalJsLike | number | string | null
    fuel_capacity?: Decimal | DecimalJsLike | number | string | null
    insurance_policy_number?: string | null
    insurance_expiry?: Date | string | null
    registration_expiry?: Date | string | null
    status?: string | null
    gps_device_id?: string | null
    notes?: string | null
    created_at?: Date | string | null
    expenses?: expensesCreateNestedManyWithoutVehiclesInput
    fuel_transactions?: fuel_transactionsCreateNestedManyWithoutVehiclesInput
    gps_tracking?: gps_trackingCreateNestedManyWithoutVehiclesInput
    incidents?: incidentsCreateNestedManyWithoutVehiclesInput
    maintenance_records?: maintenance_recordsCreateNestedManyWithoutVehiclesInput
    trips?: tripsCreateNestedManyWithoutVehiclesInput
    vehicle_assignments?: vehicle_assignmentsCreateNestedManyWithoutVehiclesInput
    drivers?: driversCreateNestedOneWithoutVehiclesInput
    companies?: companiesCreateNestedOneWithoutVehiclesInput
    departments?: departmentsCreateNestedOneWithoutVehiclesInput
    vehicle_types?: vehicle_typesCreateNestedOneWithoutVehiclesInput
  }

  export type vehiclesUncheckedCreateWithoutSafety_inspectionsInput = {
    vehicle_id?: number
    company_id?: number | null
    vehicle_type_id?: number | null
    vin: string
    license_plate: string
    make: string
    model: string
    year: number
    color?: string | null
    fuel_type: string
    engine_size?: string | null
    transmission?: string | null
    purchase_date?: Date | string | null
    purchase_price?: Decimal | DecimalJsLike | number | string | null
    current_value?: Decimal | DecimalJsLike | number | string | null
    odometer_reading?: Decimal | DecimalJsLike | number | string | null
    fuel_capacity?: Decimal | DecimalJsLike | number | string | null
    insurance_policy_number?: string | null
    insurance_expiry?: Date | string | null
    registration_expiry?: Date | string | null
    status?: string | null
    gps_device_id?: string | null
    assigned_driver_id?: number | null
    department_id?: number | null
    notes?: string | null
    created_at?: Date | string | null
    expenses?: expensesUncheckedCreateNestedManyWithoutVehiclesInput
    fuel_transactions?: fuel_transactionsUncheckedCreateNestedManyWithoutVehiclesInput
    gps_tracking?: gps_trackingUncheckedCreateNestedManyWithoutVehiclesInput
    incidents?: incidentsUncheckedCreateNestedManyWithoutVehiclesInput
    maintenance_records?: maintenance_recordsUncheckedCreateNestedManyWithoutVehiclesInput
    trips?: tripsUncheckedCreateNestedManyWithoutVehiclesInput
    vehicle_assignments?: vehicle_assignmentsUncheckedCreateNestedManyWithoutVehiclesInput
  }

  export type vehiclesCreateOrConnectWithoutSafety_inspectionsInput = {
    where: vehiclesWhereUniqueInput
    create: XOR<vehiclesCreateWithoutSafety_inspectionsInput, vehiclesUncheckedCreateWithoutSafety_inspectionsInput>
  }

  export type vehiclesUpsertWithoutSafety_inspectionsInput = {
    update: XOR<vehiclesUpdateWithoutSafety_inspectionsInput, vehiclesUncheckedUpdateWithoutSafety_inspectionsInput>
    create: XOR<vehiclesCreateWithoutSafety_inspectionsInput, vehiclesUncheckedCreateWithoutSafety_inspectionsInput>
    where?: vehiclesWhereInput
  }

  export type vehiclesUpdateToOneWithWhereWithoutSafety_inspectionsInput = {
    where?: vehiclesWhereInput
    data: XOR<vehiclesUpdateWithoutSafety_inspectionsInput, vehiclesUncheckedUpdateWithoutSafety_inspectionsInput>
  }

  export type vehiclesUpdateWithoutSafety_inspectionsInput = {
    vin?: StringFieldUpdateOperationsInput | string
    license_plate?: StringFieldUpdateOperationsInput | string
    make?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    color?: NullableStringFieldUpdateOperationsInput | string | null
    fuel_type?: StringFieldUpdateOperationsInput | string
    engine_size?: NullableStringFieldUpdateOperationsInput | string | null
    transmission?: NullableStringFieldUpdateOperationsInput | string | null
    purchase_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchase_price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    current_value?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    odometer_reading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fuel_capacity?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    insurance_policy_number?: NullableStringFieldUpdateOperationsInput | string | null
    insurance_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    registration_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    gps_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expenses?: expensesUpdateManyWithoutVehiclesNestedInput
    fuel_transactions?: fuel_transactionsUpdateManyWithoutVehiclesNestedInput
    gps_tracking?: gps_trackingUpdateManyWithoutVehiclesNestedInput
    incidents?: incidentsUpdateManyWithoutVehiclesNestedInput
    maintenance_records?: maintenance_recordsUpdateManyWithoutVehiclesNestedInput
    trips?: tripsUpdateManyWithoutVehiclesNestedInput
    vehicle_assignments?: vehicle_assignmentsUpdateManyWithoutVehiclesNestedInput
    drivers?: driversUpdateOneWithoutVehiclesNestedInput
    companies?: companiesUpdateOneWithoutVehiclesNestedInput
    departments?: departmentsUpdateOneWithoutVehiclesNestedInput
    vehicle_types?: vehicle_typesUpdateOneWithoutVehiclesNestedInput
  }

  export type vehiclesUncheckedUpdateWithoutSafety_inspectionsInput = {
    vehicle_id?: IntFieldUpdateOperationsInput | number
    company_id?: NullableIntFieldUpdateOperationsInput | number | null
    vehicle_type_id?: NullableIntFieldUpdateOperationsInput | number | null
    vin?: StringFieldUpdateOperationsInput | string
    license_plate?: StringFieldUpdateOperationsInput | string
    make?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    color?: NullableStringFieldUpdateOperationsInput | string | null
    fuel_type?: StringFieldUpdateOperationsInput | string
    engine_size?: NullableStringFieldUpdateOperationsInput | string | null
    transmission?: NullableStringFieldUpdateOperationsInput | string | null
    purchase_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchase_price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    current_value?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    odometer_reading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fuel_capacity?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    insurance_policy_number?: NullableStringFieldUpdateOperationsInput | string | null
    insurance_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    registration_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    gps_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    assigned_driver_id?: NullableIntFieldUpdateOperationsInput | number | null
    department_id?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expenses?: expensesUncheckedUpdateManyWithoutVehiclesNestedInput
    fuel_transactions?: fuel_transactionsUncheckedUpdateManyWithoutVehiclesNestedInput
    gps_tracking?: gps_trackingUncheckedUpdateManyWithoutVehiclesNestedInput
    incidents?: incidentsUncheckedUpdateManyWithoutVehiclesNestedInput
    maintenance_records?: maintenance_recordsUncheckedUpdateManyWithoutVehiclesNestedInput
    trips?: tripsUncheckedUpdateManyWithoutVehiclesNestedInput
    vehicle_assignments?: vehicle_assignmentsUncheckedUpdateManyWithoutVehiclesNestedInput
  }

  export type maintenance_recordsCreateWithoutService_providersInput = {
    scheduled_date?: Date | string | null
    completed_date?: Date | string | null
    odometer_at_service?: Decimal | DecimalJsLike | number | string | null
    cost?: Decimal | DecimalJsLike | number | string | null
    labor_hours?: Decimal | DecimalJsLike | number | string | null
    description?: string | null
    parts_used?: string | null
    technician_name?: string | null
    status?: string | null
    next_service_due_date?: Date | string | null
    next_service_due_miles?: Decimal | DecimalJsLike | number | string | null
    warranty_expiry_date?: Date | string | null
    invoice_number?: string | null
    notes?: string | null
    created_at?: Date | string | null
    maintenance_types?: maintenance_typesCreateNestedOneWithoutMaintenance_recordsInput
    vehicles?: vehiclesCreateNestedOneWithoutMaintenance_recordsInput
  }

  export type maintenance_recordsUncheckedCreateWithoutService_providersInput = {
    maintenance_id?: number
    vehicle_id?: number | null
    maintenance_type_id?: number | null
    scheduled_date?: Date | string | null
    completed_date?: Date | string | null
    odometer_at_service?: Decimal | DecimalJsLike | number | string | null
    cost?: Decimal | DecimalJsLike | number | string | null
    labor_hours?: Decimal | DecimalJsLike | number | string | null
    description?: string | null
    parts_used?: string | null
    technician_name?: string | null
    status?: string | null
    next_service_due_date?: Date | string | null
    next_service_due_miles?: Decimal | DecimalJsLike | number | string | null
    warranty_expiry_date?: Date | string | null
    invoice_number?: string | null
    notes?: string | null
    created_at?: Date | string | null
  }

  export type maintenance_recordsCreateOrConnectWithoutService_providersInput = {
    where: maintenance_recordsWhereUniqueInput
    create: XOR<maintenance_recordsCreateWithoutService_providersInput, maintenance_recordsUncheckedCreateWithoutService_providersInput>
  }

  export type maintenance_recordsCreateManyService_providersInputEnvelope = {
    data: maintenance_recordsCreateManyService_providersInput | maintenance_recordsCreateManyService_providersInput[]
    skipDuplicates?: boolean
  }

  export type companiesCreateWithoutService_providersInput = {
    company_name: string
    address?: string | null
    phone?: string | null
    email?: string | null
    contact_person?: string | null
    subscription_plan?: string | null
    created_at?: Date | string | null
    is_active?: boolean | null
    departments?: departmentsCreateNestedManyWithoutCompaniesInput
    drivers?: driversCreateNestedManyWithoutCompaniesInput
    reports?: reportsCreateNestedManyWithoutCompaniesInput
    users?: usersCreateNestedManyWithoutCompaniesInput
    vehicles?: vehiclesCreateNestedManyWithoutCompaniesInput
  }

  export type companiesUncheckedCreateWithoutService_providersInput = {
    company_id?: number
    company_name: string
    address?: string | null
    phone?: string | null
    email?: string | null
    contact_person?: string | null
    subscription_plan?: string | null
    created_at?: Date | string | null
    is_active?: boolean | null
    departments?: departmentsUncheckedCreateNestedManyWithoutCompaniesInput
    drivers?: driversUncheckedCreateNestedManyWithoutCompaniesInput
    reports?: reportsUncheckedCreateNestedManyWithoutCompaniesInput
    users?: usersUncheckedCreateNestedManyWithoutCompaniesInput
    vehicles?: vehiclesUncheckedCreateNestedManyWithoutCompaniesInput
  }

  export type companiesCreateOrConnectWithoutService_providersInput = {
    where: companiesWhereUniqueInput
    create: XOR<companiesCreateWithoutService_providersInput, companiesUncheckedCreateWithoutService_providersInput>
  }

  export type maintenance_recordsUpsertWithWhereUniqueWithoutService_providersInput = {
    where: maintenance_recordsWhereUniqueInput
    update: XOR<maintenance_recordsUpdateWithoutService_providersInput, maintenance_recordsUncheckedUpdateWithoutService_providersInput>
    create: XOR<maintenance_recordsCreateWithoutService_providersInput, maintenance_recordsUncheckedCreateWithoutService_providersInput>
  }

  export type maintenance_recordsUpdateWithWhereUniqueWithoutService_providersInput = {
    where: maintenance_recordsWhereUniqueInput
    data: XOR<maintenance_recordsUpdateWithoutService_providersInput, maintenance_recordsUncheckedUpdateWithoutService_providersInput>
  }

  export type maintenance_recordsUpdateManyWithWhereWithoutService_providersInput = {
    where: maintenance_recordsScalarWhereInput
    data: XOR<maintenance_recordsUpdateManyMutationInput, maintenance_recordsUncheckedUpdateManyWithoutService_providersInput>
  }

  export type companiesUpsertWithoutService_providersInput = {
    update: XOR<companiesUpdateWithoutService_providersInput, companiesUncheckedUpdateWithoutService_providersInput>
    create: XOR<companiesCreateWithoutService_providersInput, companiesUncheckedCreateWithoutService_providersInput>
    where?: companiesWhereInput
  }

  export type companiesUpdateToOneWithWhereWithoutService_providersInput = {
    where?: companiesWhereInput
    data: XOR<companiesUpdateWithoutService_providersInput, companiesUncheckedUpdateWithoutService_providersInput>
  }

  export type companiesUpdateWithoutService_providersInput = {
    company_name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    contact_person?: NullableStringFieldUpdateOperationsInput | string | null
    subscription_plan?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    departments?: departmentsUpdateManyWithoutCompaniesNestedInput
    drivers?: driversUpdateManyWithoutCompaniesNestedInput
    reports?: reportsUpdateManyWithoutCompaniesNestedInput
    users?: usersUpdateManyWithoutCompaniesNestedInput
    vehicles?: vehiclesUpdateManyWithoutCompaniesNestedInput
  }

  export type companiesUncheckedUpdateWithoutService_providersInput = {
    company_id?: IntFieldUpdateOperationsInput | number
    company_name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    contact_person?: NullableStringFieldUpdateOperationsInput | string | null
    subscription_plan?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    departments?: departmentsUncheckedUpdateManyWithoutCompaniesNestedInput
    drivers?: driversUncheckedUpdateManyWithoutCompaniesNestedInput
    reports?: reportsUncheckedUpdateManyWithoutCompaniesNestedInput
    users?: usersUncheckedUpdateManyWithoutCompaniesNestedInput
    vehicles?: vehiclesUncheckedUpdateManyWithoutCompaniesNestedInput
  }

  export type driversCreateWithoutTripsInput = {
    employee_id?: string | null
    first_name: string
    last_name: string
    license_number: string
    license_class?: string | null
    license_expiry_date?: Date | string | null
    date_of_birth?: Date | string | null
    hire_date?: Date | string | null
    phone?: string | null
    email?: string | null
    address?: string | null
    emergency_contact_name?: string | null
    emergency_contact_phone?: string | null
    salary?: Decimal | DecimalJsLike | number | string | null
    status?: string | null
    safety_score?: Decimal | DecimalJsLike | number | string | null
    total_miles_driven?: Decimal | DecimalJsLike | number | string | null
    years_experience?: number | null
    created_at?: Date | string | null
    driver_certifications?: driver_certificationsCreateNestedManyWithoutDriversInput
    companies?: companiesCreateNestedOneWithoutDriversInput
    expenses?: expensesCreateNestedManyWithoutDriversInput
    fuel_transactions?: fuel_transactionsCreateNestedManyWithoutDriversInput
    incidents?: incidentsCreateNestedManyWithoutDriversInput
    vehicle_assignments?: vehicle_assignmentsCreateNestedManyWithoutDriversInput
    vehicles?: vehiclesCreateNestedManyWithoutDriversInput
  }

  export type driversUncheckedCreateWithoutTripsInput = {
    driver_id?: number
    company_id?: number | null
    employee_id?: string | null
    first_name: string
    last_name: string
    license_number: string
    license_class?: string | null
    license_expiry_date?: Date | string | null
    date_of_birth?: Date | string | null
    hire_date?: Date | string | null
    phone?: string | null
    email?: string | null
    address?: string | null
    emergency_contact_name?: string | null
    emergency_contact_phone?: string | null
    salary?: Decimal | DecimalJsLike | number | string | null
    status?: string | null
    safety_score?: Decimal | DecimalJsLike | number | string | null
    total_miles_driven?: Decimal | DecimalJsLike | number | string | null
    years_experience?: number | null
    created_at?: Date | string | null
    driver_certifications?: driver_certificationsUncheckedCreateNestedManyWithoutDriversInput
    expenses?: expensesUncheckedCreateNestedManyWithoutDriversInput
    fuel_transactions?: fuel_transactionsUncheckedCreateNestedManyWithoutDriversInput
    incidents?: incidentsUncheckedCreateNestedManyWithoutDriversInput
    vehicle_assignments?: vehicle_assignmentsUncheckedCreateNestedManyWithoutDriversInput
    vehicles?: vehiclesUncheckedCreateNestedManyWithoutDriversInput
  }

  export type driversCreateOrConnectWithoutTripsInput = {
    where: driversWhereUniqueInput
    create: XOR<driversCreateWithoutTripsInput, driversUncheckedCreateWithoutTripsInput>
  }

  export type vehiclesCreateWithoutTripsInput = {
    vin: string
    license_plate: string
    make: string
    model: string
    year: number
    color?: string | null
    fuel_type: string
    engine_size?: string | null
    transmission?: string | null
    purchase_date?: Date | string | null
    purchase_price?: Decimal | DecimalJsLike | number | string | null
    current_value?: Decimal | DecimalJsLike | number | string | null
    odometer_reading?: Decimal | DecimalJsLike | number | string | null
    fuel_capacity?: Decimal | DecimalJsLike | number | string | null
    insurance_policy_number?: string | null
    insurance_expiry?: Date | string | null
    registration_expiry?: Date | string | null
    status?: string | null
    gps_device_id?: string | null
    notes?: string | null
    created_at?: Date | string | null
    expenses?: expensesCreateNestedManyWithoutVehiclesInput
    fuel_transactions?: fuel_transactionsCreateNestedManyWithoutVehiclesInput
    gps_tracking?: gps_trackingCreateNestedManyWithoutVehiclesInput
    incidents?: incidentsCreateNestedManyWithoutVehiclesInput
    maintenance_records?: maintenance_recordsCreateNestedManyWithoutVehiclesInput
    safety_inspections?: safety_inspectionsCreateNestedManyWithoutVehiclesInput
    vehicle_assignments?: vehicle_assignmentsCreateNestedManyWithoutVehiclesInput
    drivers?: driversCreateNestedOneWithoutVehiclesInput
    companies?: companiesCreateNestedOneWithoutVehiclesInput
    departments?: departmentsCreateNestedOneWithoutVehiclesInput
    vehicle_types?: vehicle_typesCreateNestedOneWithoutVehiclesInput
  }

  export type vehiclesUncheckedCreateWithoutTripsInput = {
    vehicle_id?: number
    company_id?: number | null
    vehicle_type_id?: number | null
    vin: string
    license_plate: string
    make: string
    model: string
    year: number
    color?: string | null
    fuel_type: string
    engine_size?: string | null
    transmission?: string | null
    purchase_date?: Date | string | null
    purchase_price?: Decimal | DecimalJsLike | number | string | null
    current_value?: Decimal | DecimalJsLike | number | string | null
    odometer_reading?: Decimal | DecimalJsLike | number | string | null
    fuel_capacity?: Decimal | DecimalJsLike | number | string | null
    insurance_policy_number?: string | null
    insurance_expiry?: Date | string | null
    registration_expiry?: Date | string | null
    status?: string | null
    gps_device_id?: string | null
    assigned_driver_id?: number | null
    department_id?: number | null
    notes?: string | null
    created_at?: Date | string | null
    expenses?: expensesUncheckedCreateNestedManyWithoutVehiclesInput
    fuel_transactions?: fuel_transactionsUncheckedCreateNestedManyWithoutVehiclesInput
    gps_tracking?: gps_trackingUncheckedCreateNestedManyWithoutVehiclesInput
    incidents?: incidentsUncheckedCreateNestedManyWithoutVehiclesInput
    maintenance_records?: maintenance_recordsUncheckedCreateNestedManyWithoutVehiclesInput
    safety_inspections?: safety_inspectionsUncheckedCreateNestedManyWithoutVehiclesInput
    vehicle_assignments?: vehicle_assignmentsUncheckedCreateNestedManyWithoutVehiclesInput
  }

  export type vehiclesCreateOrConnectWithoutTripsInput = {
    where: vehiclesWhereUniqueInput
    create: XOR<vehiclesCreateWithoutTripsInput, vehiclesUncheckedCreateWithoutTripsInput>
  }

  export type driversUpsertWithoutTripsInput = {
    update: XOR<driversUpdateWithoutTripsInput, driversUncheckedUpdateWithoutTripsInput>
    create: XOR<driversCreateWithoutTripsInput, driversUncheckedCreateWithoutTripsInput>
    where?: driversWhereInput
  }

  export type driversUpdateToOneWithWhereWithoutTripsInput = {
    where?: driversWhereInput
    data: XOR<driversUpdateWithoutTripsInput, driversUncheckedUpdateWithoutTripsInput>
  }

  export type driversUpdateWithoutTripsInput = {
    employee_id?: NullableStringFieldUpdateOperationsInput | string | null
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: StringFieldUpdateOperationsInput | string
    license_number?: StringFieldUpdateOperationsInput | string
    license_class?: NullableStringFieldUpdateOperationsInput | string | null
    license_expiry_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    date_of_birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hire_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    emergency_contact_name?: NullableStringFieldUpdateOperationsInput | string | null
    emergency_contact_phone?: NullableStringFieldUpdateOperationsInput | string | null
    salary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    safety_score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    total_miles_driven?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    years_experience?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    driver_certifications?: driver_certificationsUpdateManyWithoutDriversNestedInput
    companies?: companiesUpdateOneWithoutDriversNestedInput
    expenses?: expensesUpdateManyWithoutDriversNestedInput
    fuel_transactions?: fuel_transactionsUpdateManyWithoutDriversNestedInput
    incidents?: incidentsUpdateManyWithoutDriversNestedInput
    vehicle_assignments?: vehicle_assignmentsUpdateManyWithoutDriversNestedInput
    vehicles?: vehiclesUpdateManyWithoutDriversNestedInput
  }

  export type driversUncheckedUpdateWithoutTripsInput = {
    driver_id?: IntFieldUpdateOperationsInput | number
    company_id?: NullableIntFieldUpdateOperationsInput | number | null
    employee_id?: NullableStringFieldUpdateOperationsInput | string | null
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: StringFieldUpdateOperationsInput | string
    license_number?: StringFieldUpdateOperationsInput | string
    license_class?: NullableStringFieldUpdateOperationsInput | string | null
    license_expiry_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    date_of_birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hire_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    emergency_contact_name?: NullableStringFieldUpdateOperationsInput | string | null
    emergency_contact_phone?: NullableStringFieldUpdateOperationsInput | string | null
    salary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    safety_score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    total_miles_driven?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    years_experience?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    driver_certifications?: driver_certificationsUncheckedUpdateManyWithoutDriversNestedInput
    expenses?: expensesUncheckedUpdateManyWithoutDriversNestedInput
    fuel_transactions?: fuel_transactionsUncheckedUpdateManyWithoutDriversNestedInput
    incidents?: incidentsUncheckedUpdateManyWithoutDriversNestedInput
    vehicle_assignments?: vehicle_assignmentsUncheckedUpdateManyWithoutDriversNestedInput
    vehicles?: vehiclesUncheckedUpdateManyWithoutDriversNestedInput
  }

  export type vehiclesUpsertWithoutTripsInput = {
    update: XOR<vehiclesUpdateWithoutTripsInput, vehiclesUncheckedUpdateWithoutTripsInput>
    create: XOR<vehiclesCreateWithoutTripsInput, vehiclesUncheckedCreateWithoutTripsInput>
    where?: vehiclesWhereInput
  }

  export type vehiclesUpdateToOneWithWhereWithoutTripsInput = {
    where?: vehiclesWhereInput
    data: XOR<vehiclesUpdateWithoutTripsInput, vehiclesUncheckedUpdateWithoutTripsInput>
  }

  export type vehiclesUpdateWithoutTripsInput = {
    vin?: StringFieldUpdateOperationsInput | string
    license_plate?: StringFieldUpdateOperationsInput | string
    make?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    color?: NullableStringFieldUpdateOperationsInput | string | null
    fuel_type?: StringFieldUpdateOperationsInput | string
    engine_size?: NullableStringFieldUpdateOperationsInput | string | null
    transmission?: NullableStringFieldUpdateOperationsInput | string | null
    purchase_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchase_price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    current_value?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    odometer_reading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fuel_capacity?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    insurance_policy_number?: NullableStringFieldUpdateOperationsInput | string | null
    insurance_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    registration_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    gps_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expenses?: expensesUpdateManyWithoutVehiclesNestedInput
    fuel_transactions?: fuel_transactionsUpdateManyWithoutVehiclesNestedInput
    gps_tracking?: gps_trackingUpdateManyWithoutVehiclesNestedInput
    incidents?: incidentsUpdateManyWithoutVehiclesNestedInput
    maintenance_records?: maintenance_recordsUpdateManyWithoutVehiclesNestedInput
    safety_inspections?: safety_inspectionsUpdateManyWithoutVehiclesNestedInput
    vehicle_assignments?: vehicle_assignmentsUpdateManyWithoutVehiclesNestedInput
    drivers?: driversUpdateOneWithoutVehiclesNestedInput
    companies?: companiesUpdateOneWithoutVehiclesNestedInput
    departments?: departmentsUpdateOneWithoutVehiclesNestedInput
    vehicle_types?: vehicle_typesUpdateOneWithoutVehiclesNestedInput
  }

  export type vehiclesUncheckedUpdateWithoutTripsInput = {
    vehicle_id?: IntFieldUpdateOperationsInput | number
    company_id?: NullableIntFieldUpdateOperationsInput | number | null
    vehicle_type_id?: NullableIntFieldUpdateOperationsInput | number | null
    vin?: StringFieldUpdateOperationsInput | string
    license_plate?: StringFieldUpdateOperationsInput | string
    make?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    color?: NullableStringFieldUpdateOperationsInput | string | null
    fuel_type?: StringFieldUpdateOperationsInput | string
    engine_size?: NullableStringFieldUpdateOperationsInput | string | null
    transmission?: NullableStringFieldUpdateOperationsInput | string | null
    purchase_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchase_price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    current_value?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    odometer_reading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fuel_capacity?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    insurance_policy_number?: NullableStringFieldUpdateOperationsInput | string | null
    insurance_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    registration_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    gps_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    assigned_driver_id?: NullableIntFieldUpdateOperationsInput | number | null
    department_id?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expenses?: expensesUncheckedUpdateManyWithoutVehiclesNestedInput
    fuel_transactions?: fuel_transactionsUncheckedUpdateManyWithoutVehiclesNestedInput
    gps_tracking?: gps_trackingUncheckedUpdateManyWithoutVehiclesNestedInput
    incidents?: incidentsUncheckedUpdateManyWithoutVehiclesNestedInput
    maintenance_records?: maintenance_recordsUncheckedUpdateManyWithoutVehiclesNestedInput
    safety_inspections?: safety_inspectionsUncheckedUpdateManyWithoutVehiclesNestedInput
    vehicle_assignments?: vehicle_assignmentsUncheckedUpdateManyWithoutVehiclesNestedInput
  }

  export type reportsCreateWithoutUsersInput = {
    report_name: string
    report_type: string
    generation_date?: Date | string | null
    date_range_start?: Date | string | null
    date_range_end?: Date | string | null
    parameters?: NullableJsonNullValueInput | InputJsonValue
    file_path?: string | null
    status?: string | null
    companies?: companiesCreateNestedOneWithoutReportsInput
  }

  export type reportsUncheckedCreateWithoutUsersInput = {
    report_id?: number
    company_id?: number | null
    report_name: string
    report_type: string
    generation_date?: Date | string | null
    date_range_start?: Date | string | null
    date_range_end?: Date | string | null
    parameters?: NullableJsonNullValueInput | InputJsonValue
    file_path?: string | null
    status?: string | null
  }

  export type reportsCreateOrConnectWithoutUsersInput = {
    where: reportsWhereUniqueInput
    create: XOR<reportsCreateWithoutUsersInput, reportsUncheckedCreateWithoutUsersInput>
  }

  export type reportsCreateManyUsersInputEnvelope = {
    data: reportsCreateManyUsersInput | reportsCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type companiesCreateWithoutUsersInput = {
    company_name: string
    address?: string | null
    phone?: string | null
    email?: string | null
    contact_person?: string | null
    subscription_plan?: string | null
    created_at?: Date | string | null
    is_active?: boolean | null
    departments?: departmentsCreateNestedManyWithoutCompaniesInput
    drivers?: driversCreateNestedManyWithoutCompaniesInput
    reports?: reportsCreateNestedManyWithoutCompaniesInput
    service_providers?: service_providersCreateNestedManyWithoutCompaniesInput
    vehicles?: vehiclesCreateNestedManyWithoutCompaniesInput
  }

  export type companiesUncheckedCreateWithoutUsersInput = {
    company_id?: number
    company_name: string
    address?: string | null
    phone?: string | null
    email?: string | null
    contact_person?: string | null
    subscription_plan?: string | null
    created_at?: Date | string | null
    is_active?: boolean | null
    departments?: departmentsUncheckedCreateNestedManyWithoutCompaniesInput
    drivers?: driversUncheckedCreateNestedManyWithoutCompaniesInput
    reports?: reportsUncheckedCreateNestedManyWithoutCompaniesInput
    service_providers?: service_providersUncheckedCreateNestedManyWithoutCompaniesInput
    vehicles?: vehiclesUncheckedCreateNestedManyWithoutCompaniesInput
  }

  export type companiesCreateOrConnectWithoutUsersInput = {
    where: companiesWhereUniqueInput
    create: XOR<companiesCreateWithoutUsersInput, companiesUncheckedCreateWithoutUsersInput>
  }

  export type reportsUpsertWithWhereUniqueWithoutUsersInput = {
    where: reportsWhereUniqueInput
    update: XOR<reportsUpdateWithoutUsersInput, reportsUncheckedUpdateWithoutUsersInput>
    create: XOR<reportsCreateWithoutUsersInput, reportsUncheckedCreateWithoutUsersInput>
  }

  export type reportsUpdateWithWhereUniqueWithoutUsersInput = {
    where: reportsWhereUniqueInput
    data: XOR<reportsUpdateWithoutUsersInput, reportsUncheckedUpdateWithoutUsersInput>
  }

  export type reportsUpdateManyWithWhereWithoutUsersInput = {
    where: reportsScalarWhereInput
    data: XOR<reportsUpdateManyMutationInput, reportsUncheckedUpdateManyWithoutUsersInput>
  }

  export type companiesUpsertWithoutUsersInput = {
    update: XOR<companiesUpdateWithoutUsersInput, companiesUncheckedUpdateWithoutUsersInput>
    create: XOR<companiesCreateWithoutUsersInput, companiesUncheckedCreateWithoutUsersInput>
    where?: companiesWhereInput
  }

  export type companiesUpdateToOneWithWhereWithoutUsersInput = {
    where?: companiesWhereInput
    data: XOR<companiesUpdateWithoutUsersInput, companiesUncheckedUpdateWithoutUsersInput>
  }

  export type companiesUpdateWithoutUsersInput = {
    company_name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    contact_person?: NullableStringFieldUpdateOperationsInput | string | null
    subscription_plan?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    departments?: departmentsUpdateManyWithoutCompaniesNestedInput
    drivers?: driversUpdateManyWithoutCompaniesNestedInput
    reports?: reportsUpdateManyWithoutCompaniesNestedInput
    service_providers?: service_providersUpdateManyWithoutCompaniesNestedInput
    vehicles?: vehiclesUpdateManyWithoutCompaniesNestedInput
  }

  export type companiesUncheckedUpdateWithoutUsersInput = {
    company_id?: IntFieldUpdateOperationsInput | number
    company_name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    contact_person?: NullableStringFieldUpdateOperationsInput | string | null
    subscription_plan?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    departments?: departmentsUncheckedUpdateManyWithoutCompaniesNestedInput
    drivers?: driversUncheckedUpdateManyWithoutCompaniesNestedInput
    reports?: reportsUncheckedUpdateManyWithoutCompaniesNestedInput
    service_providers?: service_providersUncheckedUpdateManyWithoutCompaniesNestedInput
    vehicles?: vehiclesUncheckedUpdateManyWithoutCompaniesNestedInput
  }

  export type driversCreateWithoutVehicle_assignmentsInput = {
    employee_id?: string | null
    first_name: string
    last_name: string
    license_number: string
    license_class?: string | null
    license_expiry_date?: Date | string | null
    date_of_birth?: Date | string | null
    hire_date?: Date | string | null
    phone?: string | null
    email?: string | null
    address?: string | null
    emergency_contact_name?: string | null
    emergency_contact_phone?: string | null
    salary?: Decimal | DecimalJsLike | number | string | null
    status?: string | null
    safety_score?: Decimal | DecimalJsLike | number | string | null
    total_miles_driven?: Decimal | DecimalJsLike | number | string | null
    years_experience?: number | null
    created_at?: Date | string | null
    driver_certifications?: driver_certificationsCreateNestedManyWithoutDriversInput
    companies?: companiesCreateNestedOneWithoutDriversInput
    expenses?: expensesCreateNestedManyWithoutDriversInput
    fuel_transactions?: fuel_transactionsCreateNestedManyWithoutDriversInput
    incidents?: incidentsCreateNestedManyWithoutDriversInput
    trips?: tripsCreateNestedManyWithoutDriversInput
    vehicles?: vehiclesCreateNestedManyWithoutDriversInput
  }

  export type driversUncheckedCreateWithoutVehicle_assignmentsInput = {
    driver_id?: number
    company_id?: number | null
    employee_id?: string | null
    first_name: string
    last_name: string
    license_number: string
    license_class?: string | null
    license_expiry_date?: Date | string | null
    date_of_birth?: Date | string | null
    hire_date?: Date | string | null
    phone?: string | null
    email?: string | null
    address?: string | null
    emergency_contact_name?: string | null
    emergency_contact_phone?: string | null
    salary?: Decimal | DecimalJsLike | number | string | null
    status?: string | null
    safety_score?: Decimal | DecimalJsLike | number | string | null
    total_miles_driven?: Decimal | DecimalJsLike | number | string | null
    years_experience?: number | null
    created_at?: Date | string | null
    driver_certifications?: driver_certificationsUncheckedCreateNestedManyWithoutDriversInput
    expenses?: expensesUncheckedCreateNestedManyWithoutDriversInput
    fuel_transactions?: fuel_transactionsUncheckedCreateNestedManyWithoutDriversInput
    incidents?: incidentsUncheckedCreateNestedManyWithoutDriversInput
    trips?: tripsUncheckedCreateNestedManyWithoutDriversInput
    vehicles?: vehiclesUncheckedCreateNestedManyWithoutDriversInput
  }

  export type driversCreateOrConnectWithoutVehicle_assignmentsInput = {
    where: driversWhereUniqueInput
    create: XOR<driversCreateWithoutVehicle_assignmentsInput, driversUncheckedCreateWithoutVehicle_assignmentsInput>
  }

  export type vehiclesCreateWithoutVehicle_assignmentsInput = {
    vin: string
    license_plate: string
    make: string
    model: string
    year: number
    color?: string | null
    fuel_type: string
    engine_size?: string | null
    transmission?: string | null
    purchase_date?: Date | string | null
    purchase_price?: Decimal | DecimalJsLike | number | string | null
    current_value?: Decimal | DecimalJsLike | number | string | null
    odometer_reading?: Decimal | DecimalJsLike | number | string | null
    fuel_capacity?: Decimal | DecimalJsLike | number | string | null
    insurance_policy_number?: string | null
    insurance_expiry?: Date | string | null
    registration_expiry?: Date | string | null
    status?: string | null
    gps_device_id?: string | null
    notes?: string | null
    created_at?: Date | string | null
    expenses?: expensesCreateNestedManyWithoutVehiclesInput
    fuel_transactions?: fuel_transactionsCreateNestedManyWithoutVehiclesInput
    gps_tracking?: gps_trackingCreateNestedManyWithoutVehiclesInput
    incidents?: incidentsCreateNestedManyWithoutVehiclesInput
    maintenance_records?: maintenance_recordsCreateNestedManyWithoutVehiclesInput
    safety_inspections?: safety_inspectionsCreateNestedManyWithoutVehiclesInput
    trips?: tripsCreateNestedManyWithoutVehiclesInput
    drivers?: driversCreateNestedOneWithoutVehiclesInput
    companies?: companiesCreateNestedOneWithoutVehiclesInput
    departments?: departmentsCreateNestedOneWithoutVehiclesInput
    vehicle_types?: vehicle_typesCreateNestedOneWithoutVehiclesInput
  }

  export type vehiclesUncheckedCreateWithoutVehicle_assignmentsInput = {
    vehicle_id?: number
    company_id?: number | null
    vehicle_type_id?: number | null
    vin: string
    license_plate: string
    make: string
    model: string
    year: number
    color?: string | null
    fuel_type: string
    engine_size?: string | null
    transmission?: string | null
    purchase_date?: Date | string | null
    purchase_price?: Decimal | DecimalJsLike | number | string | null
    current_value?: Decimal | DecimalJsLike | number | string | null
    odometer_reading?: Decimal | DecimalJsLike | number | string | null
    fuel_capacity?: Decimal | DecimalJsLike | number | string | null
    insurance_policy_number?: string | null
    insurance_expiry?: Date | string | null
    registration_expiry?: Date | string | null
    status?: string | null
    gps_device_id?: string | null
    assigned_driver_id?: number | null
    department_id?: number | null
    notes?: string | null
    created_at?: Date | string | null
    expenses?: expensesUncheckedCreateNestedManyWithoutVehiclesInput
    fuel_transactions?: fuel_transactionsUncheckedCreateNestedManyWithoutVehiclesInput
    gps_tracking?: gps_trackingUncheckedCreateNestedManyWithoutVehiclesInput
    incidents?: incidentsUncheckedCreateNestedManyWithoutVehiclesInput
    maintenance_records?: maintenance_recordsUncheckedCreateNestedManyWithoutVehiclesInput
    safety_inspections?: safety_inspectionsUncheckedCreateNestedManyWithoutVehiclesInput
    trips?: tripsUncheckedCreateNestedManyWithoutVehiclesInput
  }

  export type vehiclesCreateOrConnectWithoutVehicle_assignmentsInput = {
    where: vehiclesWhereUniqueInput
    create: XOR<vehiclesCreateWithoutVehicle_assignmentsInput, vehiclesUncheckedCreateWithoutVehicle_assignmentsInput>
  }

  export type driversUpsertWithoutVehicle_assignmentsInput = {
    update: XOR<driversUpdateWithoutVehicle_assignmentsInput, driversUncheckedUpdateWithoutVehicle_assignmentsInput>
    create: XOR<driversCreateWithoutVehicle_assignmentsInput, driversUncheckedCreateWithoutVehicle_assignmentsInput>
    where?: driversWhereInput
  }

  export type driversUpdateToOneWithWhereWithoutVehicle_assignmentsInput = {
    where?: driversWhereInput
    data: XOR<driversUpdateWithoutVehicle_assignmentsInput, driversUncheckedUpdateWithoutVehicle_assignmentsInput>
  }

  export type driversUpdateWithoutVehicle_assignmentsInput = {
    employee_id?: NullableStringFieldUpdateOperationsInput | string | null
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: StringFieldUpdateOperationsInput | string
    license_number?: StringFieldUpdateOperationsInput | string
    license_class?: NullableStringFieldUpdateOperationsInput | string | null
    license_expiry_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    date_of_birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hire_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    emergency_contact_name?: NullableStringFieldUpdateOperationsInput | string | null
    emergency_contact_phone?: NullableStringFieldUpdateOperationsInput | string | null
    salary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    safety_score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    total_miles_driven?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    years_experience?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    driver_certifications?: driver_certificationsUpdateManyWithoutDriversNestedInput
    companies?: companiesUpdateOneWithoutDriversNestedInput
    expenses?: expensesUpdateManyWithoutDriversNestedInput
    fuel_transactions?: fuel_transactionsUpdateManyWithoutDriversNestedInput
    incidents?: incidentsUpdateManyWithoutDriversNestedInput
    trips?: tripsUpdateManyWithoutDriversNestedInput
    vehicles?: vehiclesUpdateManyWithoutDriversNestedInput
  }

  export type driversUncheckedUpdateWithoutVehicle_assignmentsInput = {
    driver_id?: IntFieldUpdateOperationsInput | number
    company_id?: NullableIntFieldUpdateOperationsInput | number | null
    employee_id?: NullableStringFieldUpdateOperationsInput | string | null
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: StringFieldUpdateOperationsInput | string
    license_number?: StringFieldUpdateOperationsInput | string
    license_class?: NullableStringFieldUpdateOperationsInput | string | null
    license_expiry_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    date_of_birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hire_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    emergency_contact_name?: NullableStringFieldUpdateOperationsInput | string | null
    emergency_contact_phone?: NullableStringFieldUpdateOperationsInput | string | null
    salary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    safety_score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    total_miles_driven?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    years_experience?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    driver_certifications?: driver_certificationsUncheckedUpdateManyWithoutDriversNestedInput
    expenses?: expensesUncheckedUpdateManyWithoutDriversNestedInput
    fuel_transactions?: fuel_transactionsUncheckedUpdateManyWithoutDriversNestedInput
    incidents?: incidentsUncheckedUpdateManyWithoutDriversNestedInput
    trips?: tripsUncheckedUpdateManyWithoutDriversNestedInput
    vehicles?: vehiclesUncheckedUpdateManyWithoutDriversNestedInput
  }

  export type vehiclesUpsertWithoutVehicle_assignmentsInput = {
    update: XOR<vehiclesUpdateWithoutVehicle_assignmentsInput, vehiclesUncheckedUpdateWithoutVehicle_assignmentsInput>
    create: XOR<vehiclesCreateWithoutVehicle_assignmentsInput, vehiclesUncheckedCreateWithoutVehicle_assignmentsInput>
    where?: vehiclesWhereInput
  }

  export type vehiclesUpdateToOneWithWhereWithoutVehicle_assignmentsInput = {
    where?: vehiclesWhereInput
    data: XOR<vehiclesUpdateWithoutVehicle_assignmentsInput, vehiclesUncheckedUpdateWithoutVehicle_assignmentsInput>
  }

  export type vehiclesUpdateWithoutVehicle_assignmentsInput = {
    vin?: StringFieldUpdateOperationsInput | string
    license_plate?: StringFieldUpdateOperationsInput | string
    make?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    color?: NullableStringFieldUpdateOperationsInput | string | null
    fuel_type?: StringFieldUpdateOperationsInput | string
    engine_size?: NullableStringFieldUpdateOperationsInput | string | null
    transmission?: NullableStringFieldUpdateOperationsInput | string | null
    purchase_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchase_price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    current_value?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    odometer_reading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fuel_capacity?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    insurance_policy_number?: NullableStringFieldUpdateOperationsInput | string | null
    insurance_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    registration_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    gps_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expenses?: expensesUpdateManyWithoutVehiclesNestedInput
    fuel_transactions?: fuel_transactionsUpdateManyWithoutVehiclesNestedInput
    gps_tracking?: gps_trackingUpdateManyWithoutVehiclesNestedInput
    incidents?: incidentsUpdateManyWithoutVehiclesNestedInput
    maintenance_records?: maintenance_recordsUpdateManyWithoutVehiclesNestedInput
    safety_inspections?: safety_inspectionsUpdateManyWithoutVehiclesNestedInput
    trips?: tripsUpdateManyWithoutVehiclesNestedInput
    drivers?: driversUpdateOneWithoutVehiclesNestedInput
    companies?: companiesUpdateOneWithoutVehiclesNestedInput
    departments?: departmentsUpdateOneWithoutVehiclesNestedInput
    vehicle_types?: vehicle_typesUpdateOneWithoutVehiclesNestedInput
  }

  export type vehiclesUncheckedUpdateWithoutVehicle_assignmentsInput = {
    vehicle_id?: IntFieldUpdateOperationsInput | number
    company_id?: NullableIntFieldUpdateOperationsInput | number | null
    vehicle_type_id?: NullableIntFieldUpdateOperationsInput | number | null
    vin?: StringFieldUpdateOperationsInput | string
    license_plate?: StringFieldUpdateOperationsInput | string
    make?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    color?: NullableStringFieldUpdateOperationsInput | string | null
    fuel_type?: StringFieldUpdateOperationsInput | string
    engine_size?: NullableStringFieldUpdateOperationsInput | string | null
    transmission?: NullableStringFieldUpdateOperationsInput | string | null
    purchase_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchase_price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    current_value?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    odometer_reading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fuel_capacity?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    insurance_policy_number?: NullableStringFieldUpdateOperationsInput | string | null
    insurance_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    registration_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    gps_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    assigned_driver_id?: NullableIntFieldUpdateOperationsInput | number | null
    department_id?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expenses?: expensesUncheckedUpdateManyWithoutVehiclesNestedInput
    fuel_transactions?: fuel_transactionsUncheckedUpdateManyWithoutVehiclesNestedInput
    gps_tracking?: gps_trackingUncheckedUpdateManyWithoutVehiclesNestedInput
    incidents?: incidentsUncheckedUpdateManyWithoutVehiclesNestedInput
    maintenance_records?: maintenance_recordsUncheckedUpdateManyWithoutVehiclesNestedInput
    safety_inspections?: safety_inspectionsUncheckedUpdateManyWithoutVehiclesNestedInput
    trips?: tripsUncheckedUpdateManyWithoutVehiclesNestedInput
  }

  export type vehiclesCreateWithoutVehicle_typesInput = {
    vin: string
    license_plate: string
    make: string
    model: string
    year: number
    color?: string | null
    fuel_type: string
    engine_size?: string | null
    transmission?: string | null
    purchase_date?: Date | string | null
    purchase_price?: Decimal | DecimalJsLike | number | string | null
    current_value?: Decimal | DecimalJsLike | number | string | null
    odometer_reading?: Decimal | DecimalJsLike | number | string | null
    fuel_capacity?: Decimal | DecimalJsLike | number | string | null
    insurance_policy_number?: string | null
    insurance_expiry?: Date | string | null
    registration_expiry?: Date | string | null
    status?: string | null
    gps_device_id?: string | null
    notes?: string | null
    created_at?: Date | string | null
    expenses?: expensesCreateNestedManyWithoutVehiclesInput
    fuel_transactions?: fuel_transactionsCreateNestedManyWithoutVehiclesInput
    gps_tracking?: gps_trackingCreateNestedManyWithoutVehiclesInput
    incidents?: incidentsCreateNestedManyWithoutVehiclesInput
    maintenance_records?: maintenance_recordsCreateNestedManyWithoutVehiclesInput
    safety_inspections?: safety_inspectionsCreateNestedManyWithoutVehiclesInput
    trips?: tripsCreateNestedManyWithoutVehiclesInput
    vehicle_assignments?: vehicle_assignmentsCreateNestedManyWithoutVehiclesInput
    drivers?: driversCreateNestedOneWithoutVehiclesInput
    companies?: companiesCreateNestedOneWithoutVehiclesInput
    departments?: departmentsCreateNestedOneWithoutVehiclesInput
  }

  export type vehiclesUncheckedCreateWithoutVehicle_typesInput = {
    vehicle_id?: number
    company_id?: number | null
    vin: string
    license_plate: string
    make: string
    model: string
    year: number
    color?: string | null
    fuel_type: string
    engine_size?: string | null
    transmission?: string | null
    purchase_date?: Date | string | null
    purchase_price?: Decimal | DecimalJsLike | number | string | null
    current_value?: Decimal | DecimalJsLike | number | string | null
    odometer_reading?: Decimal | DecimalJsLike | number | string | null
    fuel_capacity?: Decimal | DecimalJsLike | number | string | null
    insurance_policy_number?: string | null
    insurance_expiry?: Date | string | null
    registration_expiry?: Date | string | null
    status?: string | null
    gps_device_id?: string | null
    assigned_driver_id?: number | null
    department_id?: number | null
    notes?: string | null
    created_at?: Date | string | null
    expenses?: expensesUncheckedCreateNestedManyWithoutVehiclesInput
    fuel_transactions?: fuel_transactionsUncheckedCreateNestedManyWithoutVehiclesInput
    gps_tracking?: gps_trackingUncheckedCreateNestedManyWithoutVehiclesInput
    incidents?: incidentsUncheckedCreateNestedManyWithoutVehiclesInput
    maintenance_records?: maintenance_recordsUncheckedCreateNestedManyWithoutVehiclesInput
    safety_inspections?: safety_inspectionsUncheckedCreateNestedManyWithoutVehiclesInput
    trips?: tripsUncheckedCreateNestedManyWithoutVehiclesInput
    vehicle_assignments?: vehicle_assignmentsUncheckedCreateNestedManyWithoutVehiclesInput
  }

  export type vehiclesCreateOrConnectWithoutVehicle_typesInput = {
    where: vehiclesWhereUniqueInput
    create: XOR<vehiclesCreateWithoutVehicle_typesInput, vehiclesUncheckedCreateWithoutVehicle_typesInput>
  }

  export type vehiclesCreateManyVehicle_typesInputEnvelope = {
    data: vehiclesCreateManyVehicle_typesInput | vehiclesCreateManyVehicle_typesInput[]
    skipDuplicates?: boolean
  }

  export type vehiclesUpsertWithWhereUniqueWithoutVehicle_typesInput = {
    where: vehiclesWhereUniqueInput
    update: XOR<vehiclesUpdateWithoutVehicle_typesInput, vehiclesUncheckedUpdateWithoutVehicle_typesInput>
    create: XOR<vehiclesCreateWithoutVehicle_typesInput, vehiclesUncheckedCreateWithoutVehicle_typesInput>
  }

  export type vehiclesUpdateWithWhereUniqueWithoutVehicle_typesInput = {
    where: vehiclesWhereUniqueInput
    data: XOR<vehiclesUpdateWithoutVehicle_typesInput, vehiclesUncheckedUpdateWithoutVehicle_typesInput>
  }

  export type vehiclesUpdateManyWithWhereWithoutVehicle_typesInput = {
    where: vehiclesScalarWhereInput
    data: XOR<vehiclesUpdateManyMutationInput, vehiclesUncheckedUpdateManyWithoutVehicle_typesInput>
  }

  export type expensesCreateWithoutVehiclesInput = {
    expense_date: Date | string
    amount: Decimal | DecimalJsLike | number | string
    description?: string | null
    vendor?: string | null
    invoice_number?: string | null
    receipt_available?: boolean | null
    approved_by?: string | null
    approval_date?: Date | string | null
    reimbursable?: boolean | null
    notes?: string | null
    created_at?: Date | string | null
    cost_categories?: cost_categoriesCreateNestedOneWithoutExpensesInput
    drivers?: driversCreateNestedOneWithoutExpensesInput
  }

  export type expensesUncheckedCreateWithoutVehiclesInput = {
    expense_id?: number
    driver_id?: number | null
    category_id?: number | null
    expense_date: Date | string
    amount: Decimal | DecimalJsLike | number | string
    description?: string | null
    vendor?: string | null
    invoice_number?: string | null
    receipt_available?: boolean | null
    approved_by?: string | null
    approval_date?: Date | string | null
    reimbursable?: boolean | null
    notes?: string | null
    created_at?: Date | string | null
  }

  export type expensesCreateOrConnectWithoutVehiclesInput = {
    where: expensesWhereUniqueInput
    create: XOR<expensesCreateWithoutVehiclesInput, expensesUncheckedCreateWithoutVehiclesInput>
  }

  export type expensesCreateManyVehiclesInputEnvelope = {
    data: expensesCreateManyVehiclesInput | expensesCreateManyVehiclesInput[]
    skipDuplicates?: boolean
  }

  export type fuel_transactionsCreateWithoutVehiclesInput = {
    transaction_date: Date | string
    odometer_reading?: Decimal | DecimalJsLike | number | string | null
    gallons_purchased?: Decimal | DecimalJsLike | number | string | null
    price_per_gallon?: Decimal | DecimalJsLike | number | string | null
    total_amount?: Decimal | DecimalJsLike | number | string | null
    fuel_type?: string | null
    payment_method?: string | null
    card_number_last_four?: string | null
    receipt_number?: string | null
    mpg_calculated?: Decimal | DecimalJsLike | number | string | null
    notes?: string | null
    drivers?: driversCreateNestedOneWithoutFuel_transactionsInput
    fuel_stations?: fuel_stationsCreateNestedOneWithoutFuel_transactionsInput
  }

  export type fuel_transactionsUncheckedCreateWithoutVehiclesInput = {
    transaction_id?: number
    driver_id?: number | null
    fuel_station_id?: number | null
    transaction_date: Date | string
    odometer_reading?: Decimal | DecimalJsLike | number | string | null
    gallons_purchased?: Decimal | DecimalJsLike | number | string | null
    price_per_gallon?: Decimal | DecimalJsLike | number | string | null
    total_amount?: Decimal | DecimalJsLike | number | string | null
    fuel_type?: string | null
    payment_method?: string | null
    card_number_last_four?: string | null
    receipt_number?: string | null
    mpg_calculated?: Decimal | DecimalJsLike | number | string | null
    notes?: string | null
  }

  export type fuel_transactionsCreateOrConnectWithoutVehiclesInput = {
    where: fuel_transactionsWhereUniqueInput
    create: XOR<fuel_transactionsCreateWithoutVehiclesInput, fuel_transactionsUncheckedCreateWithoutVehiclesInput>
  }

  export type fuel_transactionsCreateManyVehiclesInputEnvelope = {
    data: fuel_transactionsCreateManyVehiclesInput | fuel_transactionsCreateManyVehiclesInput[]
    skipDuplicates?: boolean
  }

  export type gps_trackingCreateWithoutVehiclesInput = {
    timestamp: Date | string
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    speed?: Decimal | DecimalJsLike | number | string | null
    heading?: number | null
    altitude?: Decimal | DecimalJsLike | number | string | null
    gps_quality?: string | null
    engine_status?: string | null
    fuel_level_percent?: Decimal | DecimalJsLike | number | string | null
    odometer?: Decimal | DecimalJsLike | number | string | null
  }

  export type gps_trackingUncheckedCreateWithoutVehiclesInput = {
    tracking_id?: number
    timestamp: Date | string
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    speed?: Decimal | DecimalJsLike | number | string | null
    heading?: number | null
    altitude?: Decimal | DecimalJsLike | number | string | null
    gps_quality?: string | null
    engine_status?: string | null
    fuel_level_percent?: Decimal | DecimalJsLike | number | string | null
    odometer?: Decimal | DecimalJsLike | number | string | null
  }

  export type gps_trackingCreateOrConnectWithoutVehiclesInput = {
    where: gps_trackingWhereUniqueInput
    create: XOR<gps_trackingCreateWithoutVehiclesInput, gps_trackingUncheckedCreateWithoutVehiclesInput>
  }

  export type gps_trackingCreateManyVehiclesInputEnvelope = {
    data: gps_trackingCreateManyVehiclesInput | gps_trackingCreateManyVehiclesInput[]
    skipDuplicates?: boolean
  }

  export type incidentsCreateWithoutVehiclesInput = {
    incident_date: Date | string
    incident_type: string
    severity: string
    location?: string | null
    description: string
    police_report_number?: string | null
    insurance_claim_number?: string | null
    estimated_damage_cost?: Decimal | DecimalJsLike | number | string | null
    actual_repair_cost?: Decimal | DecimalJsLike | number | string | null
    injuries_reported?: boolean | null
    fatalities?: boolean | null
    at_fault?: boolean | null
    weather_conditions?: string | null
    road_conditions?: string | null
    photos_available?: boolean | null
    status?: string | null
    resolution_date?: Date | string | null
    lessons_learned?: string | null
    created_at?: Date | string | null
    drivers?: driversCreateNestedOneWithoutIncidentsInput
  }

  export type incidentsUncheckedCreateWithoutVehiclesInput = {
    incident_id?: number
    driver_id?: number | null
    incident_date: Date | string
    incident_type: string
    severity: string
    location?: string | null
    description: string
    police_report_number?: string | null
    insurance_claim_number?: string | null
    estimated_damage_cost?: Decimal | DecimalJsLike | number | string | null
    actual_repair_cost?: Decimal | DecimalJsLike | number | string | null
    injuries_reported?: boolean | null
    fatalities?: boolean | null
    at_fault?: boolean | null
    weather_conditions?: string | null
    road_conditions?: string | null
    photos_available?: boolean | null
    status?: string | null
    resolution_date?: Date | string | null
    lessons_learned?: string | null
    created_at?: Date | string | null
  }

  export type incidentsCreateOrConnectWithoutVehiclesInput = {
    where: incidentsWhereUniqueInput
    create: XOR<incidentsCreateWithoutVehiclesInput, incidentsUncheckedCreateWithoutVehiclesInput>
  }

  export type incidentsCreateManyVehiclesInputEnvelope = {
    data: incidentsCreateManyVehiclesInput | incidentsCreateManyVehiclesInput[]
    skipDuplicates?: boolean
  }

  export type maintenance_recordsCreateWithoutVehiclesInput = {
    scheduled_date?: Date | string | null
    completed_date?: Date | string | null
    odometer_at_service?: Decimal | DecimalJsLike | number | string | null
    cost?: Decimal | DecimalJsLike | number | string | null
    labor_hours?: Decimal | DecimalJsLike | number | string | null
    description?: string | null
    parts_used?: string | null
    technician_name?: string | null
    status?: string | null
    next_service_due_date?: Date | string | null
    next_service_due_miles?: Decimal | DecimalJsLike | number | string | null
    warranty_expiry_date?: Date | string | null
    invoice_number?: string | null
    notes?: string | null
    created_at?: Date | string | null
    maintenance_types?: maintenance_typesCreateNestedOneWithoutMaintenance_recordsInput
    service_providers?: service_providersCreateNestedOneWithoutMaintenance_recordsInput
  }

  export type maintenance_recordsUncheckedCreateWithoutVehiclesInput = {
    maintenance_id?: number
    maintenance_type_id?: number | null
    service_provider_id?: number | null
    scheduled_date?: Date | string | null
    completed_date?: Date | string | null
    odometer_at_service?: Decimal | DecimalJsLike | number | string | null
    cost?: Decimal | DecimalJsLike | number | string | null
    labor_hours?: Decimal | DecimalJsLike | number | string | null
    description?: string | null
    parts_used?: string | null
    technician_name?: string | null
    status?: string | null
    next_service_due_date?: Date | string | null
    next_service_due_miles?: Decimal | DecimalJsLike | number | string | null
    warranty_expiry_date?: Date | string | null
    invoice_number?: string | null
    notes?: string | null
    created_at?: Date | string | null
  }

  export type maintenance_recordsCreateOrConnectWithoutVehiclesInput = {
    where: maintenance_recordsWhereUniqueInput
    create: XOR<maintenance_recordsCreateWithoutVehiclesInput, maintenance_recordsUncheckedCreateWithoutVehiclesInput>
  }

  export type maintenance_recordsCreateManyVehiclesInputEnvelope = {
    data: maintenance_recordsCreateManyVehiclesInput | maintenance_recordsCreateManyVehiclesInput[]
    skipDuplicates?: boolean
  }

  export type safety_inspectionsCreateWithoutVehiclesInput = {
    inspector_name?: string | null
    inspection_date: Date | string
    inspection_type: string
    odometer_reading?: Decimal | DecimalJsLike | number | string | null
    overall_score?: Decimal | DecimalJsLike | number | string | null
    passed: boolean
    defects_found?: number | null
    critical_defects?: number | null
    notes?: string | null
    next_inspection_due?: Date | string | null
    certificate_number?: string | null
  }

  export type safety_inspectionsUncheckedCreateWithoutVehiclesInput = {
    inspection_id?: number
    inspector_name?: string | null
    inspection_date: Date | string
    inspection_type: string
    odometer_reading?: Decimal | DecimalJsLike | number | string | null
    overall_score?: Decimal | DecimalJsLike | number | string | null
    passed: boolean
    defects_found?: number | null
    critical_defects?: number | null
    notes?: string | null
    next_inspection_due?: Date | string | null
    certificate_number?: string | null
  }

  export type safety_inspectionsCreateOrConnectWithoutVehiclesInput = {
    where: safety_inspectionsWhereUniqueInput
    create: XOR<safety_inspectionsCreateWithoutVehiclesInput, safety_inspectionsUncheckedCreateWithoutVehiclesInput>
  }

  export type safety_inspectionsCreateManyVehiclesInputEnvelope = {
    data: safety_inspectionsCreateManyVehiclesInput | safety_inspectionsCreateManyVehiclesInput[]
    skipDuplicates?: boolean
  }

  export type tripsCreateWithoutVehiclesInput = {
    start_time?: Date | string | null
    end_time?: Date | string | null
    start_location?: string | null
    end_location?: string | null
    start_odometer?: Decimal | DecimalJsLike | number | string | null
    end_odometer?: Decimal | DecimalJsLike | number | string | null
    distance_traveled?: Decimal | DecimalJsLike | number | string | null
    purpose?: string | null
    trip_type?: string | null
    fuel_consumed?: Decimal | DecimalJsLike | number | string | null
    average_speed?: Decimal | DecimalJsLike | number | string | null
    max_speed?: Decimal | DecimalJsLike | number | string | null
    idle_time_minutes?: number | null
    harsh_braking_count?: number | null
    harsh_acceleration_count?: number | null
    speeding_violations?: number | null
    route_efficiency_score?: Decimal | DecimalJsLike | number | string | null
    cost?: Decimal | DecimalJsLike | number | string | null
    notes?: string | null
    created_at?: Date | string | null
    drivers?: driversCreateNestedOneWithoutTripsInput
  }

  export type tripsUncheckedCreateWithoutVehiclesInput = {
    trip_id?: number
    driver_id?: number | null
    start_time?: Date | string | null
    end_time?: Date | string | null
    start_location?: string | null
    end_location?: string | null
    start_odometer?: Decimal | DecimalJsLike | number | string | null
    end_odometer?: Decimal | DecimalJsLike | number | string | null
    distance_traveled?: Decimal | DecimalJsLike | number | string | null
    purpose?: string | null
    trip_type?: string | null
    fuel_consumed?: Decimal | DecimalJsLike | number | string | null
    average_speed?: Decimal | DecimalJsLike | number | string | null
    max_speed?: Decimal | DecimalJsLike | number | string | null
    idle_time_minutes?: number | null
    harsh_braking_count?: number | null
    harsh_acceleration_count?: number | null
    speeding_violations?: number | null
    route_efficiency_score?: Decimal | DecimalJsLike | number | string | null
    cost?: Decimal | DecimalJsLike | number | string | null
    notes?: string | null
    created_at?: Date | string | null
  }

  export type tripsCreateOrConnectWithoutVehiclesInput = {
    where: tripsWhereUniqueInput
    create: XOR<tripsCreateWithoutVehiclesInput, tripsUncheckedCreateWithoutVehiclesInput>
  }

  export type tripsCreateManyVehiclesInputEnvelope = {
    data: tripsCreateManyVehiclesInput | tripsCreateManyVehiclesInput[]
    skipDuplicates?: boolean
  }

  export type vehicle_assignmentsCreateWithoutVehiclesInput = {
    assigned_date: Date | string
    end_date?: Date | string | null
    assignment_type?: string | null
    notes?: string | null
    is_active?: boolean | null
    drivers?: driversCreateNestedOneWithoutVehicle_assignmentsInput
  }

  export type vehicle_assignmentsUncheckedCreateWithoutVehiclesInput = {
    assignment_id?: number
    driver_id?: number | null
    assigned_date: Date | string
    end_date?: Date | string | null
    assignment_type?: string | null
    notes?: string | null
    is_active?: boolean | null
  }

  export type vehicle_assignmentsCreateOrConnectWithoutVehiclesInput = {
    where: vehicle_assignmentsWhereUniqueInput
    create: XOR<vehicle_assignmentsCreateWithoutVehiclesInput, vehicle_assignmentsUncheckedCreateWithoutVehiclesInput>
  }

  export type vehicle_assignmentsCreateManyVehiclesInputEnvelope = {
    data: vehicle_assignmentsCreateManyVehiclesInput | vehicle_assignmentsCreateManyVehiclesInput[]
    skipDuplicates?: boolean
  }

  export type driversCreateWithoutVehiclesInput = {
    employee_id?: string | null
    first_name: string
    last_name: string
    license_number: string
    license_class?: string | null
    license_expiry_date?: Date | string | null
    date_of_birth?: Date | string | null
    hire_date?: Date | string | null
    phone?: string | null
    email?: string | null
    address?: string | null
    emergency_contact_name?: string | null
    emergency_contact_phone?: string | null
    salary?: Decimal | DecimalJsLike | number | string | null
    status?: string | null
    safety_score?: Decimal | DecimalJsLike | number | string | null
    total_miles_driven?: Decimal | DecimalJsLike | number | string | null
    years_experience?: number | null
    created_at?: Date | string | null
    driver_certifications?: driver_certificationsCreateNestedManyWithoutDriversInput
    companies?: companiesCreateNestedOneWithoutDriversInput
    expenses?: expensesCreateNestedManyWithoutDriversInput
    fuel_transactions?: fuel_transactionsCreateNestedManyWithoutDriversInput
    incidents?: incidentsCreateNestedManyWithoutDriversInput
    trips?: tripsCreateNestedManyWithoutDriversInput
    vehicle_assignments?: vehicle_assignmentsCreateNestedManyWithoutDriversInput
  }

  export type driversUncheckedCreateWithoutVehiclesInput = {
    driver_id?: number
    company_id?: number | null
    employee_id?: string | null
    first_name: string
    last_name: string
    license_number: string
    license_class?: string | null
    license_expiry_date?: Date | string | null
    date_of_birth?: Date | string | null
    hire_date?: Date | string | null
    phone?: string | null
    email?: string | null
    address?: string | null
    emergency_contact_name?: string | null
    emergency_contact_phone?: string | null
    salary?: Decimal | DecimalJsLike | number | string | null
    status?: string | null
    safety_score?: Decimal | DecimalJsLike | number | string | null
    total_miles_driven?: Decimal | DecimalJsLike | number | string | null
    years_experience?: number | null
    created_at?: Date | string | null
    driver_certifications?: driver_certificationsUncheckedCreateNestedManyWithoutDriversInput
    expenses?: expensesUncheckedCreateNestedManyWithoutDriversInput
    fuel_transactions?: fuel_transactionsUncheckedCreateNestedManyWithoutDriversInput
    incidents?: incidentsUncheckedCreateNestedManyWithoutDriversInput
    trips?: tripsUncheckedCreateNestedManyWithoutDriversInput
    vehicle_assignments?: vehicle_assignmentsUncheckedCreateNestedManyWithoutDriversInput
  }

  export type driversCreateOrConnectWithoutVehiclesInput = {
    where: driversWhereUniqueInput
    create: XOR<driversCreateWithoutVehiclesInput, driversUncheckedCreateWithoutVehiclesInput>
  }

  export type companiesCreateWithoutVehiclesInput = {
    company_name: string
    address?: string | null
    phone?: string | null
    email?: string | null
    contact_person?: string | null
    subscription_plan?: string | null
    created_at?: Date | string | null
    is_active?: boolean | null
    departments?: departmentsCreateNestedManyWithoutCompaniesInput
    drivers?: driversCreateNestedManyWithoutCompaniesInput
    reports?: reportsCreateNestedManyWithoutCompaniesInput
    service_providers?: service_providersCreateNestedManyWithoutCompaniesInput
    users?: usersCreateNestedManyWithoutCompaniesInput
  }

  export type companiesUncheckedCreateWithoutVehiclesInput = {
    company_id?: number
    company_name: string
    address?: string | null
    phone?: string | null
    email?: string | null
    contact_person?: string | null
    subscription_plan?: string | null
    created_at?: Date | string | null
    is_active?: boolean | null
    departments?: departmentsUncheckedCreateNestedManyWithoutCompaniesInput
    drivers?: driversUncheckedCreateNestedManyWithoutCompaniesInput
    reports?: reportsUncheckedCreateNestedManyWithoutCompaniesInput
    service_providers?: service_providersUncheckedCreateNestedManyWithoutCompaniesInput
    users?: usersUncheckedCreateNestedManyWithoutCompaniesInput
  }

  export type companiesCreateOrConnectWithoutVehiclesInput = {
    where: companiesWhereUniqueInput
    create: XOR<companiesCreateWithoutVehiclesInput, companiesUncheckedCreateWithoutVehiclesInput>
  }

  export type departmentsCreateWithoutVehiclesInput = {
    department_name: string
    manager_name?: string | null
    budget?: Decimal | DecimalJsLike | number | string | null
    companies?: companiesCreateNestedOneWithoutDepartmentsInput
  }

  export type departmentsUncheckedCreateWithoutVehiclesInput = {
    department_id?: number
    company_id?: number | null
    department_name: string
    manager_name?: string | null
    budget?: Decimal | DecimalJsLike | number | string | null
  }

  export type departmentsCreateOrConnectWithoutVehiclesInput = {
    where: departmentsWhereUniqueInput
    create: XOR<departmentsCreateWithoutVehiclesInput, departmentsUncheckedCreateWithoutVehiclesInput>
  }

  export type vehicle_typesCreateWithoutVehiclesInput = {
    type_name: string
    description?: string | null
    fuel_efficiency_rating?: Decimal | DecimalJsLike | number | string | null
    capacity_passengers?: number | null
    capacity_cargo_cubic_feet?: Decimal | DecimalJsLike | number | string | null
  }

  export type vehicle_typesUncheckedCreateWithoutVehiclesInput = {
    type_id?: number
    type_name: string
    description?: string | null
    fuel_efficiency_rating?: Decimal | DecimalJsLike | number | string | null
    capacity_passengers?: number | null
    capacity_cargo_cubic_feet?: Decimal | DecimalJsLike | number | string | null
  }

  export type vehicle_typesCreateOrConnectWithoutVehiclesInput = {
    where: vehicle_typesWhereUniqueInput
    create: XOR<vehicle_typesCreateWithoutVehiclesInput, vehicle_typesUncheckedCreateWithoutVehiclesInput>
  }

  export type expensesUpsertWithWhereUniqueWithoutVehiclesInput = {
    where: expensesWhereUniqueInput
    update: XOR<expensesUpdateWithoutVehiclesInput, expensesUncheckedUpdateWithoutVehiclesInput>
    create: XOR<expensesCreateWithoutVehiclesInput, expensesUncheckedCreateWithoutVehiclesInput>
  }

  export type expensesUpdateWithWhereUniqueWithoutVehiclesInput = {
    where: expensesWhereUniqueInput
    data: XOR<expensesUpdateWithoutVehiclesInput, expensesUncheckedUpdateWithoutVehiclesInput>
  }

  export type expensesUpdateManyWithWhereWithoutVehiclesInput = {
    where: expensesScalarWhereInput
    data: XOR<expensesUpdateManyMutationInput, expensesUncheckedUpdateManyWithoutVehiclesInput>
  }

  export type fuel_transactionsUpsertWithWhereUniqueWithoutVehiclesInput = {
    where: fuel_transactionsWhereUniqueInput
    update: XOR<fuel_transactionsUpdateWithoutVehiclesInput, fuel_transactionsUncheckedUpdateWithoutVehiclesInput>
    create: XOR<fuel_transactionsCreateWithoutVehiclesInput, fuel_transactionsUncheckedCreateWithoutVehiclesInput>
  }

  export type fuel_transactionsUpdateWithWhereUniqueWithoutVehiclesInput = {
    where: fuel_transactionsWhereUniqueInput
    data: XOR<fuel_transactionsUpdateWithoutVehiclesInput, fuel_transactionsUncheckedUpdateWithoutVehiclesInput>
  }

  export type fuel_transactionsUpdateManyWithWhereWithoutVehiclesInput = {
    where: fuel_transactionsScalarWhereInput
    data: XOR<fuel_transactionsUpdateManyMutationInput, fuel_transactionsUncheckedUpdateManyWithoutVehiclesInput>
  }

  export type gps_trackingUpsertWithWhereUniqueWithoutVehiclesInput = {
    where: gps_trackingWhereUniqueInput
    update: XOR<gps_trackingUpdateWithoutVehiclesInput, gps_trackingUncheckedUpdateWithoutVehiclesInput>
    create: XOR<gps_trackingCreateWithoutVehiclesInput, gps_trackingUncheckedCreateWithoutVehiclesInput>
  }

  export type gps_trackingUpdateWithWhereUniqueWithoutVehiclesInput = {
    where: gps_trackingWhereUniqueInput
    data: XOR<gps_trackingUpdateWithoutVehiclesInput, gps_trackingUncheckedUpdateWithoutVehiclesInput>
  }

  export type gps_trackingUpdateManyWithWhereWithoutVehiclesInput = {
    where: gps_trackingScalarWhereInput
    data: XOR<gps_trackingUpdateManyMutationInput, gps_trackingUncheckedUpdateManyWithoutVehiclesInput>
  }

  export type gps_trackingScalarWhereInput = {
    AND?: gps_trackingScalarWhereInput | gps_trackingScalarWhereInput[]
    OR?: gps_trackingScalarWhereInput[]
    NOT?: gps_trackingScalarWhereInput | gps_trackingScalarWhereInput[]
    tracking_id?: IntFilter<"gps_tracking"> | number
    vehicle_id?: IntNullableFilter<"gps_tracking"> | number | null
    timestamp?: DateTimeFilter<"gps_tracking"> | Date | string
    latitude?: DecimalNullableFilter<"gps_tracking"> | Decimal | DecimalJsLike | number | string | null
    longitude?: DecimalNullableFilter<"gps_tracking"> | Decimal | DecimalJsLike | number | string | null
    speed?: DecimalNullableFilter<"gps_tracking"> | Decimal | DecimalJsLike | number | string | null
    heading?: IntNullableFilter<"gps_tracking"> | number | null
    altitude?: DecimalNullableFilter<"gps_tracking"> | Decimal | DecimalJsLike | number | string | null
    gps_quality?: StringNullableFilter<"gps_tracking"> | string | null
    engine_status?: StringNullableFilter<"gps_tracking"> | string | null
    fuel_level_percent?: DecimalNullableFilter<"gps_tracking"> | Decimal | DecimalJsLike | number | string | null
    odometer?: DecimalNullableFilter<"gps_tracking"> | Decimal | DecimalJsLike | number | string | null
  }

  export type incidentsUpsertWithWhereUniqueWithoutVehiclesInput = {
    where: incidentsWhereUniqueInput
    update: XOR<incidentsUpdateWithoutVehiclesInput, incidentsUncheckedUpdateWithoutVehiclesInput>
    create: XOR<incidentsCreateWithoutVehiclesInput, incidentsUncheckedCreateWithoutVehiclesInput>
  }

  export type incidentsUpdateWithWhereUniqueWithoutVehiclesInput = {
    where: incidentsWhereUniqueInput
    data: XOR<incidentsUpdateWithoutVehiclesInput, incidentsUncheckedUpdateWithoutVehiclesInput>
  }

  export type incidentsUpdateManyWithWhereWithoutVehiclesInput = {
    where: incidentsScalarWhereInput
    data: XOR<incidentsUpdateManyMutationInput, incidentsUncheckedUpdateManyWithoutVehiclesInput>
  }

  export type maintenance_recordsUpsertWithWhereUniqueWithoutVehiclesInput = {
    where: maintenance_recordsWhereUniqueInput
    update: XOR<maintenance_recordsUpdateWithoutVehiclesInput, maintenance_recordsUncheckedUpdateWithoutVehiclesInput>
    create: XOR<maintenance_recordsCreateWithoutVehiclesInput, maintenance_recordsUncheckedCreateWithoutVehiclesInput>
  }

  export type maintenance_recordsUpdateWithWhereUniqueWithoutVehiclesInput = {
    where: maintenance_recordsWhereUniqueInput
    data: XOR<maintenance_recordsUpdateWithoutVehiclesInput, maintenance_recordsUncheckedUpdateWithoutVehiclesInput>
  }

  export type maintenance_recordsUpdateManyWithWhereWithoutVehiclesInput = {
    where: maintenance_recordsScalarWhereInput
    data: XOR<maintenance_recordsUpdateManyMutationInput, maintenance_recordsUncheckedUpdateManyWithoutVehiclesInput>
  }

  export type safety_inspectionsUpsertWithWhereUniqueWithoutVehiclesInput = {
    where: safety_inspectionsWhereUniqueInput
    update: XOR<safety_inspectionsUpdateWithoutVehiclesInput, safety_inspectionsUncheckedUpdateWithoutVehiclesInput>
    create: XOR<safety_inspectionsCreateWithoutVehiclesInput, safety_inspectionsUncheckedCreateWithoutVehiclesInput>
  }

  export type safety_inspectionsUpdateWithWhereUniqueWithoutVehiclesInput = {
    where: safety_inspectionsWhereUniqueInput
    data: XOR<safety_inspectionsUpdateWithoutVehiclesInput, safety_inspectionsUncheckedUpdateWithoutVehiclesInput>
  }

  export type safety_inspectionsUpdateManyWithWhereWithoutVehiclesInput = {
    where: safety_inspectionsScalarWhereInput
    data: XOR<safety_inspectionsUpdateManyMutationInput, safety_inspectionsUncheckedUpdateManyWithoutVehiclesInput>
  }

  export type safety_inspectionsScalarWhereInput = {
    AND?: safety_inspectionsScalarWhereInput | safety_inspectionsScalarWhereInput[]
    OR?: safety_inspectionsScalarWhereInput[]
    NOT?: safety_inspectionsScalarWhereInput | safety_inspectionsScalarWhereInput[]
    inspection_id?: IntFilter<"safety_inspections"> | number
    vehicle_id?: IntNullableFilter<"safety_inspections"> | number | null
    inspector_name?: StringNullableFilter<"safety_inspections"> | string | null
    inspection_date?: DateTimeFilter<"safety_inspections"> | Date | string
    inspection_type?: StringFilter<"safety_inspections"> | string
    odometer_reading?: DecimalNullableFilter<"safety_inspections"> | Decimal | DecimalJsLike | number | string | null
    overall_score?: DecimalNullableFilter<"safety_inspections"> | Decimal | DecimalJsLike | number | string | null
    passed?: BoolFilter<"safety_inspections"> | boolean
    defects_found?: IntNullableFilter<"safety_inspections"> | number | null
    critical_defects?: IntNullableFilter<"safety_inspections"> | number | null
    notes?: StringNullableFilter<"safety_inspections"> | string | null
    next_inspection_due?: DateTimeNullableFilter<"safety_inspections"> | Date | string | null
    certificate_number?: StringNullableFilter<"safety_inspections"> | string | null
  }

  export type tripsUpsertWithWhereUniqueWithoutVehiclesInput = {
    where: tripsWhereUniqueInput
    update: XOR<tripsUpdateWithoutVehiclesInput, tripsUncheckedUpdateWithoutVehiclesInput>
    create: XOR<tripsCreateWithoutVehiclesInput, tripsUncheckedCreateWithoutVehiclesInput>
  }

  export type tripsUpdateWithWhereUniqueWithoutVehiclesInput = {
    where: tripsWhereUniqueInput
    data: XOR<tripsUpdateWithoutVehiclesInput, tripsUncheckedUpdateWithoutVehiclesInput>
  }

  export type tripsUpdateManyWithWhereWithoutVehiclesInput = {
    where: tripsScalarWhereInput
    data: XOR<tripsUpdateManyMutationInput, tripsUncheckedUpdateManyWithoutVehiclesInput>
  }

  export type vehicle_assignmentsUpsertWithWhereUniqueWithoutVehiclesInput = {
    where: vehicle_assignmentsWhereUniqueInput
    update: XOR<vehicle_assignmentsUpdateWithoutVehiclesInput, vehicle_assignmentsUncheckedUpdateWithoutVehiclesInput>
    create: XOR<vehicle_assignmentsCreateWithoutVehiclesInput, vehicle_assignmentsUncheckedCreateWithoutVehiclesInput>
  }

  export type vehicle_assignmentsUpdateWithWhereUniqueWithoutVehiclesInput = {
    where: vehicle_assignmentsWhereUniqueInput
    data: XOR<vehicle_assignmentsUpdateWithoutVehiclesInput, vehicle_assignmentsUncheckedUpdateWithoutVehiclesInput>
  }

  export type vehicle_assignmentsUpdateManyWithWhereWithoutVehiclesInput = {
    where: vehicle_assignmentsScalarWhereInput
    data: XOR<vehicle_assignmentsUpdateManyMutationInput, vehicle_assignmentsUncheckedUpdateManyWithoutVehiclesInput>
  }

  export type driversUpsertWithoutVehiclesInput = {
    update: XOR<driversUpdateWithoutVehiclesInput, driversUncheckedUpdateWithoutVehiclesInput>
    create: XOR<driversCreateWithoutVehiclesInput, driversUncheckedCreateWithoutVehiclesInput>
    where?: driversWhereInput
  }

  export type driversUpdateToOneWithWhereWithoutVehiclesInput = {
    where?: driversWhereInput
    data: XOR<driversUpdateWithoutVehiclesInput, driversUncheckedUpdateWithoutVehiclesInput>
  }

  export type driversUpdateWithoutVehiclesInput = {
    employee_id?: NullableStringFieldUpdateOperationsInput | string | null
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: StringFieldUpdateOperationsInput | string
    license_number?: StringFieldUpdateOperationsInput | string
    license_class?: NullableStringFieldUpdateOperationsInput | string | null
    license_expiry_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    date_of_birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hire_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    emergency_contact_name?: NullableStringFieldUpdateOperationsInput | string | null
    emergency_contact_phone?: NullableStringFieldUpdateOperationsInput | string | null
    salary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    safety_score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    total_miles_driven?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    years_experience?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    driver_certifications?: driver_certificationsUpdateManyWithoutDriversNestedInput
    companies?: companiesUpdateOneWithoutDriversNestedInput
    expenses?: expensesUpdateManyWithoutDriversNestedInput
    fuel_transactions?: fuel_transactionsUpdateManyWithoutDriversNestedInput
    incidents?: incidentsUpdateManyWithoutDriversNestedInput
    trips?: tripsUpdateManyWithoutDriversNestedInput
    vehicle_assignments?: vehicle_assignmentsUpdateManyWithoutDriversNestedInput
  }

  export type driversUncheckedUpdateWithoutVehiclesInput = {
    driver_id?: IntFieldUpdateOperationsInput | number
    company_id?: NullableIntFieldUpdateOperationsInput | number | null
    employee_id?: NullableStringFieldUpdateOperationsInput | string | null
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: StringFieldUpdateOperationsInput | string
    license_number?: StringFieldUpdateOperationsInput | string
    license_class?: NullableStringFieldUpdateOperationsInput | string | null
    license_expiry_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    date_of_birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hire_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    emergency_contact_name?: NullableStringFieldUpdateOperationsInput | string | null
    emergency_contact_phone?: NullableStringFieldUpdateOperationsInput | string | null
    salary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    safety_score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    total_miles_driven?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    years_experience?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    driver_certifications?: driver_certificationsUncheckedUpdateManyWithoutDriversNestedInput
    expenses?: expensesUncheckedUpdateManyWithoutDriversNestedInput
    fuel_transactions?: fuel_transactionsUncheckedUpdateManyWithoutDriversNestedInput
    incidents?: incidentsUncheckedUpdateManyWithoutDriversNestedInput
    trips?: tripsUncheckedUpdateManyWithoutDriversNestedInput
    vehicle_assignments?: vehicle_assignmentsUncheckedUpdateManyWithoutDriversNestedInput
  }

  export type companiesUpsertWithoutVehiclesInput = {
    update: XOR<companiesUpdateWithoutVehiclesInput, companiesUncheckedUpdateWithoutVehiclesInput>
    create: XOR<companiesCreateWithoutVehiclesInput, companiesUncheckedCreateWithoutVehiclesInput>
    where?: companiesWhereInput
  }

  export type companiesUpdateToOneWithWhereWithoutVehiclesInput = {
    where?: companiesWhereInput
    data: XOR<companiesUpdateWithoutVehiclesInput, companiesUncheckedUpdateWithoutVehiclesInput>
  }

  export type companiesUpdateWithoutVehiclesInput = {
    company_name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    contact_person?: NullableStringFieldUpdateOperationsInput | string | null
    subscription_plan?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    departments?: departmentsUpdateManyWithoutCompaniesNestedInput
    drivers?: driversUpdateManyWithoutCompaniesNestedInput
    reports?: reportsUpdateManyWithoutCompaniesNestedInput
    service_providers?: service_providersUpdateManyWithoutCompaniesNestedInput
    users?: usersUpdateManyWithoutCompaniesNestedInput
  }

  export type companiesUncheckedUpdateWithoutVehiclesInput = {
    company_id?: IntFieldUpdateOperationsInput | number
    company_name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    contact_person?: NullableStringFieldUpdateOperationsInput | string | null
    subscription_plan?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    departments?: departmentsUncheckedUpdateManyWithoutCompaniesNestedInput
    drivers?: driversUncheckedUpdateManyWithoutCompaniesNestedInput
    reports?: reportsUncheckedUpdateManyWithoutCompaniesNestedInput
    service_providers?: service_providersUncheckedUpdateManyWithoutCompaniesNestedInput
    users?: usersUncheckedUpdateManyWithoutCompaniesNestedInput
  }

  export type departmentsUpsertWithoutVehiclesInput = {
    update: XOR<departmentsUpdateWithoutVehiclesInput, departmentsUncheckedUpdateWithoutVehiclesInput>
    create: XOR<departmentsCreateWithoutVehiclesInput, departmentsUncheckedCreateWithoutVehiclesInput>
    where?: departmentsWhereInput
  }

  export type departmentsUpdateToOneWithWhereWithoutVehiclesInput = {
    where?: departmentsWhereInput
    data: XOR<departmentsUpdateWithoutVehiclesInput, departmentsUncheckedUpdateWithoutVehiclesInput>
  }

  export type departmentsUpdateWithoutVehiclesInput = {
    department_name?: StringFieldUpdateOperationsInput | string
    manager_name?: NullableStringFieldUpdateOperationsInput | string | null
    budget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    companies?: companiesUpdateOneWithoutDepartmentsNestedInput
  }

  export type departmentsUncheckedUpdateWithoutVehiclesInput = {
    department_id?: IntFieldUpdateOperationsInput | number
    company_id?: NullableIntFieldUpdateOperationsInput | number | null
    department_name?: StringFieldUpdateOperationsInput | string
    manager_name?: NullableStringFieldUpdateOperationsInput | string | null
    budget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type vehicle_typesUpsertWithoutVehiclesInput = {
    update: XOR<vehicle_typesUpdateWithoutVehiclesInput, vehicle_typesUncheckedUpdateWithoutVehiclesInput>
    create: XOR<vehicle_typesCreateWithoutVehiclesInput, vehicle_typesUncheckedCreateWithoutVehiclesInput>
    where?: vehicle_typesWhereInput
  }

  export type vehicle_typesUpdateToOneWithWhereWithoutVehiclesInput = {
    where?: vehicle_typesWhereInput
    data: XOR<vehicle_typesUpdateWithoutVehiclesInput, vehicle_typesUncheckedUpdateWithoutVehiclesInput>
  }

  export type vehicle_typesUpdateWithoutVehiclesInput = {
    type_name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    fuel_efficiency_rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    capacity_passengers?: NullableIntFieldUpdateOperationsInput | number | null
    capacity_cargo_cubic_feet?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type vehicle_typesUncheckedUpdateWithoutVehiclesInput = {
    type_id?: IntFieldUpdateOperationsInput | number
    type_name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    fuel_efficiency_rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    capacity_passengers?: NullableIntFieldUpdateOperationsInput | number | null
    capacity_cargo_cubic_feet?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type departmentsCreateManyCompaniesInput = {
    department_id?: number
    department_name: string
    manager_name?: string | null
    budget?: Decimal | DecimalJsLike | number | string | null
  }

  export type driversCreateManyCompaniesInput = {
    driver_id?: number
    employee_id?: string | null
    first_name: string
    last_name: string
    license_number: string
    license_class?: string | null
    license_expiry_date?: Date | string | null
    date_of_birth?: Date | string | null
    hire_date?: Date | string | null
    phone?: string | null
    email?: string | null
    address?: string | null
    emergency_contact_name?: string | null
    emergency_contact_phone?: string | null
    salary?: Decimal | DecimalJsLike | number | string | null
    status?: string | null
    safety_score?: Decimal | DecimalJsLike | number | string | null
    total_miles_driven?: Decimal | DecimalJsLike | number | string | null
    years_experience?: number | null
    created_at?: Date | string | null
  }

  export type reportsCreateManyCompaniesInput = {
    report_id?: number
    report_name: string
    report_type: string
    generated_by?: number | null
    generation_date?: Date | string | null
    date_range_start?: Date | string | null
    date_range_end?: Date | string | null
    parameters?: NullableJsonNullValueInput | InputJsonValue
    file_path?: string | null
    status?: string | null
  }

  export type service_providersCreateManyCompaniesInput = {
    provider_id?: number
    provider_name: string
    service_type: string
    contact_person?: string | null
    phone?: string | null
    email?: string | null
    address?: string | null
    hourly_rate?: Decimal | DecimalJsLike | number | string | null
    rating?: Decimal | DecimalJsLike | number | string | null
    is_preferred?: boolean | null
  }

  export type usersCreateManyCompaniesInput = {
    user_id?: number
    username: string
    email: string
    password_hash: string
    first_name?: string | null
    last_name?: string | null
    role: string
    phone?: string | null
    is_active?: boolean | null
    last_login?: Date | string | null
    created_at?: Date | string | null
  }

  export type vehiclesCreateManyCompaniesInput = {
    vehicle_id?: number
    vehicle_type_id?: number | null
    vin: string
    license_plate: string
    make: string
    model: string
    year: number
    color?: string | null
    fuel_type: string
    engine_size?: string | null
    transmission?: string | null
    purchase_date?: Date | string | null
    purchase_price?: Decimal | DecimalJsLike | number | string | null
    current_value?: Decimal | DecimalJsLike | number | string | null
    odometer_reading?: Decimal | DecimalJsLike | number | string | null
    fuel_capacity?: Decimal | DecimalJsLike | number | string | null
    insurance_policy_number?: string | null
    insurance_expiry?: Date | string | null
    registration_expiry?: Date | string | null
    status?: string | null
    gps_device_id?: string | null
    assigned_driver_id?: number | null
    department_id?: number | null
    notes?: string | null
    created_at?: Date | string | null
  }

  export type departmentsUpdateWithoutCompaniesInput = {
    department_name?: StringFieldUpdateOperationsInput | string
    manager_name?: NullableStringFieldUpdateOperationsInput | string | null
    budget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    vehicles?: vehiclesUpdateManyWithoutDepartmentsNestedInput
  }

  export type departmentsUncheckedUpdateWithoutCompaniesInput = {
    department_id?: IntFieldUpdateOperationsInput | number
    department_name?: StringFieldUpdateOperationsInput | string
    manager_name?: NullableStringFieldUpdateOperationsInput | string | null
    budget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    vehicles?: vehiclesUncheckedUpdateManyWithoutDepartmentsNestedInput
  }

  export type departmentsUncheckedUpdateManyWithoutCompaniesInput = {
    department_id?: IntFieldUpdateOperationsInput | number
    department_name?: StringFieldUpdateOperationsInput | string
    manager_name?: NullableStringFieldUpdateOperationsInput | string | null
    budget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type driversUpdateWithoutCompaniesInput = {
    employee_id?: NullableStringFieldUpdateOperationsInput | string | null
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: StringFieldUpdateOperationsInput | string
    license_number?: StringFieldUpdateOperationsInput | string
    license_class?: NullableStringFieldUpdateOperationsInput | string | null
    license_expiry_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    date_of_birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hire_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    emergency_contact_name?: NullableStringFieldUpdateOperationsInput | string | null
    emergency_contact_phone?: NullableStringFieldUpdateOperationsInput | string | null
    salary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    safety_score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    total_miles_driven?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    years_experience?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    driver_certifications?: driver_certificationsUpdateManyWithoutDriversNestedInput
    expenses?: expensesUpdateManyWithoutDriversNestedInput
    fuel_transactions?: fuel_transactionsUpdateManyWithoutDriversNestedInput
    incidents?: incidentsUpdateManyWithoutDriversNestedInput
    trips?: tripsUpdateManyWithoutDriversNestedInput
    vehicle_assignments?: vehicle_assignmentsUpdateManyWithoutDriversNestedInput
    vehicles?: vehiclesUpdateManyWithoutDriversNestedInput
  }

  export type driversUncheckedUpdateWithoutCompaniesInput = {
    driver_id?: IntFieldUpdateOperationsInput | number
    employee_id?: NullableStringFieldUpdateOperationsInput | string | null
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: StringFieldUpdateOperationsInput | string
    license_number?: StringFieldUpdateOperationsInput | string
    license_class?: NullableStringFieldUpdateOperationsInput | string | null
    license_expiry_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    date_of_birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hire_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    emergency_contact_name?: NullableStringFieldUpdateOperationsInput | string | null
    emergency_contact_phone?: NullableStringFieldUpdateOperationsInput | string | null
    salary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    safety_score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    total_miles_driven?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    years_experience?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    driver_certifications?: driver_certificationsUncheckedUpdateManyWithoutDriversNestedInput
    expenses?: expensesUncheckedUpdateManyWithoutDriversNestedInput
    fuel_transactions?: fuel_transactionsUncheckedUpdateManyWithoutDriversNestedInput
    incidents?: incidentsUncheckedUpdateManyWithoutDriversNestedInput
    trips?: tripsUncheckedUpdateManyWithoutDriversNestedInput
    vehicle_assignments?: vehicle_assignmentsUncheckedUpdateManyWithoutDriversNestedInput
    vehicles?: vehiclesUncheckedUpdateManyWithoutDriversNestedInput
  }

  export type driversUncheckedUpdateManyWithoutCompaniesInput = {
    driver_id?: IntFieldUpdateOperationsInput | number
    employee_id?: NullableStringFieldUpdateOperationsInput | string | null
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: StringFieldUpdateOperationsInput | string
    license_number?: StringFieldUpdateOperationsInput | string
    license_class?: NullableStringFieldUpdateOperationsInput | string | null
    license_expiry_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    date_of_birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hire_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    emergency_contact_name?: NullableStringFieldUpdateOperationsInput | string | null
    emergency_contact_phone?: NullableStringFieldUpdateOperationsInput | string | null
    salary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    safety_score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    total_miles_driven?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    years_experience?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type reportsUpdateWithoutCompaniesInput = {
    report_name?: StringFieldUpdateOperationsInput | string
    report_type?: StringFieldUpdateOperationsInput | string
    generation_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    date_range_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    date_range_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parameters?: NullableJsonNullValueInput | InputJsonValue
    file_path?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    users?: usersUpdateOneWithoutReportsNestedInput
  }

  export type reportsUncheckedUpdateWithoutCompaniesInput = {
    report_id?: IntFieldUpdateOperationsInput | number
    report_name?: StringFieldUpdateOperationsInput | string
    report_type?: StringFieldUpdateOperationsInput | string
    generated_by?: NullableIntFieldUpdateOperationsInput | number | null
    generation_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    date_range_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    date_range_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parameters?: NullableJsonNullValueInput | InputJsonValue
    file_path?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type reportsUncheckedUpdateManyWithoutCompaniesInput = {
    report_id?: IntFieldUpdateOperationsInput | number
    report_name?: StringFieldUpdateOperationsInput | string
    report_type?: StringFieldUpdateOperationsInput | string
    generated_by?: NullableIntFieldUpdateOperationsInput | number | null
    generation_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    date_range_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    date_range_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parameters?: NullableJsonNullValueInput | InputJsonValue
    file_path?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type service_providersUpdateWithoutCompaniesInput = {
    provider_name?: StringFieldUpdateOperationsInput | string
    service_type?: StringFieldUpdateOperationsInput | string
    contact_person?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    hourly_rate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    is_preferred?: NullableBoolFieldUpdateOperationsInput | boolean | null
    maintenance_records?: maintenance_recordsUpdateManyWithoutService_providersNestedInput
  }

  export type service_providersUncheckedUpdateWithoutCompaniesInput = {
    provider_id?: IntFieldUpdateOperationsInput | number
    provider_name?: StringFieldUpdateOperationsInput | string
    service_type?: StringFieldUpdateOperationsInput | string
    contact_person?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    hourly_rate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    is_preferred?: NullableBoolFieldUpdateOperationsInput | boolean | null
    maintenance_records?: maintenance_recordsUncheckedUpdateManyWithoutService_providersNestedInput
  }

  export type service_providersUncheckedUpdateManyWithoutCompaniesInput = {
    provider_id?: IntFieldUpdateOperationsInput | number
    provider_name?: StringFieldUpdateOperationsInput | string
    service_type?: StringFieldUpdateOperationsInput | string
    contact_person?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    hourly_rate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    is_preferred?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type usersUpdateWithoutCompaniesInput = {
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password_hash?: StringFieldUpdateOperationsInput | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reports?: reportsUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutCompaniesInput = {
    user_id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password_hash?: StringFieldUpdateOperationsInput | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reports?: reportsUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateManyWithoutCompaniesInput = {
    user_id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password_hash?: StringFieldUpdateOperationsInput | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type vehiclesUpdateWithoutCompaniesInput = {
    vin?: StringFieldUpdateOperationsInput | string
    license_plate?: StringFieldUpdateOperationsInput | string
    make?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    color?: NullableStringFieldUpdateOperationsInput | string | null
    fuel_type?: StringFieldUpdateOperationsInput | string
    engine_size?: NullableStringFieldUpdateOperationsInput | string | null
    transmission?: NullableStringFieldUpdateOperationsInput | string | null
    purchase_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchase_price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    current_value?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    odometer_reading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fuel_capacity?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    insurance_policy_number?: NullableStringFieldUpdateOperationsInput | string | null
    insurance_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    registration_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    gps_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expenses?: expensesUpdateManyWithoutVehiclesNestedInput
    fuel_transactions?: fuel_transactionsUpdateManyWithoutVehiclesNestedInput
    gps_tracking?: gps_trackingUpdateManyWithoutVehiclesNestedInput
    incidents?: incidentsUpdateManyWithoutVehiclesNestedInput
    maintenance_records?: maintenance_recordsUpdateManyWithoutVehiclesNestedInput
    safety_inspections?: safety_inspectionsUpdateManyWithoutVehiclesNestedInput
    trips?: tripsUpdateManyWithoutVehiclesNestedInput
    vehicle_assignments?: vehicle_assignmentsUpdateManyWithoutVehiclesNestedInput
    drivers?: driversUpdateOneWithoutVehiclesNestedInput
    departments?: departmentsUpdateOneWithoutVehiclesNestedInput
    vehicle_types?: vehicle_typesUpdateOneWithoutVehiclesNestedInput
  }

  export type vehiclesUncheckedUpdateWithoutCompaniesInput = {
    vehicle_id?: IntFieldUpdateOperationsInput | number
    vehicle_type_id?: NullableIntFieldUpdateOperationsInput | number | null
    vin?: StringFieldUpdateOperationsInput | string
    license_plate?: StringFieldUpdateOperationsInput | string
    make?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    color?: NullableStringFieldUpdateOperationsInput | string | null
    fuel_type?: StringFieldUpdateOperationsInput | string
    engine_size?: NullableStringFieldUpdateOperationsInput | string | null
    transmission?: NullableStringFieldUpdateOperationsInput | string | null
    purchase_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchase_price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    current_value?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    odometer_reading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fuel_capacity?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    insurance_policy_number?: NullableStringFieldUpdateOperationsInput | string | null
    insurance_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    registration_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    gps_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    assigned_driver_id?: NullableIntFieldUpdateOperationsInput | number | null
    department_id?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expenses?: expensesUncheckedUpdateManyWithoutVehiclesNestedInput
    fuel_transactions?: fuel_transactionsUncheckedUpdateManyWithoutVehiclesNestedInput
    gps_tracking?: gps_trackingUncheckedUpdateManyWithoutVehiclesNestedInput
    incidents?: incidentsUncheckedUpdateManyWithoutVehiclesNestedInput
    maintenance_records?: maintenance_recordsUncheckedUpdateManyWithoutVehiclesNestedInput
    safety_inspections?: safety_inspectionsUncheckedUpdateManyWithoutVehiclesNestedInput
    trips?: tripsUncheckedUpdateManyWithoutVehiclesNestedInput
    vehicle_assignments?: vehicle_assignmentsUncheckedUpdateManyWithoutVehiclesNestedInput
  }

  export type vehiclesUncheckedUpdateManyWithoutCompaniesInput = {
    vehicle_id?: IntFieldUpdateOperationsInput | number
    vehicle_type_id?: NullableIntFieldUpdateOperationsInput | number | null
    vin?: StringFieldUpdateOperationsInput | string
    license_plate?: StringFieldUpdateOperationsInput | string
    make?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    color?: NullableStringFieldUpdateOperationsInput | string | null
    fuel_type?: StringFieldUpdateOperationsInput | string
    engine_size?: NullableStringFieldUpdateOperationsInput | string | null
    transmission?: NullableStringFieldUpdateOperationsInput | string | null
    purchase_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchase_price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    current_value?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    odometer_reading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fuel_capacity?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    insurance_policy_number?: NullableStringFieldUpdateOperationsInput | string | null
    insurance_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    registration_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    gps_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    assigned_driver_id?: NullableIntFieldUpdateOperationsInput | number | null
    department_id?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type expensesCreateManyCost_categoriesInput = {
    expense_id?: number
    vehicle_id?: number | null
    driver_id?: number | null
    expense_date: Date | string
    amount: Decimal | DecimalJsLike | number | string
    description?: string | null
    vendor?: string | null
    invoice_number?: string | null
    receipt_available?: boolean | null
    approved_by?: string | null
    approval_date?: Date | string | null
    reimbursable?: boolean | null
    notes?: string | null
    created_at?: Date | string | null
  }

  export type expensesUpdateWithoutCost_categoriesInput = {
    expense_date?: DateTimeFieldUpdateOperationsInput | Date | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    vendor?: NullableStringFieldUpdateOperationsInput | string | null
    invoice_number?: NullableStringFieldUpdateOperationsInput | string | null
    receipt_available?: NullableBoolFieldUpdateOperationsInput | boolean | null
    approved_by?: NullableStringFieldUpdateOperationsInput | string | null
    approval_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reimbursable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    drivers?: driversUpdateOneWithoutExpensesNestedInput
    vehicles?: vehiclesUpdateOneWithoutExpensesNestedInput
  }

  export type expensesUncheckedUpdateWithoutCost_categoriesInput = {
    expense_id?: IntFieldUpdateOperationsInput | number
    vehicle_id?: NullableIntFieldUpdateOperationsInput | number | null
    driver_id?: NullableIntFieldUpdateOperationsInput | number | null
    expense_date?: DateTimeFieldUpdateOperationsInput | Date | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    vendor?: NullableStringFieldUpdateOperationsInput | string | null
    invoice_number?: NullableStringFieldUpdateOperationsInput | string | null
    receipt_available?: NullableBoolFieldUpdateOperationsInput | boolean | null
    approved_by?: NullableStringFieldUpdateOperationsInput | string | null
    approval_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reimbursable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type expensesUncheckedUpdateManyWithoutCost_categoriesInput = {
    expense_id?: IntFieldUpdateOperationsInput | number
    vehicle_id?: NullableIntFieldUpdateOperationsInput | number | null
    driver_id?: NullableIntFieldUpdateOperationsInput | number | null
    expense_date?: DateTimeFieldUpdateOperationsInput | Date | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    vendor?: NullableStringFieldUpdateOperationsInput | string | null
    invoice_number?: NullableStringFieldUpdateOperationsInput | string | null
    receipt_available?: NullableBoolFieldUpdateOperationsInput | boolean | null
    approved_by?: NullableStringFieldUpdateOperationsInput | string | null
    approval_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reimbursable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type vehiclesCreateManyDepartmentsInput = {
    vehicle_id?: number
    company_id?: number | null
    vehicle_type_id?: number | null
    vin: string
    license_plate: string
    make: string
    model: string
    year: number
    color?: string | null
    fuel_type: string
    engine_size?: string | null
    transmission?: string | null
    purchase_date?: Date | string | null
    purchase_price?: Decimal | DecimalJsLike | number | string | null
    current_value?: Decimal | DecimalJsLike | number | string | null
    odometer_reading?: Decimal | DecimalJsLike | number | string | null
    fuel_capacity?: Decimal | DecimalJsLike | number | string | null
    insurance_policy_number?: string | null
    insurance_expiry?: Date | string | null
    registration_expiry?: Date | string | null
    status?: string | null
    gps_device_id?: string | null
    assigned_driver_id?: number | null
    notes?: string | null
    created_at?: Date | string | null
  }

  export type vehiclesUpdateWithoutDepartmentsInput = {
    vin?: StringFieldUpdateOperationsInput | string
    license_plate?: StringFieldUpdateOperationsInput | string
    make?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    color?: NullableStringFieldUpdateOperationsInput | string | null
    fuel_type?: StringFieldUpdateOperationsInput | string
    engine_size?: NullableStringFieldUpdateOperationsInput | string | null
    transmission?: NullableStringFieldUpdateOperationsInput | string | null
    purchase_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchase_price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    current_value?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    odometer_reading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fuel_capacity?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    insurance_policy_number?: NullableStringFieldUpdateOperationsInput | string | null
    insurance_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    registration_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    gps_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expenses?: expensesUpdateManyWithoutVehiclesNestedInput
    fuel_transactions?: fuel_transactionsUpdateManyWithoutVehiclesNestedInput
    gps_tracking?: gps_trackingUpdateManyWithoutVehiclesNestedInput
    incidents?: incidentsUpdateManyWithoutVehiclesNestedInput
    maintenance_records?: maintenance_recordsUpdateManyWithoutVehiclesNestedInput
    safety_inspections?: safety_inspectionsUpdateManyWithoutVehiclesNestedInput
    trips?: tripsUpdateManyWithoutVehiclesNestedInput
    vehicle_assignments?: vehicle_assignmentsUpdateManyWithoutVehiclesNestedInput
    drivers?: driversUpdateOneWithoutVehiclesNestedInput
    companies?: companiesUpdateOneWithoutVehiclesNestedInput
    vehicle_types?: vehicle_typesUpdateOneWithoutVehiclesNestedInput
  }

  export type vehiclesUncheckedUpdateWithoutDepartmentsInput = {
    vehicle_id?: IntFieldUpdateOperationsInput | number
    company_id?: NullableIntFieldUpdateOperationsInput | number | null
    vehicle_type_id?: NullableIntFieldUpdateOperationsInput | number | null
    vin?: StringFieldUpdateOperationsInput | string
    license_plate?: StringFieldUpdateOperationsInput | string
    make?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    color?: NullableStringFieldUpdateOperationsInput | string | null
    fuel_type?: StringFieldUpdateOperationsInput | string
    engine_size?: NullableStringFieldUpdateOperationsInput | string | null
    transmission?: NullableStringFieldUpdateOperationsInput | string | null
    purchase_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchase_price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    current_value?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    odometer_reading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fuel_capacity?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    insurance_policy_number?: NullableStringFieldUpdateOperationsInput | string | null
    insurance_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    registration_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    gps_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    assigned_driver_id?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expenses?: expensesUncheckedUpdateManyWithoutVehiclesNestedInput
    fuel_transactions?: fuel_transactionsUncheckedUpdateManyWithoutVehiclesNestedInput
    gps_tracking?: gps_trackingUncheckedUpdateManyWithoutVehiclesNestedInput
    incidents?: incidentsUncheckedUpdateManyWithoutVehiclesNestedInput
    maintenance_records?: maintenance_recordsUncheckedUpdateManyWithoutVehiclesNestedInput
    safety_inspections?: safety_inspectionsUncheckedUpdateManyWithoutVehiclesNestedInput
    trips?: tripsUncheckedUpdateManyWithoutVehiclesNestedInput
    vehicle_assignments?: vehicle_assignmentsUncheckedUpdateManyWithoutVehiclesNestedInput
  }

  export type vehiclesUncheckedUpdateManyWithoutDepartmentsInput = {
    vehicle_id?: IntFieldUpdateOperationsInput | number
    company_id?: NullableIntFieldUpdateOperationsInput | number | null
    vehicle_type_id?: NullableIntFieldUpdateOperationsInput | number | null
    vin?: StringFieldUpdateOperationsInput | string
    license_plate?: StringFieldUpdateOperationsInput | string
    make?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    color?: NullableStringFieldUpdateOperationsInput | string | null
    fuel_type?: StringFieldUpdateOperationsInput | string
    engine_size?: NullableStringFieldUpdateOperationsInput | string | null
    transmission?: NullableStringFieldUpdateOperationsInput | string | null
    purchase_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchase_price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    current_value?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    odometer_reading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fuel_capacity?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    insurance_policy_number?: NullableStringFieldUpdateOperationsInput | string | null
    insurance_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    registration_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    gps_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    assigned_driver_id?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type driver_certificationsCreateManyDriversInput = {
    certification_id?: number
    certification_name?: string | null
    issuing_authority?: string | null
    issue_date?: Date | string | null
    expiry_date?: Date | string | null
    certification_number?: string | null
    is_active?: boolean | null
  }

  export type expensesCreateManyDriversInput = {
    expense_id?: number
    vehicle_id?: number | null
    category_id?: number | null
    expense_date: Date | string
    amount: Decimal | DecimalJsLike | number | string
    description?: string | null
    vendor?: string | null
    invoice_number?: string | null
    receipt_available?: boolean | null
    approved_by?: string | null
    approval_date?: Date | string | null
    reimbursable?: boolean | null
    notes?: string | null
    created_at?: Date | string | null
  }

  export type fuel_transactionsCreateManyDriversInput = {
    transaction_id?: number
    vehicle_id?: number | null
    fuel_station_id?: number | null
    transaction_date: Date | string
    odometer_reading?: Decimal | DecimalJsLike | number | string | null
    gallons_purchased?: Decimal | DecimalJsLike | number | string | null
    price_per_gallon?: Decimal | DecimalJsLike | number | string | null
    total_amount?: Decimal | DecimalJsLike | number | string | null
    fuel_type?: string | null
    payment_method?: string | null
    card_number_last_four?: string | null
    receipt_number?: string | null
    mpg_calculated?: Decimal | DecimalJsLike | number | string | null
    notes?: string | null
  }

  export type incidentsCreateManyDriversInput = {
    incident_id?: number
    vehicle_id?: number | null
    incident_date: Date | string
    incident_type: string
    severity: string
    location?: string | null
    description: string
    police_report_number?: string | null
    insurance_claim_number?: string | null
    estimated_damage_cost?: Decimal | DecimalJsLike | number | string | null
    actual_repair_cost?: Decimal | DecimalJsLike | number | string | null
    injuries_reported?: boolean | null
    fatalities?: boolean | null
    at_fault?: boolean | null
    weather_conditions?: string | null
    road_conditions?: string | null
    photos_available?: boolean | null
    status?: string | null
    resolution_date?: Date | string | null
    lessons_learned?: string | null
    created_at?: Date | string | null
  }

  export type tripsCreateManyDriversInput = {
    trip_id?: number
    vehicle_id?: number | null
    start_time?: Date | string | null
    end_time?: Date | string | null
    start_location?: string | null
    end_location?: string | null
    start_odometer?: Decimal | DecimalJsLike | number | string | null
    end_odometer?: Decimal | DecimalJsLike | number | string | null
    distance_traveled?: Decimal | DecimalJsLike | number | string | null
    purpose?: string | null
    trip_type?: string | null
    fuel_consumed?: Decimal | DecimalJsLike | number | string | null
    average_speed?: Decimal | DecimalJsLike | number | string | null
    max_speed?: Decimal | DecimalJsLike | number | string | null
    idle_time_minutes?: number | null
    harsh_braking_count?: number | null
    harsh_acceleration_count?: number | null
    speeding_violations?: number | null
    route_efficiency_score?: Decimal | DecimalJsLike | number | string | null
    cost?: Decimal | DecimalJsLike | number | string | null
    notes?: string | null
    created_at?: Date | string | null
  }

  export type vehicle_assignmentsCreateManyDriversInput = {
    assignment_id?: number
    vehicle_id?: number | null
    assigned_date: Date | string
    end_date?: Date | string | null
    assignment_type?: string | null
    notes?: string | null
    is_active?: boolean | null
  }

  export type vehiclesCreateManyDriversInput = {
    vehicle_id?: number
    company_id?: number | null
    vehicle_type_id?: number | null
    vin: string
    license_plate: string
    make: string
    model: string
    year: number
    color?: string | null
    fuel_type: string
    engine_size?: string | null
    transmission?: string | null
    purchase_date?: Date | string | null
    purchase_price?: Decimal | DecimalJsLike | number | string | null
    current_value?: Decimal | DecimalJsLike | number | string | null
    odometer_reading?: Decimal | DecimalJsLike | number | string | null
    fuel_capacity?: Decimal | DecimalJsLike | number | string | null
    insurance_policy_number?: string | null
    insurance_expiry?: Date | string | null
    registration_expiry?: Date | string | null
    status?: string | null
    gps_device_id?: string | null
    department_id?: number | null
    notes?: string | null
    created_at?: Date | string | null
  }

  export type driver_certificationsUpdateWithoutDriversInput = {
    certification_name?: NullableStringFieldUpdateOperationsInput | string | null
    issuing_authority?: NullableStringFieldUpdateOperationsInput | string | null
    issue_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiry_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    certification_number?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type driver_certificationsUncheckedUpdateWithoutDriversInput = {
    certification_id?: IntFieldUpdateOperationsInput | number
    certification_name?: NullableStringFieldUpdateOperationsInput | string | null
    issuing_authority?: NullableStringFieldUpdateOperationsInput | string | null
    issue_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiry_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    certification_number?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type driver_certificationsUncheckedUpdateManyWithoutDriversInput = {
    certification_id?: IntFieldUpdateOperationsInput | number
    certification_name?: NullableStringFieldUpdateOperationsInput | string | null
    issuing_authority?: NullableStringFieldUpdateOperationsInput | string | null
    issue_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiry_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    certification_number?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type expensesUpdateWithoutDriversInput = {
    expense_date?: DateTimeFieldUpdateOperationsInput | Date | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    vendor?: NullableStringFieldUpdateOperationsInput | string | null
    invoice_number?: NullableStringFieldUpdateOperationsInput | string | null
    receipt_available?: NullableBoolFieldUpdateOperationsInput | boolean | null
    approved_by?: NullableStringFieldUpdateOperationsInput | string | null
    approval_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reimbursable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cost_categories?: cost_categoriesUpdateOneWithoutExpensesNestedInput
    vehicles?: vehiclesUpdateOneWithoutExpensesNestedInput
  }

  export type expensesUncheckedUpdateWithoutDriversInput = {
    expense_id?: IntFieldUpdateOperationsInput | number
    vehicle_id?: NullableIntFieldUpdateOperationsInput | number | null
    category_id?: NullableIntFieldUpdateOperationsInput | number | null
    expense_date?: DateTimeFieldUpdateOperationsInput | Date | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    vendor?: NullableStringFieldUpdateOperationsInput | string | null
    invoice_number?: NullableStringFieldUpdateOperationsInput | string | null
    receipt_available?: NullableBoolFieldUpdateOperationsInput | boolean | null
    approved_by?: NullableStringFieldUpdateOperationsInput | string | null
    approval_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reimbursable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type expensesUncheckedUpdateManyWithoutDriversInput = {
    expense_id?: IntFieldUpdateOperationsInput | number
    vehicle_id?: NullableIntFieldUpdateOperationsInput | number | null
    category_id?: NullableIntFieldUpdateOperationsInput | number | null
    expense_date?: DateTimeFieldUpdateOperationsInput | Date | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    vendor?: NullableStringFieldUpdateOperationsInput | string | null
    invoice_number?: NullableStringFieldUpdateOperationsInput | string | null
    receipt_available?: NullableBoolFieldUpdateOperationsInput | boolean | null
    approved_by?: NullableStringFieldUpdateOperationsInput | string | null
    approval_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reimbursable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type fuel_transactionsUpdateWithoutDriversInput = {
    transaction_date?: DateTimeFieldUpdateOperationsInput | Date | string
    odometer_reading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    gallons_purchased?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    price_per_gallon?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    total_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fuel_type?: NullableStringFieldUpdateOperationsInput | string | null
    payment_method?: NullableStringFieldUpdateOperationsInput | string | null
    card_number_last_four?: NullableStringFieldUpdateOperationsInput | string | null
    receipt_number?: NullableStringFieldUpdateOperationsInput | string | null
    mpg_calculated?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    fuel_stations?: fuel_stationsUpdateOneWithoutFuel_transactionsNestedInput
    vehicles?: vehiclesUpdateOneWithoutFuel_transactionsNestedInput
  }

  export type fuel_transactionsUncheckedUpdateWithoutDriversInput = {
    transaction_id?: IntFieldUpdateOperationsInput | number
    vehicle_id?: NullableIntFieldUpdateOperationsInput | number | null
    fuel_station_id?: NullableIntFieldUpdateOperationsInput | number | null
    transaction_date?: DateTimeFieldUpdateOperationsInput | Date | string
    odometer_reading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    gallons_purchased?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    price_per_gallon?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    total_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fuel_type?: NullableStringFieldUpdateOperationsInput | string | null
    payment_method?: NullableStringFieldUpdateOperationsInput | string | null
    card_number_last_four?: NullableStringFieldUpdateOperationsInput | string | null
    receipt_number?: NullableStringFieldUpdateOperationsInput | string | null
    mpg_calculated?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type fuel_transactionsUncheckedUpdateManyWithoutDriversInput = {
    transaction_id?: IntFieldUpdateOperationsInput | number
    vehicle_id?: NullableIntFieldUpdateOperationsInput | number | null
    fuel_station_id?: NullableIntFieldUpdateOperationsInput | number | null
    transaction_date?: DateTimeFieldUpdateOperationsInput | Date | string
    odometer_reading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    gallons_purchased?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    price_per_gallon?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    total_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fuel_type?: NullableStringFieldUpdateOperationsInput | string | null
    payment_method?: NullableStringFieldUpdateOperationsInput | string | null
    card_number_last_four?: NullableStringFieldUpdateOperationsInput | string | null
    receipt_number?: NullableStringFieldUpdateOperationsInput | string | null
    mpg_calculated?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type incidentsUpdateWithoutDriversInput = {
    incident_date?: DateTimeFieldUpdateOperationsInput | Date | string
    incident_type?: StringFieldUpdateOperationsInput | string
    severity?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    police_report_number?: NullableStringFieldUpdateOperationsInput | string | null
    insurance_claim_number?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_damage_cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    actual_repair_cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    injuries_reported?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fatalities?: NullableBoolFieldUpdateOperationsInput | boolean | null
    at_fault?: NullableBoolFieldUpdateOperationsInput | boolean | null
    weather_conditions?: NullableStringFieldUpdateOperationsInput | string | null
    road_conditions?: NullableStringFieldUpdateOperationsInput | string | null
    photos_available?: NullableBoolFieldUpdateOperationsInput | boolean | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    resolution_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lessons_learned?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vehicles?: vehiclesUpdateOneWithoutIncidentsNestedInput
  }

  export type incidentsUncheckedUpdateWithoutDriversInput = {
    incident_id?: IntFieldUpdateOperationsInput | number
    vehicle_id?: NullableIntFieldUpdateOperationsInput | number | null
    incident_date?: DateTimeFieldUpdateOperationsInput | Date | string
    incident_type?: StringFieldUpdateOperationsInput | string
    severity?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    police_report_number?: NullableStringFieldUpdateOperationsInput | string | null
    insurance_claim_number?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_damage_cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    actual_repair_cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    injuries_reported?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fatalities?: NullableBoolFieldUpdateOperationsInput | boolean | null
    at_fault?: NullableBoolFieldUpdateOperationsInput | boolean | null
    weather_conditions?: NullableStringFieldUpdateOperationsInput | string | null
    road_conditions?: NullableStringFieldUpdateOperationsInput | string | null
    photos_available?: NullableBoolFieldUpdateOperationsInput | boolean | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    resolution_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lessons_learned?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type incidentsUncheckedUpdateManyWithoutDriversInput = {
    incident_id?: IntFieldUpdateOperationsInput | number
    vehicle_id?: NullableIntFieldUpdateOperationsInput | number | null
    incident_date?: DateTimeFieldUpdateOperationsInput | Date | string
    incident_type?: StringFieldUpdateOperationsInput | string
    severity?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    police_report_number?: NullableStringFieldUpdateOperationsInput | string | null
    insurance_claim_number?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_damage_cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    actual_repair_cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    injuries_reported?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fatalities?: NullableBoolFieldUpdateOperationsInput | boolean | null
    at_fault?: NullableBoolFieldUpdateOperationsInput | boolean | null
    weather_conditions?: NullableStringFieldUpdateOperationsInput | string | null
    road_conditions?: NullableStringFieldUpdateOperationsInput | string | null
    photos_available?: NullableBoolFieldUpdateOperationsInput | boolean | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    resolution_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lessons_learned?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type tripsUpdateWithoutDriversInput = {
    start_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    start_location?: NullableStringFieldUpdateOperationsInput | string | null
    end_location?: NullableStringFieldUpdateOperationsInput | string | null
    start_odometer?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    end_odometer?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    distance_traveled?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    purpose?: NullableStringFieldUpdateOperationsInput | string | null
    trip_type?: NullableStringFieldUpdateOperationsInput | string | null
    fuel_consumed?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    average_speed?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    max_speed?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    idle_time_minutes?: NullableIntFieldUpdateOperationsInput | number | null
    harsh_braking_count?: NullableIntFieldUpdateOperationsInput | number | null
    harsh_acceleration_count?: NullableIntFieldUpdateOperationsInput | number | null
    speeding_violations?: NullableIntFieldUpdateOperationsInput | number | null
    route_efficiency_score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vehicles?: vehiclesUpdateOneWithoutTripsNestedInput
  }

  export type tripsUncheckedUpdateWithoutDriversInput = {
    trip_id?: IntFieldUpdateOperationsInput | number
    vehicle_id?: NullableIntFieldUpdateOperationsInput | number | null
    start_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    start_location?: NullableStringFieldUpdateOperationsInput | string | null
    end_location?: NullableStringFieldUpdateOperationsInput | string | null
    start_odometer?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    end_odometer?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    distance_traveled?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    purpose?: NullableStringFieldUpdateOperationsInput | string | null
    trip_type?: NullableStringFieldUpdateOperationsInput | string | null
    fuel_consumed?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    average_speed?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    max_speed?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    idle_time_minutes?: NullableIntFieldUpdateOperationsInput | number | null
    harsh_braking_count?: NullableIntFieldUpdateOperationsInput | number | null
    harsh_acceleration_count?: NullableIntFieldUpdateOperationsInput | number | null
    speeding_violations?: NullableIntFieldUpdateOperationsInput | number | null
    route_efficiency_score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type tripsUncheckedUpdateManyWithoutDriversInput = {
    trip_id?: IntFieldUpdateOperationsInput | number
    vehicle_id?: NullableIntFieldUpdateOperationsInput | number | null
    start_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    start_location?: NullableStringFieldUpdateOperationsInput | string | null
    end_location?: NullableStringFieldUpdateOperationsInput | string | null
    start_odometer?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    end_odometer?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    distance_traveled?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    purpose?: NullableStringFieldUpdateOperationsInput | string | null
    trip_type?: NullableStringFieldUpdateOperationsInput | string | null
    fuel_consumed?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    average_speed?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    max_speed?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    idle_time_minutes?: NullableIntFieldUpdateOperationsInput | number | null
    harsh_braking_count?: NullableIntFieldUpdateOperationsInput | number | null
    harsh_acceleration_count?: NullableIntFieldUpdateOperationsInput | number | null
    speeding_violations?: NullableIntFieldUpdateOperationsInput | number | null
    route_efficiency_score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type vehicle_assignmentsUpdateWithoutDriversInput = {
    assigned_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignment_type?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    vehicles?: vehiclesUpdateOneWithoutVehicle_assignmentsNestedInput
  }

  export type vehicle_assignmentsUncheckedUpdateWithoutDriversInput = {
    assignment_id?: IntFieldUpdateOperationsInput | number
    vehicle_id?: NullableIntFieldUpdateOperationsInput | number | null
    assigned_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignment_type?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type vehicle_assignmentsUncheckedUpdateManyWithoutDriversInput = {
    assignment_id?: IntFieldUpdateOperationsInput | number
    vehicle_id?: NullableIntFieldUpdateOperationsInput | number | null
    assigned_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignment_type?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type vehiclesUpdateWithoutDriversInput = {
    vin?: StringFieldUpdateOperationsInput | string
    license_plate?: StringFieldUpdateOperationsInput | string
    make?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    color?: NullableStringFieldUpdateOperationsInput | string | null
    fuel_type?: StringFieldUpdateOperationsInput | string
    engine_size?: NullableStringFieldUpdateOperationsInput | string | null
    transmission?: NullableStringFieldUpdateOperationsInput | string | null
    purchase_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchase_price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    current_value?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    odometer_reading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fuel_capacity?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    insurance_policy_number?: NullableStringFieldUpdateOperationsInput | string | null
    insurance_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    registration_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    gps_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expenses?: expensesUpdateManyWithoutVehiclesNestedInput
    fuel_transactions?: fuel_transactionsUpdateManyWithoutVehiclesNestedInput
    gps_tracking?: gps_trackingUpdateManyWithoutVehiclesNestedInput
    incidents?: incidentsUpdateManyWithoutVehiclesNestedInput
    maintenance_records?: maintenance_recordsUpdateManyWithoutVehiclesNestedInput
    safety_inspections?: safety_inspectionsUpdateManyWithoutVehiclesNestedInput
    trips?: tripsUpdateManyWithoutVehiclesNestedInput
    vehicle_assignments?: vehicle_assignmentsUpdateManyWithoutVehiclesNestedInput
    companies?: companiesUpdateOneWithoutVehiclesNestedInput
    departments?: departmentsUpdateOneWithoutVehiclesNestedInput
    vehicle_types?: vehicle_typesUpdateOneWithoutVehiclesNestedInput
  }

  export type vehiclesUncheckedUpdateWithoutDriversInput = {
    vehicle_id?: IntFieldUpdateOperationsInput | number
    company_id?: NullableIntFieldUpdateOperationsInput | number | null
    vehicle_type_id?: NullableIntFieldUpdateOperationsInput | number | null
    vin?: StringFieldUpdateOperationsInput | string
    license_plate?: StringFieldUpdateOperationsInput | string
    make?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    color?: NullableStringFieldUpdateOperationsInput | string | null
    fuel_type?: StringFieldUpdateOperationsInput | string
    engine_size?: NullableStringFieldUpdateOperationsInput | string | null
    transmission?: NullableStringFieldUpdateOperationsInput | string | null
    purchase_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchase_price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    current_value?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    odometer_reading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fuel_capacity?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    insurance_policy_number?: NullableStringFieldUpdateOperationsInput | string | null
    insurance_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    registration_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    gps_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    department_id?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expenses?: expensesUncheckedUpdateManyWithoutVehiclesNestedInput
    fuel_transactions?: fuel_transactionsUncheckedUpdateManyWithoutVehiclesNestedInput
    gps_tracking?: gps_trackingUncheckedUpdateManyWithoutVehiclesNestedInput
    incidents?: incidentsUncheckedUpdateManyWithoutVehiclesNestedInput
    maintenance_records?: maintenance_recordsUncheckedUpdateManyWithoutVehiclesNestedInput
    safety_inspections?: safety_inspectionsUncheckedUpdateManyWithoutVehiclesNestedInput
    trips?: tripsUncheckedUpdateManyWithoutVehiclesNestedInput
    vehicle_assignments?: vehicle_assignmentsUncheckedUpdateManyWithoutVehiclesNestedInput
  }

  export type vehiclesUncheckedUpdateManyWithoutDriversInput = {
    vehicle_id?: IntFieldUpdateOperationsInput | number
    company_id?: NullableIntFieldUpdateOperationsInput | number | null
    vehicle_type_id?: NullableIntFieldUpdateOperationsInput | number | null
    vin?: StringFieldUpdateOperationsInput | string
    license_plate?: StringFieldUpdateOperationsInput | string
    make?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    color?: NullableStringFieldUpdateOperationsInput | string | null
    fuel_type?: StringFieldUpdateOperationsInput | string
    engine_size?: NullableStringFieldUpdateOperationsInput | string | null
    transmission?: NullableStringFieldUpdateOperationsInput | string | null
    purchase_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchase_price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    current_value?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    odometer_reading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fuel_capacity?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    insurance_policy_number?: NullableStringFieldUpdateOperationsInput | string | null
    insurance_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    registration_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    gps_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    department_id?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type fuel_transactionsCreateManyFuel_stationsInput = {
    transaction_id?: number
    vehicle_id?: number | null
    driver_id?: number | null
    transaction_date: Date | string
    odometer_reading?: Decimal | DecimalJsLike | number | string | null
    gallons_purchased?: Decimal | DecimalJsLike | number | string | null
    price_per_gallon?: Decimal | DecimalJsLike | number | string | null
    total_amount?: Decimal | DecimalJsLike | number | string | null
    fuel_type?: string | null
    payment_method?: string | null
    card_number_last_four?: string | null
    receipt_number?: string | null
    mpg_calculated?: Decimal | DecimalJsLike | number | string | null
    notes?: string | null
  }

  export type fuel_transactionsUpdateWithoutFuel_stationsInput = {
    transaction_date?: DateTimeFieldUpdateOperationsInput | Date | string
    odometer_reading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    gallons_purchased?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    price_per_gallon?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    total_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fuel_type?: NullableStringFieldUpdateOperationsInput | string | null
    payment_method?: NullableStringFieldUpdateOperationsInput | string | null
    card_number_last_four?: NullableStringFieldUpdateOperationsInput | string | null
    receipt_number?: NullableStringFieldUpdateOperationsInput | string | null
    mpg_calculated?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    drivers?: driversUpdateOneWithoutFuel_transactionsNestedInput
    vehicles?: vehiclesUpdateOneWithoutFuel_transactionsNestedInput
  }

  export type fuel_transactionsUncheckedUpdateWithoutFuel_stationsInput = {
    transaction_id?: IntFieldUpdateOperationsInput | number
    vehicle_id?: NullableIntFieldUpdateOperationsInput | number | null
    driver_id?: NullableIntFieldUpdateOperationsInput | number | null
    transaction_date?: DateTimeFieldUpdateOperationsInput | Date | string
    odometer_reading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    gallons_purchased?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    price_per_gallon?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    total_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fuel_type?: NullableStringFieldUpdateOperationsInput | string | null
    payment_method?: NullableStringFieldUpdateOperationsInput | string | null
    card_number_last_four?: NullableStringFieldUpdateOperationsInput | string | null
    receipt_number?: NullableStringFieldUpdateOperationsInput | string | null
    mpg_calculated?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type fuel_transactionsUncheckedUpdateManyWithoutFuel_stationsInput = {
    transaction_id?: IntFieldUpdateOperationsInput | number
    vehicle_id?: NullableIntFieldUpdateOperationsInput | number | null
    driver_id?: NullableIntFieldUpdateOperationsInput | number | null
    transaction_date?: DateTimeFieldUpdateOperationsInput | Date | string
    odometer_reading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    gallons_purchased?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    price_per_gallon?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    total_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fuel_type?: NullableStringFieldUpdateOperationsInput | string | null
    payment_method?: NullableStringFieldUpdateOperationsInput | string | null
    card_number_last_four?: NullableStringFieldUpdateOperationsInput | string | null
    receipt_number?: NullableStringFieldUpdateOperationsInput | string | null
    mpg_calculated?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type maintenance_recordsCreateManyMaintenance_typesInput = {
    maintenance_id?: number
    vehicle_id?: number | null
    service_provider_id?: number | null
    scheduled_date?: Date | string | null
    completed_date?: Date | string | null
    odometer_at_service?: Decimal | DecimalJsLike | number | string | null
    cost?: Decimal | DecimalJsLike | number | string | null
    labor_hours?: Decimal | DecimalJsLike | number | string | null
    description?: string | null
    parts_used?: string | null
    technician_name?: string | null
    status?: string | null
    next_service_due_date?: Date | string | null
    next_service_due_miles?: Decimal | DecimalJsLike | number | string | null
    warranty_expiry_date?: Date | string | null
    invoice_number?: string | null
    notes?: string | null
    created_at?: Date | string | null
  }

  export type maintenance_recordsUpdateWithoutMaintenance_typesInput = {
    scheduled_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completed_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    odometer_at_service?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    labor_hours?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    parts_used?: NullableStringFieldUpdateOperationsInput | string | null
    technician_name?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    next_service_due_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    next_service_due_miles?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    warranty_expiry_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    invoice_number?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    service_providers?: service_providersUpdateOneWithoutMaintenance_recordsNestedInput
    vehicles?: vehiclesUpdateOneWithoutMaintenance_recordsNestedInput
  }

  export type maintenance_recordsUncheckedUpdateWithoutMaintenance_typesInput = {
    maintenance_id?: IntFieldUpdateOperationsInput | number
    vehicle_id?: NullableIntFieldUpdateOperationsInput | number | null
    service_provider_id?: NullableIntFieldUpdateOperationsInput | number | null
    scheduled_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completed_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    odometer_at_service?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    labor_hours?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    parts_used?: NullableStringFieldUpdateOperationsInput | string | null
    technician_name?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    next_service_due_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    next_service_due_miles?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    warranty_expiry_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    invoice_number?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type maintenance_recordsUncheckedUpdateManyWithoutMaintenance_typesInput = {
    maintenance_id?: IntFieldUpdateOperationsInput | number
    vehicle_id?: NullableIntFieldUpdateOperationsInput | number | null
    service_provider_id?: NullableIntFieldUpdateOperationsInput | number | null
    scheduled_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completed_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    odometer_at_service?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    labor_hours?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    parts_used?: NullableStringFieldUpdateOperationsInput | string | null
    technician_name?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    next_service_due_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    next_service_due_miles?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    warranty_expiry_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    invoice_number?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type maintenance_recordsCreateManyService_providersInput = {
    maintenance_id?: number
    vehicle_id?: number | null
    maintenance_type_id?: number | null
    scheduled_date?: Date | string | null
    completed_date?: Date | string | null
    odometer_at_service?: Decimal | DecimalJsLike | number | string | null
    cost?: Decimal | DecimalJsLike | number | string | null
    labor_hours?: Decimal | DecimalJsLike | number | string | null
    description?: string | null
    parts_used?: string | null
    technician_name?: string | null
    status?: string | null
    next_service_due_date?: Date | string | null
    next_service_due_miles?: Decimal | DecimalJsLike | number | string | null
    warranty_expiry_date?: Date | string | null
    invoice_number?: string | null
    notes?: string | null
    created_at?: Date | string | null
  }

  export type maintenance_recordsUpdateWithoutService_providersInput = {
    scheduled_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completed_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    odometer_at_service?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    labor_hours?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    parts_used?: NullableStringFieldUpdateOperationsInput | string | null
    technician_name?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    next_service_due_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    next_service_due_miles?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    warranty_expiry_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    invoice_number?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maintenance_types?: maintenance_typesUpdateOneWithoutMaintenance_recordsNestedInput
    vehicles?: vehiclesUpdateOneWithoutMaintenance_recordsNestedInput
  }

  export type maintenance_recordsUncheckedUpdateWithoutService_providersInput = {
    maintenance_id?: IntFieldUpdateOperationsInput | number
    vehicle_id?: NullableIntFieldUpdateOperationsInput | number | null
    maintenance_type_id?: NullableIntFieldUpdateOperationsInput | number | null
    scheduled_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completed_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    odometer_at_service?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    labor_hours?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    parts_used?: NullableStringFieldUpdateOperationsInput | string | null
    technician_name?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    next_service_due_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    next_service_due_miles?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    warranty_expiry_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    invoice_number?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type maintenance_recordsUncheckedUpdateManyWithoutService_providersInput = {
    maintenance_id?: IntFieldUpdateOperationsInput | number
    vehicle_id?: NullableIntFieldUpdateOperationsInput | number | null
    maintenance_type_id?: NullableIntFieldUpdateOperationsInput | number | null
    scheduled_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completed_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    odometer_at_service?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    labor_hours?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    parts_used?: NullableStringFieldUpdateOperationsInput | string | null
    technician_name?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    next_service_due_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    next_service_due_miles?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    warranty_expiry_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    invoice_number?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type reportsCreateManyUsersInput = {
    report_id?: number
    company_id?: number | null
    report_name: string
    report_type: string
    generation_date?: Date | string | null
    date_range_start?: Date | string | null
    date_range_end?: Date | string | null
    parameters?: NullableJsonNullValueInput | InputJsonValue
    file_path?: string | null
    status?: string | null
  }

  export type reportsUpdateWithoutUsersInput = {
    report_name?: StringFieldUpdateOperationsInput | string
    report_type?: StringFieldUpdateOperationsInput | string
    generation_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    date_range_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    date_range_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parameters?: NullableJsonNullValueInput | InputJsonValue
    file_path?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    companies?: companiesUpdateOneWithoutReportsNestedInput
  }

  export type reportsUncheckedUpdateWithoutUsersInput = {
    report_id?: IntFieldUpdateOperationsInput | number
    company_id?: NullableIntFieldUpdateOperationsInput | number | null
    report_name?: StringFieldUpdateOperationsInput | string
    report_type?: StringFieldUpdateOperationsInput | string
    generation_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    date_range_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    date_range_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parameters?: NullableJsonNullValueInput | InputJsonValue
    file_path?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type reportsUncheckedUpdateManyWithoutUsersInput = {
    report_id?: IntFieldUpdateOperationsInput | number
    company_id?: NullableIntFieldUpdateOperationsInput | number | null
    report_name?: StringFieldUpdateOperationsInput | string
    report_type?: StringFieldUpdateOperationsInput | string
    generation_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    date_range_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    date_range_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parameters?: NullableJsonNullValueInput | InputJsonValue
    file_path?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type vehiclesCreateManyVehicle_typesInput = {
    vehicle_id?: number
    company_id?: number | null
    vin: string
    license_plate: string
    make: string
    model: string
    year: number
    color?: string | null
    fuel_type: string
    engine_size?: string | null
    transmission?: string | null
    purchase_date?: Date | string | null
    purchase_price?: Decimal | DecimalJsLike | number | string | null
    current_value?: Decimal | DecimalJsLike | number | string | null
    odometer_reading?: Decimal | DecimalJsLike | number | string | null
    fuel_capacity?: Decimal | DecimalJsLike | number | string | null
    insurance_policy_number?: string | null
    insurance_expiry?: Date | string | null
    registration_expiry?: Date | string | null
    status?: string | null
    gps_device_id?: string | null
    assigned_driver_id?: number | null
    department_id?: number | null
    notes?: string | null
    created_at?: Date | string | null
  }

  export type vehiclesUpdateWithoutVehicle_typesInput = {
    vin?: StringFieldUpdateOperationsInput | string
    license_plate?: StringFieldUpdateOperationsInput | string
    make?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    color?: NullableStringFieldUpdateOperationsInput | string | null
    fuel_type?: StringFieldUpdateOperationsInput | string
    engine_size?: NullableStringFieldUpdateOperationsInput | string | null
    transmission?: NullableStringFieldUpdateOperationsInput | string | null
    purchase_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchase_price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    current_value?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    odometer_reading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fuel_capacity?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    insurance_policy_number?: NullableStringFieldUpdateOperationsInput | string | null
    insurance_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    registration_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    gps_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expenses?: expensesUpdateManyWithoutVehiclesNestedInput
    fuel_transactions?: fuel_transactionsUpdateManyWithoutVehiclesNestedInput
    gps_tracking?: gps_trackingUpdateManyWithoutVehiclesNestedInput
    incidents?: incidentsUpdateManyWithoutVehiclesNestedInput
    maintenance_records?: maintenance_recordsUpdateManyWithoutVehiclesNestedInput
    safety_inspections?: safety_inspectionsUpdateManyWithoutVehiclesNestedInput
    trips?: tripsUpdateManyWithoutVehiclesNestedInput
    vehicle_assignments?: vehicle_assignmentsUpdateManyWithoutVehiclesNestedInput
    drivers?: driversUpdateOneWithoutVehiclesNestedInput
    companies?: companiesUpdateOneWithoutVehiclesNestedInput
    departments?: departmentsUpdateOneWithoutVehiclesNestedInput
  }

  export type vehiclesUncheckedUpdateWithoutVehicle_typesInput = {
    vehicle_id?: IntFieldUpdateOperationsInput | number
    company_id?: NullableIntFieldUpdateOperationsInput | number | null
    vin?: StringFieldUpdateOperationsInput | string
    license_plate?: StringFieldUpdateOperationsInput | string
    make?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    color?: NullableStringFieldUpdateOperationsInput | string | null
    fuel_type?: StringFieldUpdateOperationsInput | string
    engine_size?: NullableStringFieldUpdateOperationsInput | string | null
    transmission?: NullableStringFieldUpdateOperationsInput | string | null
    purchase_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchase_price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    current_value?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    odometer_reading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fuel_capacity?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    insurance_policy_number?: NullableStringFieldUpdateOperationsInput | string | null
    insurance_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    registration_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    gps_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    assigned_driver_id?: NullableIntFieldUpdateOperationsInput | number | null
    department_id?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expenses?: expensesUncheckedUpdateManyWithoutVehiclesNestedInput
    fuel_transactions?: fuel_transactionsUncheckedUpdateManyWithoutVehiclesNestedInput
    gps_tracking?: gps_trackingUncheckedUpdateManyWithoutVehiclesNestedInput
    incidents?: incidentsUncheckedUpdateManyWithoutVehiclesNestedInput
    maintenance_records?: maintenance_recordsUncheckedUpdateManyWithoutVehiclesNestedInput
    safety_inspections?: safety_inspectionsUncheckedUpdateManyWithoutVehiclesNestedInput
    trips?: tripsUncheckedUpdateManyWithoutVehiclesNestedInput
    vehicle_assignments?: vehicle_assignmentsUncheckedUpdateManyWithoutVehiclesNestedInput
  }

  export type vehiclesUncheckedUpdateManyWithoutVehicle_typesInput = {
    vehicle_id?: IntFieldUpdateOperationsInput | number
    company_id?: NullableIntFieldUpdateOperationsInput | number | null
    vin?: StringFieldUpdateOperationsInput | string
    license_plate?: StringFieldUpdateOperationsInput | string
    make?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    color?: NullableStringFieldUpdateOperationsInput | string | null
    fuel_type?: StringFieldUpdateOperationsInput | string
    engine_size?: NullableStringFieldUpdateOperationsInput | string | null
    transmission?: NullableStringFieldUpdateOperationsInput | string | null
    purchase_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchase_price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    current_value?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    odometer_reading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fuel_capacity?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    insurance_policy_number?: NullableStringFieldUpdateOperationsInput | string | null
    insurance_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    registration_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    gps_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    assigned_driver_id?: NullableIntFieldUpdateOperationsInput | number | null
    department_id?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type expensesCreateManyVehiclesInput = {
    expense_id?: number
    driver_id?: number | null
    category_id?: number | null
    expense_date: Date | string
    amount: Decimal | DecimalJsLike | number | string
    description?: string | null
    vendor?: string | null
    invoice_number?: string | null
    receipt_available?: boolean | null
    approved_by?: string | null
    approval_date?: Date | string | null
    reimbursable?: boolean | null
    notes?: string | null
    created_at?: Date | string | null
  }

  export type fuel_transactionsCreateManyVehiclesInput = {
    transaction_id?: number
    driver_id?: number | null
    fuel_station_id?: number | null
    transaction_date: Date | string
    odometer_reading?: Decimal | DecimalJsLike | number | string | null
    gallons_purchased?: Decimal | DecimalJsLike | number | string | null
    price_per_gallon?: Decimal | DecimalJsLike | number | string | null
    total_amount?: Decimal | DecimalJsLike | number | string | null
    fuel_type?: string | null
    payment_method?: string | null
    card_number_last_four?: string | null
    receipt_number?: string | null
    mpg_calculated?: Decimal | DecimalJsLike | number | string | null
    notes?: string | null
  }

  export type gps_trackingCreateManyVehiclesInput = {
    tracking_id?: number
    timestamp: Date | string
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    speed?: Decimal | DecimalJsLike | number | string | null
    heading?: number | null
    altitude?: Decimal | DecimalJsLike | number | string | null
    gps_quality?: string | null
    engine_status?: string | null
    fuel_level_percent?: Decimal | DecimalJsLike | number | string | null
    odometer?: Decimal | DecimalJsLike | number | string | null
  }

  export type incidentsCreateManyVehiclesInput = {
    incident_id?: number
    driver_id?: number | null
    incident_date: Date | string
    incident_type: string
    severity: string
    location?: string | null
    description: string
    police_report_number?: string | null
    insurance_claim_number?: string | null
    estimated_damage_cost?: Decimal | DecimalJsLike | number | string | null
    actual_repair_cost?: Decimal | DecimalJsLike | number | string | null
    injuries_reported?: boolean | null
    fatalities?: boolean | null
    at_fault?: boolean | null
    weather_conditions?: string | null
    road_conditions?: string | null
    photos_available?: boolean | null
    status?: string | null
    resolution_date?: Date | string | null
    lessons_learned?: string | null
    created_at?: Date | string | null
  }

  export type maintenance_recordsCreateManyVehiclesInput = {
    maintenance_id?: number
    maintenance_type_id?: number | null
    service_provider_id?: number | null
    scheduled_date?: Date | string | null
    completed_date?: Date | string | null
    odometer_at_service?: Decimal | DecimalJsLike | number | string | null
    cost?: Decimal | DecimalJsLike | number | string | null
    labor_hours?: Decimal | DecimalJsLike | number | string | null
    description?: string | null
    parts_used?: string | null
    technician_name?: string | null
    status?: string | null
    next_service_due_date?: Date | string | null
    next_service_due_miles?: Decimal | DecimalJsLike | number | string | null
    warranty_expiry_date?: Date | string | null
    invoice_number?: string | null
    notes?: string | null
    created_at?: Date | string | null
  }

  export type safety_inspectionsCreateManyVehiclesInput = {
    inspection_id?: number
    inspector_name?: string | null
    inspection_date: Date | string
    inspection_type: string
    odometer_reading?: Decimal | DecimalJsLike | number | string | null
    overall_score?: Decimal | DecimalJsLike | number | string | null
    passed: boolean
    defects_found?: number | null
    critical_defects?: number | null
    notes?: string | null
    next_inspection_due?: Date | string | null
    certificate_number?: string | null
  }

  export type tripsCreateManyVehiclesInput = {
    trip_id?: number
    driver_id?: number | null
    start_time?: Date | string | null
    end_time?: Date | string | null
    start_location?: string | null
    end_location?: string | null
    start_odometer?: Decimal | DecimalJsLike | number | string | null
    end_odometer?: Decimal | DecimalJsLike | number | string | null
    distance_traveled?: Decimal | DecimalJsLike | number | string | null
    purpose?: string | null
    trip_type?: string | null
    fuel_consumed?: Decimal | DecimalJsLike | number | string | null
    average_speed?: Decimal | DecimalJsLike | number | string | null
    max_speed?: Decimal | DecimalJsLike | number | string | null
    idle_time_minutes?: number | null
    harsh_braking_count?: number | null
    harsh_acceleration_count?: number | null
    speeding_violations?: number | null
    route_efficiency_score?: Decimal | DecimalJsLike | number | string | null
    cost?: Decimal | DecimalJsLike | number | string | null
    notes?: string | null
    created_at?: Date | string | null
  }

  export type vehicle_assignmentsCreateManyVehiclesInput = {
    assignment_id?: number
    driver_id?: number | null
    assigned_date: Date | string
    end_date?: Date | string | null
    assignment_type?: string | null
    notes?: string | null
    is_active?: boolean | null
  }

  export type expensesUpdateWithoutVehiclesInput = {
    expense_date?: DateTimeFieldUpdateOperationsInput | Date | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    vendor?: NullableStringFieldUpdateOperationsInput | string | null
    invoice_number?: NullableStringFieldUpdateOperationsInput | string | null
    receipt_available?: NullableBoolFieldUpdateOperationsInput | boolean | null
    approved_by?: NullableStringFieldUpdateOperationsInput | string | null
    approval_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reimbursable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cost_categories?: cost_categoriesUpdateOneWithoutExpensesNestedInput
    drivers?: driversUpdateOneWithoutExpensesNestedInput
  }

  export type expensesUncheckedUpdateWithoutVehiclesInput = {
    expense_id?: IntFieldUpdateOperationsInput | number
    driver_id?: NullableIntFieldUpdateOperationsInput | number | null
    category_id?: NullableIntFieldUpdateOperationsInput | number | null
    expense_date?: DateTimeFieldUpdateOperationsInput | Date | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    vendor?: NullableStringFieldUpdateOperationsInput | string | null
    invoice_number?: NullableStringFieldUpdateOperationsInput | string | null
    receipt_available?: NullableBoolFieldUpdateOperationsInput | boolean | null
    approved_by?: NullableStringFieldUpdateOperationsInput | string | null
    approval_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reimbursable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type expensesUncheckedUpdateManyWithoutVehiclesInput = {
    expense_id?: IntFieldUpdateOperationsInput | number
    driver_id?: NullableIntFieldUpdateOperationsInput | number | null
    category_id?: NullableIntFieldUpdateOperationsInput | number | null
    expense_date?: DateTimeFieldUpdateOperationsInput | Date | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    vendor?: NullableStringFieldUpdateOperationsInput | string | null
    invoice_number?: NullableStringFieldUpdateOperationsInput | string | null
    receipt_available?: NullableBoolFieldUpdateOperationsInput | boolean | null
    approved_by?: NullableStringFieldUpdateOperationsInput | string | null
    approval_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reimbursable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type fuel_transactionsUpdateWithoutVehiclesInput = {
    transaction_date?: DateTimeFieldUpdateOperationsInput | Date | string
    odometer_reading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    gallons_purchased?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    price_per_gallon?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    total_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fuel_type?: NullableStringFieldUpdateOperationsInput | string | null
    payment_method?: NullableStringFieldUpdateOperationsInput | string | null
    card_number_last_four?: NullableStringFieldUpdateOperationsInput | string | null
    receipt_number?: NullableStringFieldUpdateOperationsInput | string | null
    mpg_calculated?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    drivers?: driversUpdateOneWithoutFuel_transactionsNestedInput
    fuel_stations?: fuel_stationsUpdateOneWithoutFuel_transactionsNestedInput
  }

  export type fuel_transactionsUncheckedUpdateWithoutVehiclesInput = {
    transaction_id?: IntFieldUpdateOperationsInput | number
    driver_id?: NullableIntFieldUpdateOperationsInput | number | null
    fuel_station_id?: NullableIntFieldUpdateOperationsInput | number | null
    transaction_date?: DateTimeFieldUpdateOperationsInput | Date | string
    odometer_reading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    gallons_purchased?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    price_per_gallon?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    total_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fuel_type?: NullableStringFieldUpdateOperationsInput | string | null
    payment_method?: NullableStringFieldUpdateOperationsInput | string | null
    card_number_last_four?: NullableStringFieldUpdateOperationsInput | string | null
    receipt_number?: NullableStringFieldUpdateOperationsInput | string | null
    mpg_calculated?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type fuel_transactionsUncheckedUpdateManyWithoutVehiclesInput = {
    transaction_id?: IntFieldUpdateOperationsInput | number
    driver_id?: NullableIntFieldUpdateOperationsInput | number | null
    fuel_station_id?: NullableIntFieldUpdateOperationsInput | number | null
    transaction_date?: DateTimeFieldUpdateOperationsInput | Date | string
    odometer_reading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    gallons_purchased?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    price_per_gallon?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    total_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fuel_type?: NullableStringFieldUpdateOperationsInput | string | null
    payment_method?: NullableStringFieldUpdateOperationsInput | string | null
    card_number_last_four?: NullableStringFieldUpdateOperationsInput | string | null
    receipt_number?: NullableStringFieldUpdateOperationsInput | string | null
    mpg_calculated?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type gps_trackingUpdateWithoutVehiclesInput = {
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    speed?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    heading?: NullableIntFieldUpdateOperationsInput | number | null
    altitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    gps_quality?: NullableStringFieldUpdateOperationsInput | string | null
    engine_status?: NullableStringFieldUpdateOperationsInput | string | null
    fuel_level_percent?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    odometer?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type gps_trackingUncheckedUpdateWithoutVehiclesInput = {
    tracking_id?: IntFieldUpdateOperationsInput | number
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    speed?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    heading?: NullableIntFieldUpdateOperationsInput | number | null
    altitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    gps_quality?: NullableStringFieldUpdateOperationsInput | string | null
    engine_status?: NullableStringFieldUpdateOperationsInput | string | null
    fuel_level_percent?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    odometer?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type gps_trackingUncheckedUpdateManyWithoutVehiclesInput = {
    tracking_id?: IntFieldUpdateOperationsInput | number
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    speed?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    heading?: NullableIntFieldUpdateOperationsInput | number | null
    altitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    gps_quality?: NullableStringFieldUpdateOperationsInput | string | null
    engine_status?: NullableStringFieldUpdateOperationsInput | string | null
    fuel_level_percent?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    odometer?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type incidentsUpdateWithoutVehiclesInput = {
    incident_date?: DateTimeFieldUpdateOperationsInput | Date | string
    incident_type?: StringFieldUpdateOperationsInput | string
    severity?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    police_report_number?: NullableStringFieldUpdateOperationsInput | string | null
    insurance_claim_number?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_damage_cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    actual_repair_cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    injuries_reported?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fatalities?: NullableBoolFieldUpdateOperationsInput | boolean | null
    at_fault?: NullableBoolFieldUpdateOperationsInput | boolean | null
    weather_conditions?: NullableStringFieldUpdateOperationsInput | string | null
    road_conditions?: NullableStringFieldUpdateOperationsInput | string | null
    photos_available?: NullableBoolFieldUpdateOperationsInput | boolean | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    resolution_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lessons_learned?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    drivers?: driversUpdateOneWithoutIncidentsNestedInput
  }

  export type incidentsUncheckedUpdateWithoutVehiclesInput = {
    incident_id?: IntFieldUpdateOperationsInput | number
    driver_id?: NullableIntFieldUpdateOperationsInput | number | null
    incident_date?: DateTimeFieldUpdateOperationsInput | Date | string
    incident_type?: StringFieldUpdateOperationsInput | string
    severity?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    police_report_number?: NullableStringFieldUpdateOperationsInput | string | null
    insurance_claim_number?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_damage_cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    actual_repair_cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    injuries_reported?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fatalities?: NullableBoolFieldUpdateOperationsInput | boolean | null
    at_fault?: NullableBoolFieldUpdateOperationsInput | boolean | null
    weather_conditions?: NullableStringFieldUpdateOperationsInput | string | null
    road_conditions?: NullableStringFieldUpdateOperationsInput | string | null
    photos_available?: NullableBoolFieldUpdateOperationsInput | boolean | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    resolution_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lessons_learned?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type incidentsUncheckedUpdateManyWithoutVehiclesInput = {
    incident_id?: IntFieldUpdateOperationsInput | number
    driver_id?: NullableIntFieldUpdateOperationsInput | number | null
    incident_date?: DateTimeFieldUpdateOperationsInput | Date | string
    incident_type?: StringFieldUpdateOperationsInput | string
    severity?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    police_report_number?: NullableStringFieldUpdateOperationsInput | string | null
    insurance_claim_number?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_damage_cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    actual_repair_cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    injuries_reported?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fatalities?: NullableBoolFieldUpdateOperationsInput | boolean | null
    at_fault?: NullableBoolFieldUpdateOperationsInput | boolean | null
    weather_conditions?: NullableStringFieldUpdateOperationsInput | string | null
    road_conditions?: NullableStringFieldUpdateOperationsInput | string | null
    photos_available?: NullableBoolFieldUpdateOperationsInput | boolean | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    resolution_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lessons_learned?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type maintenance_recordsUpdateWithoutVehiclesInput = {
    scheduled_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completed_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    odometer_at_service?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    labor_hours?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    parts_used?: NullableStringFieldUpdateOperationsInput | string | null
    technician_name?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    next_service_due_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    next_service_due_miles?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    warranty_expiry_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    invoice_number?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maintenance_types?: maintenance_typesUpdateOneWithoutMaintenance_recordsNestedInput
    service_providers?: service_providersUpdateOneWithoutMaintenance_recordsNestedInput
  }

  export type maintenance_recordsUncheckedUpdateWithoutVehiclesInput = {
    maintenance_id?: IntFieldUpdateOperationsInput | number
    maintenance_type_id?: NullableIntFieldUpdateOperationsInput | number | null
    service_provider_id?: NullableIntFieldUpdateOperationsInput | number | null
    scheduled_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completed_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    odometer_at_service?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    labor_hours?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    parts_used?: NullableStringFieldUpdateOperationsInput | string | null
    technician_name?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    next_service_due_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    next_service_due_miles?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    warranty_expiry_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    invoice_number?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type maintenance_recordsUncheckedUpdateManyWithoutVehiclesInput = {
    maintenance_id?: IntFieldUpdateOperationsInput | number
    maintenance_type_id?: NullableIntFieldUpdateOperationsInput | number | null
    service_provider_id?: NullableIntFieldUpdateOperationsInput | number | null
    scheduled_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completed_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    odometer_at_service?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    labor_hours?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    parts_used?: NullableStringFieldUpdateOperationsInput | string | null
    technician_name?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    next_service_due_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    next_service_due_miles?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    warranty_expiry_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    invoice_number?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type safety_inspectionsUpdateWithoutVehiclesInput = {
    inspector_name?: NullableStringFieldUpdateOperationsInput | string | null
    inspection_date?: DateTimeFieldUpdateOperationsInput | Date | string
    inspection_type?: StringFieldUpdateOperationsInput | string
    odometer_reading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    overall_score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    passed?: BoolFieldUpdateOperationsInput | boolean
    defects_found?: NullableIntFieldUpdateOperationsInput | number | null
    critical_defects?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    next_inspection_due?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    certificate_number?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type safety_inspectionsUncheckedUpdateWithoutVehiclesInput = {
    inspection_id?: IntFieldUpdateOperationsInput | number
    inspector_name?: NullableStringFieldUpdateOperationsInput | string | null
    inspection_date?: DateTimeFieldUpdateOperationsInput | Date | string
    inspection_type?: StringFieldUpdateOperationsInput | string
    odometer_reading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    overall_score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    passed?: BoolFieldUpdateOperationsInput | boolean
    defects_found?: NullableIntFieldUpdateOperationsInput | number | null
    critical_defects?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    next_inspection_due?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    certificate_number?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type safety_inspectionsUncheckedUpdateManyWithoutVehiclesInput = {
    inspection_id?: IntFieldUpdateOperationsInput | number
    inspector_name?: NullableStringFieldUpdateOperationsInput | string | null
    inspection_date?: DateTimeFieldUpdateOperationsInput | Date | string
    inspection_type?: StringFieldUpdateOperationsInput | string
    odometer_reading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    overall_score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    passed?: BoolFieldUpdateOperationsInput | boolean
    defects_found?: NullableIntFieldUpdateOperationsInput | number | null
    critical_defects?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    next_inspection_due?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    certificate_number?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tripsUpdateWithoutVehiclesInput = {
    start_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    start_location?: NullableStringFieldUpdateOperationsInput | string | null
    end_location?: NullableStringFieldUpdateOperationsInput | string | null
    start_odometer?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    end_odometer?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    distance_traveled?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    purpose?: NullableStringFieldUpdateOperationsInput | string | null
    trip_type?: NullableStringFieldUpdateOperationsInput | string | null
    fuel_consumed?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    average_speed?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    max_speed?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    idle_time_minutes?: NullableIntFieldUpdateOperationsInput | number | null
    harsh_braking_count?: NullableIntFieldUpdateOperationsInput | number | null
    harsh_acceleration_count?: NullableIntFieldUpdateOperationsInput | number | null
    speeding_violations?: NullableIntFieldUpdateOperationsInput | number | null
    route_efficiency_score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    drivers?: driversUpdateOneWithoutTripsNestedInput
  }

  export type tripsUncheckedUpdateWithoutVehiclesInput = {
    trip_id?: IntFieldUpdateOperationsInput | number
    driver_id?: NullableIntFieldUpdateOperationsInput | number | null
    start_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    start_location?: NullableStringFieldUpdateOperationsInput | string | null
    end_location?: NullableStringFieldUpdateOperationsInput | string | null
    start_odometer?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    end_odometer?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    distance_traveled?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    purpose?: NullableStringFieldUpdateOperationsInput | string | null
    trip_type?: NullableStringFieldUpdateOperationsInput | string | null
    fuel_consumed?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    average_speed?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    max_speed?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    idle_time_minutes?: NullableIntFieldUpdateOperationsInput | number | null
    harsh_braking_count?: NullableIntFieldUpdateOperationsInput | number | null
    harsh_acceleration_count?: NullableIntFieldUpdateOperationsInput | number | null
    speeding_violations?: NullableIntFieldUpdateOperationsInput | number | null
    route_efficiency_score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type tripsUncheckedUpdateManyWithoutVehiclesInput = {
    trip_id?: IntFieldUpdateOperationsInput | number
    driver_id?: NullableIntFieldUpdateOperationsInput | number | null
    start_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    start_location?: NullableStringFieldUpdateOperationsInput | string | null
    end_location?: NullableStringFieldUpdateOperationsInput | string | null
    start_odometer?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    end_odometer?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    distance_traveled?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    purpose?: NullableStringFieldUpdateOperationsInput | string | null
    trip_type?: NullableStringFieldUpdateOperationsInput | string | null
    fuel_consumed?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    average_speed?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    max_speed?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    idle_time_minutes?: NullableIntFieldUpdateOperationsInput | number | null
    harsh_braking_count?: NullableIntFieldUpdateOperationsInput | number | null
    harsh_acceleration_count?: NullableIntFieldUpdateOperationsInput | number | null
    speeding_violations?: NullableIntFieldUpdateOperationsInput | number | null
    route_efficiency_score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type vehicle_assignmentsUpdateWithoutVehiclesInput = {
    assigned_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignment_type?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    drivers?: driversUpdateOneWithoutVehicle_assignmentsNestedInput
  }

  export type vehicle_assignmentsUncheckedUpdateWithoutVehiclesInput = {
    assignment_id?: IntFieldUpdateOperationsInput | number
    driver_id?: NullableIntFieldUpdateOperationsInput | number | null
    assigned_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignment_type?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type vehicle_assignmentsUncheckedUpdateManyWithoutVehiclesInput = {
    assignment_id?: IntFieldUpdateOperationsInput | number
    driver_id?: NullableIntFieldUpdateOperationsInput | number | null
    assigned_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignment_type?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}